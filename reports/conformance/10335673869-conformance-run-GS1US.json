{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c9532772-922e-48b7-ae7a-d80b92361248",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5e4e0fac-0725-4f18-843e-4ed298211761",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0878886e-e84a-4d4e-bc9a-30da47978375",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "401a8fb5-e894-444b-a9c6-14848936b98c"
                }
              }
            ]
          },
          {
            "id": "5e2b45f7-b0a5-495d-a0bb-e024f629cc7c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac96f179-e66f-42df-b76a-2ce950e8148d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be712c2d-aab7-4856-8118-675f8d972782"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9df23e0a-b455-4759-b1eb-8591d6e38f1c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "250c4dd0-b225-4cfd-8ec4-f3b38a13b0b2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a44c916c-e2b9-4c7e-aec1-19a50b8043e2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "12306ab9-cf23-40ff-9169-b53a17a645be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86fb9703-3643-43f8-804f-7cc4e14d3d99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a6a97c8-2489-46a9-9c13-19bc369c8a82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a7ed927-2667-4b57-b90f-d5f752d1683b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d21885ab-6a67-4745-9bf9-f8c1a1121fc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe42ba6b-e213-45b7-a80f-76badf875d64"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52f2a686-b1fd-49e7-a7d9-75459dc91015",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9465686a-a14b-447b-b146-1eaf1fb1a508"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f79e9767-a58a-494a-958d-7bdeb3b61b7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33f48d90-e3d0-496c-af52-ce2abab8fc81"
            }
          }
        ]
      },
      {
        "id": "c8afbdc1-db77-431c-9316-45485f933c17",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5a7d407f-38cc-4753-87fe-aac4cd3d9a86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8d155ed-541b-4f3b-8a37-ae32415db5d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f61d69bf-f610-4c64-b41c-20bb11ec0e34",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7475c7-bdd4-4a76-96c1-49c6e15b56da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "513d4bd0-2b41-41d8-95cf-3c56673d33ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b8285e-8639-4170-899c-8978a967a8b6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b3ec90-23de-497a-be07-6ede65293ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "daca09e5-8dd8-4e4a-8029-f89ed3b89311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d007c53b-4f4c-409b-9fbd-7380aac78218",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5196e6-3e19-4a49-a6f7-1d4b5806c20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4df0e8d1-8de3-4238-b7eb-1d21df53714d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce499c10-b4db-43c5-b8c5-811ee6969abb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fbd81c3-bf2d-4467-8cf5-adc8c5b4bccb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398d32f4-5c8d-491e-be96-302ac66e951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3ae5a05-3086-4b7b-98f1-0d7c23c8c6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84ce5d7-ef54-43bd-8f4b-01a1c5f90cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c134d180-0ab6-40dc-af94-f19ba0d62ce0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "90e398b6-6658-4ee2-9d05-73f68cfa077a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "caa3e0af-7c32-4901-9bd0-a292e72ef67a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "901b0bab-8f7f-4f57-a7bd-40bbada495c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d4a4153c-c09a-44ac-a3de-e2b5ead7d796"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c0fa990-59fc-4e60-ade3-9a13a08ab68e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "77ed76c5-2621-40d1-9b5c-905bb54100bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aae73baa-9a8e-4e5b-8249-9662edfe3c67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83458005-fe13-4605-a44b-da0f8ab374af"
            }
          }
        ]
      },
      {
        "id": "0ce5ac9a-aeab-4c92-9ed7-35fbfdcc5d21",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a3636b45-8dd9-4454-b6d9-61d98a0a699f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a079704b-bfd1-477e-917c-cc87c93ab076",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "517bf0a3-2b32-4c7b-8283-f1a7531fd298",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e2f317-4a0c-4d2f-af70-f863cb4a251f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2de335-1f23-4e6d-8c53-9cdd87d3ff20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99060f33-ccab-4e37-beab-cc73e7d479f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d29eeb-84c9-4e62-9871-486e23fb7d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2238316d-5008-462b-8011-65850f52e415",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ead71a-9e87-4ef3-ad96-97713867b792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deafb217-3b20-4f01-8b97-9562b747bbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89695fc1-7d3d-4529-9b5a-f1addc63e2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb35447f-497e-413a-8079-0c48108930b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a6400-1aba-4c6a-969e-389009e91b6f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7316dd0-1e45-47de-bf6f-d9f871e0703e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80997b0c-3892-42a9-9b32-660341c888db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d43e332-4d12-4ae7-912f-a0a065bd3a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d484f691-78b7-4c24-8f03-ec8da76a0d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726322db-32d2-4974-9e53-c3a1ed91454e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c785de9-355f-49a4-a347-c788f94d8d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cb8426-683d-478d-a184-6bab9992ed12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52674cc-92c4-4a7e-8daf-9ed97b3c0c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4db0d83c-c556-4413-8997-947d02d47600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fabb61-7baf-4dcd-a2fd-0fda14c775b5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4039df-1a82-4bde-9968-7802ed00cc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d989e5-0b34-49db-809d-991d6b6243c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e97473-eb45-4f54-9154-4dc34b9047ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51840a14-1e69-4e35-88cb-c1d54e1552db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1d4d48-cbf3-4900-9097-e4728b4de964",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3d0d2c-9725-4115-bf97-1d6aa790c4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0bf373-3370-4fcc-b164-8fb26e89171f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0e8711-3af8-451c-bb93-a03499decbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cfc9b67-15b4-4372-a3da-c12f54026fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6f272d-b617-4511-9c06-c1f1497ce635",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8973eddb-9b78-4cc8-8d51-6b878084da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f29ea6-9950-4bab-8bcb-4fdb2d2695d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891dcbf6-bffe-42b2-bc7d-9e7753078926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a505375d-1072-461f-b2c3-b3c65046a613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cec8f5-e12e-4d98-9d66-1c35b6c7e6e6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f8a619-bfa5-47d8-ac62-4a1415c994f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd4f201e-f658-4e8f-95f8-26344279f0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053e2309-bc23-4f69-9b30-2befa270c021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6b0a92a-6b17-451b-955f-ea954950e063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a586dd76-38b4-462d-af1d-ff3c845c1ca1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03860c4c-6524-4866-bb4a-450b86efc518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8378bd25-2412-4283-9054-8d22158b2325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0f4cbb-6846-467c-b746-680f9a6321a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e88650e-68f3-40cd-b9fc-d017c1927200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b285cc-8561-47c6-aeaf-f5d2fe53acc5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06026e8-a18e-47f3-bc0f-3ba4e94f14f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a4868b-dde4-4374-b6fb-8aeebb639c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d6ce52-3388-45ee-86b5-47c0e418572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89bd03b1-edd1-400c-b73a-c16ac3688ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4b57d6-e93a-4466-98d5-688512ef9b8f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644ada70-8f8a-430f-9e23-c1da4d287b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2311c2f6-6c0a-4288-acb2-02b3e5998d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df35d7be-511a-4f09-9b3e-427cbe488c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7a21a0c-8dfe-4750-815b-b4ed52718eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043c2391-9651-4889-9768-afbd68aafe0f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ea4dc8-4787-486f-a467-9ccabc55bf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3049d41-f8b4-4b42-ac9e-22540b1a377c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76861e48-1b14-4d9d-b1b6-caf3476f3c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1659da27-7269-41e5-afab-0a70b499036f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac87847e-6528-41e2-b166-7dca2faeb475",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de347083-6b45-43ee-830d-c2338177346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c239e0-2a62-4191-9440-659e543e76fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d5a772-78e3-4aa3-b36e-656ac4dfe9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "700391a7-eee7-4dbe-bbaa-365a513316e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55160dd-f8e1-4697-b405-85a72c420339",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29db8fc-e55a-4637-aa10-fb4d0b97b33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf47b07c-00d3-4577-9d2e-ec07fb57f7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2124d48f-10e9-424f-9caa-08084f77114b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc06f308-0b16-4817-91dc-586f56acd483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a200ba7-1acd-4ee3-b35e-b9c29927c000",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d230332-48be-4bcf-bb81-6d88d1cd2c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce379898-0359-4994-a547-9e60481dad5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985d5bad-aae8-406d-b37b-063e4c8094cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da2da759-1c44-4424-9589-5a2e5e5b8dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda7729-8f0c-483f-ab49-66e988e36a78",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31a2891-c6e8-40c0-b0dd-4fb183ba3174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a3469a-ce36-4d5d-a47e-7f9c7e5e9be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb4cd1c-8d5c-4af1-8ae3-554f30c11ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93cd10cb-b54e-47ac-846d-48ec89f29c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d32767-599d-4324-a74f-4c04fe01c75a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd77274b-ffa7-4222-917e-aca022e092a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ae8690-91c1-4f1d-961d-5c6b7fea6257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3838a86d-c9ea-442e-a10b-2a023948be85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2475a0b9-2cd7-4d7f-bcf3-2177bf522c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557e0dcf-732f-4ef5-a9f5-9e1e4b25e150",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9f2ef4-ac7b-4518-9821-25687149a383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c2f4d1-b113-4b21-b2a0-d2eca710c8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b88a9d-fafd-407a-94f5-bc36762eec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc339598-1a5e-4e5d-9c8a-44fdbf7abdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6727bf75-e154-42c2-b5b8-6de3fe15d35e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d1df0e-f139-4ab4-93d9-48cf0fcdca2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab8f523-ad0b-4cc4-9a7d-7de60edd58b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b12cf04-179b-4c0a-8606-c7bf3ad6688e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1863aacc-feed-4e10-af49-36e64091c647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e57d419-37d9-4e21-8152-c7ee8379339c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0f77c1-239a-4908-8ea7-14cc49ab0f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c750c0-5472-4426-969e-ac7c3ec17957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bbe948-639d-4384-8be9-a08495feadc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75235230-b4d9-43ec-836f-1e58ed2ba67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6edb022-04c8-46e4-aff2-522fad32e48a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b7b927-da6f-4a7b-9964-4a2158ec2829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e854db7-e81a-4e26-86b0-426401048170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3367255-e076-43c5-b240-6851a70ced62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09153f16-2e93-45d7-afb9-5583f771e986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7fa4ad-8958-4d0c-8dfc-12f4562a2077",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c10a669-1c6c-4eae-ad33-d62cd9ef8791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e44b19-1482-44fe-83cb-ee2761c22969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe3ab99-1f3b-4e43-ac33-8b52926cc8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5270c51-bfa1-405a-8287-3dac10435d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c6e751-104e-4d93-9e78-3b6c711d9721",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8024298-c6c9-4529-a56f-17b87dafad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42126bc-1814-4a31-bc92-29b5fe2b7143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb98ea6-be03-466e-930f-a8ecb9f10fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9392dcab-cae6-4e97-ad65-b82b578155bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d767ced5-f547-47db-9c3b-d3f57a8b1f38",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "875acccb-22e9-4e08-9680-67aafb6952de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bec4fc-878a-4bee-ab8b-12f61b99c7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26591264-2c2d-4e5c-a811-f1408ea4ef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d90265ca-ead6-41e2-9238-d3c7a487305b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3771f7-eb1b-484c-afef-b541d3f692e0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdda6e3c-1e9c-49e6-9769-07a3c1b8357b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d82f971-b889-424f-8445-1e6354d6e7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae968a8-db66-4e05-87fa-9260f78f9830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64dc96f8-91fd-4992-bcd5-2fb8c5c2ad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46197bd-320a-4696-91dc-a69149738a41",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae71b5ba-d8c5-4c6a-9d21-a47e7c903522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d95e1306-8811-4d9b-a817-5311360b12c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef4fb34-0dad-48cd-b2fb-6e9c88b052aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ce256d-8b9f-417b-82e0-3f0518445f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444f5f22-93a8-466f-892c-d30d1893b098",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fc688c-abc9-4eb6-adb8-6d792a7342f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84f482a-b8b9-4f25-9809-d48e261e41f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67888ca1-e539-4cbb-b6e8-e7dfb0d2c8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37bb70e-160f-4836-b91c-5654ab4f6e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c3141d-ee2d-4c3e-88ae-b954ddb86ab2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05a2107-c935-4935-a519-118e95173a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb825bb-973e-4c9a-8e19-32320bd7a8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19910648-87f7-4292-a2d3-31c0cc1f93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "469ce956-dc8c-492c-95ce-8511023440c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39c1356-acbb-4d9d-8bdf-27ccadf395b4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b008aa-99b1-49ba-9151-feafc702a101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f07b852-2dcf-4af5-a119-deb20b77b3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e43f14-1d69-4a92-bd29-4b5df98d1b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b244912-db38-4475-92a4-ae70dd13a0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127bb204-b90b-4322-b0b5-7eb062d30cbf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3d606e-653f-4099-ba39-476c6b774968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9633ab9-075f-4d2d-9e19-24bb8ef6f6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024b37c2-ef9a-4003-92d8-a8e302025b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d81b712d-e89c-4ef5-9795-87c23993441e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec5ca70-9e32-4b6b-a71a-a275b3f78e8a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ba687f-16cc-4e91-9651-d8b6d8542607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09cea55-dba2-45bd-9daa-fc7b869e6510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9bad15d-fc6f-438c-a82d-0f5ad3d6d9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6216c53f-41d2-43a9-a025-057c5ac14653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb67b81-187d-41ab-9692-da14789322eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6658213d-38b1-4009-b77c-43beedf51090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6dda0b-2f6c-4061-af5f-a564e0cb509a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd9fe36-6c48-4609-b316-f854a2f350d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc03b20f-0ec3-4489-a85c-350c61ae97b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3b120f-aabf-423b-a8f9-defe6114ec14",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58645cd7-6df8-46bd-8b13-0b9bd948ba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b31d23e-4275-4a90-9084-9897ce58b254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a89c2d-07a3-429b-9f81-80f0dfc369e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9f89a4-5828-49f5-92b1-d9606c34b6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f27f03-b2b1-477f-9e94-4e985b0b1f60",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f4a630-d21c-4571-b587-6e327b6f35c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a0c398-b0c3-40b0-85b9-a128ce0d7cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca29b8-cd48-40ca-a56e-3c26a8afa722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3faf34f2-1e12-4d84-b5f7-67d61bda28e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad8417d-f854-40ce-9140-77933503d87b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56fd6a3-fdfc-4144-b616-868b1ea90a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9422e9-45aa-4ee6-bd62-d69407f6a1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c255623-1ea2-4d2b-b6ae-e8bd3682584f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b134d68f-7960-4f87-b285-110c4da1f84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18af1e1-4792-42da-8a37-55720d6a60f0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f45007-6ac5-422a-848b-c3e88ccd7f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cf7ea98-ac16-42a3-8aab-cd359da48b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1bc4e11-fe0b-4e84-81c3-6a77bfa486e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "caab75d1-6857-4d6c-a071-dfd0aba90b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd2881e-f51c-434a-a292-87962daf4daa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306bc571-764a-47d2-8c63-0dbe594ef8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9088e5-38f1-4264-91dd-c13eef47e0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b995030-ce5f-4903-96b3-c024a0b0dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41580ca7-3377-41f4-ba1f-42edba8bfe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebc8fae-b306-45c5-a51c-e4f28c171e2f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec85a39-f3cb-4438-9eca-5f072fd3cbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519c83b8-5a1d-4b33-b28a-77512bd45835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35442f7e-0362-49ec-bb1c-2735d7ccc553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "246b1a7e-1137-4e7d-af51-f669a6f19f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a67b72-3e50-4d33-8789-5f6521e45bc9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f21877c-9349-4a96-82e2-953455dc1481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fe0ed7-4ab6-49b2-b29a-b191a254e4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6164d2c7-de8a-44c5-8204-0295ee7a4543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3136d50-2cb4-48d6-8fcf-e7a3304180f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299e6a5f-6797-4499-b48d-3c172bc6d712",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500e882e-868b-4eca-a8b3-464a77b922ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df969584-1478-4258-a9ae-8c3e9d2bb74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ee0640-ae6c-499f-a9ea-56d754da6c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd62a3d2-0d37-4002-b057-e9a7f2d6d3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9c934d-12bd-4234-82f3-0901d1143a4f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2a3454-71d6-4d43-841b-52373d08bf61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7f8683-1654-4ba7-9a18-7ce88a94697d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7509a315-4955-4bcc-8215-747b06e889f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d04f0a0-03b9-4b41-818b-bd0397567e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8cbf4a-3280-48cd-8df1-b34e174cdb10",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de62b4c5-983d-4168-b8f4-c416218b7423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa17582-94d9-44e8-844a-4d4f95a8b7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cec2fa2-f858-4d67-bbf1-b191acee05f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c765f35e-1ed4-4043-badd-07961d208ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c229887a-d0d9-4b94-81d3-67aa395fc706",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f04294-9965-4b06-a2e6-09af9b2b31b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caaa489d-b84a-4a8c-b32d-ec0c4cc6d1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee7500b-7ff2-45a0-af47-51720cd73454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e041de3f-77c8-4b86-ac3c-25ff49621a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e5b81a-fd52-438e-aaa2-be3f63ecd25c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9a7026-a80d-417d-8333-135d0cd623a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85d0823-2a65-44ac-a50c-3db1c4b44d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e5258f-80a3-4db1-85a2-6caf9884ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd24a24-0f89-46ef-8061-d505f1f57c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75716cb-46e2-4529-9370-e0b825cdaec9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd567c1-bf2e-4dce-91dc-49cb63a0bf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0feaff-9aa2-4d71-9fb0-a9d4f98db404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca77903-4502-49c2-93ff-c0e91cece600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa80085-de6d-4139-b079-6d8a0e0d1061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1277fc68-a187-4f06-ac80-80acf50abc45",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d31a3e-b955-4049-a887-1dc9f1e5ba0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebb9fa9-1107-42d1-b51c-90fc910ac5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a84b8e0-a6f7-45a4-a8e4-3e912138eb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a26cc6-d295-4f59-a438-786e700f2bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a866ff-9e15-4966-a985-2ecd81051e3e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91264809-ede8-44d9-9eeb-97e65af57eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d869016-0f1b-41e3-b682-6367bcb07323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0a320d-c5d0-42f6-9084-caeed091039c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d218f276-eec3-4953-be48-653c3d9366e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d76877d-2f9d-4c27-a38a-939d8948df3c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7ed693-6812-4bb0-88d5-36615c67195f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c478832-a530-4cb8-b9c2-4fd8db357513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e630f0-f33f-4447-8d50-2eae61ae082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8989a1a0-e75d-4918-80ac-795915afac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c68714-56c5-4fa7-bb3a-b0def4dd1242",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a334821-161e-4fb8-87da-31bec3f88c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21991881-782c-4e4d-9633-e283119b787b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30715154-ac03-4bc0-a249-362133ce1639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5e65753-323d-4547-a62a-b78a0009b93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fa18c8-d062-4bd9-9487-6cc7437d29c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2c5864-af34-49ba-b75b-4f1636f5a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed99943c-bf51-49db-a934-63c9a4ae10d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ffe53d-aa30-4469-8815-b1c2e8dd3c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5666303b-0126-4302-9ad2-e14aada1e28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cc9046-1d45-43b6-a4ff-4b235e22807d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee85af82-e1bc-4ba2-8893-1bf370650ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac6f3dc-5716-4585-b9f4-e4ae9dd97a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79451a68-5722-4cdb-8efa-6d6063d0242c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb140c8-6d97-48f2-af0b-255a226c2099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5584cb4d-d08f-4bcc-a1d2-80fe671812e6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3b0e9c-5b9a-4d2f-96f2-0e8e4e4c0690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc76e0b-646d-47ef-9c26-451826183ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee56a4a-48d0-4fcb-bd38-01158daa404e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b36b514-ab1d-408e-bad6-3efb2f93fd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404a5cf7-b840-447d-bf8b-04c80637bd2c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2038d5-fadd-4d60-8c12-cc3ceedf0bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d99173b-c3b0-4583-9ee3-8d601fba7a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d126c283-4b25-4a0a-8515-edd88fc1f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed45c494-d4cf-488a-ad93-72bb4f680530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9420a0d5-a167-430e-8477-4d0458c53a2c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d157d069-8d93-4c50-a838-434291d3c8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "429c0765-4359-4274-af92-e49de4ab4e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afd0931-f7d3-4280-b39d-9f0944dccca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95518537-c241-47b1-9290-2004fcb2374f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020423e2-22b5-43b8-bfbd-028db0c1028d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e231767f-cb99-4eba-941c-c6144f3cf58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65df7814-fb93-4ed1-84cf-909c408b2588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3894ee77-41f7-407d-a2d9-751838d14219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96889aa8-4ee6-4cb5-a55d-5911d418838f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534b7bad-6169-4de1-aede-0a097026edfe",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd1d37f-e987-480c-8f2b-6b496efca533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a7c7bd-bd98-4ce1-ae41-ec290b5f027e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb9039-9b81-4d1a-b827-9fb557ad33c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bc144ddd-ab90-4352-9039-ca730574cb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b052caee-9f21-4f21-bf7c-b837b7d31b39",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0706eca-e616-4f50-989d-d33f54943cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af92e97d-4179-478d-860e-845388a8c8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57a8f79-fb37-41ec-ba13-d6a7f7712137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8fd951-8461-456e-8cd2-8799782d316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37ec50e-c00f-4311-801f-3d42f6e4d270",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ffb53-5d81-454a-8d54-9ba7ecb415b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edd306d-f45b-41b3-8a63-17a8c89de1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb09415-0c6e-46b8-8de8-619870a3b9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "efca4fdc-080a-46bc-a033-04828d535a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ddb0e6-bfed-4b81-ae65-ad16079dd9fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79655e-d94e-4d8a-aef3-acc502b13fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bad519b-3f2b-4626-b693-020056c80eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266a4760-560e-437c-98b4-b1db33549f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0948b9e-5292-41e7-8a6f-a7d5bc5a0df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04eecebe-79ef-4b3b-bcf8-9b7c9939cf13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f927a2-c578-4ded-98ea-30e05d0101da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdb8340-1411-4009-bdd7-55512aa744cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04144a3d-97e3-4445-ae7e-9f0e11588fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1428876c-643f-47d2-9281-c3fffb47a0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e862359a-1aa9-4f2e-9953-e42e53546326",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e9b944-e39b-4919-b778-e519868a9836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5013954-341e-48dd-b67a-50c418ce419b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefe188b-21e8-46f8-abff-ba238a92bdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "68665000-49c6-44ac-9f06-cbfbe30ab58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd3465c-c52a-4379-9d83-083cab8fb3e2",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67385a2a-31f4-49f1-8798-0676714c0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f129cc-e47a-4048-b982-12a0c0c47180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d529f1-ffb9-456a-afdb-3349cb4ee6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d32d5364-3ace-4399-9df9-68d67550b273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b113323-b097-49d2-b833-2a79749f5511",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53293b5-e147-472b-8a13-e4e8c2aff80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1109db0-fed8-42d2-8ebd-45222e6dc12b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e029944-abe7-4876-af35-9d56f36f5c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a569f1-3119-483d-bfc0-d09cc09c8e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d0d1a5-cc56-4d76-b053-24c2d6ddb0d0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b258a1b-432e-461a-8dc7-1209c7668fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b4de77-2634-4fd6-918d-6c79de2a6aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8b5f53-3b9f-4833-9216-8a486abc70cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e846bdf-710a-4ba2-ad17-073b7fcac67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8987bc-6181-4906-a81d-e7dc1b3b815b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb6b66e-0b5a-4f94-b69e-b75bebe25f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9fceb9-fdc3-42fb-912b-2d6898829743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76474d6-f596-4794-b8ae-f846a1a218e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18c45d57-ae56-4d7a-b20d-d4d182a08bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30959490-36c3-4b83-9528-131a72e69099",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc0d2b47-5eca-4e94-b9af-f7f8d8b793b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa45f3c-5971-47de-be00-102adb79fbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391b4218-3389-43e1-9bd0-a50418b505ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "500573fd-eecd-4250-b756-14043b4c5177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a605128-87bc-4af8-9017-e5493945747f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132c1bf9-cb80-4e6b-a9c3-0213615c319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c0d973-60b3-4d49-bbc3-ed5bf167f057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aafa74-940f-45bf-98ba-b969b13d4a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a76a828-7a53-49f5-83f7-04684e1d0597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8382a80-f564-4df5-b44b-f6847e0ca99a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca16245-3381-4e17-be20-32c4c7e085d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a16559-23ad-4778-80c1-de257e89c711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dd67c2-3559-461f-a3aa-d95990fa4a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8985de26-f174-46a1-a965-4a8163752458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56682e8-719c-4470-aff7-d8f9bdea335b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed88d6e-2876-4d47-a1b5-b96c5652f469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52283e47-afde-4f16-b605-9fedfd1fecc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefc7738-0305-4689-9d30-5f7e88bd60e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fad25c2-e9f0-437c-8d3f-3b4086970de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb8e98c-002f-42c3-88c2-8098c25a2c96",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4542442d-2de9-42aa-b44f-83ca8234c783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86b4c48-0205-4727-9562-73c994b16b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2a9d2f-76c7-4785-b5cc-c3cbc01df1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1069be-aaca-4a58-8981-b309d8edaac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df903f0-21b4-44c7-a7cd-3db73d672070",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bf8d35-baa7-4306-b54f-35ac3f4e416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed50b8fc-2809-4619-bced-21014366561e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f273c392-530d-47ce-9d3c-739cf414fb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bd5b1e-9a39-47f8-923e-386dd62d23ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52096ab5-9b49-4cec-b002-54421758fd30",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac7160f-c3fa-44af-ab87-7c824e699b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ed9593-16ea-48d0-91c1-b5742bb70d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971ffa7b-1e51-4dae-bc6d-87534b4dcc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c18877-2a4f-4026-82f2-553288bebcb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42295b7f-3b56-4ef5-bfde-848192d6442b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d03fc9c-8189-4d06-8799-cb56c4c10b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7d1ac2-26f8-4f91-ac60-400efa13b2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713b85ed-1921-43b2-9d4e-d4c4a5b1b1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbed976c-83e7-4980-a744-39a670d460b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213d99e9-6b98-4172-b42f-86ccad3b7c74",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fca3e3f-875b-4f7b-ad6c-3bdf31513553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4b4b4c-0a49-401a-947f-95916fde5f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae80c2f-e8d7-4fd7-b76a-15466ce81457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20a64f1a-3665-4982-8027-73467ce5bae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fd09a5-de79-40c4-8d01-3ae3633012aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1beff55d-43dc-4748-8d98-70f5609056b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e7a77c-e48b-43e7-9939-a12e0e103edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49ca80d-e8d5-414b-9157-c3203ce7c9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea04f53d-7635-47a9-8cc7-db1cbb5c438f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3c567a-247b-40c8-b0d5-afa35b00db3c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e65ed79-a9f8-4bf5-92b0-374345ddad74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df455e03-ca7f-480b-af0a-7bc55bae68ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903cfd2d-a230-4599-a874-98bd1573a8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06c9396d-922b-4d1d-a65c-25c1b0be9085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677266f7-2093-4265-a5db-adb23fae8f96",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af648d7-3a5d-4941-9f71-56fb4a91eb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ae617b-09c3-4dfe-a2b9-2de6253e2bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d844052-c11f-41d8-a00e-5f8a280068d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e82d86d6-f309-48ee-bfe5-68f3af837a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f2e2a7-d36e-491a-8eb2-6cf54b7a9008",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab95d945-6a40-49a6-b8df-a72aa14afe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ab4965e-474a-4c0b-89b4-d3444a164e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ddfa01-ea85-41e0-9255-84047e42c772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "945bd356-4f89-4189-a9db-eb3ef123c2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83946cb8-ba83-4f0c-835e-f71e99f4e8c9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba975ac-b00b-4cbb-88dd-b64a8cdfc013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1014807-6839-4849-a066-51806dca2f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab5392f-d4f6-4f73-bfe2-a6aba29c3583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8cd3bc6-d80a-48f8-a13d-5c4db6921c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf87715-c1d3-43ef-a2fa-4b70e3562106",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8460023-ce66-4ced-8814-25a4bcd4920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e770e7db-4e5b-4b01-8fee-70e51e9fa812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6a62b2-3053-4d01-9fd1-175f4578c020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22b8f723-8179-44d0-ba18-065839ed6db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bcd106-197a-409d-bd8f-acafca7a50d8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb5f4f-d6a2-449c-8d2d-76234e38270e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9addb49f-1a80-41b6-ba6f-c7c0bb04e597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d543ef3d-2178-4c1c-b35e-18cf7a2084d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "760170c5-221e-4c80-b261-9a06440c6e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e14bc2-c2b5-483e-b582-73a61ccb4a01",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438f93e3-ef70-4c80-9a35-46aa8a84924a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f09ccd9-de2f-4d05-a107-ae636edb4e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63cbf6f-9e7b-4790-8894-f4a3118a1259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e20e6b4-2b17-4ce2-b352-b14442cb7522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d6f37a-1c15-4e40-a12b-4959eebd56c2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eea290b-85d9-4869-8b3d-ee3ba9d6ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd7f8a4-8537-4af6-b12e-cb04e63d60ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3633b90a-fa33-4b16-8519-1e93b5fdf58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ff8145-55d8-4c1b-97f7-37faffcf2014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4907baf8-a8eb-4a8e-9cce-950277816f05",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca8ac2-294e-44e7-a9d9-6e97b4a9bb83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e448c58-3b5d-4ab5-b564-fdecb3868868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca00d87c-099e-4320-a125-bdc9d780cbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a7617f-3457-41b5-a7a8-8810f829205d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5a01ff-3f02-4122-b956-b48c9301de9d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391a966d-74f8-4b7b-b5a8-e7c4450cb239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ef8f5c-863a-4aa7-b6bb-3d80dc22bad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab0ba2b-690e-432f-890f-60bea02ff952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1eda46-df73-481a-b003-f24247d0c304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcfc590-342c-4071-b302-653e4676b493",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d169249b-22fb-460d-912b-bc0b8927b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a1c378-aa03-471e-b4df-310f396c2fd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccd30bf-83d5-4ac3-b689-7cc3cd3a31ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0908af-23c5-4f78-bed1-54e48874e781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce6d092-6ba4-41d9-91a1-05bfef27d9a6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee100d2-a5a6-4526-b07e-e470d787f12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f54e2a-6881-4b66-a9f3-9f846af40fad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20d7ca9-3102-4c4a-9388-14f1327cb108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ceeb00-aea1-45e2-ace4-eca9b89897d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba18ac93-509b-420d-ade5-69d2f538109e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d09374b-bde5-4149-a7a1-e9bc229bd036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e3427a-cbda-4f94-aa02-13f89eabd426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575f1880-af82-4a31-a996-6f918ac786aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e15b3778-2a3c-4d6e-bdd6-b97f37f2aa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202ffd4d-2a50-48f1-a771-e8195136c91d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d676c2b8-78b2-4d12-aa8d-d47181db1f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457b3695-60e1-47e8-8a19-4b8faa575fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440c387f-7ab6-421a-8a2b-7fb0af790a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b78d845-4855-40fd-a623-5ef3c599145f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d2b4d6-a0e3-48b9-aa51-b22a5637af49",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b66d6e-c1c6-40f4-852b-73838b6842ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753f86b8-45a2-4c48-98dc-7fc9a1bf8652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42463e6b-4b1b-44d8-bff7-9a621f304126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55a0ba83-689f-4863-acfa-3e8664f58120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce4a47-8c94-416b-82ef-599703440e77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc529fc-62d2-4677-a204-ee691b8b2ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d652ba74-1811-45c6-9320-3d9f4bcabe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e1d6e-36da-49c6-9d75-8c6534dc05a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aaa723c-08c6-4f37-94ed-d44a0aa57d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb17c57-a4dc-4853-bec5-31826e45cb1f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f22bd5-9d5f-4fe3-bf0e-61bf0f4b0a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d7bfaa1-30ac-44a1-b7c5-9abbf06eddb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fad65a4-be6a-4df7-82fc-0651284a833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7afc17b0-8601-460a-822f-fe6228387352"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8093a18e-4608-4192-af86-1b61146ab4fc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b70d3040-b33e-4fdd-b798-dc0fde443844",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c5b7e8-db43-44e5-b57b-e69b92a164ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "908788dc-0a54-497d-b8bb-284a24233e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f7348c-9164-4d7a-ba4c-c4c04109c789",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f3295dd-e8e8-4526-a02b-0b89dea1428f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a9621a7-20e0-4ab2-8c7a-d1ef3b9667e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9efd1ece-36eb-494a-aaf4-8d1c5a97e9e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "259286d1-a95b-49c9-9aad-0b2d67e52954",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d4e7205-ad7c-46fa-9874-e2af7deb0b59"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "284ee93a-5142-45e3-afc7-6a597aaa9b42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58f3bf8d-cdf8-4418-b468-d69319f80590"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59ce87db-b91d-4bb5-9deb-83ad168a7770",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "afa66813-b226-484d-a4a3-b1bc91d541e8"
                }
              }
            ]
          },
          {
            "id": "d771014b-c03e-417d-8dae-df435652c3e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc3ee432-088d-4ee2-941e-f07b6bb230bb",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a95ba67c-197c-4abc-84c0-e597422cb3b3",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf5cd02-3d86-4770-a224-10a9e15eda82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "632fe423-903e-44d1-9fa8-8c9516d98cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de182548-1973-4b1a-997e-5b1237964fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "705b9295-964f-4585-8deb-535d00c04e62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3af5443-7443-45ed-b6bf-be5d31bc1837",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0776226c-6692-45cf-921d-0550afbdb2d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a0ccab9-185e-46ee-9269-48e13803b0ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bd9b536-ed8e-4c64-a0ef-78c6f166e978",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a69fb7ec-7c61-423a-8cd8-a607d9316432"
                    }
                  }
                ]
              },
              {
                "id": "f22fd6df-e82b-467e-8997-8a63828649c8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7377046-a0d3-4f6e-827e-bf4978b7844c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9112521-5db1-44d8-a8b7-6eceb29c1da9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4377e231-5fc0-4c38-8f66-4cbad10939fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "480ea60e-570f-4739-99dc-712b51f4f5a2"
                    }
                  }
                ]
              },
              {
                "id": "a956dc81-411a-42eb-bdc3-40f5e3d47888",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b28f458-cc7c-4541-b99e-5329b5d8e8e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ec1b80a-aa1d-478d-a7db-b8e191ecd465"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0e65232-6223-4698-9776-3a5a207f831e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "215569cd-f0e5-4400-b97f-522be73de926"
                    }
                  }
                ]
              },
              {
                "id": "a35ef14d-410f-4aa4-875a-b38849c1c023",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fd90171-9d71-4556-b2ee-1ca6886d013c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a61c0641-fd4d-4b50-946c-da942550eb78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40474dba-6b33-41a3-ac58-d7d8c901132b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "913b1200-f456-41f9-9f7f-db2efb60f157"
                    }
                  }
                ]
              },
              {
                "id": "dc899d48-0fc6-4ed7-8f29-cfdfd44d0d72",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a7a6424-ba33-4aeb-bbe1-91d0f451db95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a5568fe-9b9a-4aff-878f-e96c6580b82b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92e1df05-3074-4ee8-80df-d6778467f600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1f7786cf-4867-41e6-9c0f-e9e143365303"
                    }
                  }
                ]
              },
              {
                "id": "db3caf2f-8941-4af1-b79b-4e9a9a7005de",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb169d98-6653-483d-8885-08522b82a4ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1e9f1538-28e8-492b-8df1-4daa9c3ac4f2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "672f5115-ad7f-479f-a9ff-128d496adf57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "530dc956-dc5a-4bf8-8195-69eaa44df115"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd678cff-ca48-41e7-98b4-a65f28876951",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4cc01e34-88ba-45eb-a958-a47f170ebc76"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6037df7-6424-4eae-8138-b86679379d3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f41e0bc-bd5d-470b-bc0b-7f352d4f5019"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fea4a53-a790-4144-bc83-b4852297f261",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dcd71a4d-6ab4-494e-a31d-f9fd30a3cf45"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23146ebd-75a6-4041-a59d-86eb45491afe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d73d88a-4c9c-4be5-892f-136eefc46991"
            }
          }
        ]
      },
      {
        "id": "d72009d0-2345-4eec-bfbb-c0e5963b2203",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "173d1d60-d2e5-4763-98b4-b916fab5909a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7dafc27-b578-46f3-9aae-6433ffca033d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "98cdda21-68e3-48ff-9886-88ce480c0a29",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c9bf1d-2b52-41f1-a09b-e446eb908ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b834e26f-820a-4817-8224-7eab71630b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae25081-66a6-432e-818b-e90ae934ff83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0aa2798-90c2-4f46-ad15-6cc8fec4d0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c64cd2-ee86-42dc-a130-8fcb9ea8c189",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0400e0-cb2b-4cf9-8828-353fd6c1dc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67181c39-3cf3-43c5-a075-5ea8db6f7c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dc9cea-af36-44bb-9bf7-3e4a8f35e4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "53be9ef9-b6e7-454a-9407-9fe2c1ea79f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953d0d03-62fa-4d1d-bd44-b83c142ce905",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f4ba5-7dea-446e-9563-d34836919223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee5ab73-1146-4494-b775-fc0f0f1c1913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f0e721-d564-4184-8254-76ffcb94f775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c94615-3857-44c2-9654-4751ceab5bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e259023c-b441-4d28-a5da-abda710ab7bb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c079fbbb-919f-498c-b4a7-2f432caf006b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf7cb80-955d-405b-97cf-f260d482e938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389ff6a8-dd22-48cc-908e-ffee8d7dcadc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dc470a-c4b3-4c47-92a5-49041113970c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51bdb286-d3b2-4752-b504-b9a528dcf0ac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b174f223-e1b0-4760-8aa7-1c5a5ccf8e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef57d38-787a-4ad2-b854-761247aafcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d7e4b-56ce-4fc4-a506-25093655f084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a981f97b-74e9-4b35-b0c0-16a62afce136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0945c786-eaf4-4348-9b72-7530855cf4aa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bc5961-e903-49ab-83df-7763236b4d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1f34cf-662b-4fa3-8254-821e57d3270c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf713057-38c3-4738-822e-e36f18d67589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8388a0-a66e-48a0-92ff-d7176186aeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d245b0-3efd-4ae5-b2bd-9d6a893caeac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3eb1fd-831b-45ee-93d7-e64e38a7c349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1b4195-f8c2-4faf-abd0-c2bd13c85d03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e366e13-d5f6-4305-9b53-62e875bfcc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d38625-9ed8-4948-81a1-6022a4680a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7235dbb-8cce-4a0b-932a-4eabcb48aaba",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fe5f00-1c88-40ad-a1dc-eea3c9fdf117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55aa6770-e0a1-4f77-b591-aa431646ec5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8a2bc7-a576-41d9-9af9-6b04bc9dfb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04d5b6c1-0e69-4621-a062-199515959a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712ebf34-8cc8-45b5-ba7c-db6970408335",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34acdcf7-28ca-4e89-a64a-964d8e6bbb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64260ab3-eeb6-4604-a49c-e996e548064d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e324bd16-49b9-4879-beb5-5a801237c98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea9c431-3ae2-40f1-b7a7-ad9937eec752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ac314f-e7d6-401b-8daa-068dceba5fd6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6931c58-d05b-4fb2-a944-58191c52bec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76332c7f-0ac8-4827-b8d3-76517065fcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c89fba9-e2f0-4c55-8a04-1124165c983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1716fc7e-2c0d-427f-8690-d8858fe9fffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edcec46-c24f-457e-b864-ab15cd33ba3c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cf4c68-494e-42fa-8ac8-e1fb68eea076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db1f85f-b4db-4c46-a08b-18e6326e5d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2745bc-e532-43f1-a036-50d49fc6785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0c60c0a8-8d69-4841-a9e8-2ae696470497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2341f3d8-8a4f-4518-8e81-7149e1d52cff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84acc299-dda9-45fb-859c-32e23fc0949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a20faaa-5028-4462-9e77-f7fe7508cde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2d4c4f-d1ed-4096-9f76-d8296ae1bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36176ecf-f94c-473b-a441-142ad7f07a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71c5fc8b-cb89-4445-b93a-9125dd613be5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7ceccf-2163-4a9e-85ec-2ef8da842d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafaba0d-20aa-405d-a506-73203ab87471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bcd20c-c845-4462-9a76-08f4f7ee3a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a92565d2-8b28-438c-ac3f-8f70745921e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2f6d7d-b9c7-49c9-bf2e-2022d6f0bd4e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9224346e-947c-425b-b643-0a4d11575e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f9d2d4-bab3-403a-86b3-0ed651e970ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52065c5-f809-45e3-8366-6be07a61ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "64c3c9a0-b848-4360-a9c2-b27ab2e4a518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30731478-a860-44ea-ac2d-24c6af75d66d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3549a169-dab5-4d6f-b5ff-8c2684ef2702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78033884-c9e0-44eb-81a1-a81bbc463ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9728648-31b1-4d56-ad63-3fbb71d336dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3abf5ab-8aa1-4d16-8103-344e170ac3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa3292-4e71-4989-b5ad-de53cd740f31",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f3883f-86d4-48eb-99ec-bd327d962c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d09b3ffc-5ec0-4205-81f1-be5e7e1626b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18006597-461a-4a6a-b7d0-36df4fd5df7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "48300fde-9ded-4c67-aaf4-e38aad8f100c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908bf661-b43f-46a1-a982-a553e43e618e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd480bae-0e5c-47c1-89c1-056066824b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0a1cca-9b35-4384-8a65-9290fe3bdd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9e29dd-eb2d-4101-845e-153b37d98f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b2367d-0de1-4d9e-b91d-aeae681a7ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bcd807-2843-43a7-977e-d41ae903c5a2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81027bed-4e81-42f7-a8f6-b070a189764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be48b0e-77aa-49b7-834e-052ac26e44e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace64a84-7594-4ccf-9290-50a87748c482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eaa1fc8-d10c-45bb-a1ab-488b0d10248f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c51b0-8650-4b6b-bf18-62ff9fbb1947",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc5d6fa-0281-4223-a4d8-1c6dae26ca63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef27626-991f-4eae-b302-2a87b5ba31d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaac133-b0b3-4bf4-8300-891c66db931d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "669b554a-4a20-42ff-b871-0ca2ea3f264a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe0ee73-a54c-4119-809a-2c444fddfb65",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da81b13-6b1e-4798-aa82-886947c0b2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b0ab8d-f275-46ac-b28f-bcc77cbbf376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bf2511-50d5-40db-a179-6a6cd133659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8db9933-64c8-491c-a5ef-0f9e42afef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b077ff-9d40-4de6-8cbf-3938412f5fe8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af54300a-b2ef-4d32-908f-bb4b4fd838a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed33be06-5513-437b-b2f6-1dfd948de396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d33bd7-4d20-4e43-bffd-5c7706b24ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47158d34-b3ef-4c4d-a004-04e458a9f8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d81031-665e-4c42-a26d-bdb0150718f1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac9ec02-c8ed-4477-8f03-663619d061c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee4def4-d95d-4d93-a747-36af77824525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8e5bb5-af30-4f53-a1cc-1890ebec9303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d56e42-3686-4288-a2bf-b00fed0e2ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccee22a-a4a5-4ace-9437-c91c37687339",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f5598-f518-44f7-88d6-23d2083165ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eccaa87-44c5-4948-a86c-8dd0dc7624db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b295fd8-c4f7-451a-a2aa-53cfcf995fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be16396c-74f1-4004-afe1-d90822fd524e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8994693f-75b2-4879-8efc-862efc9bcf72",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbee9b05-bfe0-40cb-acc8-2125d5a99ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32885821-8c6b-4314-ae43-92922adaf561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790266ff-1a78-413c-a3b4-07cc0263d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd3da48-18c0-49c0-8e2c-c5f65c21fa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25556d5b-227f-49c7-baed-6827331b1a91",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "480f8cbd-c4c6-410e-82f4-df092ee56e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a4c4e3-7f42-4feb-84ab-6c171a8e0587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04b3d62-344e-4df2-9acb-ca50613a6ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc07c82-ac6e-474b-bf19-0c52a7648dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a49955a-274d-4931-a9b5-d088fddee074",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef2daed-18f0-44c8-8a0d-6036b1c2e37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c376e709-67ac-4e7f-a96b-844a1b177c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3658a1-70b6-48a6-9f78-df8ae5073e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4820e689-81ac-413c-9c03-0962c19703c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf93948e-15e7-44e4-9507-8befe9524b65",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c132e1-8f96-4839-ab53-cdfc75f9967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66738ae5-42af-46d7-bb0d-8171c6f8cc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d078905d-7c0a-459e-a4c8-cebb45ff873a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37d63c7d-e32a-4354-a366-b2afe79545b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd7fa2a-6685-4fa3-b6ff-ffb65900ea6c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1a1934-4a54-458f-92cf-cd0bbda7d4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932426f0-d90d-4808-86cf-e54b896a8f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8d848-cff0-49e2-9878-e8171f8deeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d1c33d-fd12-4c2e-9013-5007d3c33989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb85d834-1746-4794-a256-7717bd04940d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5cedc3-1401-4987-9a6a-64b4ecde2146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb49e51c-97d1-4ce2-bdb7-a17c4288ff8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3232bb90-0364-4389-b8d9-a419092ab781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62322558-8de6-44fa-99aa-42d8348dfd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa5e3d5-99eb-480c-bea5-5992f6bb844d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb99aa0-425e-4da5-bd2a-dd8c30e93468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e0fa41-cf5e-4e9e-9e59-d1911c9fd87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398feba1-f147-4c0d-860e-1d4b74340d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04567c13-64aa-4651-9f16-43fdf74bfd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fe8372-7193-4000-8ef8-9cf6df142f8a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4cded9-70fd-4892-a561-2bfde1d483be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd3f8e1-c349-4586-b35a-271be3cff9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099500ce-e7bc-4378-8ba8-fc44bdaab065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf1ca52-ed7b-4209-baeb-0824c8ca2f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6865230-74cd-405e-b8b8-aa845f15c0ae",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53448029-0766-4343-a2f8-7f7fadf21c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff700f9-0c6b-4240-934b-85dafac910aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a850c1af-ecca-43a4-9cb6-17b1e5b3ed48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37e6a98-67b6-44dc-8273-4cc755b36d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5607bd7c-cd12-42e5-9ed6-479bab6beebe",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba0fe9b-e14a-4cfb-9f5c-81b6c433feef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c148936a-adde-4159-aa6e-a31a57da42f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93833f9f-db41-4899-a5dc-c28d19db92ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a48582cd-04c8-4537-8a97-9edcd1c03603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe44d6aa-970d-4e63-abca-b585396489d6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b119242-e76b-495a-b343-246edc3de4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f412d4-026d-4d39-9ba3-9296a5471a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6bccb1-56e6-45e6-ae8d-0dd997d30249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "781e2691-c93a-48c0-98ac-fcca924b35c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a647c64b-9814-405e-9e6b-61993092189b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e365c1eb-aade-4e0f-ad21-fbe0d45e97dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e45282dc-3591-41e5-8ef2-cd3638968f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ad9b88-3bca-4ae9-9458-8232f801727d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6cc8cc-56c1-4465-8f77-768405018a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d16742-706e-4b4f-a74b-6ec76e2a7e85",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07573d57-fd10-4072-83ad-adc29d883f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e404b71b-d66b-4c52-aae0-48cfb375e274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db8785-44f5-48ff-81b4-47ae80e86fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd91cb50-6117-41df-862b-00b5c79bee62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16bf6ce-604c-4d37-b18e-8d9a095e7fb9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743cc72a-7822-47a8-9991-ad8f40004927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e4f5a8-0c93-4eff-ac44-adbe491065ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1124440a-4998-4793-91bd-b0dc4df45890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64700f5-bd81-4706-9140-feff97bf83ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd91ecd6-eaf4-41d0-afe5-df1e55a3965a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8360211-c86d-4321-b518-440789c87c1c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f781c2c2-7a9e-4278-b6f4-8f6704e9a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8811c03d-dd69-4b76-a63b-36dabb6cbbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54ea9f8-b00c-4d9b-850c-e06251510691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0261398-c716-4743-bbcc-eb4a43e0a1c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f4d2f8a-2bfc-40e9-8bbc-7c71781f23aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2daaec7f-d97a-4011-a488-4186cab4a197"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56bee61d-68ca-4a0d-a4ad-23eb67d0fa01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d51a4f8b-116e-42fc-8a31-c95e3cf26c6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15301b70-faf8-4384-bee1-b0dcd42c5f94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "69ae5788-6995-4a64-98d1-beaccae346f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d288547e-8d24-465d-893d-5db168a6b767",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "54d85301-a7bd-4e46-a292-7c99bc7a6613"
            }
          }
        ]
      },
      {
        "id": "c65cbc48-2684-44c5-818e-784b9fee5b1b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f0aa7f76-2613-4cb7-867d-ab0cdd7ea193",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75afc557-4cf8-4c37-b53b-cea1fbbeeedc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1de7a22-4680-4c7e-8b66-452ccdf77030",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1610d-2f33-4a82-ba5c-12980b765dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d9f65e-b094-4bbe-ac42-04b64487c492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7f5bb6-d637-4a3e-9ef0-55e687bdd4ce",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981520c1-4e93-4f7d-939d-6549df6c41aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d03d881-2abb-406b-8e46-2bf95e88778b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9f44ee-9155-47ef-8aae-282d6ade6951",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57265f65-6f5d-40a8-8dbd-21b4049eed02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57857c29-d527-4d01-a65f-7899833e3cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb27b209-b36c-49b4-a43d-2779dbc9000e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b134b7-d42f-42c7-a778-b9fb664fce6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98bfe63-6696-415b-b56a-b1dc5cc827c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1180fdf-f7f8-4541-aa7c-2d70112031d0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ced710-83f7-40ec-900e-f3101bf169b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486a07b2-5d70-46f2-9f00-52c479a26e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23c7063-daec-4526-8969-496de455ea0d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94d41be-b372-49a0-a42c-eb7f3cb96951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36422772-1b69-4d39-adb4-6cae2f76086d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea1fd33-968b-4e42-8d7a-7b442dcde40c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafa36cb-be41-4216-9480-5aa631c89ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d3673d-b9c8-48f8-a008-19303cf9f15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bb86a1-f173-4fcb-a065-b52bb61cd486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d40659-9340-4094-a21a-6ba3e452fe2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e9dc5-435f-4a19-a00c-b954e5866fc4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5562e03-edd1-42a6-84a5-ceb93cf0aa66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca6e207-ca0c-4f09-9ee4-9f64e9866e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43502bf-10ff-4114-ab5f-7940a48fed99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5926ce-c088-4de7-b0c6-6985e450c843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37bf0b5e-69a5-4341-9f3b-7470c399bd7e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf88aa7-421c-4af6-891b-a380ee2884c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d395e95c-ee7c-4a2b-b20e-7417aaa10ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c30bb5d-fe91-45cd-85c3-54371b071afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffd6582-ac9c-48c1-ae69-c1bb3e7dfc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b190117-3ff0-44b7-8a8a-c13343b7ab00",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecf1fb9-1032-40c0-a004-394861da81c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5b0ec1-e568-474d-afd3-ea31f7f7a26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1816176-680a-4f9e-8d07-b8824cf5ef99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512cf05d-c4da-4040-9936-9984cb36a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acde36a-7e91-4a6f-8e2f-cdf4291d732f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a660f05-4406-4b68-8424-8708833b1c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a130c600-f4ad-46dc-b5f3-a0bc808d7543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4d5bd9-06cf-4e4b-a18f-b67d26dfd8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a08854-4aeb-482d-8dc2-69fef2015a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb09dc1-91d1-4650-bd7e-746810d46114",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57371350-01a2-4df7-b20e-ef661b5f0655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07d4325-3aa3-40ee-8959-8f4cb7072321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aecc87-45fb-48ee-b6ce-e7a8c829bd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be955e9c-1851-45fc-97f1-e9eac9cbca2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fe4537-98c6-4483-80ea-e771a3057adf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472ebfee-b3c6-4980-b27a-87b87c8cf8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19be2dd5-cc30-48c5-b628-24c222ddc36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722d663e-cca1-4b23-a39d-97194ee152d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50446f83-6b33-45d7-a9d0-e9a52bbe47b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aafb4b-13cd-4e50-a128-4b6671ecd7d3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231f4c12-b821-4a7e-9fb5-ceb616925b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "853e045e-0448-4c73-af08-43eb73be36bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a426f6f1-ea5f-4040-ad69-22f9121cba9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e77f632-db85-4c36-81cc-e8e3aa6e0483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f763ba10-1e2f-4c30-b55d-43a63f3efe39",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489e0cfc-b9c5-409b-9305-f53440f76896",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d028445-85ac-4ae1-9f6f-4ca7d2d6c08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14ddb03-2b46-4526-87bb-95500010b163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9fd00b-f3b2-4ba3-9cc6-63b50caf7d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ddfd04-99a5-44f4-b0e1-68a9286b7dc2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7c97da-26cc-4853-b5a9-74c901f5e8c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12758c70-ae9d-4c6f-b631-d717fb0acb64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0bb8be-bfce-4a75-8f0b-dc50b6b6471f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a6c1b0-a4d1-4469-8ca6-95f5f66fe015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b8ad2d-69d7-4af0-ad9a-b1d418a41ba4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72e29ef-e25c-41a4-899b-1600376b47bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56503d2b-3e65-482d-8bdb-efea083710ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f79293-42f7-4194-b639-2c89985a8425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2293a405-4e27-4ea2-88ea-650ae00d5a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45acde9-fd9c-474e-a3f8-7762865f90cc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61c5d38-8dd7-4d6f-951c-994085d2f84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b224496-e0fb-46f3-a638-74f30a38a230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0730b02a-0d50-433e-8150-f41e8dabd264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038eee28-2a99-4c9d-9833-0bc2cb71965e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8eb3634-8e36-452b-ba4a-c3a85dba4b2d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1494619e-ab35-40ab-bee4-70c9e3a6928d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94af2074-6203-40a1-96a5-df5ca11f8d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e6018-8e92-4a16-8cbf-4680c055b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7330d21f-1ce5-4306-bb90-0b0082314611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae1784d-0c12-4b90-848b-eb7188725a47",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da4fbbf-3b47-4ede-b978-d04628a15ad1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dae4c0-7a95-4051-8705-77632d38c787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5642c00c-182b-41f8-952d-fa4b8bb7aed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5abf9b9-5e5b-489e-93ea-c4250c810733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb3d5fc-1380-46ff-bb08-2a68774a4ca0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a8c09b-ec46-461b-a3ec-62baba74c4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c84838d1-def1-4c55-9f37-8be399f7cee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c7dfcd-3660-4f8c-b179-bbe693d7b665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85195c92-eb14-4624-8610-7acee4399166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2cdda7-5b37-417b-8606-ba011b302d34",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a66188-92e3-4ea2-a012-865c1d69a5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b3fd20-264e-436d-8e36-b26b60b62ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb02ec27-d111-4dbf-8eb0-2b8740816aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dda5f22-bc20-4119-81df-04e50a0ba9ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0974fbfd-a73a-4327-9af6-b94819993e7e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e52a60f-9bc9-48eb-b23d-95e950758fbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff5f28b-1100-4afd-8c93-02835bc21877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf68e96d-ac9f-407d-8344-afae5502ec39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5fd000-4db9-4a87-be13-8ac138af884d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c467660e-a189-4005-ae43-d5707c39bb98",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99008b90-dcb4-40d4-93c4-8f17653da521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b92507-5232-4eb7-a163-232b36d35bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01201b05-94ff-461c-a6b6-5396513bbb29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b7daef-a4d6-4314-b982-19f96ea96f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a4cedc-4d5d-4de4-952f-69801d37a8fb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2f86b8-2dda-4f5a-b228-40650346b79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d924cd-5ca7-42cf-a769-776178decf2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8db4fa8-835d-4f59-ada7-fb4b5193030c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30562218-1077-4bf8-8116-dfa781bf072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f706996a-3ec4-419f-86e5-cfb293086e18",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963b4718-b185-4ec5-9dd1-fcfc24232b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c82d89a-1f46-4abd-a75e-8eea3d760197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6214ba-91d2-4661-a0df-2147e61479ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae5a67-739f-46fe-8867-2ed653817fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86db321-3c1a-4eb5-8212-cc19784c0455",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003614cd-bc15-4df0-baeb-ae4307f98ca7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae235cac-202d-483a-aa93-9bf4111378c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d317d6-d771-4d4b-a5b7-122c5fccb218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0582ba1-d9fe-4db1-8aae-e35d17bff048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d168784-7910-4479-bc49-b6c514a531c6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5611470f-83f8-43a3-85c6-5856bd8a980e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f316144a-bcda-49ed-a41e-866f826a1ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3926cd19-2291-4d26-b32c-883f3d1e6e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2210d39b-13e0-4fe2-bb0d-0da73813b18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe095576-d727-4193-8ba3-785c8e587a98",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d40be9b-fd7e-4711-9e6b-3a11b6a90bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "981afe27-a28e-4d47-bb80-3993ff425ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6911beaa-4f77-4e2e-8b5a-398c0760a794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbd0ba5-f68a-48fa-9498-38016a154d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b9bee1-9de4-45b4-8d7c-7e1e80b83fc0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5668265f-e390-4912-8ef8-96af94a1c366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6963a0-4525-4981-90de-e37bdc9eecbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb43515-2dc6-4797-9bdb-56b32f17b27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55b81e3c-e87a-48c6-9ba6-330dfb66f8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979f7d94-1516-413d-9792-0461b4692ee3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a2eca4-fd7f-4835-a804-09951afe2f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4de8137-2981-4e0d-8989-37f9234544bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d70d100-2520-4970-8810-ffbd4078663b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89de8c03-9af7-4db5-833f-bd0dd10f1005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e98d238-76d7-4d3e-a0ea-59de1d4bcbc5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f55529-dc10-4825-8491-2a0b8e3076c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc993306-216a-459f-b2fd-f38b6bfdb23a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49bbb26-c202-4fec-b159-c3d04087e42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88e118ce-406e-4cbb-9b8e-fa299affadc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ca571-446c-4c85-9be2-7df3d73a06ce",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5248d6cb-9840-436d-8876-4cac9c5f9b37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39a03d69-0536-4b3b-8415-3a359ae725ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f02641-f56e-4fc8-bf0c-c445d3b2b5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd690c8e-1c4a-4378-b172-3f98d0358f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9be22c-fab2-4cd8-8c62-621d34ded37d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c87c01-3bb3-4774-9d02-e3ee9b0a7e13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3eed58-c9d5-4f7d-9a92-bfde4592a6d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18976190-08c5-4d36-95e4-084efddc11b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ec1738-1ffd-4fb0-9547-33b5220e90fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22013a61-0c92-437a-86c2-3329a8709798",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1be6c3-347f-43fb-9bc9-0e54ea54980f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c1a4e3-1cba-492d-9b92-8a2b7c40e28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0f88c7-323b-44c1-acc5-8f568e5df36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dfa803-fa9a-463d-be59-ae42c8151ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42eb0905-3996-4f02-a150-b2175e1e0270",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4857bee2-1e7e-4b18-b13b-65f1fc50e537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b34a84b-edcc-4742-a83b-0e885b15b780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b91ee-2503-4792-b1c7-0dc9e6c95122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97a5b84-8f92-41fe-9f1e-145ee9a15da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171d6509-d7b0-4a28-aa4b-83f14e5c2ff3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07592b55-11cd-45e6-b2ac-249fe575f249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6ac837-c08b-48b7-9087-31444dc67580"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c8e3ea-9ed3-45e4-bd0a-08b3bbb3d7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c9af73-22cb-46ab-a563-8db6b972b160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e524061-bd64-4da9-9736-76a0888122f2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4838d4-83b5-4935-b8b0-3f6d4baf1e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77dc3905-a4b6-4fb8-9698-29f039e1cffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac132e72-3c91-4b0f-bc76-de19fbfefc8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d5c553-bc76-4396-8700-5e4132de82b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcb7c42-8868-42ad-8a93-45e2e3945df5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6adc2b-1eee-4b1e-a5c4-8e9258b14376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82851398-21b6-4932-af8f-cfec9c9cb8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e50b3a-1bdd-4c80-bd23-044295faad25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815eaa47-793b-4fc6-9431-1e878782aa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a5a9e5-5e7c-4b52-a2ce-be3503371be3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed7c4c-492a-47ae-84da-28264057ee1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dcd74cc-472d-4263-a431-8daf9b5fc60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc72451-98fe-4ce5-9373-68357a59b470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991096d6-71ec-472e-b551-546054135acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718d9f38-b9e1-4479-b0b9-edaa265ac3f4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32c417a-8091-4b50-a6fb-6e20c0121853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e670655-9220-4aef-8cca-5884ae4bb108"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7592b252-6f86-4b99-b17b-7d19f455aacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a1d4d6-638c-4dd8-9b2c-c791fa78f924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06be3f4a-c430-40b2-8e16-c0be55ca2063",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a950eda8-1896-4298-854f-4f388eb073ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33abb092-a964-46a2-871b-1a13347634c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f49b605-659b-489f-8753-c6f62b95d29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7863a721-c4e2-4bba-990d-3e9eb0fd3e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948ab36e-2789-4815-a822-62b8ef91e886",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799f411b-7af2-4e15-a00a-e141ae7c7425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33051b1-179f-417a-976c-3ca7063e70e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd3f51c-bee0-414a-a171-34a71ace00eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fae34d-e52c-43d9-b7a7-5ddebfcfd1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ecb77f-7875-4edb-b6ab-8cfdbdeca756",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8420ccf9-21e9-4d20-8a38-c0675b854904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fceff5-7ef7-4140-b992-222ec5b50654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d892b14-5386-41d6-a196-182198090122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7278ed-c279-438d-a3ff-14baceccf331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065d1b25-1960-4687-a7b6-7e590582f251",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769a7f21-16d0-41f8-b0bf-3eff4fce9262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c50368-6283-4053-b14a-4bb1b844a6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52d01e8-e329-4ba2-a79d-4da6f0bd5b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76965a4e-f444-43ff-89be-5d0aab355c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac985f3d-15d6-46c1-8d95-52904cd731cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249098d1-3d9d-47e4-a6ee-d4da2f7755de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334ded35-a27f-4857-80eb-6bce1b19b1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca5be6f-2267-4765-af34-63be251ef5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "744c03f0-df1e-4e12-a105-4399ac620bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2b6b89-ab5e-4760-94a2-096012fe71ac",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a3c7f-a5f4-4a98-9572-6025b754cf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483447de-73ae-4415-b290-814a6c0623d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf661a60-622b-4315-ba7b-9c3bfa1f2e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f150d25-2e98-4fa2-ba4e-4bbe45f1641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903eaa23-09d2-4dcb-8060-bbfefc82393b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39c88c4-81b5-4bf1-9a2d-927c01caf830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b737c83d-e03b-4a1c-b7d3-a682149a69e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce680093-bdc3-4bf8-8a7a-5f468c0dba8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4fa456b-3b94-4002-bc5a-493a1282446d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39057fb3-d952-418f-a1be-7b77ecd34b14",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f81ff7-a031-48bb-ad80-62f188cbc0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71cf7df-e844-412b-a23d-0d1177b5ca74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "941d1e2e-961e-47af-85ab-0b2705ee3315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656ef679-e552-46e3-9d16-5cf49b7cbfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7150e68e-b812-4f2a-82f0-8db4fcf260a1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc07418d-4de8-4f61-bbdc-ff6090aa126b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d701d197-3706-4e8a-b67f-883a1562c860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939b7cc5-0dad-4315-a281-8f980675861d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caca4c2b-04e5-4966-9894-0a9088b94cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ed749d-d4c9-4f68-b13c-21dd282f126b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058005f9-bfb9-4681-ad5f-be9691a64039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9969ad08-3462-4124-be47-3441df43ec5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525ccc0c-5633-42fc-b73b-1d533f9312f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c36d6a2-cabf-4ff9-b371-256f005d3ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a234a0e-ecd5-4e20-baaf-5d8b0608386b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a529af-82e0-4255-885a-c97d934020f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61005713-f0c1-463d-a9b1-08c0a56abab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12da8db4-ae52-4d9f-8737-6497e9ef0b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76110d0e-2952-407a-a468-e00d64ddf0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e619f041-66f6-4f36-a846-2152f3f8333e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15dc319-c15c-40bc-b63b-1ba53ec31465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e018ad-469d-4c4f-8663-1ed35667eb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "557f3d0c-19f0-4c52-addf-f879e885da47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a55a78-df8e-4f7b-bee7-ddb1eb9c52f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6717babd-7f3e-4587-85bb-be201b7f2bc0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65facf34-6dc0-47f2-8834-b83c204e6365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a917d9e-913c-43bc-a69c-7d77d0613f12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc1183f-9064-4f7f-9a5d-f3f24620569c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e713d26a-1f28-465a-9977-c7d941b45df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c89245c-8fbd-43c2-b681-cd7da55e1dc4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb8892a-96b7-4949-b85f-bbb3e660cf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d72a1a2-be5e-4b54-9652-ded582327bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e916796-b642-43c6-b75b-c73379f39cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8f96ec-f175-4e37-b89a-bca4e0b2e37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1807d0cb-6b47-4b6b-a5dc-218fdd7fbc53",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5da10c0-f7f7-44c6-abcf-dcbde4b5a63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c00bff8c-ac74-4b08-b866-0bfe3fafe239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a9235a-207b-431c-9bac-2406e4cb0549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0faffa45-42ec-427e-9295-85a5b8ab890a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c83d4-ad58-49e5-aca3-ef62560df4ee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8360d307-5298-4a4f-8314-9d87de7849aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e09b562-c001-437b-aff5-e8c212490e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1330af3f-74c7-47ca-8955-4016ad367b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f810f75-44d3-4fe6-a129-6514f13826e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1251125-1eb1-4249-9f70-aca45d881d12",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6b68a8-dc78-4556-be42-a362b9c6a301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496ca6f9-45d9-498d-8864-b9a132c4e3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9830fa1d-96a0-4a0c-bfbb-44403b9fec9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a14361-a19b-4458-95d4-62bc06fa2507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c9564-ae09-4784-aeae-27d5adc37c2c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4077999-9647-410e-9537-60c76267df6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d5316a-c68a-4562-a2a8-2a32cdf1338d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8cf791-ce9f-47e9-a1f8-eed2282eda07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76336fc-8a98-466f-8fcf-ee99aa56aff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490a470c-3f27-4118-9123-34950d73feb4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4947f729-c151-4ba4-8e7d-070726e3fa41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a345a64e-0e2d-4f7a-83f8-5facdbbb6f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14875f19-cef5-409f-af2f-561e2872d1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd59696d-f5c6-4263-8559-9b8938d9269d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cefe21-3290-46e4-b364-114c0b4b7430",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a121cd82-0ac1-4e7a-9a53-ce5c58a5c260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f56550d-236c-4fb5-94a9-1c49f1edf849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ebaa7f-bfc1-4b52-8e75-6e36cdb72328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d0d4cb-c37e-4acb-b328-e4eb25e89fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a755e204-a395-4e26-86cf-6b525dd62a2c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366dbeeb-791f-40c8-951c-103a439753f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26841763-ea8c-4749-b476-cdc0a4e2069a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12f6f50-0806-4404-8935-0c1a9c56a734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7378709-ac73-4f3f-8470-0bb804e69800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ee64bb-a9e9-4eb8-bf90-63916fa5304d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e99864-41f1-4023-a238-051faeb0a15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f6f5de-3db5-4ca5-b417-43fcd474978a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b1519b-3d86-46bd-a0a9-8626db7f504d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4149662-f04c-481c-a1e6-abe294a3e26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94332770-f4ea-42aa-9d72-683fcf52f2df",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467c8f25-5ef4-4233-81d5-61268a5a0d5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5092dcca-8d5c-4eec-b029-8f9531e55afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbc4d1b-49ad-43c9-9103-bdcd8da15417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90933d2c-041e-4964-9c6b-9dafc556a6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b733f150-3e3a-48c0-ba29-beaed2ede200",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce826b71-753d-43be-9406-d9a9a46f3457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd420c2b-47c3-495d-b007-198aa0efb9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57d740a-0c54-4328-afcd-f6b9899ba958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f59eb5-f653-4d57-bcec-468e51582228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29f8de8-dd56-46f0-9b37-c31865cead6e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00485b31-c97e-4330-8337-a96a879c0bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8ad1f31-1a32-44f5-afd7-9df85df17680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbdd25c-31b3-47f4-a18d-a2063ba2ba68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30018b3-f844-41e6-98b3-a037a954531c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3850b33-e937-460f-9702-f596b7f96d5d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b81bd3b-088d-4312-b324-34a37cb7f325",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1bdb2a-e3e9-40b7-aa93-d31e274ae8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60384b76-2779-405e-8c1c-98c5782160d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232c5ead-6e78-459a-9d32-0dd6fcf2c4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe551e-5682-4b32-a4f7-f565424d15d2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c9fc71-122e-4dc3-bd34-b020fe3f589b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b0e558-ffbf-429d-a41a-cf64ba0866ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b583319d-5635-413f-9d0e-1e4232a817ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1650bd8e-bd1a-4efa-b0f7-8f925488d407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa75c5bf-6a40-4beb-8832-c0b5bea731f6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adb4fce-af72-467a-a153-3c84516900c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8c8dbcc-6664-4b1c-82f1-039831df8dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd67fc10-d606-49a2-9001-6f1df3494ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2156e3c2-ab36-46f0-b335-0dadb63aa8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c329ec4-5792-4bd4-a21e-72813238b080",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5059ea46-6db1-44ed-b59e-610343cd274a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d920473-a169-48ee-b070-39b3343b52a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0098837-68f6-4df1-942a-95d2910a7d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da910f1-4ea0-4125-8b5c-44235e35f0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3538462-5c10-4dfe-9041-7e14623781fa",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1003f170-1c6d-45a9-8eae-1a03adaa57dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b2dc426-9c2f-4fe8-b49f-821456d22456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "784121d1-9676-4940-adab-316d4dcbf87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391043a0-2c14-4479-9859-f7684cc3eadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d9ebc7-b00d-4405-91ed-5d67f5646350",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ef81d5-b879-4378-af6e-e1bd825343bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f04de22-cbfd-42c7-bd5e-fc288a56a260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b840a113-3ca3-4f77-b5ae-fd62e8d8527d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5675ef20-9654-4a9b-84fc-3689ca93c3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f150aa9d-9b1f-41f0-bf5a-2d56bd69a521",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b7eb89-6532-451b-9a18-7cf6e139e6a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d75e36-f257-43ac-a2fe-973dca2d5ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f5aee6-6e72-47d9-84cc-32549d1a9275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fde8a7-7322-4c2b-b304-8a5fb558e4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1646f4ba-1494-49f0-a4b2-07e1929d5183",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f965fe-689c-417b-8b6b-7945c46a34ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b265bd-dfb1-4cfe-b4cb-9c880e57f8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8322ef8a-7753-4069-9254-b544ba8466d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "981ba27b-ffcd-470d-a6e8-77505379b062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1fdef1-523d-4767-a7a6-6a5554fe84a0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5e9df1-e2b5-4685-9649-b31d8e445f7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "097db45a-9825-47c8-8f97-59807bab2465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a18bb2-10fb-41c8-bc0a-e661f4cc9e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cf8e0e-643f-4361-8c28-979e9464ad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8b1074-2aee-4315-9f9a-a34ddff8e9f3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b7b0a6-a128-4c58-8533-3695b06232d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57c1195a-963e-44d3-acce-4ba4807fbbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918a36f1-f894-4d2d-84b9-95012a9eb212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1014270f-d0c4-4683-94d9-10ea69400b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b2fe38-8e4f-4fbd-84f2-aee11b866bfa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93533155-48f8-421e-9ad7-82f1762715e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "541c01bc-d3ff-4e53-b761-f0af4c4e606a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abcaec7-1ac2-41d4-9d43-bbe7ebbf8212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea10625-b6e1-49b0-8c1b-7a85c10da7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b865270-ad00-4cf8-9f98-8c5dcdb6f4c6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0468f61b-9e7d-451e-bd9a-b38de061a2ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079f06d0-3a28-437e-a763-9316f3f5ba51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da1e127-26d3-4930-b1a0-eddaaf735dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38470324-db35-4efa-be3d-f7a0d8a4bdc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b865b9-4af2-4913-87b3-32c4cc795cfa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b50e73-e5de-41ef-92a4-2ca317263367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b8c9408-acea-4333-8175-4a546f1c2306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa818ac9-5422-42d0-8d29-2e3e6f100372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4ace53-4268-4302-b4ff-e872866571b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5287d0dd-995a-44ab-bf7f-465e099db02c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9ab0be-34ce-4ff0-b04a-fbad573c1b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b148107-72eb-4d49-8ef0-c4f376b1b302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf5a98-5339-4828-a537-dc9c7c44cff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143a962c-863a-4aaa-b3c3-19e121d5a394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b534d63b-898e-4992-8a62-279115321de0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec80a36c-322a-4333-8d00-d965f684034b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c4bb95-fe52-4f77-87cb-c4c9ee562161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4386185b-7243-41c1-b8c4-bd38cd65eb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976bb4fb-504c-4cbc-938a-d135945fe438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfdca72b-cb8d-4e56-a638-9ac3e2cea3a8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d425763-cde9-4c72-a41b-e5a5bb867127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf63f57-7f20-49de-acd5-f02d8dcb7cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36b763f-7532-4559-87c4-0f91f0c93840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af12e57d-b833-4c4d-9ed9-bfd68e14c695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1b6da6-8135-41dd-9d97-26b9b70c3436",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd81ebb-5dbb-45dc-bcf9-32a6722991f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db4c975-b1eb-469c-bf9d-330aee6c40c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a21b984-218a-4a3f-9600-a8561a51b798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fe8f501-0ab4-432d-84c6-d19d65fc62fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdc0f4d-574a-444e-a62f-3b91e2553f3e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d54d5b-8815-4263-ab61-9f158fc1c1d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46588935-c540-42f0-bebb-aa914dc1affa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4355cb07-7b0e-4b40-ab27-d6f29d9dd83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04acfbf-cb42-4d66-8882-517a6d239d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9ebcd4-3e29-43f1-9ec4-5493c04442b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6080e72e-fe08-4aa3-b7f7-b3e67a7699af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9460add6-4088-4595-8c86-9cf6971902b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2dd8d9-af01-445f-94da-68681f6389a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d403cf57-e858-4403-9d00-486b148578e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c514015-fb16-4425-8100-4d79b714d8e7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aff2d49-178a-4df4-bca0-6a1bce4ed304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84aafa1b-2d8e-4553-b0e8-0ebd222368c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f0fc13-f3ca-4147-9e35-a54de7646f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d7b327-f827-48e6-bbf6-879500dac593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05a2f67-1e00-4e2c-927c-77b81764a989",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07a1f58-5e4c-4df2-b24d-cc3fb97bc73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236b0e13-d89c-41f9-99e3-a4d75ec96da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f35cdfcd-c285-4f19-a01d-8587a4d785cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49709dd-9124-4c50-8fb0-7e03f55fb2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acf3b1a-dfb5-4399-8859-0ef5629c3952",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4d8dd9-c6c0-44d0-ad2f-e691892c51e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e4fdf65-8f02-4696-a055-530bdb570122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5677b60-2175-46ca-8d13-04605488f345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb99300-3a47-4c73-b03e-665192da161c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b292a38-7b6a-42c1-aae7-6c8d078968c2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a65a527-bf79-4938-ab04-1288583f6224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da5e748-c9d3-4844-ad0b-4806bbc719ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cebf6c6-d856-404f-9493-c531de028b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63068c64-174f-4d6c-81ed-feea75c7875c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbb2717-7df5-4e97-9c4b-0f22c8f17fa9",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b79cd7-7bb6-44c4-b4c8-6b72c2f92ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e99e7a-7036-45ba-9295-df7f73cd138d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14176a-9390-479a-a48c-8e3c588ebbb1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4b3c93-4918-4964-9662-a6c4e3a8fb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6134fed7-e50b-44dc-ae3a-cd5f4029f0d9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b13e551-4ad0-4835-938d-04da3cee6d18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "288eb113-2e70-4de4-91b1-0f216198e18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c36f6a-2f56-4597-9f64-272df3857c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e50df21-7655-40b1-967c-0327f597822b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71da0ba-ddd5-410e-aa1d-5c63ea59548a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbb6872-edcf-437f-954e-df7b82a790b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c11d774c-ea6c-49ab-9dda-c0eaa0160669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd290835-bfdb-49ec-9244-41a3dce7c6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a30dd518-cf88-49e8-985d-4ec8d51c31b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9592dad6-39dd-47b6-82aa-d25fd7eb606d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2634e1-8812-4fab-8411-fdb0e9a52909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db26c9a-9b2b-4293-845a-b85f458ff281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea26a10-b6e7-470d-85d5-7f65e67fb770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412d428f-42b8-40ab-8f6d-10632bdf1a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ffe1ac-9b04-4ed3-94dd-a2161de54b17",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a250e15-4cec-4b7f-8dca-151fe772b481",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2589e6fd-fd49-421c-8fe2-c5c105c276f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd718140-a772-428c-95b8-d4c553367916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3571bcc-85a5-40b0-aee1-41f4368c66f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb271cb-3b5f-4a14-9725-e8cd7aa99797",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01df7d6e-f656-4dab-9123-d5f6d17b1777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ed7283-c7d2-43ec-a479-a8dce716e170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf6f8fa-0925-485f-95f9-ea07f38fef69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54ed07f5-35e9-46b9-abca-bd0e79050687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c04698-3cd0-4d9b-9f80-1ade40b3ca49",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242008a8-4676-4cd1-9915-0d533cff2ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c74025-4382-4f96-be36-3a1f8785f1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367d4e73-4e17-448f-8c78-88c73a1eb173",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83e8b86-b515-47d8-91fd-5f0617fe997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25501ce8-cff2-4336-a942-60aa58b4cdca",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a0b06-faa9-4c20-a3f0-7430b52ece5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f3d80f-0d28-4b95-9377-e4b54a224697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c88a94-4867-430c-bed2-19f84e92c7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40bf045-650a-49ae-8604-8aa1c9e5b952"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "395cb9fb-c333-4042-a56b-50870dd3b262",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28d8f663-5f4c-4a72-a229-bb1fd9ebae82"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2c77413-f377-4af1-88fa-9eece2999255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bb8ae43-c9f9-4670-a353-bebb434f1898"
                    }
                  }
                ]
              },
              {
                "id": "eea05efc-4789-4afb-948a-6cddaaf2a0ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2400a740-fad5-45fa-b3ea-969c8483c1a6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f59b1c-eb5b-4d4f-954d-3994d3ce5360",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f89aba1f-6e04-4e97-b2a5-a3c5d802d112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5197f46f-dcea-455e-aea7-2328221af5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b4bf81a-7a2f-4703-8119-ab443836dee1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8b0faee-ce96-419e-9d1c-abb600fc300f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3af093ea-2f98-46be-85dc-7f0582fa7112"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccdde311-ec8c-4e80-b211-d6baa173830c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52e2dbbc-5f17-4405-b8c4-679532571a34"
                    }
                  }
                ]
              },
              {
                "id": "1cb66e6e-0798-4651-bd5b-51bfc7dd0d2d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "28cc316f-c63c-4a22-b0c3-95061d57a3d2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556068c2-1fba-471c-ba45-82da38880499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "36d04abb-ff27-4441-a494-741c581ee138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff02deff-ef56-42ff-97ea-9911b8895d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a096c6f-01f8-45b2-9dd1-e3a0ecf7dcae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2dc7683b-e17b-4214-9868-ef8e14ab834b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64a22960-3465-4195-b8d5-f135d74bb528",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59be8a1d-4d80-4743-bd00-89e0605d564f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "72fc0c47-9ee9-4f48-bc98-c6cd03082cf2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d1f4b6-7f7f-430e-b4fa-13b612408ffd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c90e1500-57ed-4e3f-910e-248b86591f6a"
                    }
                  }
                ]
              },
              {
                "id": "2169a829-5f07-4085-b93e-f4f45ceb7c8a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5ac1a4a-d376-4df9-b374-cc7283cce29d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9336ae94-518b-4324-84a2-e65013d83391"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3ae75e-897f-4b83-807c-68c42cbe4001",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb8f5a3-d0ab-40a8-9f02-053ce0716378"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8850675c-71df-4716-aff7-537adacc14af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "69c5c841-fe33-48d2-b57b-c0fd88d4e9f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "036805b1-00cd-40d1-9e26-da5cf343b52e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d877e59-2eae-474c-8f4b-174d9161d950"
            }
          }
        ]
      },
      {
        "id": "c7b2218c-7d89-4c0f-a6ee-a93861b286cd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2ad63ce0-9761-40c2-9213-20faef53d152",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef20e679-be07-412e-9460-d7294ceef6f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "488dfbe2-d9d8-4951-8eed-d0a3d0fa4f6c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b2a180-4f4e-4d86-bf06-8f8fce35b68b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5d3bcdb3-271c-47b2-88b3-847ffdbb1395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807b1c20-2139-43ae-bab3-09500aa05451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc7a594b-ff81-4ce5-bb32-e9b77de11be4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3935279c-4a90-4106-a04b-560f53c167ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de2b4c43-f5ba-4dcd-9c60-a0cd0e47e5ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1925d919-86e2-4282-8670-6d06c15ba93a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a274b986-27ae-41ec-b642-b396647a5f6d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d769998-d92d-43bd-8a4c-0bbaede5ce27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ad990823-39eb-47ff-ab73-82432c232b56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d7b9a52-05cd-4903-98e0-6f59b4c4f2c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7327f97f-d398-4fd4-a282-7c04f91c0ac7"
            }
          }
        ]
      },
      {
        "id": "83a3a451-9488-4dec-96a4-272d3fc93325",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e198e326-2757-4787-834d-b951e9403558",
            "name": "Negative Testing",
            "item": [
              {
                "id": "73fd26e1-3762-4f19-90e9-c40f3fda247a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a56591a-9356-4e61-9c64-22ae2c532410",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137aa353-e211-4e67-897e-965dd5c52506",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55ed1961-9db5-49dd-804d-603ed1e86ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147397c7-a525-4833-9329-73ffe219d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18d7bb8e-d4a5-4497-a832-5af08eb872e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f0eb537-74cf-428a-82a5-02a3f0bc926f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37d75b89-a22d-41a5-a4c1-bb2d472d9c60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90c2c28a-8c3c-4b07-b3d1-75b0c78cacdd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a153e995-bd19-43cb-8da1-38037b5822da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "becd0969-69c4-4dad-95e2-7a99d670d75f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab977450-4ef0-43d1-adf1-9092aaed1b22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86033ed0-df60-485e-ac50-f73c06f62638",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29638157-c37a-4d8b-981a-bf57ca94c263"
            }
          }
        ]
      },
      {
        "id": "67cc8489-999d-4759-9411-fc58b82fb430",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ab4a2218-822f-421e-a9a5-2d3541ba7bc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b83d8af1-99f2-41f9-b110-fda7e9e6712c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "789a5859-48ca-4e23-b7cd-4c2b0a618272",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b84977-3a13-447b-ac00-5d87d445e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "208c3a7e-e516-4ce1-8f59-b29f42514cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5796818a-0aef-42c9-8db9-79ad95515d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45d84323-f7a5-417a-b081-7d085e52f10f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b9ddf73-d4a2-40cc-a02f-86bd38d3afe3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22d0342e-10fc-4738-b2d1-986b7bca7cbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f18421b-91c3-46db-ae15-ad742c6990f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eea93245-34f4-4db5-b3e9-303374821670"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "805d477e-5a5f-43f4-9af4-9fca31bd26b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fdbe7db2-7e67-4dfc-8c04-83c8cd883cb7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f04de88f-230d-49d8-bc6b-26dfaf293d38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6579b58a-1dff-4999-9fa8-e914e89f0275"
            }
          }
        ]
      },
      {
        "id": "9c82e8b4-814b-4321-8c94-727c004f61dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2e768c1-568a-48fe-9ce9-502b7013f8df",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb8b9246-6803-484f-bf90-f9bcbeb793ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fbca46b2-63df-4358-a70e-82f438dca2e7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db384eb2-3932-4528-95f7-ed7e86435b22",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d568347-fe4b-4eb2-a146-7fbcadfd54cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.67857142857143,
      "responseMin": 10,
      "responseMax": 12203,
      "responseSd": 790.6000658638927,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723337061065,
      "completed": 1723337097857
    },
    "executions": [
      {
        "id": "5e4e0fac-0725-4f18-843e-4ed298211761",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b50997eb-0280-4c3d-aa21-32a875e01224",
          "httpRequestId": "c798009a-49c8-4045-a9a8-e6acafca0e42"
        },
        "item": {
          "id": "5e4e0fac-0725-4f18-843e-4ed298211761",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7342ad32-df65-450c-9b74-59a69d71cfc7",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "5e2b45f7-b0a5-495d-a0bb-e024f629cc7c",
        "cursor": {
          "ref": "b440db38-bfc9-474a-84ff-b73a88bcf614",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c4df3a8c-2342-4b56-ac5d-3e53de42daa0"
        },
        "item": {
          "id": "5e2b45f7-b0a5-495d-a0bb-e024f629cc7c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "95bf0894-d941-4e40-ac97-aaed964085a2",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "a44c916c-e2b9-4c7e-aec1-19a50b8043e2",
        "cursor": {
          "ref": "f93e103f-d9af-460a-8e58-4d1ca4744a06",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2f6ead70-14ed-43b7-8801-1ada87f03f33"
        },
        "item": {
          "id": "a44c916c-e2b9-4c7e-aec1-19a50b8043e2",
          "name": "did_json"
        },
        "response": {
          "id": "fb240fbe-a85f-46f1-b5d5-bc6e1ca92815",
          "status": "OK",
          "code": 200,
          "responseTime": 272,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61d69bf-f610-4c64-b41c-20bb11ec0e34",
        "cursor": {
          "ref": "f8cd3442-e82d-40b2-9ca8-178c012d2674",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d19eade-dffc-469a-b13b-d28b41441a37"
        },
        "item": {
          "id": "f61d69bf-f610-4c64-b41c-20bb11ec0e34",
          "name": "did:invalid"
        },
        "response": {
          "id": "958ff40e-6f46-4618-9c90-47f0f2de5fb6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 202,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61d69bf-f610-4c64-b41c-20bb11ec0e34",
        "cursor": {
          "ref": "f8cd3442-e82d-40b2-9ca8-178c012d2674",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d19eade-dffc-469a-b13b-d28b41441a37"
        },
        "item": {
          "id": "f61d69bf-f610-4c64-b41c-20bb11ec0e34",
          "name": "did:invalid"
        },
        "response": {
          "id": "958ff40e-6f46-4618-9c90-47f0f2de5fb6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 202,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b8285e-8639-4170-899c-8978a967a8b6",
        "cursor": {
          "ref": "214ef351-1099-436a-b053-69d41ffab1f9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a394aea1-194c-49d2-857c-5ec167b4e2c1"
        },
        "item": {
          "id": "11b8285e-8639-4170-899c-8978a967a8b6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "10e25f4b-256d-4b82-a662-d4c54c0ba938",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d007c53b-4f4c-409b-9fbd-7380aac78218",
        "cursor": {
          "ref": "8b0c50df-9b1e-45c8-bd57-a2e6f9506b6b",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fb2b758d-3938-471c-8ed5-a426c1256c86"
        },
        "item": {
          "id": "d007c53b-4f4c-409b-9fbd-7380aac78218",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb5ae893-a072-4ca1-b374-875cbe958fb8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbd81c3-bf2d-4467-8cf5-adc8c5b4bccb",
        "cursor": {
          "ref": "ec6f05b8-d564-4511-8ff2-cf50236884a9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9f34fa77-cae4-4ebc-88ad-d052e3d5cbd3"
        },
        "item": {
          "id": "9fbd81c3-bf2d-4467-8cf5-adc8c5b4bccb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7a83beb4-036d-4a9c-bf7f-4edd85d7a5ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa3e0af-7c32-4901-9bd0-a292e72ef67a",
        "cursor": {
          "ref": "e8605a65-2046-41db-a4d9-ae94b4406d76",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "477ac03a-22e3-45b2-8ca5-3bd3446bc17b"
        },
        "item": {
          "id": "caa3e0af-7c32-4901-9bd0-a292e72ef67a",
          "name": "identifiers"
        },
        "response": {
          "id": "b5c4001b-efd5-485d-88ad-cf20cf84e2b7",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517bf0a3-2b32-4c7b-8283-f1a7531fd298",
        "cursor": {
          "ref": "644b7d18-3cf6-485a-b16a-2b3d59492c8a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1455a6a1-7533-4972-b5c7-b72e1eea567f"
        },
        "item": {
          "id": "517bf0a3-2b32-4c7b-8283-f1a7531fd298",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "968f17cc-7dc0-4d45-8c9b-b63f460e309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2238316d-5008-462b-8011-65850f52e415",
        "cursor": {
          "ref": "ee8b7d91-a6dd-4093-aaa8-de0f2c4365ab",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3a2fbc1d-a184-45fa-b6fb-a9b48e8fc82b"
        },
        "item": {
          "id": "2238316d-5008-462b-8011-65850f52e415",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "726bc363-e916-45a8-82d4-eda329621265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a6400-1aba-4c6a-969e-389009e91b6f",
        "cursor": {
          "ref": "8800ed27-8b97-48be-9bde-0e8182529c89",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "23e1851b-c6f5-4abb-8d46-6bcfef746037"
        },
        "item": {
          "id": "d00a6400-1aba-4c6a-969e-389009e91b6f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f9885d7-5994-4378-b42d-8ab87b743149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726322db-32d2-4974-9e53-c3a1ed91454e",
        "cursor": {
          "ref": "f229d150-679e-4230-84af-1f83cacca7cd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "29a14025-c3ab-435b-9a2e-137d814315e2"
        },
        "item": {
          "id": "726322db-32d2-4974-9e53-c3a1ed91454e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3b332d46-4d61-4760-813e-3448e073b3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fabb61-7baf-4dcd-a2fd-0fda14c775b5",
        "cursor": {
          "ref": "06105918-a78b-4432-8053-83f3e14de602",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e68bb453-a650-4ae4-be15-bacf40441748"
        },
        "item": {
          "id": "10fabb61-7baf-4dcd-a2fd-0fda14c775b5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4b543f4e-f7ae-41d8-a7ad-b008d748a79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1d4d48-cbf3-4900-9097-e4728b4de964",
        "cursor": {
          "ref": "ae3584be-3642-4b7d-a919-9564028ef65f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "01bde038-eefa-4119-b39f-c20d9d49f261"
        },
        "item": {
          "id": "be1d4d48-cbf3-4900-9097-e4728b4de964",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e75c8329-c709-4ab4-a1bd-12e20e9da5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6f272d-b617-4511-9c06-c1f1497ce635",
        "cursor": {
          "ref": "4479b21c-9f5a-4cfc-b3c4-67bbe0e8650a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4bf04c82-0e49-4538-8443-112a46df8115"
        },
        "item": {
          "id": "4a6f272d-b617-4511-9c06-c1f1497ce635",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "39dc01a0-800e-4afd-9534-90301e4e5d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cec8f5-e12e-4d98-9d66-1c35b6c7e6e6",
        "cursor": {
          "ref": "45ff14de-9b72-4dd8-947b-5631938c04ab",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "46f78ab9-6933-423f-8a16-293eb3bfc6e4"
        },
        "item": {
          "id": "c0cec8f5-e12e-4d98-9d66-1c35b6c7e6e6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "23c35388-5dd1-490c-9f0f-a209813f30c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a586dd76-38b4-462d-af1d-ff3c845c1ca1",
        "cursor": {
          "ref": "5d925be2-2a67-4c09-a5c7-5c050b343ac0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4f172d69-4fa9-48d9-ac61-61631be3ff94"
        },
        "item": {
          "id": "a586dd76-38b4-462d-af1d-ff3c845c1ca1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e1b22e38-1f4f-4e5b-b141-a20434efc6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b285cc-8561-47c6-aeaf-f5d2fe53acc5",
        "cursor": {
          "ref": "e0419ffa-c933-4b12-a910-bba92ef96507",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0feec05b-49a6-4d49-ad92-d2d3e4e4d537"
        },
        "item": {
          "id": "81b285cc-8561-47c6-aeaf-f5d2fe53acc5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3ca0e703-1f54-4e49-9a24-b976656e3f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4b57d6-e93a-4466-98d5-688512ef9b8f",
        "cursor": {
          "ref": "a44f05be-22ec-47c9-9910-cea1e6ac0659",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4e9094d6-6bbf-4f57-8b4c-4204e8fbb298"
        },
        "item": {
          "id": "2e4b57d6-e93a-4466-98d5-688512ef9b8f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e2ba4197-0c91-4d69-a467-9e5b49d69daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043c2391-9651-4889-9768-afbd68aafe0f",
        "cursor": {
          "ref": "bedecd2a-9e4c-427b-906c-7eaed094a299",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "0536eeba-c8bd-4fe2-a2fd-39171ee4398c"
        },
        "item": {
          "id": "043c2391-9651-4889-9768-afbd68aafe0f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a12820b6-81ed-4f2c-b02a-f1a347879b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac87847e-6528-41e2-b166-7dca2faeb475",
        "cursor": {
          "ref": "2ddbcb7e-a7b1-4d1a-9c3b-e1eb7e014328",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d96a9157-f067-40fa-8e31-bfa10431dd11"
        },
        "item": {
          "id": "ac87847e-6528-41e2-b166-7dca2faeb475",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "656e3866-c426-46e2-bdc8-2ea05166f3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55160dd-f8e1-4697-b405-85a72c420339",
        "cursor": {
          "ref": "542a1b90-ded4-44fb-90f9-445f14b0d3d1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a985fa52-a69d-483f-8ec1-debd27ba347c"
        },
        "item": {
          "id": "d55160dd-f8e1-4697-b405-85a72c420339",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "504da6bd-35fb-45a7-98fc-58c1b34345b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a200ba7-1acd-4ee3-b35e-b9c29927c000",
        "cursor": {
          "ref": "150afa0e-5b6a-4c8b-ba54-4dc71868f9ca",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e39e8ee3-a971-4a68-899d-e4aa5c1a134c"
        },
        "item": {
          "id": "3a200ba7-1acd-4ee3-b35e-b9c29927c000",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c6129a02-d3ae-46a2-a244-ad80fbbb5d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda7729-8f0c-483f-ab49-66e988e36a78",
        "cursor": {
          "ref": "1744d6a5-6132-4ee0-85a9-9e4d4cef424c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "833f3193-b376-4dae-bc6b-8af6bba4bc19"
        },
        "item": {
          "id": "9bda7729-8f0c-483f-ab49-66e988e36a78",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9505628c-18d0-4a72-bbff-0e8841634b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d32767-599d-4324-a74f-4c04fe01c75a",
        "cursor": {
          "ref": "f02a68a1-9d23-4978-bcbf-e7466bec5417",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "72d95422-df76-4d27-a2b1-639f4d4d0db1"
        },
        "item": {
          "id": "45d32767-599d-4324-a74f-4c04fe01c75a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fa410e20-3a4f-4153-a923-70be93ada742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557e0dcf-732f-4ef5-a9f5-9e1e4b25e150",
        "cursor": {
          "ref": "aca7dae4-a2d6-4f80-915d-838dddb6c13e",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2b03ec6d-ba59-44bb-bbae-7c66a429b14b"
        },
        "item": {
          "id": "557e0dcf-732f-4ef5-a9f5-9e1e4b25e150",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "affde0aa-16fd-46f3-ae7a-c72d9fa6385d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6727bf75-e154-42c2-b5b8-6de3fe15d35e",
        "cursor": {
          "ref": "0eb5ef46-e839-4586-8a1c-4b01b5520fd1",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d5028f9b-cdb7-4b7b-b193-9df4b8574acf"
        },
        "item": {
          "id": "6727bf75-e154-42c2-b5b8-6de3fe15d35e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3861a93-aac6-4123-87d9-e853fa10af73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e57d419-37d9-4e21-8152-c7ee8379339c",
        "cursor": {
          "ref": "6ecc329c-a0f0-4658-bdfe-71ab7802b6c1",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6c44463e-0d12-4ca9-ba4b-79250abe98c5"
        },
        "item": {
          "id": "0e57d419-37d9-4e21-8152-c7ee8379339c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3a8a5c19-f70f-473d-8817-c597e3897d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6edb022-04c8-46e4-aff2-522fad32e48a",
        "cursor": {
          "ref": "19b7fe67-8848-4d90-a575-aa1b75a188a2",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "af939c05-ea1b-4b23-9bda-323f31cbb5d3"
        },
        "item": {
          "id": "f6edb022-04c8-46e4-aff2-522fad32e48a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e5342b55-719a-4254-8320-0057da25e2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7fa4ad-8958-4d0c-8dfc-12f4562a2077",
        "cursor": {
          "ref": "477fc8fb-e8bc-4e02-befa-310a00176446",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "07ebbf9b-3158-40d3-b483-7d43ca8eb1e3"
        },
        "item": {
          "id": "2c7fa4ad-8958-4d0c-8dfc-12f4562a2077",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0f095d74-cf1e-4440-aee2-a9ce02075c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c6e751-104e-4d93-9e78-3b6c711d9721",
        "cursor": {
          "ref": "c784a3ed-939b-47f0-aa8e-f09fc40de644",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7ffd5855-dcdb-4d65-b487-fb097a69f9cc"
        },
        "item": {
          "id": "c4c6e751-104e-4d93-9e78-3b6c711d9721",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c78329a1-455f-402b-8d2b-37e14670a3ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d767ced5-f547-47db-9c3b-d3f57a8b1f38",
        "cursor": {
          "ref": "2595111f-7936-4fbf-a530-0e4ac690e917",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8cf8044f-b440-47df-a3db-7b8713b9d198"
        },
        "item": {
          "id": "d767ced5-f547-47db-9c3b-d3f57a8b1f38",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "37d64987-69da-4ff1-9f68-615441af97ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3771f7-eb1b-484c-afef-b541d3f692e0",
        "cursor": {
          "ref": "8f27dc43-47e1-47a1-9f62-c718570f84cc",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b542bdaf-f1e5-47f0-9826-ed4200c0315d"
        },
        "item": {
          "id": "1c3771f7-eb1b-484c-afef-b541d3f692e0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "386c4b83-23ee-4490-b2f4-9ed780df01ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46197bd-320a-4696-91dc-a69149738a41",
        "cursor": {
          "ref": "8ddde64b-675d-4e1f-a840-f507a5ba17ba",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ec51bc51-82e2-452f-a295-17d29c696d0e"
        },
        "item": {
          "id": "a46197bd-320a-4696-91dc-a69149738a41",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "851f9fc1-d78c-4610-a8d6-7c16090e9897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444f5f22-93a8-466f-892c-d30d1893b098",
        "cursor": {
          "ref": "7bc53e1e-9240-4695-9933-daf88b868d32",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6172ce82-d381-46ab-b56e-49c58be525b5"
        },
        "item": {
          "id": "444f5f22-93a8-466f-892c-d30d1893b098",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1ba3b30-f979-436f-9fde-669baca661fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c3141d-ee2d-4c3e-88ae-b954ddb86ab2",
        "cursor": {
          "ref": "725a5c2a-1efe-4a46-bb01-f005e4327beb",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "accf822e-9abe-4df3-af6d-184f54d40363"
        },
        "item": {
          "id": "b3c3141d-ee2d-4c3e-88ae-b954ddb86ab2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "affe1b44-2f8b-4684-a0de-f2edf080a5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39c1356-acbb-4d9d-8bdf-27ccadf395b4",
        "cursor": {
          "ref": "6799d1fe-c648-4009-8927-fce4fc5a53e8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8407346b-c879-4677-a77e-b156c68b1044"
        },
        "item": {
          "id": "f39c1356-acbb-4d9d-8bdf-27ccadf395b4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "87e30fee-feab-48a3-b76a-2d422fe20b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127bb204-b90b-4322-b0b5-7eb062d30cbf",
        "cursor": {
          "ref": "9f1c3503-0177-4706-b2f7-d5f0922a8b8a",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ea93826e-6c39-47da-962d-fed743b58c4f"
        },
        "item": {
          "id": "127bb204-b90b-4322-b0b5-7eb062d30cbf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ae336158-cd45-4d01-9378-67ac27f9e1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec5ca70-9e32-4b6b-a71a-a275b3f78e8a",
        "cursor": {
          "ref": "5f34bb08-b966-4df0-bcad-44ed3ca7b5ad",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1ed6f45f-9ff1-47f8-abc7-88d9a3069741"
        },
        "item": {
          "id": "fec5ca70-9e32-4b6b-a71a-a275b3f78e8a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "002d948c-f4bd-4bb5-8479-0b42567e240b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb67b81-187d-41ab-9692-da14789322eb",
        "cursor": {
          "ref": "b796f0e1-9885-4b44-9b24-dc9da3ae7041",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e09ad73e-a955-46e7-956e-e5db4e54cfdc"
        },
        "item": {
          "id": "7eb67b81-187d-41ab-9692-da14789322eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "69d390f5-517b-4c16-b96e-8fd10ccbdd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3b120f-aabf-423b-a8f9-defe6114ec14",
        "cursor": {
          "ref": "0a1d3f6d-6229-4e7a-b79e-d2987d8ae14d",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b0655b70-2882-487a-ba5b-6e54e8a47de9"
        },
        "item": {
          "id": "2b3b120f-aabf-423b-a8f9-defe6114ec14",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0e4270b2-36eb-472b-811c-02bd06725628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f27f03-b2b1-477f-9e94-4e985b0b1f60",
        "cursor": {
          "ref": "faf44a58-2550-40f3-89eb-6616d938885a",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5f7275ef-bd3c-46bb-a63d-95f527526979"
        },
        "item": {
          "id": "24f27f03-b2b1-477f-9e94-4e985b0b1f60",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ce8bd789-ac0d-46d5-9a1d-b3c4af89d8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad8417d-f854-40ce-9140-77933503d87b",
        "cursor": {
          "ref": "873b3301-87f2-4eff-8b1d-9e004c6e953b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c7ff268e-7118-4d54-af65-d935da4864fd"
        },
        "item": {
          "id": "cad8417d-f854-40ce-9140-77933503d87b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2f4ef09e-ec0b-482a-9130-5133fc128037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18af1e1-4792-42da-8a37-55720d6a60f0",
        "cursor": {
          "ref": "630692c0-46cb-436b-89ec-81f12771bd3f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c7b353a7-3c05-4295-89d4-51c4cc4d082a"
        },
        "item": {
          "id": "f18af1e1-4792-42da-8a37-55720d6a60f0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fa685880-1148-45aa-b880-ad9752079744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd2881e-f51c-434a-a292-87962daf4daa",
        "cursor": {
          "ref": "4e1581c7-f469-4fdb-9b6b-5725f37cf5d0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b15b7ba8-06f2-404f-9464-be006858e33a"
        },
        "item": {
          "id": "0bd2881e-f51c-434a-a292-87962daf4daa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "38d7f932-65dd-44a1-90d9-d93adc2a4d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebc8fae-b306-45c5-a51c-e4f28c171e2f",
        "cursor": {
          "ref": "c3d70021-2e34-4182-bc22-1c0aa594fc2a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e57fd911-cc8d-418f-aec6-e8abf7127eb0"
        },
        "item": {
          "id": "2ebc8fae-b306-45c5-a51c-e4f28c171e2f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5cf5ab53-f68e-416c-9145-9ad5c487ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a67b72-3e50-4d33-8789-5f6521e45bc9",
        "cursor": {
          "ref": "53860211-e2d4-42a1-84f5-d4d46fe1bb9d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ba8a55d2-bbfc-4af1-9125-1c70787a08ab"
        },
        "item": {
          "id": "51a67b72-3e50-4d33-8789-5f6521e45bc9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d99c452b-6700-4cd7-973d-5c61603c6414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299e6a5f-6797-4499-b48d-3c172bc6d712",
        "cursor": {
          "ref": "19c1caa1-5e8b-4822-8d84-b7859d6d8938",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9ad872e5-9466-4b7a-a38a-2dff9059e0e8"
        },
        "item": {
          "id": "299e6a5f-6797-4499-b48d-3c172bc6d712",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "db58ea61-514c-4bc3-a378-6332d3671cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9c934d-12bd-4234-82f3-0901d1143a4f",
        "cursor": {
          "ref": "32c33141-3cbe-4d6a-8529-a86652f4723f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "33f1ade0-c158-43e6-813e-a05bf5e3ce95"
        },
        "item": {
          "id": "fe9c934d-12bd-4234-82f3-0901d1143a4f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ffd17da4-9fac-4dbe-8afc-dbb7410e294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8cbf4a-3280-48cd-8df1-b34e174cdb10",
        "cursor": {
          "ref": "ae3738a7-5559-4a57-a2a3-14ebf0e23388",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2312ba12-03f7-4e15-a948-146ce250c535"
        },
        "item": {
          "id": "7a8cbf4a-3280-48cd-8df1-b34e174cdb10",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1bd91975-b464-419a-8bb7-8688795f8e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c229887a-d0d9-4b94-81d3-67aa395fc706",
        "cursor": {
          "ref": "b68c58d1-af5c-4c1d-8f59-40e0c32afc1f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "214273fb-2bfe-497e-9dc9-9f7d0be73edd"
        },
        "item": {
          "id": "c229887a-d0d9-4b94-81d3-67aa395fc706",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fbe99dd5-7465-4d0b-84d0-57b2d808777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e5b81a-fd52-438e-aaa2-be3f63ecd25c",
        "cursor": {
          "ref": "2cb0ffc8-df0a-4061-9497-0616d43e6470",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b702ad3f-2f95-4e04-b8e3-03fd21d9807f"
        },
        "item": {
          "id": "12e5b81a-fd52-438e-aaa2-be3f63ecd25c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "49a201cf-c8f8-4e0a-b6a8-83b4d8073af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75716cb-46e2-4529-9370-e0b825cdaec9",
        "cursor": {
          "ref": "1623a60a-e6d2-4bbc-9803-9409aaadf05b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6ee732a7-cb13-4bcb-85be-112c0afacb4d"
        },
        "item": {
          "id": "e75716cb-46e2-4529-9370-e0b825cdaec9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "56888791-6bfa-4df0-9378-a3bb7a849dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1277fc68-a187-4f06-ac80-80acf50abc45",
        "cursor": {
          "ref": "2d287aa1-c691-412e-b77b-0fcd8af72906",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9be49c97-d4a6-4da4-a046-4d52f89fecb7"
        },
        "item": {
          "id": "1277fc68-a187-4f06-ac80-80acf50abc45",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "126221af-9c34-49fc-9209-b4bccfd9bd9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a866ff-9e15-4966-a985-2ecd81051e3e",
        "cursor": {
          "ref": "7704a601-5479-4fc5-9735-e5f70f8214eb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a4d01c16-ab4b-42fb-8861-ce0f6e691b3c"
        },
        "item": {
          "id": "f5a866ff-9e15-4966-a985-2ecd81051e3e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "aab17f61-d4ce-41e9-a4d8-fd2248c29a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d76877d-2f9d-4c27-a38a-939d8948df3c",
        "cursor": {
          "ref": "13b8cf59-56b8-4641-998b-fe6ba0616225",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "19a11604-e8f4-4c06-ab62-2d1421e9d2df"
        },
        "item": {
          "id": "1d76877d-2f9d-4c27-a38a-939d8948df3c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b0404ce0-11dd-4c07-b16b-f2e97599f8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c68714-56c5-4fa7-bb3a-b0def4dd1242",
        "cursor": {
          "ref": "70b8e35b-5b9f-41ee-9191-d8464a60ebb1",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "94a027ce-2204-40cf-a75a-05d939113324"
        },
        "item": {
          "id": "47c68714-56c5-4fa7-bb3a-b0def4dd1242",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5fef0d26-ad8b-4b21-95bc-8280d2a76e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fa18c8-d062-4bd9-9487-6cc7437d29c3",
        "cursor": {
          "ref": "89c6f9c6-8c48-478e-87cf-b000fd1f9e9c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e7e634b1-59bd-40ef-a64f-8968346d4441"
        },
        "item": {
          "id": "f6fa18c8-d062-4bd9-9487-6cc7437d29c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bc4e8bfd-667e-4421-bf5b-bb1f66784c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cc9046-1d45-43b6-a4ff-4b235e22807d",
        "cursor": {
          "ref": "a6763d11-9388-40da-8ffc-6f99242263b4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f07cdea8-18c1-4f2d-b86d-81c92cb27e43"
        },
        "item": {
          "id": "01cc9046-1d45-43b6-a4ff-4b235e22807d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0d7b87d3-a8ef-4ff6-92e7-1232b47d6993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5584cb4d-d08f-4bcc-a1d2-80fe671812e6",
        "cursor": {
          "ref": "e0213e67-87a0-4ce2-a4e2-8e5c8ae12852",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4f13da7b-d07f-41ae-872c-d0e00256d634"
        },
        "item": {
          "id": "5584cb4d-d08f-4bcc-a1d2-80fe671812e6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "70b3200e-183a-45de-972f-e08d9af09c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404a5cf7-b840-447d-bf8b-04c80637bd2c",
        "cursor": {
          "ref": "5216c4f6-215b-495e-b7a3-b50003d57bc9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8882dc8f-dc6e-4df7-ab5f-455db4c195d0"
        },
        "item": {
          "id": "404a5cf7-b840-447d-bf8b-04c80637bd2c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b56e86c3-7b7b-46a6-b47a-d4225e58cace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9420a0d5-a167-430e-8477-4d0458c53a2c",
        "cursor": {
          "ref": "b9d0af3c-06db-4d2b-b476-71d630ba6d2c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0778aaef-8fec-493e-8e61-78bf200ded8f"
        },
        "item": {
          "id": "9420a0d5-a167-430e-8477-4d0458c53a2c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "acaa38ca-ab72-4929-b6ca-de9374404f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020423e2-22b5-43b8-bfbd-028db0c1028d",
        "cursor": {
          "ref": "045202e4-5fbb-4326-83c7-29979589679c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3cc3f5d8-4b55-40b5-ac2e-06b96b82147d"
        },
        "item": {
          "id": "020423e2-22b5-43b8-bfbd-028db0c1028d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7bb2607e-cf24-48d8-a366-9beb925327d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534b7bad-6169-4de1-aede-0a097026edfe",
        "cursor": {
          "ref": "9a2bdfdf-12d0-4af2-9b37-c9be74c9dc18",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fcbb1500-cbe3-43f3-bd40-a7c2d33ec8d3"
        },
        "item": {
          "id": "534b7bad-6169-4de1-aede-0a097026edfe",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8ee01c56-977d-41dc-887b-fce567eec4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b052caee-9f21-4f21-bf7c-b837b7d31b39",
        "cursor": {
          "ref": "4907f3b7-c2e0-448e-81ac-edfdd386a5f9",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0cbb6559-fde4-4a72-8f66-680a9baf7756"
        },
        "item": {
          "id": "b052caee-9f21-4f21-bf7c-b837b7d31b39",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4b62a961-6500-40ed-9dc9-75b814a6ac7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37ec50e-c00f-4311-801f-3d42f6e4d270",
        "cursor": {
          "ref": "872e4b39-e608-4ad1-a415-801fe30ee50a",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1c24157-347e-41ae-8a72-02ef07de64e6"
        },
        "item": {
          "id": "c37ec50e-c00f-4311-801f-3d42f6e4d270",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "833e010d-2f7b-401e-b285-95e6d20885a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ddb0e6-bfed-4b81-ae65-ad16079dd9fb",
        "cursor": {
          "ref": "83897483-495c-4b1c-9282-ee54e33bff76",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "58aa511a-2372-4c01-96c6-3e4d7fcebbfb"
        },
        "item": {
          "id": "29ddb0e6-bfed-4b81-ae65-ad16079dd9fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "df52d2fc-535b-4ead-8af6-0566de58c28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04eecebe-79ef-4b3b-bcf8-9b7c9939cf13",
        "cursor": {
          "ref": "fd075620-d77a-4bc5-8a9d-c7290e161756",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4e8c4239-2299-4a6b-a4e2-331231347aa5"
        },
        "item": {
          "id": "04eecebe-79ef-4b3b-bcf8-9b7c9939cf13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ca8833f9-5de3-4866-8c54-562b11982128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e862359a-1aa9-4f2e-9953-e42e53546326",
        "cursor": {
          "ref": "7369e107-8045-44c5-877d-27833a218bd9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "56cd1498-c08e-4c64-9f13-f156c4394bf6"
        },
        "item": {
          "id": "e862359a-1aa9-4f2e-9953-e42e53546326",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "65747e93-c609-4fa5-93ce-1d43d7834c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd3465c-c52a-4379-9d83-083cab8fb3e2",
        "cursor": {
          "ref": "155ac1b0-703e-4671-83a0-c64ee4078e6d",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6ea2d864-130a-4f60-bf0c-48bde584485b"
        },
        "item": {
          "id": "afd3465c-c52a-4379-9d83-083cab8fb3e2",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d5b3ee19-2d0d-487c-a3d3-9ec5c4139f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b113323-b097-49d2-b833-2a79749f5511",
        "cursor": {
          "ref": "43d4a522-7d3d-4d83-93db-9bb0049ad7c7",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cc0ee5a1-8262-42a0-9dcb-2c654b5f5e8e"
        },
        "item": {
          "id": "2b113323-b097-49d2-b833-2a79749f5511",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "34ed86e8-cbbc-470e-9dd9-05def6dcbe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d0d1a5-cc56-4d76-b053-24c2d6ddb0d0",
        "cursor": {
          "ref": "5989051a-688d-4e22-80fb-fd9d1d077765",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0d10b334-9b9c-4861-87f8-ee2103b5b273"
        },
        "item": {
          "id": "e0d0d1a5-cc56-4d76-b053-24c2d6ddb0d0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "279e6e4a-0c1f-4cd2-95e2-3804b1ab26e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8987bc-6181-4906-a81d-e7dc1b3b815b",
        "cursor": {
          "ref": "b885af1c-dfb2-4043-920e-a1940265798b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "414b309c-1433-49fd-8725-4661171c7194"
        },
        "item": {
          "id": "fa8987bc-6181-4906-a81d-e7dc1b3b815b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4bcfafcc-9179-41eb-a697-f730267072b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30959490-36c3-4b83-9528-131a72e69099",
        "cursor": {
          "ref": "00e9deba-c03e-42da-be6c-75ad84082f64",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "153b8203-9695-45a2-a8f9-88efc2e9c0ce"
        },
        "item": {
          "id": "30959490-36c3-4b83-9528-131a72e69099",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c000aee3-a883-4a91-8c17-c8b3d3248be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a605128-87bc-4af8-9017-e5493945747f",
        "cursor": {
          "ref": "ae367773-dae9-4b91-baca-2cf98b7a5855",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2e7e2573-d72c-447f-97ca-a6a1af2087da"
        },
        "item": {
          "id": "6a605128-87bc-4af8-9017-e5493945747f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fcdedc7c-f839-4813-bf0e-a939ef6cfc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8382a80-f564-4df5-b44b-f6847e0ca99a",
        "cursor": {
          "ref": "179ef5ce-1ea6-4cc2-80f5-feeefb527b65",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "55132a98-785f-4ab5-86f1-0aca089a595f"
        },
        "item": {
          "id": "d8382a80-f564-4df5-b44b-f6847e0ca99a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "77320952-c2c2-4407-bf5d-9e343c808f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56682e8-719c-4470-aff7-d8f9bdea335b",
        "cursor": {
          "ref": "e246aad1-6b37-4135-bc6b-89a439f9c88b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7fbfcad6-5e33-4430-98c9-1952d387e8bb"
        },
        "item": {
          "id": "f56682e8-719c-4470-aff7-d8f9bdea335b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a6691e8-d666-4756-b323-7ec8eca45f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb8e98c-002f-42c3-88c2-8098c25a2c96",
        "cursor": {
          "ref": "f9d69066-755c-485e-91b5-9f0ac53e50c3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a53de222-9e70-4e4a-9404-67e2058fa784"
        },
        "item": {
          "id": "1bb8e98c-002f-42c3-88c2-8098c25a2c96",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4bb2b30c-f735-4161-b1d6-7a852783f851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df903f0-21b4-44c7-a7cd-3db73d672070",
        "cursor": {
          "ref": "fce071a5-ca59-496c-aac3-e068e4006420",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5e2be1d9-2a1f-48b7-b784-d9625b62dd3d"
        },
        "item": {
          "id": "9df903f0-21b4-44c7-a7cd-3db73d672070",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f3d07650-ae8c-42ec-b5f3-fd712a6c3c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52096ab5-9b49-4cec-b002-54421758fd30",
        "cursor": {
          "ref": "91b6a822-0f8d-430e-9b19-10364960d657",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0b917672-5687-444e-badc-356557775924"
        },
        "item": {
          "id": "52096ab5-9b49-4cec-b002-54421758fd30",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "81133bfa-0a7d-4b80-891f-e090a5ec068a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42295b7f-3b56-4ef5-bfde-848192d6442b",
        "cursor": {
          "ref": "99c76dee-5c2b-4e45-8795-352e2e93dfca",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "26d3eb5b-4817-4686-b264-3631142c48e1"
        },
        "item": {
          "id": "42295b7f-3b56-4ef5-bfde-848192d6442b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9eeac821-cd91-4708-b6c6-9716d812dc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213d99e9-6b98-4172-b42f-86ccad3b7c74",
        "cursor": {
          "ref": "7774f85c-c8a9-458a-9e9a-dd5a48a83009",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "39173758-caeb-4f84-98dc-836f2b732764"
        },
        "item": {
          "id": "213d99e9-6b98-4172-b42f-86ccad3b7c74",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7820f71-9e4e-491c-9183-b2191878c8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd09a5-de79-40c4-8d01-3ae3633012aa",
        "cursor": {
          "ref": "9ca81e22-c299-474c-b94b-19f47349b6bc",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ebd03a16-c04a-4454-8dde-a271e8ae6ba7"
        },
        "item": {
          "id": "11fd09a5-de79-40c4-8d01-3ae3633012aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7ac1258e-353e-4191-9b3d-a65904685e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3c567a-247b-40c8-b0d5-afa35b00db3c",
        "cursor": {
          "ref": "1ba58811-e976-4c48-aa1f-050126cdbc2e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c690f19c-6977-457a-97ac-c1d58d53f041"
        },
        "item": {
          "id": "ed3c567a-247b-40c8-b0d5-afa35b00db3c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a5444c43-3414-427c-8fae-14f37170424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677266f7-2093-4265-a5db-adb23fae8f96",
        "cursor": {
          "ref": "aaf0d92c-eae1-414d-9b0a-1be83c2d4633",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b98fb2ec-5edb-426d-9211-8cf6bba0d097"
        },
        "item": {
          "id": "677266f7-2093-4265-a5db-adb23fae8f96",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "683d30d3-2572-4cd6-b3c7-cf9093687dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f2e2a7-d36e-491a-8eb2-6cf54b7a9008",
        "cursor": {
          "ref": "3b4e9cd0-8ff7-421f-95c8-cbfc2c4b4946",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a19d4e86-83fc-49ef-9008-6b4111c1f11d"
        },
        "item": {
          "id": "55f2e2a7-d36e-491a-8eb2-6cf54b7a9008",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ed234766-4d69-4ba3-a398-c1c0805a93b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83946cb8-ba83-4f0c-835e-f71e99f4e8c9",
        "cursor": {
          "ref": "1f1ecfa4-5c53-4b4c-bb09-8e70e5ee7925",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ef3f366a-b84c-4201-86dd-1a3aff11896c"
        },
        "item": {
          "id": "83946cb8-ba83-4f0c-835e-f71e99f4e8c9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ad4eae31-d344-44bf-9970-d603656840ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf87715-c1d3-43ef-a2fa-4b70e3562106",
        "cursor": {
          "ref": "9765fa7e-d2f0-44fb-8531-61d681e7540c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "01a832e1-a45f-48e2-89cd-ea496f9cfb03"
        },
        "item": {
          "id": "9cf87715-c1d3-43ef-a2fa-4b70e3562106",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a51f086b-d7f8-41ba-a467-de327a92fb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bcd106-197a-409d-bd8f-acafca7a50d8",
        "cursor": {
          "ref": "7905bbfc-f850-4ddf-a1fe-ac74c8d23379",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b593c30a-3b7d-4b03-8417-7c6afbdf8073"
        },
        "item": {
          "id": "52bcd106-197a-409d-bd8f-acafca7a50d8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "850f715a-95a2-40e5-ac8e-784daabc571a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e14bc2-c2b5-483e-b582-73a61ccb4a01",
        "cursor": {
          "ref": "8fc8e5f2-f88a-47dd-89d4-04e989cadca6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5925dfd3-13a0-487d-be7e-41efb9bf1557"
        },
        "item": {
          "id": "31e14bc2-c2b5-483e-b582-73a61ccb4a01",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1de49969-5486-4828-a700-8ba893e7e12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d6f37a-1c15-4e40-a12b-4959eebd56c2",
        "cursor": {
          "ref": "c9c48456-20d1-4d88-a0cd-8651ab772785",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8f91a84e-6daa-4ff9-87c1-581475c8069a"
        },
        "item": {
          "id": "61d6f37a-1c15-4e40-a12b-4959eebd56c2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "252c56ea-0877-47c9-b770-2caeaebb6bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4907baf8-a8eb-4a8e-9cce-950277816f05",
        "cursor": {
          "ref": "2f69a7ba-5bde-4c37-9d07-afb2f196fdb9",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a942fa40-114c-490e-8c34-c1de19392752"
        },
        "item": {
          "id": "4907baf8-a8eb-4a8e-9cce-950277816f05",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c336f40a-4ba0-44e2-9eca-3b5c3070e1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5a01ff-3f02-4122-b956-b48c9301de9d",
        "cursor": {
          "ref": "9692b8bd-e8ac-4b21-9bd1-8e952529b07d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "76b99730-e86f-4c17-b04b-6075528a45b0"
        },
        "item": {
          "id": "bf5a01ff-3f02-4122-b956-b48c9301de9d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "96e06e76-51a1-46be-a748-6d6ca3ca28e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcfc590-342c-4071-b302-653e4676b493",
        "cursor": {
          "ref": "de7ef074-8e78-4d71-b17c-2166966ae932",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "24e6287a-c3eb-4c07-a362-723186b8be74"
        },
        "item": {
          "id": "5dcfc590-342c-4071-b302-653e4676b493",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ad75aa2b-8246-4230-b6f7-2e31cdd89af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce6d092-6ba4-41d9-91a1-05bfef27d9a6",
        "cursor": {
          "ref": "18a2c398-bd9d-4ba0-8db7-532e231e66bb",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d059bf3-72b5-4f60-999d-b8640640b88d"
        },
        "item": {
          "id": "dce6d092-6ba4-41d9-91a1-05bfef27d9a6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7825e8a1-3e30-424e-962f-0a58e13a170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba18ac93-509b-420d-ade5-69d2f538109e",
        "cursor": {
          "ref": "9dc3b1cc-8fb8-4897-bde1-1b49c307cd10",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "53c0e35c-fbfa-41b3-98ce-92bd7827e557"
        },
        "item": {
          "id": "ba18ac93-509b-420d-ade5-69d2f538109e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f02eb2a2-3997-4bad-b70c-f7937ecd63c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202ffd4d-2a50-48f1-a771-e8195136c91d",
        "cursor": {
          "ref": "4c12a656-5a7d-4eae-ab17-65eb36341294",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78d2f918-6d56-4001-b300-0a52d04ca5a0"
        },
        "item": {
          "id": "202ffd4d-2a50-48f1-a771-e8195136c91d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8454db12-9859-42cb-bfe1-e480efc289e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d2b4d6-a0e3-48b9-aa51-b22a5637af49",
        "cursor": {
          "ref": "7783d91d-ca1c-40d7-9d18-5b173399cbe8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b2a15659-c415-489a-9f51-0d423667177b"
        },
        "item": {
          "id": "97d2b4d6-a0e3-48b9-aa51-b22a5637af49",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "494bb74e-b0bb-4a11-8069-2668dce29b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce4a47-8c94-416b-82ef-599703440e77",
        "cursor": {
          "ref": "b2c6fe3b-7174-4f79-ba41-46ab3325ac37",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5fafd407-ec37-40c0-bf87-d777bd53dc69"
        },
        "item": {
          "id": "56ce4a47-8c94-416b-82ef-599703440e77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9a900d00-64e6-4f8c-9ef8-b573c055189d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb17c57-a4dc-4853-bec5-31826e45cb1f",
        "cursor": {
          "ref": "2abf2d1c-0d41-4036-8562-1b7bff6c9335",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bdad0c40-c12c-48c5-9c8f-72f272063da1"
        },
        "item": {
          "id": "1eb17c57-a4dc-4853-bec5-31826e45cb1f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd9c5997-a5c3-4f46-ad92-b9ab8c9be3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70d3040-b33e-4fdd-b798-dc0fde443844",
        "cursor": {
          "ref": "8310d671-dbdf-4af6-81b4-cbeb0a64c18d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "19ab624d-614c-41a4-b58e-b9276d499095"
        },
        "item": {
          "id": "b70d3040-b33e-4fdd-b798-dc0fde443844",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f56971d3-25cd-42a2-887e-44288bcc8f57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95ba67c-197c-4abc-84c0-e597422cb3b3",
        "cursor": {
          "ref": "17a36e7b-54b3-4c22-b02a-5e1e9bcab0e4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7c433298-f215-4188-ac11-0c066a5e3aa4"
        },
        "item": {
          "id": "a95ba67c-197c-4abc-84c0-e597422cb3b3",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "377295eb-1706-47ee-a922-9dd029ed181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d3af5443-7443-45ed-b6bf-be5d31bc1837",
        "cursor": {
          "ref": "c0ab57b1-89f0-47b2-a1fe-707e50c2e3e1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d62fd133-f6d8-4522-9f2c-e076bd7e81ae"
        },
        "item": {
          "id": "d3af5443-7443-45ed-b6bf-be5d31bc1837",
          "name": "credentials_issue"
        },
        "response": {
          "id": "44dcad22-b613-4045-b95d-0b0bf138cbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "f22fd6df-e82b-467e-8997-8a63828649c8",
        "cursor": {
          "ref": "9d6aa700-a054-4006-85c5-6ab7f2287163",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1af0ac14-1e71-4a38-88b6-1c971c055296"
        },
        "item": {
          "id": "f22fd6df-e82b-467e-8997-8a63828649c8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9a04b97e-fda6-40f9-a7df-017df2f341df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "a956dc81-411a-42eb-bdc3-40f5e3d47888",
        "cursor": {
          "ref": "165e7d66-0015-4bdc-86a0-a34a23dcef21",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dd88ac7d-5498-49b7-b10e-1357107d16f9"
        },
        "item": {
          "id": "a956dc81-411a-42eb-bdc3-40f5e3d47888",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4e363a1c-fdbf-4c5b-8426-1184ca9899f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a35ef14d-410f-4aa4-875a-b38849c1c023",
        "cursor": {
          "ref": "6e6c5c53-3a0c-4d61-b340-1eaf53ecfe42",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "47b31570-eccc-4bf9-85b9-3cc02a29e780"
        },
        "item": {
          "id": "a35ef14d-410f-4aa4-875a-b38849c1c023",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "96bc42b4-6023-4a41-846c-e9dde2f8ca4e",
          "status": "Created",
          "code": 201,
          "responseTime": 12203,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc899d48-0fc6-4ed7-8f29-cfdfd44d0d72",
        "cursor": {
          "ref": "4493192e-a44d-41a2-a2fc-190587714bff",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0d1dc13d-8091-4a97-b37f-d45c1124306b"
        },
        "item": {
          "id": "dc899d48-0fc6-4ed7-8f29-cfdfd44d0d72",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d9c7f328-ce94-48fd-9b72-40abeba308cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "db3caf2f-8941-4af1-b79b-4e9a9a7005de",
        "cursor": {
          "ref": "d09139f8-33c8-4547-a689-79ba9fb67dc9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f70e7243-53cb-42e2-983d-f0555ad58cc7"
        },
        "item": {
          "id": "db3caf2f-8941-4af1-b79b-4e9a9a7005de",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f93c3b20-3797-4a2d-b273-e60a413c36ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "98cdda21-68e3-48ff-9886-88ce480c0a29",
        "cursor": {
          "ref": "eb46db64-d284-46e3-8fd8-8da5f5cef680",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9192df85-058d-4aaa-9c5a-e9ec08be9a93"
        },
        "item": {
          "id": "98cdda21-68e3-48ff-9886-88ce480c0a29",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2bc3e0c3-c922-49a9-a53f-0454967f0436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c64cd2-ee86-42dc-a130-8fcb9ea8c189",
        "cursor": {
          "ref": "73eb18ff-1b0a-4c5f-bcaf-1eecd99cac74",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4c9e20bf-33b9-4177-97d1-d5228cdea52c"
        },
        "item": {
          "id": "57c64cd2-ee86-42dc-a130-8fcb9ea8c189",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f7251b7-f280-4cc1-8fc6-2d447dffd912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953d0d03-62fa-4d1d-bd44-b83c142ce905",
        "cursor": {
          "ref": "4ee8dbc7-e321-4921-a634-dc85f5375a51",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d25f04d5-049a-498d-b670-a9ec8cbbb208"
        },
        "item": {
          "id": "953d0d03-62fa-4d1d-bd44-b83c142ce905",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1d2ec490-4caf-4a91-8333-b09b2581f947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e259023c-b441-4d28-a5da-abda710ab7bb",
        "cursor": {
          "ref": "10e7c728-6d51-4425-aad8-10811c348346",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "009d34ad-36a8-4f11-93fa-7460e02799ea"
        },
        "item": {
          "id": "e259023c-b441-4d28-a5da-abda710ab7bb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9f61ab21-c81c-4b2e-92b7-0ed2fc7e6644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51bdb286-d3b2-4752-b504-b9a528dcf0ac",
        "cursor": {
          "ref": "849732b0-0aa9-4bea-a45d-7d3ccb4329e2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "80d925c3-3e1d-48a5-84bf-79fa5d2ce28b"
        },
        "item": {
          "id": "51bdb286-d3b2-4752-b504-b9a528dcf0ac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a4f94175-4f12-46d2-aa76-d8eecfbd461f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0945c786-eaf4-4348-9b72-7530855cf4aa",
        "cursor": {
          "ref": "1772f509-c1ae-470a-9282-5cae38957974",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "423dec9b-f92e-429d-95e2-24bdaee9a58b"
        },
        "item": {
          "id": "0945c786-eaf4-4348-9b72-7530855cf4aa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "dbe959d4-30b4-4204-abe0-868ae8cd7651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d245b0-3efd-4ae5-b2bd-9d6a893caeac",
        "cursor": {
          "ref": "cd42b9e6-62e8-47d1-b844-c56d8bab4fec",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a28a749c-a179-46c1-9850-c75ac0ed515f"
        },
        "item": {
          "id": "f5d245b0-3efd-4ae5-b2bd-9d6a893caeac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "711ddacb-ebab-4523-ad63-64e297639390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7235dbb-8cce-4a0b-932a-4eabcb48aaba",
        "cursor": {
          "ref": "13ff8828-c480-4c92-ace1-6f5cd353db0e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "40ab22b9-f12d-4602-948e-248c49cdedcd"
        },
        "item": {
          "id": "b7235dbb-8cce-4a0b-932a-4eabcb48aaba",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8f3a5ed-3063-465b-8f26-2ccb47599e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712ebf34-8cc8-45b5-ba7c-db6970408335",
        "cursor": {
          "ref": "471bcba7-1d3e-4f94-b464-ea12a404ee1c",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "78b400b8-43a6-4d21-8992-987f5f02ad42"
        },
        "item": {
          "id": "712ebf34-8cc8-45b5-ba7c-db6970408335",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ac9c9985-e05f-4518-830a-e29a5d95e45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ac314f-e7d6-401b-8daa-068dceba5fd6",
        "cursor": {
          "ref": "9429afad-13a3-4a15-a795-f0cc4bd9db18",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "49e911f0-845c-446b-97d6-dc03a139a7ff"
        },
        "item": {
          "id": "c6ac314f-e7d6-401b-8daa-068dceba5fd6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fb81b119-ce0d-4894-b0a7-0bc25cc42301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edcec46-c24f-457e-b864-ab15cd33ba3c",
        "cursor": {
          "ref": "4299228e-b46c-4a57-aab7-2183aedd1865",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b23c0d43-06fa-4d71-8046-216818a97ee8"
        },
        "item": {
          "id": "3edcec46-c24f-457e-b864-ab15cd33ba3c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "597875ef-ab16-4866-9ff0-1742bdae9323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2341f3d8-8a4f-4518-8e81-7149e1d52cff",
        "cursor": {
          "ref": "b05726dd-2079-420f-99dd-7d0790fe7c00",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4a803af8-615d-4f83-bc46-7cc55330dd3a"
        },
        "item": {
          "id": "2341f3d8-8a4f-4518-8e81-7149e1d52cff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "be689bf3-2234-4075-bee1-7f9737a25fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c5fc8b-cb89-4445-b93a-9125dd613be5",
        "cursor": {
          "ref": "7dfbc553-9484-42cd-af09-45c4bc53aa22",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "66be71e5-1f67-494f-bd95-4d6d68de8144"
        },
        "item": {
          "id": "71c5fc8b-cb89-4445-b93a-9125dd613be5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eee15abd-c402-4651-8490-ed1b006b5f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2f6d7d-b9c7-49c9-bf2e-2022d6f0bd4e",
        "cursor": {
          "ref": "474b3714-a66d-4edb-abf2-df2bc7175a1a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0b7bd487-ebc1-45f0-8308-f07fd087a481"
        },
        "item": {
          "id": "ca2f6d7d-b9c7-49c9-bf2e-2022d6f0bd4e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1eab5630-345a-4846-b428-a51ca3cbeb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30731478-a860-44ea-ac2d-24c6af75d66d",
        "cursor": {
          "ref": "4aad609f-47e0-431c-8929-9a85d5ee89af",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8ce531e9-eefc-41af-b8f9-df3752f739b2"
        },
        "item": {
          "id": "30731478-a860-44ea-ac2d-24c6af75d66d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5996f3af-63c5-437c-9508-fb07aca4bb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa3292-4e71-4989-b5ad-de53cd740f31",
        "cursor": {
          "ref": "6c0e4a40-ba7d-477f-b84b-ad8dee8458f3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "96ed01eb-2173-41c3-8f62-6543974b4fa6"
        },
        "item": {
          "id": "efaa3292-4e71-4989-b5ad-de53cd740f31",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d38c4fca-0037-4b3e-ae1f-0fa08c9ca8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908bf661-b43f-46a1-a982-a553e43e618e",
        "cursor": {
          "ref": "ef6d4319-385e-480b-8ca5-b3049717dffa",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b7c2c14f-5297-486b-a506-4c067d7aef27"
        },
        "item": {
          "id": "908bf661-b43f-46a1-a982-a553e43e618e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "83c63c11-eb55-49f5-bca0-01aefd88c2e5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "09bcd807-2843-43a7-977e-d41ae903c5a2",
        "cursor": {
          "ref": "83cd852c-8fe6-4055-bbc9-078fdd53358f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9a4293e3-13e2-4b65-a3dd-25da56009636"
        },
        "item": {
          "id": "09bcd807-2843-43a7-977e-d41ae903c5a2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "01c21d80-4379-4be9-9d04-5b8f145a5c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c51b0-8650-4b6b-bf18-62ff9fbb1947",
        "cursor": {
          "ref": "2f2ba261-4913-40f6-8cd6-7366782d21f7",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5244a273-1d48-453c-a082-83d343df191e"
        },
        "item": {
          "id": "127c51b0-8650-4b6b-bf18-62ff9fbb1947",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "04afa722-0e00-4ed5-9870-6824f4827f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe0ee73-a54c-4119-809a-2c444fddfb65",
        "cursor": {
          "ref": "2cefb00d-7915-4bce-9a30-289ef11999af",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e338cc4c-9875-4fa7-9f68-9c8b18d1adae"
        },
        "item": {
          "id": "1fe0ee73-a54c-4119-809a-2c444fddfb65",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b662992-3335-49ee-85c6-cf2661ae1032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b077ff-9d40-4de6-8cbf-3938412f5fe8",
        "cursor": {
          "ref": "e70b3338-de8f-4862-9d40-5f001e660cd1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "312781e1-a93a-4ea5-9d9c-0b2526a4d670"
        },
        "item": {
          "id": "b9b077ff-9d40-4de6-8cbf-3938412f5fe8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b17e303-c873-48aa-af41-433c498fbd5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d81031-665e-4c42-a26d-bdb0150718f1",
        "cursor": {
          "ref": "1b90aa36-a075-4f03-8714-28c8ca3fc12c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fa7d14f6-14e0-46ce-97da-c82099db68d0"
        },
        "item": {
          "id": "27d81031-665e-4c42-a26d-bdb0150718f1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0292de68-de5f-4abd-818b-5cf722ba4048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccee22a-a4a5-4ace-9437-c91c37687339",
        "cursor": {
          "ref": "de6fa2ce-4ef7-4c84-b658-d83b2043f1d6",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cd1e562e-d977-4aef-bd3f-65ecfccf408e"
        },
        "item": {
          "id": "4ccee22a-a4a5-4ace-9437-c91c37687339",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7c02d4c5-be18-496e-a1ec-95980d6e639a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8994693f-75b2-4879-8efc-862efc9bcf72",
        "cursor": {
          "ref": "59425d57-6b00-4180-84bd-7e908445c641",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "37bc7a6f-6eae-4d75-afa5-d678313f184a"
        },
        "item": {
          "id": "8994693f-75b2-4879-8efc-862efc9bcf72",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8df688ba-2e16-4220-9659-9c70be0adce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25556d5b-227f-49c7-baed-6827331b1a91",
        "cursor": {
          "ref": "26963321-67e5-42e2-b500-d790e14771c5",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "de03eda8-d4e5-469e-b20b-8e764e23898c"
        },
        "item": {
          "id": "25556d5b-227f-49c7-baed-6827331b1a91",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d59e9f96-3a6b-44ed-ae0e-17ddd6d04dd1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "5a49955a-274d-4931-a9b5-d088fddee074",
        "cursor": {
          "ref": "57711981-7a32-4019-aa04-51cfa3c11af7",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bceb6033-a8b6-4a9c-bca7-83f54cc3d586"
        },
        "item": {
          "id": "5a49955a-274d-4931-a9b5-d088fddee074",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce4cbd55-301c-427e-9e93-1773037759da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf93948e-15e7-44e4-9507-8befe9524b65",
        "cursor": {
          "ref": "adc22247-e37c-42c8-a508-9ee658b34fab",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ba12a80d-f66f-4c9a-9a4a-a2f50f4fabd9"
        },
        "item": {
          "id": "bf93948e-15e7-44e4-9507-8befe9524b65",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3e3fdce6-f62f-4942-ae95-6f363ba85bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd7fa2a-6685-4fa3-b6ff-ffb65900ea6c",
        "cursor": {
          "ref": "9f83d9cc-1d7f-430c-8d2f-69d1121a52d4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "299e1183-7f73-4096-8843-d30b40c51309"
        },
        "item": {
          "id": "dfd7fa2a-6685-4fa3-b6ff-ffb65900ea6c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a1f9de6b-b7cd-4824-956d-b4e0d0776f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb85d834-1746-4794-a256-7717bd04940d",
        "cursor": {
          "ref": "88acc2e8-7900-4150-b3d5-f9e1a5046904",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5f91cb6b-6abb-49b9-ae89-d8a2e10bf279"
        },
        "item": {
          "id": "eb85d834-1746-4794-a256-7717bd04940d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d9368a86-984a-4eb5-859b-cfc0644071f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa5e3d5-99eb-480c-bea5-5992f6bb844d",
        "cursor": {
          "ref": "ec3ea924-cd49-4b74-9b9e-48c363f90059",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aa119081-9eaa-43dd-9cfb-77255ab48480"
        },
        "item": {
          "id": "0fa5e3d5-99eb-480c-bea5-5992f6bb844d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eb51e9db-d27a-41a8-bd72-cf2e7eddec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fe8372-7193-4000-8ef8-9cf6df142f8a",
        "cursor": {
          "ref": "cc3b4d36-4b9e-49d3-abee-0c99e2e62e52",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f7b25c2b-fdb2-44c8-8b05-ea6c07d85720"
        },
        "item": {
          "id": "15fe8372-7193-4000-8ef8-9cf6df142f8a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ccf517d4-d6e9-447a-a032-30cfb8f2ecf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6865230-74cd-405e-b8b8-aa845f15c0ae",
        "cursor": {
          "ref": "d94bdf2c-95b6-455b-ba7e-1dbec0024c5d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd402899-fe43-447c-9ac3-cb9c27d9aaf9"
        },
        "item": {
          "id": "b6865230-74cd-405e-b8b8-aa845f15c0ae",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0343321a-b2f2-41fb-b5ca-46682f1810f6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5607bd7c-cd12-42e5-9ed6-479bab6beebe",
        "cursor": {
          "ref": "e842e277-7937-400d-ad5a-ed89de3a8a86",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "47650c4c-afb8-42b8-83a3-63f9baa17d94"
        },
        "item": {
          "id": "5607bd7c-cd12-42e5-9ed6-479bab6beebe",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1a219e18-50ae-4fbb-a581-6f9d12407db8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "fe44d6aa-970d-4e63-abca-b585396489d6",
        "cursor": {
          "ref": "a3582d3d-37d6-4fd7-b1be-bb8f145c05a9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e9da65e2-0084-42b3-9a8b-2549f6cc3226"
        },
        "item": {
          "id": "fe44d6aa-970d-4e63-abca-b585396489d6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b434d41e-daa8-4200-8517-c87665cc1904",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "a647c64b-9814-405e-9e6b-61993092189b",
        "cursor": {
          "ref": "cf2aac55-8c23-4ab8-aa0f-abb4b667065d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9fc4a472-581a-468e-98a5-9efdaf26fa82"
        },
        "item": {
          "id": "a647c64b-9814-405e-9e6b-61993092189b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "48f3d875-cf1f-4de1-b275-1a4fc9fcf48b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "49d16742-706e-4b4f-a74b-6ec76e2a7e85",
        "cursor": {
          "ref": "95f492e0-3503-4332-87bb-413268b49de7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f6326682-a218-4293-9948-b26f56ffbf26"
        },
        "item": {
          "id": "49d16742-706e-4b4f-a74b-6ec76e2a7e85",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "53797689-c98f-4b5b-a7e1-c25d989ac0a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "e16bf6ce-604c-4d37-b18e-8d9a095e7fb9",
        "cursor": {
          "ref": "15a2caf8-ae93-4cdf-9857-1d4368d13013",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e2dfa6f3-a10f-4864-9dd4-e4c524f4f5bf"
        },
        "item": {
          "id": "e16bf6ce-604c-4d37-b18e-8d9a095e7fb9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a46e6853-c8a8-4372-983a-2a3ae5c891e4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c8360211-c86d-4321-b518-440789c87c1c",
        "cursor": {
          "ref": "12366475-ddd5-48bc-a03b-767b683ef03a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dd69df50-9ddc-4cab-a77c-1bdb747b2c9d"
        },
        "item": {
          "id": "c8360211-c86d-4321-b518-440789c87c1c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f64ca94f-9468-4209-97b6-7d3e70a36459",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1de7a22-4680-4c7e-8b66-452ccdf77030",
        "cursor": {
          "ref": "bdd309c0-495c-4a27-890d-428f12778f0b",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "846aff24-4ff2-4313-b2d5-79817de922f9"
        },
        "item": {
          "id": "a1de7a22-4680-4c7e-8b66-452ccdf77030",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cdc84807-daa8-43ab-9b0f-95624d371b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7f5bb6-d637-4a3e-9ef0-55e687bdd4ce",
        "cursor": {
          "ref": "4a079a81-d4ef-4f0f-a490-9f00c09956d4",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f08cac0f-42ae-44c9-9e2b-a6f2667c04e3"
        },
        "item": {
          "id": "5a7f5bb6-d637-4a3e-9ef0-55e687bdd4ce",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cdd85cdc-103f-467c-bb46-094bb668e505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9f44ee-9155-47ef-8aae-282d6ade6951",
        "cursor": {
          "ref": "5c48ee7a-9c94-45ca-8143-3e0dedb405fd",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "26069702-9038-4a2c-ae36-295686adaf21"
        },
        "item": {
          "id": "da9f44ee-9155-47ef-8aae-282d6ade6951",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "72b00077-9935-4729-8ab0-3a9e510fb8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb27b209-b36c-49b4-a43d-2779dbc9000e",
        "cursor": {
          "ref": "d6b3d818-b4f8-45dd-8ff9-cd70596e4267",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7712b19b-1325-4c5e-a412-72e02338f2e8"
        },
        "item": {
          "id": "eb27b209-b36c-49b4-a43d-2779dbc9000e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "31974672-323d-46c5-9a52-4881fec547b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1180fdf-f7f8-4541-aa7c-2d70112031d0",
        "cursor": {
          "ref": "8087f0c8-a2af-4ffb-9c29-c4681eaaab12",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d023f63c-32b1-4064-9e95-e024dc8cd6cb"
        },
        "item": {
          "id": "f1180fdf-f7f8-4541-aa7c-2d70112031d0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5828d157-fb01-4b2d-bae7-513e7ca582f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23c7063-daec-4526-8969-496de455ea0d",
        "cursor": {
          "ref": "fb096730-1d02-4387-aa0b-b8cd117ad55b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e6be846b-2057-4aa0-bfd5-4a2f004cd3af"
        },
        "item": {
          "id": "a23c7063-daec-4526-8969-496de455ea0d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c77babe1-c5f2-4958-b1e4-eb71c123203e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea1fd33-968b-4e42-8d7a-7b442dcde40c",
        "cursor": {
          "ref": "ad5ab41e-2491-4eb5-a82d-6d6447dc6b19",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c66e69c2-0a47-4850-9526-9f8721b04db9"
        },
        "item": {
          "id": "3ea1fd33-968b-4e42-8d7a-7b442dcde40c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f889bac3-268b-4d2b-be35-a36507c9ff8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e9dc5-435f-4a19-a00c-b954e5866fc4",
        "cursor": {
          "ref": "f83e6977-095e-4853-b87c-c65ce13a68f9",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0b217a5a-6653-439f-ad7d-334cece11891"
        },
        "item": {
          "id": "6a6e9dc5-435f-4a19-a00c-b954e5866fc4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "598b4098-e2d1-49cd-bf92-3cba7581cf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37bf0b5e-69a5-4341-9f3b-7470c399bd7e",
        "cursor": {
          "ref": "941f66f4-c839-4ceb-9e1c-25a21306b9e1",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7f2b70eb-8337-47d6-b417-31d36a678b8d"
        },
        "item": {
          "id": "37bf0b5e-69a5-4341-9f3b-7470c399bd7e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "19d90c8c-41c2-4d5c-bbfd-14a11e2c03ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b190117-3ff0-44b7-8a8a-c13343b7ab00",
        "cursor": {
          "ref": "d278ae09-698c-4976-ad20-1cc0e3bb4b0d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6282eaeb-c73f-4f40-9049-4d99ee3edde8"
        },
        "item": {
          "id": "2b190117-3ff0-44b7-8a8a-c13343b7ab00",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4fdd84ed-9152-42f4-b2d2-7d403707e476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acde36a-7e91-4a6f-8e2f-cdf4291d732f",
        "cursor": {
          "ref": "d75b230c-0a1d-4a1e-9cf1-ae029d8d936e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "66e279c2-a4d3-4cfa-9359-42fb22e167e8"
        },
        "item": {
          "id": "9acde36a-7e91-4a6f-8e2f-cdf4291d732f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4320b00a-6b32-4117-8342-cf35424f3a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb09dc1-91d1-4650-bd7e-746810d46114",
        "cursor": {
          "ref": "f201d187-3f75-479e-977e-bd1ee4faebdd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5de9809b-b541-4e88-82bb-aad6fe63acd2"
        },
        "item": {
          "id": "acb09dc1-91d1-4650-bd7e-746810d46114",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c5e2ed7f-5a04-4361-8b04-8c965c1cfe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fe4537-98c6-4483-80ea-e771a3057adf",
        "cursor": {
          "ref": "279e4887-3bd9-4b97-8309-666a150db0be",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c7f5d26a-7562-4438-bc35-53c8394f808c"
        },
        "item": {
          "id": "98fe4537-98c6-4483-80ea-e771a3057adf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f31f4284-a47b-443e-bbee-5970201436e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aafb4b-13cd-4e50-a128-4b6671ecd7d3",
        "cursor": {
          "ref": "9e1c8994-a59e-480e-b4d6-323dd2ff0923",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cbe8de55-8955-45eb-a0b0-1d9a0859cc8c"
        },
        "item": {
          "id": "d6aafb4b-13cd-4e50-a128-4b6671ecd7d3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "34649946-6b91-47f9-a7ee-4e86464b8cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f763ba10-1e2f-4c30-b55d-43a63f3efe39",
        "cursor": {
          "ref": "22a174db-f4f4-476b-a079-43306db84ccd",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ebcbaa4b-d2b4-4a53-a991-dd1a1b380e7f"
        },
        "item": {
          "id": "f763ba10-1e2f-4c30-b55d-43a63f3efe39",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3c5b06e2-5bd9-49d3-b7da-9d2acbd1a2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ddfd04-99a5-44f4-b0e1-68a9286b7dc2",
        "cursor": {
          "ref": "f92c3a20-ff34-431f-a5f8-9bd1a43d8ee0",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "11553ad4-49cf-4544-8831-3487dfa87034"
        },
        "item": {
          "id": "21ddfd04-99a5-44f4-b0e1-68a9286b7dc2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "eadadfd7-9bcf-4777-beb2-c269f278551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b8ad2d-69d7-4af0-ad9a-b1d418a41ba4",
        "cursor": {
          "ref": "b2c66042-1848-481d-8304-d9304e65d205",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5b112b1c-cae8-4514-b3e1-69a5266b7d06"
        },
        "item": {
          "id": "40b8ad2d-69d7-4af0-ad9a-b1d418a41ba4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c0db1822-7bdc-455c-9709-42896630573a",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "d45acde9-fd9c-474e-a3f8-7762865f90cc",
        "cursor": {
          "ref": "22fc2029-764b-4d5c-8eac-927f13a96987",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3ea60f92-d80f-49b4-954c-b3f8b758cfc3"
        },
        "item": {
          "id": "d45acde9-fd9c-474e-a3f8-7762865f90cc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bab5f6a1-2823-4709-ba9f-15ac925623ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8eb3634-8e36-452b-ba4a-c3a85dba4b2d",
        "cursor": {
          "ref": "702842eb-c136-47d7-85d3-1270b488e4e5",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f584b4b-0f11-4610-aae2-87605489acd6"
        },
        "item": {
          "id": "f8eb3634-8e36-452b-ba4a-c3a85dba4b2d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "739dead7-a3a7-48c7-8619-8aa4106fe868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae1784d-0c12-4b90-848b-eb7188725a47",
        "cursor": {
          "ref": "0c1e99ab-86c3-497d-894a-5346d19bc5b3",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "886bc3ce-fb25-4a69-bbdc-b9e4fbcb75b0"
        },
        "item": {
          "id": "0ae1784d-0c12-4b90-848b-eb7188725a47",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cd6f8fcb-847d-4310-a490-33cb19301960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3d5fc-1380-46ff-bb08-2a68774a4ca0",
        "cursor": {
          "ref": "915838a4-3b15-49be-aeea-190fd846c7ee",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c123302b-3a57-4d9a-84fe-10b3758805da"
        },
        "item": {
          "id": "0bb3d5fc-1380-46ff-bb08-2a68774a4ca0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "150c9cdf-bb31-4c0f-9ae4-855b8413a7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2cdda7-5b37-417b-8606-ba011b302d34",
        "cursor": {
          "ref": "f031734b-2dec-4719-9826-762c41ede736",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0ab31699-7a11-4e79-8155-248f9d513f3d"
        },
        "item": {
          "id": "4a2cdda7-5b37-417b-8606-ba011b302d34",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "60c7ba0e-a585-4c31-9145-b9da29cfb62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0974fbfd-a73a-4327-9af6-b94819993e7e",
        "cursor": {
          "ref": "8064bcdd-576e-4bcf-9828-895441efa369",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ad4531cf-dc11-4d05-a674-4ac3977e269c"
        },
        "item": {
          "id": "0974fbfd-a73a-4327-9af6-b94819993e7e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a9641700-1006-496c-800d-f51f712d57a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c467660e-a189-4005-ae43-d5707c39bb98",
        "cursor": {
          "ref": "bf743d28-5186-49f1-b1cd-5270fbc5d672",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1b55acd6-7339-43d1-86b1-bb16b5acbf4d"
        },
        "item": {
          "id": "c467660e-a189-4005-ae43-d5707c39bb98",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5bfeb0b4-3d4c-4a93-8012-1d1560e84b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a4cedc-4d5d-4de4-952f-69801d37a8fb",
        "cursor": {
          "ref": "1251fee4-3057-4001-9714-016f9f51c27a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4b94b1c4-3213-46bf-b07d-e9d92ee844fc"
        },
        "item": {
          "id": "34a4cedc-4d5d-4de4-952f-69801d37a8fb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a5ae3ea6-890b-438a-823b-938956bdaa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f706996a-3ec4-419f-86e5-cfb293086e18",
        "cursor": {
          "ref": "41b3be05-51a9-4430-8c67-c7839d144c9d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4cf8da79-9c3e-444e-9af4-20615ce2f6fc"
        },
        "item": {
          "id": "f706996a-3ec4-419f-86e5-cfb293086e18",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "32f53cbd-e976-4f72-ae56-1a732fee7cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86db321-3c1a-4eb5-8212-cc19784c0455",
        "cursor": {
          "ref": "1ee9b68c-64c8-49b7-a537-f85a51c5d3f3",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2feb0362-afd3-4ca4-be00-fd094367c486"
        },
        "item": {
          "id": "c86db321-3c1a-4eb5-8212-cc19784c0455",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ab02c285-aca0-4067-9507-47da567bc132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d168784-7910-4479-bc49-b6c514a531c6",
        "cursor": {
          "ref": "12fb15d6-ee16-459d-ad9e-3044e7a20202",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3dff3176-7c20-49ea-868f-4645c0fa1b7b"
        },
        "item": {
          "id": "6d168784-7910-4479-bc49-b6c514a531c6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "62676ac4-ee18-4cd8-9225-d52a4be560f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe095576-d727-4193-8ba3-785c8e587a98",
        "cursor": {
          "ref": "8e95ba50-ff37-4d58-8470-24a532ef3eb9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d7405cb0-5176-43ee-a294-13f7ac1abb38"
        },
        "item": {
          "id": "fe095576-d727-4193-8ba3-785c8e587a98",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c0ad393e-b882-43ff-ab11-dcf3d7bfa155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b9bee1-9de4-45b4-8d7c-7e1e80b83fc0",
        "cursor": {
          "ref": "b7dc983d-c947-4d90-bf8d-a3b6225263f9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "801856d3-32ad-49f5-bc37-bb9e37651ffe"
        },
        "item": {
          "id": "85b9bee1-9de4-45b4-8d7c-7e1e80b83fc0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "523597ca-63aa-47f9-aa51-d99e4cc269a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979f7d94-1516-413d-9792-0461b4692ee3",
        "cursor": {
          "ref": "7e75d50c-3c91-4f34-b9cb-94b01c470d32",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "af3c61a3-47bf-4045-8ed7-a2dd2e1f7d1a"
        },
        "item": {
          "id": "979f7d94-1516-413d-9792-0461b4692ee3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "fa1630b8-c7ee-4a6e-81c9-80d429d23712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e98d238-76d7-4d3e-a0ea-59de1d4bcbc5",
        "cursor": {
          "ref": "106f3d20-05ed-471b-ab4d-4d3df8e9af85",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8ef4cbaa-155d-4160-9aee-a412e1e2b6b4"
        },
        "item": {
          "id": "1e98d238-76d7-4d3e-a0ea-59de1d4bcbc5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "212ac02b-a908-4004-ab67-5e5082ebfd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ca571-446c-4c85-9be2-7df3d73a06ce",
        "cursor": {
          "ref": "d6aaf953-e148-41ed-90ea-8791c8b8f549",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2f3d9f65-c6ea-4e3a-a832-7c2986a14c91"
        },
        "item": {
          "id": "be6ca571-446c-4c85-9be2-7df3d73a06ce",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2977cbb4-4737-43e6-a5ef-bc962d1f9bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9be22c-fab2-4cd8-8c62-621d34ded37d",
        "cursor": {
          "ref": "ffbbc4ac-ac23-400c-a447-bc3d3ddd962c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "865cd51f-717d-417c-bc12-a0dee2d25b60"
        },
        "item": {
          "id": "4a9be22c-fab2-4cd8-8c62-621d34ded37d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "053c496b-bbca-4fd1-961c-ad8658ab1b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22013a61-0c92-437a-86c2-3329a8709798",
        "cursor": {
          "ref": "ff837d15-f377-41e2-ba55-d02f673c7f55",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dc585c36-2981-4543-805e-11130a0dad71"
        },
        "item": {
          "id": "22013a61-0c92-437a-86c2-3329a8709798",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "98538a8a-be84-4b29-a970-21ec4f503f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42eb0905-3996-4f02-a150-b2175e1e0270",
        "cursor": {
          "ref": "6f36862d-536c-4c4c-bf86-53b422c9fbcc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "730b5ac5-e8ec-49e4-9176-06e0f2f6fe66"
        },
        "item": {
          "id": "42eb0905-3996-4f02-a150-b2175e1e0270",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "515599f5-bcf8-4b75-8ed9-b8af6b0c8795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171d6509-d7b0-4a28-aa4b-83f14e5c2ff3",
        "cursor": {
          "ref": "75088489-aa61-4329-9730-755a1ebc283a",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d825a6c9-15d5-4b62-9266-62ba05454acd"
        },
        "item": {
          "id": "171d6509-d7b0-4a28-aa4b-83f14e5c2ff3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a3cd0f61-c4d5-4c36-9168-e0b6608ba8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e524061-bd64-4da9-9736-76a0888122f2",
        "cursor": {
          "ref": "1a6bb8f2-5c91-43a5-a3b9-8374452fa5e2",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d681e134-2206-4ca6-9200-3e53805d0c33"
        },
        "item": {
          "id": "0e524061-bd64-4da9-9736-76a0888122f2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7a7ccd8b-9639-45c2-b375-0404c4fbe83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcb7c42-8868-42ad-8a93-45e2e3945df5",
        "cursor": {
          "ref": "a8e5886d-1a55-43d0-bcdd-11e75a697a0c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "57a33880-5349-44fb-877a-9b6632d09dd4"
        },
        "item": {
          "id": "2fcb7c42-8868-42ad-8a93-45e2e3945df5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8fc6b4ce-3e48-4a22-96fa-81db136c5b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a5a9e5-5e7c-4b52-a2ce-be3503371be3",
        "cursor": {
          "ref": "219bc90a-07d5-4a3f-9e1a-8954992c110a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3eece8c5-83f2-4eea-b28f-b47f7022523b"
        },
        "item": {
          "id": "35a5a9e5-5e7c-4b52-a2ce-be3503371be3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f0e99397-26d6-4f55-830c-3c4798f3ad96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718d9f38-b9e1-4479-b0b9-edaa265ac3f4",
        "cursor": {
          "ref": "9bc97b3f-6e1e-4d4d-9e3c-da8659e3d256",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9dd8623c-48bc-46e3-a940-78f9f5923782"
        },
        "item": {
          "id": "718d9f38-b9e1-4479-b0b9-edaa265ac3f4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "549748b1-56cb-43f6-bd72-313df1c90a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06be3f4a-c430-40b2-8e16-c0be55ca2063",
        "cursor": {
          "ref": "d18955c5-20fd-4a75-9f04-d6a4dd51d7df",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "93920a90-76c4-4f84-8b80-fb775c61a4e1"
        },
        "item": {
          "id": "06be3f4a-c430-40b2-8e16-c0be55ca2063",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "94f672c6-c68d-4673-a93a-7b64a9494ad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948ab36e-2789-4815-a822-62b8ef91e886",
        "cursor": {
          "ref": "54f4c71e-43d4-404f-8358-022f7d6670bd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "77729b95-abc0-4b2a-a53f-1a16f5911a7a"
        },
        "item": {
          "id": "948ab36e-2789-4815-a822-62b8ef91e886",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "afc67c1d-db45-4d39-bf9e-7948456467af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ecb77f-7875-4edb-b6ab-8cfdbdeca756",
        "cursor": {
          "ref": "03dac017-b420-4200-8715-abe1cf00aac1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2aa22b37-ff33-4ddb-b1c4-93333c3f1597"
        },
        "item": {
          "id": "36ecb77f-7875-4edb-b6ab-8cfdbdeca756",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "85530bc4-10fa-4778-8468-3e465d578841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065d1b25-1960-4687-a7b6-7e590582f251",
        "cursor": {
          "ref": "c2981f8b-b342-43d7-b030-d021492c218f",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "87ba40a8-f1b2-4006-a886-e20fc29b0af2"
        },
        "item": {
          "id": "065d1b25-1960-4687-a7b6-7e590582f251",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b54af381-a6a0-4b6e-b518-0819b8178911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac985f3d-15d6-46c1-8d95-52904cd731cc",
        "cursor": {
          "ref": "012c5868-81ce-450c-bcbc-7721a8ef3f21",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "34a95afc-dfaa-414c-a88e-b5643b46f481"
        },
        "item": {
          "id": "ac985f3d-15d6-46c1-8d95-52904cd731cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1b1218ed-8e57-47e5-b21e-d2413e8f406f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2b6b89-ab5e-4760-94a2-096012fe71ac",
        "cursor": {
          "ref": "6ad0397a-487a-488f-bda4-311fd57490bc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "407faff0-d1f3-4730-8ea7-1d2c4025901e"
        },
        "item": {
          "id": "2d2b6b89-ab5e-4760-94a2-096012fe71ac",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "38faa8aa-f921-45ca-aa28-364c4af1bafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903eaa23-09d2-4dcb-8060-bbfefc82393b",
        "cursor": {
          "ref": "d33906e8-d716-4017-a4ea-5f97a9d4b62a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5f0a024a-52ea-42c8-9fba-81a3d2f6f889"
        },
        "item": {
          "id": "903eaa23-09d2-4dcb-8060-bbfefc82393b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "44a23316-3b14-4b20-8fbc-42f13ff92789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39057fb3-d952-418f-a1be-7b77ecd34b14",
        "cursor": {
          "ref": "f12e72fd-298e-4b9f-9255-a4aedccc5d3f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5d32683c-9b17-43d9-a2c2-158e26feaaeb"
        },
        "item": {
          "id": "39057fb3-d952-418f-a1be-7b77ecd34b14",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3ae8c841-db10-4be6-b8f6-9b5e689ef007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7150e68e-b812-4f2a-82f0-8db4fcf260a1",
        "cursor": {
          "ref": "312d9dfb-be96-487a-bac1-f7134869eee7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b9d5d50e-f44d-4f59-9f4e-4db84031c557"
        },
        "item": {
          "id": "7150e68e-b812-4f2a-82f0-8db4fcf260a1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2f4d7627-7152-4d76-9ab1-9a62cfa75e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ed749d-d4c9-4f68-b13c-21dd282f126b",
        "cursor": {
          "ref": "83c4f17f-fb3a-4fad-95a1-f83e9ad4877c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "820ed17a-87db-4ac8-9c3a-32ba36ad2b47"
        },
        "item": {
          "id": "a8ed749d-d4c9-4f68-b13c-21dd282f126b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3bf3d946-7289-4fd2-86ff-c71fb01a2315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a234a0e-ecd5-4e20-baaf-5d8b0608386b",
        "cursor": {
          "ref": "fa25e15b-839f-437b-9c9e-bf056e15fc19",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a8e54af-bb58-4a4e-97db-677d87900b14"
        },
        "item": {
          "id": "3a234a0e-ecd5-4e20-baaf-5d8b0608386b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "55896a64-0030-46d4-a665-e2dec1ecddda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e619f041-66f6-4f36-a846-2152f3f8333e",
        "cursor": {
          "ref": "08d3330d-4250-4406-8708-a2add9089c64",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7bd6ed28-b4dc-444b-9fa2-240f93647289"
        },
        "item": {
          "id": "e619f041-66f6-4f36-a846-2152f3f8333e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b5b17d57-354b-4a3b-9e60-a7633969bb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6717babd-7f3e-4587-85bb-be201b7f2bc0",
        "cursor": {
          "ref": "59376749-d240-4847-b0b1-73b0827d356d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3d2b021c-0bb6-45e5-be20-a83f8243e3dc"
        },
        "item": {
          "id": "6717babd-7f3e-4587-85bb-be201b7f2bc0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "905bd8de-766e-4de7-a85c-703683a22b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c89245c-8fbd-43c2-b681-cd7da55e1dc4",
        "cursor": {
          "ref": "60fb332c-0754-445e-b8fd-5b957a269454",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ef99c595-fbc8-41d9-9682-db7ce5d357fb"
        },
        "item": {
          "id": "7c89245c-8fbd-43c2-b681-cd7da55e1dc4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0000c58d-66fc-4d3f-951b-d607dacc0250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1807d0cb-6b47-4b6b-a5dc-218fdd7fbc53",
        "cursor": {
          "ref": "03537ed2-7239-4911-85bd-7860e4fbb8ad",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d4c9abfe-ef67-4a82-92f4-71e5f732ce98"
        },
        "item": {
          "id": "1807d0cb-6b47-4b6b-a5dc-218fdd7fbc53",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7909d5c5-a85d-4b2e-8853-6084482c59fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c83d4-ad58-49e5-aca3-ef62560df4ee",
        "cursor": {
          "ref": "e5247cbe-37d6-4812-87c8-1b8cf361f44c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "effb9078-e3d3-4e4c-af1e-fa5a0c6ed6f5"
        },
        "item": {
          "id": "336c83d4-ad58-49e5-aca3-ef62560df4ee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b41bf92f-3067-4c2a-8f6f-2a4f64855882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1251125-1eb1-4249-9f70-aca45d881d12",
        "cursor": {
          "ref": "c7a35469-d3bc-4b1d-8b20-060decf51670",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6be3387d-dc6f-4191-ae9c-88f5e8b94d18"
        },
        "item": {
          "id": "f1251125-1eb1-4249-9f70-aca45d881d12",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "de1f085b-606d-4211-af84-594505ac652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c9564-ae09-4784-aeae-27d5adc37c2c",
        "cursor": {
          "ref": "9a532284-0da3-4012-b236-11f05933953d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "72ea39ae-7402-405b-848b-42ebf127fb63"
        },
        "item": {
          "id": "1f3c9564-ae09-4784-aeae-27d5adc37c2c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a615f977-c981-4797-bbfc-3cae29f572f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490a470c-3f27-4118-9123-34950d73feb4",
        "cursor": {
          "ref": "9fa7ec19-7093-4d7e-a5be-ab7234389892",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f1a0ba9b-99e0-4643-af76-a09a69ceca89"
        },
        "item": {
          "id": "490a470c-3f27-4118-9123-34950d73feb4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "47a3dca7-cf1b-4b6e-a5ec-dde4beba052d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cefe21-3290-46e4-b364-114c0b4b7430",
        "cursor": {
          "ref": "ca369ecd-2790-4b72-8a8c-ebe6c76073e3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "96dd7250-f779-4ff4-b82f-de14071f6da0"
        },
        "item": {
          "id": "58cefe21-3290-46e4-b364-114c0b4b7430",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "87e0932a-7fe1-435b-a3e4-ccc3054a1dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a755e204-a395-4e26-86cf-6b525dd62a2c",
        "cursor": {
          "ref": "53c5c5ec-f6fb-45c2-8032-154129a54e43",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "75c7400e-62dc-42f2-98ea-157f736c5ea1"
        },
        "item": {
          "id": "a755e204-a395-4e26-86cf-6b525dd62a2c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "57753f4e-3817-4cc7-bc06-8377190c3866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ee64bb-a9e9-4eb8-bf90-63916fa5304d",
        "cursor": {
          "ref": "7732b777-20b7-4947-b3e2-ec31b29d7284",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a6e0ea40-861a-4c5b-a3c6-915a16b48713"
        },
        "item": {
          "id": "42ee64bb-a9e9-4eb8-bf90-63916fa5304d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "91e89e32-d3fe-4d7e-85fa-7d99d576086b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94332770-f4ea-42aa-9d72-683fcf52f2df",
        "cursor": {
          "ref": "5400bc9e-b400-4b79-a05a-e7892580ca8b",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cc22917d-013a-4e8e-9e7e-4e6d4f8753e6"
        },
        "item": {
          "id": "94332770-f4ea-42aa-9d72-683fcf52f2df",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b0bcf3a2-8e08-49c8-a431-74e425e4caeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b733f150-3e3a-48c0-ba29-beaed2ede200",
        "cursor": {
          "ref": "0c731bdf-20c9-4038-bc75-23cb12afb61b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00b6bd9d-fe18-4bff-a72f-d11bf5036903"
        },
        "item": {
          "id": "b733f150-3e3a-48c0-ba29-beaed2ede200",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4bc54824-0ca6-4d13-977b-94659fe6b17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29f8de8-dd56-46f0-9b37-c31865cead6e",
        "cursor": {
          "ref": "9e94fa95-0f19-42b5-976e-e36b979c8a8f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "983c63df-0e47-42c9-990b-d7fbb08433cf"
        },
        "item": {
          "id": "d29f8de8-dd56-46f0-9b37-c31865cead6e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a076459b-bb39-45da-ad00-d6014b1b1815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3850b33-e937-460f-9702-f596b7f96d5d",
        "cursor": {
          "ref": "346c6c04-b6a3-4d14-9f20-3954d83ee797",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0ecd8051-9418-4a09-b8b2-4c92f6de83ce"
        },
        "item": {
          "id": "a3850b33-e937-460f-9702-f596b7f96d5d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da46bc85-e6aa-4069-bbdb-645c7e16fc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe551e-5682-4b32-a4f7-f565424d15d2",
        "cursor": {
          "ref": "eb2a7035-6888-4394-9f66-3d988a4c52e7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "692541d2-5755-4a88-9c74-58ccc0d5e11a"
        },
        "item": {
          "id": "abbe551e-5682-4b32-a4f7-f565424d15d2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ceb1e6ab-2ea2-4e27-b8d8-9e81b8edebe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa75c5bf-6a40-4beb-8832-c0b5bea731f6",
        "cursor": {
          "ref": "2498c6ee-f005-442a-80e5-31e82997afc4",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "468a6381-297f-459a-a148-d6d9250b64c8"
        },
        "item": {
          "id": "aa75c5bf-6a40-4beb-8832-c0b5bea731f6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "68a80a07-e1cf-4aba-a7b8-1e594b5f8240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c329ec4-5792-4bd4-a21e-72813238b080",
        "cursor": {
          "ref": "263fcf49-5c02-44f9-957a-f42403bc1f08",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2b572120-922a-4106-8043-d8fd0a470066"
        },
        "item": {
          "id": "5c329ec4-5792-4bd4-a21e-72813238b080",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b9c13b16-520b-4c61-8ec0-674ceae4a0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3538462-5c10-4dfe-9041-7e14623781fa",
        "cursor": {
          "ref": "4b8fbc22-1574-4749-8a27-5ef3230dd594",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac122506-521a-44c5-9394-9c77ba5c404e"
        },
        "item": {
          "id": "e3538462-5c10-4dfe-9041-7e14623781fa",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6fddd6ff-5b48-4662-8ae5-bbc2bc6e8f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d9ebc7-b00d-4405-91ed-5d67f5646350",
        "cursor": {
          "ref": "87eeacf8-a4b4-4cd2-ba3f-59d0665dd9a3",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7306d661-975c-4255-9b5f-debb3fa22d52"
        },
        "item": {
          "id": "a3d9ebc7-b00d-4405-91ed-5d67f5646350",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eaabdfd1-7e38-4dd6-b726-1651b0d55d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f150aa9d-9b1f-41f0-bf5a-2d56bd69a521",
        "cursor": {
          "ref": "68c0beb6-6de5-470d-aaf1-6d055ed62be8",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fd2a951a-528f-46ec-8178-6804caee5a5a"
        },
        "item": {
          "id": "f150aa9d-9b1f-41f0-bf5a-2d56bd69a521",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a48bf627-3d34-4eaa-a08e-7f34ec3e10c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1646f4ba-1494-49f0-a4b2-07e1929d5183",
        "cursor": {
          "ref": "be2ee386-5a1d-4ca8-8609-626d91850718",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "407d6ec2-479e-43f5-916c-3a4ac4f06cfe"
        },
        "item": {
          "id": "1646f4ba-1494-49f0-a4b2-07e1929d5183",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7e723456-e319-4320-bcd3-4a9dd4a6b503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1fdef1-523d-4767-a7a6-6a5554fe84a0",
        "cursor": {
          "ref": "0645b1c7-d312-4c32-aa37-03514f11518e",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "59040a97-e05a-470d-b2c2-fe46e1d19ee6"
        },
        "item": {
          "id": "ff1fdef1-523d-4767-a7a6-6a5554fe84a0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9532e04a-5a76-4ef9-be79-c6f1832bb4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8b1074-2aee-4315-9f9a-a34ddff8e9f3",
        "cursor": {
          "ref": "b1e7c77b-498e-42fb-b53e-4102d61e0904",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "461b7e31-16ac-4c79-94ad-9edf7ac4ab0d"
        },
        "item": {
          "id": "7b8b1074-2aee-4315-9f9a-a34ddff8e9f3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "61c49191-186a-433b-b871-3f4d61f77905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b2fe38-8e4f-4fbd-84f2-aee11b866bfa",
        "cursor": {
          "ref": "1db5d750-14bc-494f-9527-4ebd84085f6f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fefc5ccc-ca8a-4bb9-8d05-73012a3f7310"
        },
        "item": {
          "id": "d9b2fe38-8e4f-4fbd-84f2-aee11b866bfa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f162a8d5-9e2c-4edf-8322-c01edd09ab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b865270-ad00-4cf8-9f98-8c5dcdb6f4c6",
        "cursor": {
          "ref": "f0c00108-de0a-435f-bc06-a73a58929e4b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9632af5c-3155-4994-9541-0f16a53d0c2f"
        },
        "item": {
          "id": "9b865270-ad00-4cf8-9f98-8c5dcdb6f4c6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fa2848ad-584d-4912-8252-cddac9f1bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b865b9-4af2-4913-87b3-32c4cc795cfa",
        "cursor": {
          "ref": "c3bd754c-775a-4888-ae5c-d69bede51b8d",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0bbe35c-b4f1-4d99-a5d8-c1362fc8205c"
        },
        "item": {
          "id": "80b865b9-4af2-4913-87b3-32c4cc795cfa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3243b068-ba5a-435c-82e9-a4c5716bbac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5287d0dd-995a-44ab-bf7f-465e099db02c",
        "cursor": {
          "ref": "4912df43-3877-4e06-b517-3db95e7d3889",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9bca9ed8-0ec1-4d33-9151-134cae729431"
        },
        "item": {
          "id": "5287d0dd-995a-44ab-bf7f-465e099db02c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ec83487-3ad0-4842-8bba-f73e3bd5c286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b534d63b-898e-4992-8a62-279115321de0",
        "cursor": {
          "ref": "8125f42d-22b1-452e-a702-68c2c2531848",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "74f9f1d7-ae26-4764-9945-f29260626f55"
        },
        "item": {
          "id": "b534d63b-898e-4992-8a62-279115321de0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d05bd546-c456-4b9a-b70a-2b635ee22832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfdca72b-cb8d-4e56-a638-9ac3e2cea3a8",
        "cursor": {
          "ref": "d1585c7b-47e1-4009-9c06-bad5e788ebde",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "82c0c5d7-4adc-4396-ae40-8caa308f8aac"
        },
        "item": {
          "id": "dfdca72b-cb8d-4e56-a638-9ac3e2cea3a8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2cddc6d2-7403-49b4-af29-94e0601babcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1b6da6-8135-41dd-9d97-26b9b70c3436",
        "cursor": {
          "ref": "47e42baf-d03b-49f0-8d0b-8c032de61fb0",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d5007792-3c0c-4d28-b1d2-2ddcfa7f80d7"
        },
        "item": {
          "id": "ee1b6da6-8135-41dd-9d97-26b9b70c3436",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aa82b04f-5671-4f93-88d3-404386f07a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdc0f4d-574a-444e-a62f-3b91e2553f3e",
        "cursor": {
          "ref": "963a83a9-bfa9-48c6-9155-b7e0a9cf159f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "caa05bca-66ba-418f-8f47-db56fa2c7947"
        },
        "item": {
          "id": "9cdc0f4d-574a-444e-a62f-3b91e2553f3e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0def901e-fff9-4be8-859f-f32e87bd9b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9ebcd4-3e29-43f1-9ec4-5493c04442b1",
        "cursor": {
          "ref": "b136860e-546c-4169-ab3a-93b814af04c0",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "da9374e2-8c10-44da-8590-ded7896a6f86"
        },
        "item": {
          "id": "2e9ebcd4-3e29-43f1-9ec4-5493c04442b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1c8af837-c24d-43b5-a1bb-b794de49f452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c514015-fb16-4425-8100-4d79b714d8e7",
        "cursor": {
          "ref": "e7a531e6-b046-464f-bf76-eb7053261472",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "10142682-50dc-470f-a7a8-67b6378794b7"
        },
        "item": {
          "id": "2c514015-fb16-4425-8100-4d79b714d8e7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e3e1c895-4ae8-46f6-8cb1-57342153ae0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05a2f67-1e00-4e2c-927c-77b81764a989",
        "cursor": {
          "ref": "e95421b8-14aa-49cc-a1fc-7a420df0aebf",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b27eecdc-6236-4f08-aeb8-d58f2f31c372"
        },
        "item": {
          "id": "a05a2f67-1e00-4e2c-927c-77b81764a989",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e0139fa3-9272-45af-9abf-7a9b71347508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf3b1a-dfb5-4399-8859-0ef5629c3952",
        "cursor": {
          "ref": "5ab7831a-2e63-4f82-86d2-b6d8546c0df8",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9483cf27-e0b1-45f0-a320-9720017139af"
        },
        "item": {
          "id": "2acf3b1a-dfb5-4399-8859-0ef5629c3952",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "349ced0c-6f06-404e-b6c2-123f55f94aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b292a38-7b6a-42c1-aae7-6c8d078968c2",
        "cursor": {
          "ref": "4e35cc2b-294d-4e3e-a96a-351be23e954b",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8e698fe6-4172-4686-bc4b-c8fd8310ee01"
        },
        "item": {
          "id": "7b292a38-7b6a-42c1-aae7-6c8d078968c2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b1f2891c-f985-4ffe-a6a8-0758cd613107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbb2717-7df5-4e97-9c4b-0f22c8f17fa9",
        "cursor": {
          "ref": "63bd65b1-aaee-4ab6-906f-f993dc847db3",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ccc78aa9-d37f-4d03-bba7-185499f57e54"
        },
        "item": {
          "id": "afbb2717-7df5-4e97-9c4b-0f22c8f17fa9",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "964bcdff-38af-412d-b89e-99c49a101418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6134fed7-e50b-44dc-ae3a-cd5f4029f0d9",
        "cursor": {
          "ref": "00103eaa-1afc-4b81-b81b-2bcbe7a20839",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "60f9f223-aba4-48e1-8481-302205ca4c67"
        },
        "item": {
          "id": "6134fed7-e50b-44dc-ae3a-cd5f4029f0d9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0c6d1de9-3674-4669-b364-ec6fa45d4e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71da0ba-ddd5-410e-aa1d-5c63ea59548a",
        "cursor": {
          "ref": "cb9d5a6a-0689-489b-bc44-cae236507706",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ae40cbfa-cfaa-4da4-a5f3-1f488265d532"
        },
        "item": {
          "id": "a71da0ba-ddd5-410e-aa1d-5c63ea59548a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e82eb48a-f252-4476-b6b8-97ac5594772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9592dad6-39dd-47b6-82aa-d25fd7eb606d",
        "cursor": {
          "ref": "c57306a2-3d1b-47b7-876d-61146788a49f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ce537dcd-5dfe-4953-8458-f17845fb9420"
        },
        "item": {
          "id": "9592dad6-39dd-47b6-82aa-d25fd7eb606d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4f20c84b-9a2a-46c7-825a-2f8080f98ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ffe1ac-9b04-4ed3-94dd-a2161de54b17",
        "cursor": {
          "ref": "af3cd1e2-39b7-4b1c-a789-7c919c67e27c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a553095a-7126-4e25-ba9d-a45f2fdfa832"
        },
        "item": {
          "id": "85ffe1ac-9b04-4ed3-94dd-a2161de54b17",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2e4799a6-28d2-4000-8d7c-8fd69ef12cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb271cb-3b5f-4a14-9725-e8cd7aa99797",
        "cursor": {
          "ref": "f6675d98-b06f-4fe7-8d98-feaaae6da281",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "607d1ee3-ccee-4e60-8f4c-ce20fdd555c5"
        },
        "item": {
          "id": "4eb271cb-3b5f-4a14-9725-e8cd7aa99797",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7d7e71c3-3944-47f6-aaac-822594618884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c04698-3cd0-4d9b-9f80-1ade40b3ca49",
        "cursor": {
          "ref": "2831b574-9a0d-42d8-a73b-e84d185a0f96",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c0f51548-1b95-4592-a148-bfcc112e38d7"
        },
        "item": {
          "id": "43c04698-3cd0-4d9b-9f80-1ade40b3ca49",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "54d8136b-3216-4aed-8530-01efde1dd165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25501ce8-cff2-4336-a942-60aa58b4cdca",
        "cursor": {
          "ref": "aedcd78e-cbf2-4be9-b665-f3f202e2ade1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9cd98d8e-bf7e-40a1-8dfa-4251d380e644"
        },
        "item": {
          "id": "25501ce8-cff2-4336-a942-60aa58b4cdca",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "edd8a88d-56a0-4a54-a55b-1572964a88a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2400a740-fad5-45fa-b3ea-969c8483c1a6",
        "cursor": {
          "ref": "a9b6be9c-5bcf-4918-b3cc-2fc378042a4f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ea0c5431-6321-44fb-9e95-e1d53da0ff83"
        },
        "item": {
          "id": "2400a740-fad5-45fa-b3ea-969c8483c1a6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ddeb1c48-d4dd-42ce-9dcf-495a53e60e8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cc316f-c63c-4a22-b0c3-95061d57a3d2",
        "cursor": {
          "ref": "95bada15-add1-4c79-be83-683e0858a3eb",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54caba45-b625-442d-9a4f-91d2a8e0df7c"
        },
        "item": {
          "id": "28cc316f-c63c-4a22-b0c3-95061d57a3d2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cbf67594-a8ac-4ef1-9e4e-bdcb6e7b3513",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a22960-3465-4195-b8d5-f135d74bb528",
        "cursor": {
          "ref": "56ffc0e7-78f7-4783-a89d-571e2ab089f1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d06f9ad3-f92a-4bec-aa3c-f291e37abc7f"
        },
        "item": {
          "id": "64a22960-3465-4195-b8d5-f135d74bb528",
          "name": "credentials_verify"
        },
        "response": {
          "id": "03d78357-a3a3-4aa3-9572-0cea0d64b0a6",
          "status": "OK",
          "code": 200,
          "responseTime": 1983,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2169a829-5f07-4085-b93e-f4f45ceb7c8a",
        "cursor": {
          "ref": "1a56b973-5e50-4d2c-b69f-89efae957115",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9810c079-030b-4f15-9eb1-c1faa22d73fb"
        },
        "item": {
          "id": "2169a829-5f07-4085-b93e-f4f45ceb7c8a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3786ac27-1328-494c-859e-e179e9c7df8b",
          "status": "OK",
          "code": 200,
          "responseTime": 2375,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "488dfbe2-d9d8-4951-8eed-d0a3d0fa4f6c",
        "cursor": {
          "ref": "e415be7c-32c2-4aab-a6e6-84f28cbf7d1f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "69883b1f-5403-466d-9a95-7f17778d44b2"
        },
        "item": {
          "id": "488dfbe2-d9d8-4951-8eed-d0a3d0fa4f6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "789feba3-055b-4b69-b815-91a7c37511ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488dfbe2-d9d8-4951-8eed-d0a3d0fa4f6c",
        "cursor": {
          "ref": "e415be7c-32c2-4aab-a6e6-84f28cbf7d1f",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "69883b1f-5403-466d-9a95-7f17778d44b2"
        },
        "item": {
          "id": "488dfbe2-d9d8-4951-8eed-d0a3d0fa4f6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "789feba3-055b-4b69-b815-91a7c37511ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a56591a-9356-4e61-9c64-22ae2c532410",
        "cursor": {
          "ref": "1a307f80-39e3-4964-8920-bfcb1dfaa4f5",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cf1f9a06-b557-49b6-8183-f1d9b3ff9143"
        },
        "item": {
          "id": "3a56591a-9356-4e61-9c64-22ae2c532410",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f97a0c90-50ff-4f54-a99f-caa07973320c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789a5859-48ca-4e23-b7cd-4c2b0a618272",
        "cursor": {
          "ref": "e37f5a9d-926d-44bc-8864-c05c4456cc14",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4fc9a861-e2ff-4846-a192-bb0be8cedbca"
        },
        "item": {
          "id": "789a5859-48ca-4e23-b7cd-4c2b0a618272",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "373083cb-0cd0-4185-b3fd-672e34ab2314",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}