{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "1ec86a65-0275-4380-92a6-5bd558026163",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4e5d368c-97c3-47c3-af21-5f580f8eaa9c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31215d92-c74c-45d0-a39d-3ca8cb127ecb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "acaf2f9e-1f50-486d-bd8b-e049339e308b"
                }
              }
            ]
          },
          {
            "id": "f912d052-39f3-43ba-96d7-9ab737ba0ba3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9c1502db-ea1f-453e-8830-59c1f47d4a69",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3fb95a40-1830-4c06-a924-5e919c3672ab"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "94bc89b9-8dd4-4fb7-b744-6a6e2f309c7e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ff221cc7-7a00-4dbe-9ac0-aefa6aeb0da5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e00f737-4ad0-40d4-b689-6fcb988c99bc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "404e5d7b-71cb-4498-8516-ee676bc29516",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11279f83-c7ef-48c5-9667-f690e833a40c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "023f287c-399a-48ec-8499-b235dfafa930",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b7f67ee-c818-4d0f-aed8-baecae660d49"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3a16251-d09b-4d4a-9170-58c68b1f2c66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5a74425c-ec1b-4d7d-b2b0-afe03ec30d33"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dbf4c3b-281d-46ab-a5ac-d89e5042d99b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d8a4a79c-437e-488d-96e3-b0c8cd9b7df7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adfd23f0-8a01-4e26-8b93-a610c3e04605",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f12cc22-2b88-4f3e-bfbe-e4a4e933ac14"
            }
          }
        ]
      },
      {
        "id": "5445f3f2-1984-475f-a820-3b805e132b0b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e34c7f32-5981-47ee-a86f-c59e2c6d8f59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21f2ee92-ecdd-4ffb-b666-d9120a0f0e69",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5bb2c9f7-e6e3-43a7-9ebb-fea4218438e9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9a5891-de75-4c4e-88dc-b787720a995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb9ed43e-d44b-4241-a27d-0c6a39a2f514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc37e56b-cf5b-4fbb-849b-28f61f20aad8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbfb6e4-3d68-4b04-b303-b38ff78efc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e969f419-49d2-42d6-bb2b-88ba5d39eeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57aa55a4-789b-4943-8cec-e3a972efe893",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58fd085-c1b4-403e-ba15-2ef8bc40d5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc398259-d24a-406e-a1b7-ae8372cd3ddb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8cac6fd5-e6fc-4321-a114-2a4f492973a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "359c882f-5e54-4016-8fe9-2222c8781dc7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e038c-6fb2-4e46-a0ca-739f003d2615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8f0b100-c3b3-4270-8fa6-11b2561fb3f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20923514-dc66-4bcf-8385-aef0575cf0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f46f18c-fd51-4db5-bd37-822390c83500"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "09a9f062-7265-4bd1-b29c-5db4b01e4458",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6c982b8-503f-434e-92d2-5c0e0c0be969",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a9a9d60-ec61-44ff-8b1a-497b57e5d8fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe15db04-ad3e-465d-b03d-144484ac2a7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c376edf9-ba28-4e05-b0a7-f46dcc519a49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2bd3b0c3-c596-44e6-9dd6-9ad5cfef6438"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b70b802-fc51-465d-8235-8b7ebbd939ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a673ee62-ab49-4d8a-8ea9-03a9f206dcea"
            }
          }
        ]
      },
      {
        "id": "bca33e75-2f4e-496b-ae55-8bbbe027d1be",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "16f1e755-7040-400a-b785-67bbbf7954cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a90b558-9b12-4ccd-8002-9fce4b71488d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d9548aa6-693e-4b86-9477-5f2c0935b8d3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8931108-483a-4a26-98de-b8c1f6df5c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffd68d2-8f7a-4903-8614-48253828d158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05996d6b-b789-4d6d-8119-08f74d6329b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "136de7df-f0fd-4f4c-b6e7-34bd5d637fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184d08d8-62f4-48b3-ae59-6137009fecc5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb750a85-7567-4c69-8eb9-fa70da922a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b217ab-3944-4fe0-96bd-73de9d091f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffdc814-ad36-4c1e-a0ae-5f39fd23b898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3aa46d8-aed2-4b9e-b1af-3b9db6a03e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7aa8734-7a29-4eef-b1c9-cc194964c2db",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9338402-a819-48e6-8077-fdfcb18fdf5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f828a3-94bf-43b3-8ce4-2116e46a7860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af9d341-682a-46c0-93f3-b206dbad329f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74d9b89f-90c2-4746-a69f-bae37150dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25904d2-0d2c-47d7-8188-2f3f884a6877",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dba1d9-e4c1-4d00-825f-10c48fe5eed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fe6066-c0bb-4192-991f-43d1afbed481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab1f84e-f181-489e-9a89-f99611c9c04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a5a6ec9-b87d-4376-913e-0ea145d97f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c791a2a6-8d75-4604-b7b2-49b4ab8ab564",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc745e2-8d00-40d8-acde-7f2ef14405bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc4db91-6b63-47e9-afa0-893aac97f11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234a8bd8-7992-4b87-aafc-b56ebbd424be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afd085fb-f116-4660-8de1-d650911567ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a192b7dc-cdcd-4f21-badc-602a0dd20051",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5a9e8e-4d3e-4cd1-aa09-d2b2a6a86382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f1d27a-21da-4d2d-8a3e-8c43920b78d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a35b3e8-aca5-4677-b924-735e9ba9f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "308e90ee-f86f-4428-9b9e-267292c6c73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0044e1-8a04-40b7-95df-aee8b2d06e08",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8880a02f-a17a-4320-aaaf-665bacc6048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a458da-fb44-4cdb-914d-a1175fe85bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1675d54d-c5ca-4279-a33e-0b42a27896ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "558698e0-237f-447f-b9e4-4645ed26ba5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98164819-045e-499e-9055-617c0c9d4a0a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182e43fa-006e-4a89-aa47-e9572b688aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb7346e-b9cb-4d68-a5ba-09de3989efc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41445da1-f18b-47f8-8b64-a356bd56a8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e834dd5e-ba93-41c8-aaaa-e11e8e14b23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd4dfba-7102-4c9b-a642-4a95d6b8f842",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84840ed5-398d-42fd-a0c1-8b4b687b8534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a7c864-049d-4dea-8b40-73e7e6b95f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1250bc63-a8c8-44c6-ade8-1b8258750d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d90d2359-f158-4241-923c-5079668526f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af16ccc7-c484-44ef-b00d-6a1a469adbbe",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21989c9-a415-4151-b633-f6dfdf0211e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7110c32-7b8a-4f6b-99c3-d6bfa38667b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7d1d59-1c69-4f11-9f74-3b42911aa9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9e7e89c-0ac8-4700-8d82-e63bf0959627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facb2b3b-0d44-4d96-b8ee-7d254a80e9d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3673d348-53d9-4ad6-87cc-a0e06d7b6b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf93f2d1-9c69-4f67-8491-2ebdbd873137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c89d116-a9dc-4a0b-9c21-43e7e1fcd7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6630b2ee-b585-4ff7-a193-f5ac1103ac5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b2b6f2-8ade-4f71-a018-be9712d95f83",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fd43d4-a012-4da3-904a-b122d01c8b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0a6409-77fe-4506-bafe-252f3082f07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b13ae6-7fa4-49c0-83ee-62c438cfdc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edcbeb80-2fec-4a41-8071-fe8ed4dfc995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038a88a5-f70f-406a-ad14-4682d524c1ed",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f56a002-e273-4f0f-bc41-ad10334e09d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d149c3d-b492-468a-8c8e-38eb5dbf8829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd3312-14f5-441e-aa83-ce6807cba568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46c74d82-a748-458f-9e68-dff0759f0bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53931d3-6e1b-4736-9bbe-a985b421fac6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86326241-10b2-4fc8-a648-a76474df3a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6fee6c-1e11-43a3-bed2-126a77973bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32998065-18fd-42fc-883e-6cca125fe732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cddaf454-ae3e-48ea-97ff-db25baefc40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ad2cb7-505b-4dc7-acb6-eb2d092d830e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cb24ff-856a-49c3-8178-8ee87ff9d00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acb133b-cb48-427a-84d0-39946b2dc551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc6f554-98d1-4f0c-8a2d-93fc3228b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "546fac7c-ea7f-462e-8498-59b59af90af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ba85f9-095a-4fe6-8361-b2b0874dc2cc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4944ee9e-2872-48cc-a996-f6b8fe773f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf4bf0d-bed3-4ef0-87ec-1508e06f38d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30280c2-e9db-4ca3-92d6-cc03a5509be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bcff49a-aaa2-4245-86a8-fe66e8586def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb0e70a-d75b-4c24-b1c8-7364fb1f8326",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637db1c1-0986-4ecf-9729-9577463f8f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e17b951-7159-47ff-acc8-db8aa235df6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1554628-458e-4b7e-95d9-314072dbdc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f081d535-b455-441f-a95a-00bbcc01156a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb30c2cc-54eb-471b-bd0a-81c8219c3b92",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2308f6ff-13a0-4829-9dbc-189bc06ce127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a79f49-4ff6-482a-9968-66bcda7d16f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff26f4a-a03a-422e-9082-e2628bdf784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2eb44f2-e146-45eb-9f12-675dd6691962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34517727-c0f7-4252-b5db-4d5c7b20c519",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f97cc3-4d17-47c4-af91-e358a4726b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f3c649-d17f-4417-8a98-69073044e64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c8bdfa-d644-4de5-9bd5-80c6d9ea642a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4194c7f-3f45-4825-9754-7c1d932969cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45348c72-1ab2-4868-86ab-6ba743613460",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fca32c2-96c3-4f33-8251-b875e81b3cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fe3e99-5647-420c-a7b3-39fa7c81fb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0d56e6-8cac-4cf9-85ed-6fb92a3cb9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f24252f-d144-48fd-b7a9-f00e0dd1d699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17967b3-801f-470e-acf8-61bd6b510a3b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4e2aaf-e2ed-4f63-a1cb-046a6ebb1ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1201eb-707e-4c63-a4e2-b95b97a4da46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ee354a-6cc6-4447-a474-d15f3232ebbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef5304c-f52c-4dd9-a879-0b2b6bb093a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae550d8-4a09-4d47-b266-320d11a85732",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a56e1ac-ebfb-4605-91e6-1eab391a72ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169f9eb4-4517-4396-a774-3bcf171702ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edad1f86-26ab-4d37-96f8-d7decf4d9ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "732e03af-123f-44ee-9932-264af32d56c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6731d0-bdef-4e30-af07-290184a0c5cf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2b66ee-ab09-4f73-9e41-e05ac8ce8244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e66070-8a99-40c9-8bb6-d406a615efe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c43983-26f9-427a-ae35-909edc4040d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e08c15e-9fb0-40e4-8366-0eb11b8c9db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c948572-3c1d-4d53-bf40-5a720eeb0a4b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57aa7f63-2d4e-4cfd-a1a1-612624995848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969ba88d-215d-4876-a166-586c4dcda6f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d2d8e9-8ca2-44c3-88b6-e8bc16265225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e539d3-d73d-4ffe-af0b-f80c81e6a598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da93904-ee88-4e33-9a03-3996bf2d8ea9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b131f1d1-e697-40f7-8eeb-9661d37f9155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57600834-0012-4791-bace-51a26961ad75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa367e5a-dc57-41d0-9e18-02c54642ff77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa7f4e1-23f8-4878-bffe-a53123fbe075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff4e59b2-999d-4bda-a5ce-942bac5d4035",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fb8bfd-0592-4f9f-9c08-8316dff1e975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3af3b5c-f050-431e-a25c-e675efbf30ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a20446d-3727-431d-bad3-10f0f9d211dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ee476a-5cf8-44c9-a839-469ae87434e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec6518a-c336-48cc-84b7-f02475eda8c4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8ed3f3-48fa-423d-a4ec-70cf9bbac89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23be78f0-6b3a-45e5-aa40-aab04d2247d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aac737-3c94-443d-ab49-fd1609278ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a9551c-94e1-4b54-9b98-d4724a587eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af19442-9b17-468d-bc54-d9edfb64046a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0c206-c97a-4c93-b37a-9f87600fa6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c61f4d-7999-45d9-bc74-18b163b83870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4113c27-dc2a-4879-b545-d0c0f9f7706f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ee042d-96db-4fd8-8b24-2d491921ea67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fcadcd-9ead-482b-9b80-829511acbff2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43632f9-229e-420c-9cd3-83639398fa5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbee2126-c5b1-4bcc-ac1a-3d7774464941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212f69cd-e62d-42cb-ad5c-c01183b37752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df98018-bc0c-4b2d-82b5-a33df865f54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13117f0f-6a2a-4d01-9b18-dff482ae1728",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e507e1e-778d-45e1-8a32-c13bed66ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ee2e10-9f0a-4537-bd0b-15e57824d490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b93caef-d6b6-46f7-812a-31d63005b47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b2536b-83eb-4975-88ba-c27eebe86a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575c5da9-4e29-41a7-a439-649e62aecfb0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d5dd76-82c3-4b01-b7ea-adf6b8b9df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd625031-a95b-48b2-a47a-972800bfc7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f42b764-8ee8-438a-8d96-6fe0b388ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ab03a2-5e4b-40d8-9f9b-479e4083533f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaf9bfe-87c2-43b1-93d5-3fb3659ecb6e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7186d1-2a73-430a-a6ce-2db9c4e98e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a249b7-ef4b-4c55-9465-eedb8ea582e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d902598-64d8-4a03-bae0-16558a5e3883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb51ffaf-cd8b-455f-8a2b-9e2d981f9a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b3aaa9-eb76-42f1-b236-6725d8bbbd9e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b845685-af53-49a0-abb6-16a37fe3e31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aadfe7-275c-41f9-828e-8357777a649b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ae1281-b6a2-4e41-9e4d-cdfdd4965c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbe0b1a-7a0a-4bdd-8c2e-bbe9140940fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f04fc-8388-4d76-b8c3-bd1aba1a4e15",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c18465a-a5ab-4f69-a3b8-0bd6abdb6264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469b7466-5ae0-431e-be31-1d9d4420cf6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6252f853-ef2b-4d50-946e-a6fbed734855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8c55a8-1882-4a8d-baa2-f2222055e4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be570ec4-c8c2-4622-9d9f-b0db4cc78b30",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e279e26c-eee0-4bf0-9ce7-61360a5ddddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3924b1-1552-49f8-a3d6-0011ad3c15b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ee78ac-fb6e-48d5-9f8b-14888aadfec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fe301c-299e-498a-832a-b0404b0b681d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1c5a72-79a3-42aa-a827-ee61418a83b6",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322664d3-6498-40aa-8777-655b8b5b5605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f4eab78-7eda-4448-be06-057af959d8fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1a1ab6-d0ae-44f0-8f83-27057c138d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7391c467-9879-4bb7-a54e-06c1647a4373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9f0bd3-0288-4b30-b361-fc8e29243ded",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0894097-efd1-4637-bdff-964710b80a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6eac3c3-8723-49e0-97a6-bd1c9be21ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafc27f1-272c-4cf2-b449-ee225cdb75a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0db30578-3854-4231-bc80-88a4a51c08cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d49de02-dc52-479f-95a5-9a1b27b381e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10534a90-85e5-481e-beca-b17ff7a0b4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672357b1-e5ff-41a1-a735-930209954d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86271dec-6106-432c-93aa-28f8d32827c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e192ae-ed62-4648-b34f-9c290d7c56bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1975562e-211e-4d82-ad9a-5c91f9eeb3da",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f77496b-0c2c-41b2-b45c-aad50c2b78d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39aaac2-a6ee-4ae8-b48a-eb1fb06416b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d7761a-56d5-4d76-910f-41d94f672092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3940c93-95c5-483d-a24c-857bb853d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd0bd99-e0d2-497f-ab26-9af880e78099",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955470cd-61c0-40d3-b876-9037fc524e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8046ff-f842-4bbf-995a-94adf8d8d1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f887bb12-280d-453d-b2f2-0ee1a0b66864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4b68d2-79dc-429a-9a18-70d0b79d6328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccea38bb-8d90-49a2-9406-e10a1a113c96",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb2d291-2a58-4049-b77a-184f9d8efb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7881b78-9bdb-4045-92ab-f649f736bd98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5030ae6-58fa-40ac-a3d4-f3a8543a3b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcb7d8d-dc35-4613-9472-81d16fea7603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d7f625-70e6-4f59-98ea-c572062ca901",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797fdb81-e8b4-497b-b125-4af59064b59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa00b49e-c0b0-4379-aa67-87d35a56e42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd74a6-b6b3-4427-aada-17abbe7d6629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7cffd00e-6f5a-44e6-aab5-b986909c2fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c65854e-3d5a-42b5-9472-84d7285065ef",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dca9e2-8629-4fa2-85e3-2b0f4097e575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f38304-c499-4299-aa57-63f59b4f4968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05259fd1-1b1e-4f12-a23b-a07f8cdf66ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e88e8ea3-4b34-4630-a409-3a9c7eec6b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa745d9b-96a1-4573-9a3c-48e1f5ade6a3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d48bd2-0981-4bab-9f91-77db2b0463dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e205a9-fc49-4a89-b46e-fe4dafe17d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9541d3-117a-4666-9a53-4668e0f8cbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6d35cd-96c8-47d4-a1cc-bf367eff074c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37b5d8a-b0d5-402b-ad06-fd378ff85f84",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c742372-ca4b-4a08-815b-a1e52ef49176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c7cd8f-156c-473f-9570-557e1e950f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1732abc9-7064-4f59-99b5-062282b62704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bcb2c77-80b3-43a5-8a58-e02c3dcda568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1211f76b-a7f7-4618-a86f-2a45f5870e09",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3f7ca8-715c-4b8f-901f-0b8d7390a163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30142b26-5070-4916-bf1b-a80d4a5f1695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0408254-a2f1-4d71-9c6a-edc3b7a1b7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44724eff-e2f8-4082-845f-afbf0cc52b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309f32dd-a481-4090-806b-57ec9bee9a4c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdff09aa-daee-44f4-a189-f70337694be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b6dbc2-70d3-46b9-8361-db9875f5a1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10264a6-2ae0-45e7-994b-31852af0f589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95fe1748-62f7-46f3-87dc-9fbb57d88bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d37d8e3-5224-4fad-b131-197b115db8e2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c96ab5-a883-4427-9044-88684cb83374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37b3afb-ba07-4bf4-86df-aa2f363ac0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1e72a1-0fd9-485e-9167-6024e80f3965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a984a4f3-7a2d-4469-9cd7-ec2a25a2cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efebef87-d2e9-4e08-ac0d-6e12a703b1fe",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c6a9e5-4692-4f2d-aa66-1e9206c6ac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc65ba1-d16c-4936-9474-18179cb07628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a562f19-f9b6-4630-b4f7-80054a07e3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f79d398a-7734-4f7b-91c9-33c7e7f3b44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727ecd67-1292-493b-ab2b-85f1e3553048",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88430859-9d83-4ce9-9306-200b421506aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247b2b1d-f07e-4b25-83dd-5c3cf8d60f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e90358-4c72-4b13-982e-bbf1a2a9e9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "163a940f-1e66-477c-be81-fed4a682a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5d474b-b346-44e6-8b45-64eda0957232",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8874bd05-2074-4da5-9dee-b97dac18485c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f32c30-3a20-42fa-bfd0-1f6313d7b7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffd185f-8692-43d0-9f94-358dd1e4b94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "061d9f5b-286c-4702-9864-ca4415286a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e04835-6bc8-4e3d-8a9e-4b669b766d74",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c733b91-314c-409c-a84a-f2dff93926a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4734faef-ca52-46df-8312-267b6ea5262e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d37686-4bb2-4e44-a4f4-9fbe1bcd9772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2753f824-fbdd-402e-b624-db6d7294dd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16ae4c4-2cc9-4e71-8e5d-726b7775cc1c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bfc2de-0754-4342-b1ea-7844615a80a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a886ff90-c4e3-40d8-9e39-2aec414156b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f4ef0b-1a46-42a7-8693-afd60f66d117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b61fbc-02bb-40ea-876a-42527eda4e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c14be01-23e8-4830-aec7-333aef7457b3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e40135b-c3e7-4675-b202-310f1cb09d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61935606-c51c-4129-9273-f06632d6676f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67561e8f-fec0-47db-8adf-1ff11d385704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ca9eeb-465c-4a48-8e56-3c3360f75e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4beb2bfc-2e98-4f4a-8add-3c04d2535701",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4ebdd4-136e-426f-8d9b-2aa3a38e7cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1b8f2b-e939-4cd4-ae77-ab41fafd378b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99eab943-b6d3-4aa9-bc1c-5595fdf8b953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "202ec44d-b01f-46d6-9d8a-18c986826296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f67186-b9c9-433e-b82c-d6c415effbb8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947bd879-9394-493e-a013-dd1517aaa366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a87902c-311a-4322-9e6c-37e9fd3d8080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d9ba19-dda1-42d9-8b12-ee79d2b68ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ac933d84-a754-4dbf-8402-89c41ab07c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccc8259-a412-4ba5-b92c-480fbca714a9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d24fa6-eb1d-4d3c-9ca7-3edf3888d020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d706fa5f-4a12-4aa1-9d63-9adc60ca591e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15cd0ab-ff90-40e1-a73f-0278b47b066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b67d6230-9aef-4a4f-ba0f-d8e6d0533a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a16235b-932b-4127-8fe3-5ae2d89ed1a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4112bfbe-07b4-42f1-ac51-0f22c8735e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0f83d7-2912-49bb-a0b8-656f6ed989ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ed0075-9dcd-4ee7-8160-31b48e907a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "772335c2-927e-44f0-a7a2-db4878e1a973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055194f9-58f0-47cd-8e2d-ab16436f0318",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ceefa0-d829-467c-aca2-5dbcca090f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af5cceb-3033-4f32-87a5-7d30f0851a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c5a976-e186-4dc1-986a-3ae2293a5f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22d5507b-095b-4ba7-a50a-965fd72120ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3f8f5c-bcb5-4a07-8e72-17720950b81b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22238311-713d-40b9-bab3-8f84c154bcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8da1b2-5138-4050-8f0d-1cf8ee8fdc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5e4aac-e7a6-4da3-bc25-c6c766875759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0541ed4-91f6-43a3-a5b5-b0240f4c94fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f06a0c7-e874-4f4f-8b82-7a4daa589800",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c0b05a-51ce-41dc-95b1-7306c3aaaf3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f119e3-d219-4ba3-b616-68d784c363f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e5780e-7708-46ec-b0e3-36c826f44f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "294a1b87-6dcf-48ba-8e18-0f49c1787c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ddafc6-69dc-40d7-8073-a731960e4c93",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaadea1-98e8-4d88-bbbc-af2c8e01ebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21f3911-4282-4477-a5f2-1bb88935ab24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa85bcc4-c2db-4c54-8ada-d888260af6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c33d4be-c7db-441c-ba34-087981c9faa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768ac75e-2b05-4a46-b119-9bd3689366f4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bcc7f8-6aec-4584-be46-f2bdb681b064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e085009-0aee-4ca8-8677-e40adc3a9525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126752ce-83e9-480c-8730-33d21c0901a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0931b2c7-f15b-462f-ba19-7dd114f263ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd2e53d-ee40-4af4-8997-d7bf62fcace7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15351ecf-3af5-4e1e-9acf-7321adddc7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02f535e-ed29-4222-a8de-9575e7a8c784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a839d6-4e12-4f7a-8763-47fa7f49de31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9493aa19-fc43-4bf9-bca4-7d04ec4fcb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6c317d-83bb-4bf5-b9e9-94a832d2095f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c36e68-557e-419a-9be3-841dfb99e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8efc50b-b1c5-4fd6-910d-990238e204e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcda9a8-6b8f-4ddc-80da-0b29c75fe1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0529c6e7-a2b7-4cbf-9029-2f1d49c32ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60110398-02ca-4f5f-98d7-3201381b368e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1006de-8d0d-4bd7-ae83-cc1b07b14fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191b7285-a5d5-428e-9221-ad8a1d99b1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aaf745f-0c29-4994-90c8-fa2206512564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "847b0d12-4507-4d42-8c0a-3b96c1d4d8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e016e4-73fa-4d9e-89ea-2a934e48eed6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a66463-6e4d-43ec-a8ab-61c926462d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a4748b-04d5-4caf-9c63-073d2902296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ada0e6b-5b62-4121-8557-7b0ad00adfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d41e9d48-6886-4627-ab1e-31f200757097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b8bf7b-5dba-40c1-b61e-50de032a0d87",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83af9eee-ade9-40c6-9773-4081bb0662f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73d0136-a397-4717-8d31-d76ceb8b8386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85afd8a6-4a6f-4e9e-9d1b-0d9e5dacdeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1025059-4a88-4c27-8d08-dfd9c5c4574d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6fa26b-35a4-4188-9f66-da93efb8cb82",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b0b092-0c29-44bd-8bbb-173d06848b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d497543-77bd-4f55-90e7-77b967308c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d329ef12-4d17-41d5-9859-495ea3c4c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcbe3bd-f049-4a8f-91cf-7a6e423c3126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fe242c-751f-4042-bcfb-213aae54fe95",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb725d5-cdbf-4f08-a650-deb68baf4c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e562e8-bdc6-4633-83c5-9f42f55cf57c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab536ac-2877-4c86-b110-52893d471e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "578c3306-5eaf-4f74-83bc-783b6c18eebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e18a3a1-5b59-4a9a-896d-1b17ca81feca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdd6eb1-23b8-4b86-a3a5-9fe07f9602f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918e0d7b-ada7-4c91-bf3f-ca96a683742d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee09c722-e60a-40e5-b11c-bfe3e190639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f51bd7eb-8696-425d-9266-2f8aa5b62559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0373369-a09e-4970-bf9f-9a830e8da128",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeea348-7f2a-4701-8b78-e0ec7bb8de90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ebc048-1568-4cdd-bb15-abd1c9587bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7442a343-7607-42ed-b063-3bd1f21ebe11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3544912-e16a-4b73-b179-ee94ed294c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ddd9d9-bd7a-4e0f-a9ab-516675c56d0d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da82e4dd-a5d7-4566-9194-cf2524b013cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65995ef3-b5f9-48bf-81ee-ca6bd4755ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be758bd-f349-4c5d-b636-7224c95a17b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8316a534-4951-4749-9794-3af0f4ae321b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2665c45-ee4a-4edd-8af9-08e461c1f10c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359e9e9a-0283-41ea-8ec7-9319b79119f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3662bd-0f6e-408e-a6b1-3ff9099cd4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5917a26f-003a-485b-8748-cea80b280a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "884e320e-b6b4-4ae1-9ebe-b8153b645eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9be1bfc-1845-442b-a2da-8fd8309ea710",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535ba849-66d3-4db8-8ca2-8ad5a2a3c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d762ff-6418-4cce-80e4-d8a123e58361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0477782-83e7-4395-81a3-c585545a08e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05c6073e-a287-4633-9f9e-3c4fea49b6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b453e34d-2bf0-47e1-b4cc-c4f5d90c04d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff19f7fd-5fc2-4c34-9f9d-b8525f7e37f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e878d35-cc4c-47ea-8d2b-dee2c164f68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccdbb41-556e-4629-8a2c-4058735b6b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ab7776-0bc0-4006-9e97-78c28941df1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c39254-88cb-42e0-a2ce-ca86f1f06fd3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e69447-80d8-4339-b153-c9b1383df757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4ad0f6-0839-4336-9241-2e5fedd58e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cf5230-efaa-4c9c-beb4-88567db88f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc288a0-9edc-44d6-8241-108427b203a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce97232a-4484-4149-a279-5c7c7d76953d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d335e85-b7b7-4b6e-a6a6-4c1a97170bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a88f88-2a01-46f1-bb6f-2bf61a90cb27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ed3f32-1116-4105-9e35-8764c8c1849a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15e14b6-43b5-4f08-a210-3f2e11c906b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968cb916-1a77-4bd3-87c8-38399dd8990e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8766e7f5-7bcb-4943-8648-755565923af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f5b93f-d40b-4f43-8088-fff837b370b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3ec113-612c-425b-9e62-1204212f8c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f96554d-facb-4747-8967-34578bd85740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e968694-0154-4877-93e3-84ac2ac66a4a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac7597f-0f0e-4241-8559-75e3145c617b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fba41dc-8e90-40fd-bd40-3792911fa664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e097f141-dfea-47c6-80ed-3e23f234625c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11b1d72b-5fd7-43ae-a2cb-5eb3a566f53d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b7926b-ec5b-48cf-a295-a9acabc50f94",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0371fcfe-fe53-4d48-a47d-179be959ef5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c91c0f2-159d-4425-bd88-d288d0536a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bfbb78-8a1e-4be3-b171-9f11652f454f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceee7314-4e33-49a1-9e8c-f1039423c539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dadcef5-92d0-461c-ae2c-e08914b585c1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2fbda8-c863-4f65-8934-f0a69dfe07b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101784ad-dfb3-4643-a79c-dc32dfc28c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aecc17-e5bb-42e5-863b-5924b0a6d065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a414ab4-88ba-4bf1-89b3-851a2b785170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e616e9a-e8a8-443c-be75-4e9d1c90eccc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83091371-21de-4417-884c-7f026275cb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030a8a9d-1251-4141-84fc-1a34708b75a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d03f73-268e-4dd9-b500-93856272fc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1604885f-7c16-4aba-adeb-376ca50085c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d041477-fd78-4a9a-9b40-8612fd9d241b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1909cc98-927c-44c9-a67c-88c5f663b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab03678d-936c-46fb-97aa-9eaccc857fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcfef45-8b24-4374-bc02-0626f7fbe7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26740d4c-bccd-43a3-b4d2-f6cb3a98fca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa2504-6fb9-42f0-a706-b91aeb2ce02d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7478e5-4c25-4231-852d-2b26217a2abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d126d8-61e8-4238-a922-e1749398eef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea15af8-5141-4908-be16-a059c72aa600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8476b6-fc14-4a2c-8b03-42e26bdf169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5fbef6-7866-4561-a5fe-05f78cde539c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4085928-96f0-4574-9daf-8e1260ff5fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9d640a-e527-419a-9b80-8af634eceeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4968355b-fbd8-4680-b541-3cd0f7bf67b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8269e8-75bc-4dcf-b654-cbddf5840b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8161e6-7e64-4fc0-9bfc-742650b049d8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841dc13d-6560-4b90-8d71-8fccf99ef6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8b2dfd-324c-4008-bf15-253ad9aa007c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b007a0-a755-475c-ad59-041e7f30ed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "532bbf79-1df7-445f-b15e-138b769a3a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24eb6dce-8dba-462c-a5fe-535f21b89eac",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e50655-c484-417a-83d2-c19c847c0295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35655334-e8bc-42ae-bd6d-858c9c58023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238a2282-601b-4442-875f-d3cecd4c94a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7121c35c-36d8-446b-805a-dec36e3d70f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694460f6-73e0-4746-88c4-6dcd73099c27",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f2a231-9a26-46c5-a8d1-739353a2c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5420940-1293-452f-9329-6633b359c54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56be3796-42dc-4d9f-ac80-923eda94fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a97a746-a5a8-4ba0-bc93-631d60a94af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7638cbc-5fa3-4585-a138-40355bd57f8e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766bce66-930f-4d59-b93d-796d5a2a70b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7525b7-df7a-4504-bec4-7cc9b15aab7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea54849-5ba4-4765-af9b-33f5e74cbe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "65c21d15-da46-4787-a5d1-04a38884e05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2095d5-1beb-486a-b50c-bafbd625a057",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08ac6b6-e89d-4da1-b2ae-47c2bc4d1ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e7fa2c-8794-47d6-ac50-ae1a25fb123a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76114be0-084e-4480-8efa-208adf59d217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb28fc18-c9bc-47d6-9854-311c5628d9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8688361f-54bb-40b6-a60a-d35954e1720b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89adbad1-8415-4d07-b366-38d8ed195aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ffee874-a5f3-4a46-918d-6597a577b774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f539a83-1b2f-4842-bb27-29b7250bd5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac88fb77-4122-42b1-a725-8838ba2e796d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61b98cec-675d-4273-8b4f-5ebafa07475a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7a2afc1-108e-4672-a830-53833fbeda6f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00558e62-8426-4aff-977c-0ddd35a3872c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c2f8e0c-1de2-4b93-8472-a50c3cad8b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a8d3a8-be49-4416-996d-a587b2c759bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88a0e696-84b2-498f-9e57-1e8e61ca8ac1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e602fca-f86b-4be0-88c9-98a65b37b803",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "791fa093-9cdf-4f6b-bde0-0a55710326b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05fa4c44-cb67-459e-86f3-d6eb9969a7cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76795ded-a2dd-499d-8821-782fc8033eb4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f29f1ad-ec91-4c01-89b0-01e4b5ca33eb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe883bc4-f7d3-47bb-8dcd-73a28f222fe2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3400c14f-c6a3-42f2-94c1-855aa42f148c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67bd3f2f-1cc1-40e8-9006-b4c5000217b7"
                }
              }
            ]
          },
          {
            "id": "95162f1c-f471-4e37-9282-59423aaf1a35",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea21c26b-101c-4ee4-8b69-98b0f9224331",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "270bd1a3-096b-4131-9b31-cc0d6191733c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de4ae8fc-037c-4817-87d4-4d17a864dc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bb316ebd-33fd-4ef4-8040-35f35b447512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffd4021-90e4-49d9-894e-0c957f2d728c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd0edca-dd4a-486f-b2e2-9ad5984b2fcb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9808657e-aeea-4cdd-abe8-8d0c2074849a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "035b607f-5402-46e0-ac1d-f03ce1fabda1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0c90b1b-a6d2-4add-a925-b6984cee9ec8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "723691e7-c074-4af4-ad11-741099fcd1fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "512d5d1e-bbf6-4a3f-82d0-4fe74147bee1"
                    }
                  }
                ]
              },
              {
                "id": "d5a063ca-15ab-400b-9de7-36df608f10bf",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb1046dd-44c5-48d7-b062-98590eaf4e20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d42aff81-8817-4849-91fa-c70bc082f61d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "488adf4b-0265-4cad-bdab-8a69d2f9a195",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "956c2d77-5ba2-4d83-8fa1-a89f92347ff0"
                    }
                  }
                ]
              },
              {
                "id": "cfb375c6-92ca-409c-ab3f-8cf0d6cd6032",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e5e6195-5d13-47cf-810e-27559908920c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c48aa038-83a7-4e0a-ad56-e873395082ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82d234a5-a10f-4c3d-819f-9504dee41b8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "95665868-90a9-4409-ba6a-3ada90023b7e"
                    }
                  }
                ]
              },
              {
                "id": "12e4079d-5104-48a3-8179-2206ad3f9290",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ce47d28-9d53-47a4-b1a9-0bf5a922f997",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c6e0e41-4f87-4b92-9d10-b70a197886a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb0b0f74-b7f7-4ee3-8a97-da15da8418fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "06dde3b5-64d3-41a0-8265-f12943eeab97"
                    }
                  }
                ]
              },
              {
                "id": "0df4a6b7-d94d-4f75-988d-d90fa91019bd",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "560896eb-1fd4-439b-a529-4508c496cba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "292e85d4-0cb1-4d36-b39c-9042e0d4cc36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a94e5ff-6f2d-4654-989b-bbd033cccaf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ba347360-a09d-4c89-923d-232591125880"
                    }
                  }
                ]
              },
              {
                "id": "1631cd4a-0bea-4f89-9ce9-4357314e6471",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "116b3613-889f-474d-837d-d03ca21ecd6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9fa7582-59dd-492a-b338-74d928fbcd39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b21f5b1-cefc-44f2-8424-2fc1c2969099",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "116dae4a-3d91-4d8d-ae97-f2d24ad2e7c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84e04f0e-c5f7-42d2-a14b-b2b53ed9c441",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e77fe3f3-883a-4b57-b267-d8b8e22e731b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "19a07977-4565-4cb9-9bdc-1a693391b3ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50eedfb1-996b-46cd-b0aa-bd384793299f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ea36670-dfb7-44ad-a273-fa4ea0735bf0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1f7c37be-de8d-4872-b30c-2a6f0cc33502"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36608213-9a7a-4fc9-9b33-8e5674c10989",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1f7922d-0a9d-48b2-be84-be34c850b216"
            }
          }
        ]
      },
      {
        "id": "d08ee018-d5d1-434f-93cc-9e806c043bb8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a1407fd1-f3b0-4837-a4f9-945aeb6710ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cdc58a67-b290-447a-8c85-6f92a43092c9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce87d708-ff29-4ad9-92be-277d68e350f9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61e7f7e-1beb-47fb-b263-9f481bdc9fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4c56cb-2dd9-47c5-b9d3-2e27b5bac0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931b82f0-c448-4063-9e1e-7ae5c545d7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2abc9feb-244c-4143-825d-84bd28b0c885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8840e6e6-27a0-4817-beb7-a5c4a2979cf7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f78d43-e237-40af-b0b3-fbc583dcdc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37a5767-874a-4d7a-8006-00278f948464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d331649-3acd-48c9-9326-d5d9f5dd0f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d05fad-9948-4d91-8755-a387ae2a28fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f8c3bc-e0b9-4aac-a664-cf7f67850a3f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7b9e80-0d54-4a7d-8248-18ea5f6a6ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6de702-1b51-49a5-a73c-a520035f5396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fb5eee-45c2-44d6-b0b3-c0799bb9b5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b68220-1445-4d57-a2bb-d939e98c38d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c68eaf-9a0c-477f-8134-991196668300",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f64939-6bfd-4dc1-aa89-751424d290e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecd158e-7d72-471e-8f3f-9169b3fd26ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5f6c8a-06de-4355-8910-3f6c04bfb087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6e3757-a7a0-4574-b7d7-91c2ab0f9c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c695a6b2-47a7-4f88-811d-586326858e23",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1cfe72-ff41-47b0-ab29-2d211f87ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9693fad7-c8ff-443f-be6a-17112598e645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2ef3cc-525b-4565-a2f9-113a424fd661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ad9fdf-9797-4c31-81b2-4458fe2becbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c137f36-33d3-4c5c-9b27-bc94ff6bd7a8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce98eb5b-bc47-44d5-8461-a27d7ece5734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397724cd-cf5e-43f9-8ed6-8aae6ff5a433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866fd5af-e8e6-4f1b-82cf-d5e0d23f4820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d8a3cf-4092-4b34-a7db-4680872ae729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de0ae53-8b24-48d1-88cd-82dd9033edc5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fea706-999f-4f4c-9a96-887073644cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043bd353-fc06-4db1-9e81-7e7e1a80060e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd01bee6-ceb9-48b8-bd1d-dcfc89c8f7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6156d721-366f-4076-98de-936cd90c7078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070b19fa-6494-4a0b-96a3-dce9a8fa1e4b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a1c68-07b0-451b-9ffe-5baf63b85ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a68308-15b2-48c9-9f24-3bab308b468f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130f9169-a7ad-448a-af16-0bdeff7f84c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8852f20f-5072-45f9-8f94-90d49ef60b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325f42a0-c76e-4fa0-b971-ec0baf6fbaf6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f963cd-d71a-45e9-b0aa-0148ee3957b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776e2abd-9c43-4fa0-ab3e-607cc7c6b1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c258d88-15ed-4dea-840c-5715b04d3130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1c9e68-e264-44f9-91df-34dd85479656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ce8698-a2bb-42aa-b547-298fd26e30b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e27030-8094-4fd1-846b-f7406ab0aec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d59961-9302-4881-9880-68b57e2bdefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b18b9a-bbb3-40ae-921f-0120878d14d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecc214a-6cbf-4e2c-b5e5-c2178b181476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "312f811d-b2ca-4c72-97d4-cb648a496158",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a3b3c3-b269-4e01-8284-4b32232b565d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca01dd0-804c-4a88-9bc2-7941350e3569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a554120-2fb7-453e-b690-a0c780be4c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb241bd-0ba2-4eb3-b667-cbd937c02676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36d6ce2-dc69-4ec4-8037-5d660bd3b324",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ecd195-e136-4ca3-b755-ce2ff63401cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4d9fe5-9ed3-454a-a7c5-dd505a936933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74da115d-bfe2-4265-9960-dbe8d5fa7197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57883ff1-9404-427d-8c73-1368d8cf0697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e80e80-e8f9-49b2-89ed-3034bbfdf02b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25affd8c-8bb2-44de-90ec-29816e4581fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c012f373-88ee-4843-aa83-150acb6fb7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be8b459-186f-487a-a5ef-7b6cc4b8e65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f57831a-63f8-4a2b-a973-699f00b0df3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd08515-0757-42f5-bf72-a4caa3d8b179",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2193497-67c3-406c-9248-ccd3e9729798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362bc960-a771-4794-a323-fd0289063d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de18d085-519a-4a79-9341-5fb0f956dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "386e3af6-45bd-4f60-9880-c3b7fc823d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20534d14-6b21-44a8-8cec-3e87b23f2e41",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65cb8c1-893c-437a-8af5-16de1859b5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d4c2bd-de31-4bf1-a388-c3ae14b0ae0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2628081a-0f0f-441a-a75b-05308759e2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dacdcf82-f4ce-46c4-8483-d7426de527f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679d7dc7-5609-43e8-96e5-6258fef3595e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465fdaf7-140e-4606-8748-5e196d7fcbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d22348-035f-4ef9-b29f-47718f6a0f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e4cd97-4f74-43b7-8094-af2b69d9d080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "22544f1f-abca-43a5-bbce-38f94ca20fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e65fde-ab3a-42a0-b5c0-f9dd0e9ec312",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f462f861-41a1-4cb9-a406-c6d8c7a28e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7325ceac-e2a4-426a-8e4c-ced262965d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e574bf40-b0a6-4ace-8c0f-6b05c5654273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8421048e-980c-4180-b41b-8ecc6b682dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fe288c-eacf-4146-bbcb-da88aed2d1db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10a2d35-d449-4927-a972-0874b2b005ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85253995-97d7-4a38-9b04-df546ac77c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a4563c-029e-4cbf-821b-63812d83bcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c81f3f-806c-4fb5-beff-0ce1e27a3804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59883c10-96c3-46bd-963d-a3967bc54962",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886797d7-e7d8-4ef7-8dc1-54b78a226066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3781aaa-24c5-4ee1-9633-3773ef8251f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71d6d2e-b3cc-406f-8587-952bef014f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5aee35a-29b3-4b18-97f0-45b64b2c80ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f4914c-bf44-49de-a47a-09925387809d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca451dd3-a099-43ab-88af-761b89f11e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48458313-0e63-4fc9-82fb-9731d6a2997d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284a7e31-8fce-44d7-baa6-88ba00350d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0900aa5-9c5e-4cf5-abdc-643929e8f205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31453fc3-adc1-45e3-b235-5be3c289498b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5758823b-0043-4b86-9d1c-772e3208d654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee286e3-528c-48c7-892f-22ba3c9ca05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4d7c05-ae8b-4ed6-a56f-a409a48d5112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "413459df-fd01-4c12-a7eb-f5dcc7392db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d0f5af-c730-4c2d-a473-9bd99cccae49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6afeedbe-151f-4ca0-a2a1-e1b99e7bb22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168a4480-5680-4e25-bf54-fad6981337e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c695605d-13b9-4a27-87bb-cfcf25bf55d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7229f891-f58b-481a-9ea1-5ce54b698ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bba56b-5513-4cc6-8942-1893e54faeff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "845cc134-a479-46f4-aef5-8298d8ccb656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5be9aa-d655-4127-9507-fd5fe84fc4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174526fb-e5ff-47ea-b1bd-863d9ae0720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8498359-18c6-429f-880e-51d763786e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec932fc-9444-4be7-b3cb-84878653f438",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58938865-cec0-451c-a109-3ff8dcdc6e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d3e664-0946-46f5-b9af-34f308a95331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba375dd-38c7-4063-b03a-5029c56122df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6beed9a7-46ff-4c51-bef2-636240e15e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977cc9e4-a00a-4333-ab71-d35a7bc2bea9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab5d8b2-1440-42c8-8a4a-38529c4e5498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ba8836-8f91-458b-8be5-e40a46b7c5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c149864-5b8c-40e2-9c41-5d4de8be5158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aed273e5-948d-4cf1-84a0-41cff6eb00a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db170697-c0a8-4894-88a8-c2686ac24053",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60df9af2-627b-4791-93be-9b6fb9f00328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b7ad50-edd6-478e-926a-2ab96ad016ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7163c48-4652-49e4-bce1-06801703c55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dff4c91-fa02-4d06-84b2-75f2a0ba6e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57422412-366f-4203-914d-000d45530693",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e34ffe2-6249-4e9b-b379-8a45bd390dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7818506a-eb52-46c3-96ad-dcae22b1e56c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3b4184-a1e0-422f-b69d-9787bc29c00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4211cc89-bc36-464a-bef3-632c9342ce46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d91f09-31cb-4b54-9445-53a4f668c24a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83133039-1a90-4c9d-95f6-1f82eaeb75a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662dae2e-4e53-4d99-916d-af9f2a05f95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac40811a-c951-426c-a1d5-f304f2772827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be682311-7d5a-4a93-9f9f-dc078ec4098e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469e355b-514d-4eb9-91f8-20d09059b7b0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f37cfa-db88-4a02-a7b7-8ae999c209c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fe0150-29e1-4d4a-ac35-f3c08fc3d9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222417b8-169d-4fa9-964b-29c97c1a9c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b91b6766-57d8-4848-8331-4f9c595401d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b247c-bb40-4465-9eaa-243d412471fb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6950ea23-d5e6-421d-8318-ede8881ca019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4109a0-33e9-4736-b820-5551871b21cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e014ac4-0783-48cd-994a-e66378863d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58f649f2-5fcd-4e6b-baa6-cc18d34ee216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9fbebc5-ef63-4bdd-99ec-cb6b6cae50f7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "152e9552-d589-4685-b22f-8f3e967c9127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae44cbde-37ad-4e91-8ee1-433c3157dcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043b54e6-ae60-4209-a4b9-8a528fa4ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c221f4-a93e-49b7-b520-9e8742370a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8a34d6-e59a-4288-aa0e-6af26e44c213",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72262cf3-5d3b-4c09-9f12-ad3037dc5dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0d24c2-2fea-43ba-a10c-40958fee19b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14304c8-e9e3-4676-a355-247b7841a8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a58fa1-7195-4c14-bb39-3da6582b9c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828687db-bb7a-491d-bb77-c648080707a1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd471916-3858-43c0-b054-236618b04d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1104aa8-eb8e-4765-8c9d-8c7a2d42e392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfab9ea-e77c-4007-8121-21713d839a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583f2557-f48a-47b3-b1cf-48a6b0fcc6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f36fbd7-cb11-4f74-8e63-b463811cf69b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b3e8fd-2d9d-4559-8ca6-eccda05baf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893293a3-814c-49d8-b540-50954818e24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bba6c04-aa9e-4c3c-add1-717bc34b73bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e281097f-fcf3-4100-8174-24dc3ab5668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c608dde-f824-4ea6-9f66-23b5288916cf",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d394f544-eed0-4a48-94f7-e69d769044d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73a865c-05f2-4cf0-9f20-a581eefd70aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5016b00c-25a3-41ea-b327-499da58eaa8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c14277d-e7b1-468d-b785-7cd486e605a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14848895-5290-4c92-af48-7eef33f02d5a",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e931d00-a86a-44ba-bf3b-bf35601c10f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f6d044-b69b-4c8d-86a3-3fd401033fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35aac609-3038-437d-bb57-da05cc62c022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "621ab181-4cd9-4b1a-b206-f3e684b8524f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e05535b-3b41-4ae8-a097-54a4f64c336b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f302c3-d04d-4804-bb1a-3b2a5275bd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11bc27bb-b8f8-4cf9-8223-0e87debfcd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35998202-61b1-4b49-8e6b-f6c3cf3f1d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcde9b83-4063-4c95-89f0-1de5479aa9ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc27360a-b0d5-4013-a48c-6785f77a3485",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16aea048-d339-4bd3-8325-b5d57c410a87",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38517690-1b5a-40ea-ad08-fe6b3b023a33",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f913189c-0b29-49e1-a442-e318b773008f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47211141-165b-46be-8582-91c1184dbaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88de4768-8862-494b-98da-ccdaffa0ee6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1bfbdac-3f47-4180-a322-e247ff8dbf45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be5604e-fbdd-46ed-ae10-2bfc349e4107"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c2c2050-9af9-4515-9b55-ad8dffd6d583",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "844ef0a1-3e0f-4916-a7b6-845fa50f15d9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17161ece-975c-4ed4-97ce-babf165899a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1bc914b3-f5c9-4405-81cb-8e52d9a70cbe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f90cb0a8-60ba-4015-b208-cdb6a04fc47c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "397393fd-1969-4989-9501-1767e6aeeae9"
            }
          }
        ]
      },
      {
        "id": "5392c341-ff92-4fd6-b6d9-052d4c110db8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "52d546da-2c8d-4d5f-b632-5ee06c6a50c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef9eea85-852a-4ce8-b7d3-c99d67ff783f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5a6b088-9052-4dff-8217-a572d19fd7e6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4df870-08b2-4f32-9216-0621ef053b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1599df-741d-4687-9d52-d1ac69e35ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b495be7-4c27-4a77-9a1f-ad1d4b52832c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad2fe3c-dea3-4b99-87ad-78a5478b9af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20255ed0-baf3-44b4-8612-54f653fb02fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e070e3db-81d2-401f-b37d-90f79505267a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9008eaa-4711-4e17-af6b-3902324bd5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f323a0b6-1212-412f-8996-8282bbd6d065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ecb23e-c355-43e1-8426-72bf7a77d4e2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530f7464-2c81-47b5-9a5b-6bb1b70ab9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcaaca9-6120-4ef7-9124-6f2b1ba31d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869ea8ad-1f94-412a-bc11-6709db42fd0f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af33224-b559-479d-be8a-f55c2ee34f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ba9b12-f262-4b60-b648-bca6b3dd2de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e09b3e-e11d-4153-b0df-7ff582a51718",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cc0108-3d7f-4247-81c2-8e6bc2645f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e120b2c-3a14-463a-8b21-8b13124b52e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b46ba6-9e5f-48d7-a159-b71a46c2adbf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0530be-54fe-4a33-83f2-6e78dc9480dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "635318a7-b7bb-4999-bc64-85c4c333fb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6fc440-5878-43d2-8a6e-1d64971ccc89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0943af5a-1080-4904-b62d-2696de032828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b534266-6760-4efa-a982-37f2f0148a1b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6406eb3d-496e-48da-a613-bd7c3b6f4085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eccf96e-d129-4558-9345-b72289a03e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bb796d-c86a-40bc-9fc5-956d5595315d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f61ae4-9964-47ab-b828-4aa3aa539318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4b90e5-006e-4280-b93b-3c2608471d44",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69054e9-2284-4888-b59e-d0aed3cb0f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48326e8-36b0-4958-a0a3-d37f40bf393e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125a658f-90a7-4745-86e9-a585046c0ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0d07fa-1553-4d58-8df8-0fa938ded426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c014bd5e-01b8-4e8c-9ba4-d308167fe6af",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14d1757-1180-4935-b6e6-43ae8be7135d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebb248e8-e433-44a9-bdff-3412c68ac117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93b5091-38ff-4866-b9aa-0bbcb473cf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96e1023-3031-430f-a81a-ed18b8db86d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bce2f3a-86ae-4089-9a84-e92fde1fd610",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bb5aa4-1a07-42eb-9592-6c0a5fd10303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a4f26e2-e48b-429e-bbb5-747dc7fa480d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ee96f5-cc11-48c7-8574-dc4605590172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32aaa28-7f7f-4e58-b11f-291ee09a8104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ce30be-de3f-4153-9e45-37f2a56000f4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281eac55-46db-4b84-aaa9-ba1ded452317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f53e06-0d80-421e-82ba-1ac1cf1a2387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828adcf9-dd9a-4e32-a366-b9cdea6f8dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65595c18-fc4b-484e-8af7-15d02e8115c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21b0960-da54-4862-86d7-937bd8addbd1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ddfafd-c382-4c6d-88b0-af634f465708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219a7aec-8df2-48a2-b87c-ee63a59788ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0774f46-81e7-44ed-99d6-3da87efcef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740fd4ea-87b0-4252-aafe-7a57a4bf2c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ec4667-0bc1-4bbb-824f-b36c56c9794a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3e8a04-1fde-4e6f-bf60-2bd5531e6b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364f079f-5e52-458e-8cbe-1bc7ace80f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a86097-9221-4965-bc81-0ed79f0d502f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb92480-525d-4049-bb6f-624b225e1c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0949c2eb-ae7d-4281-a784-25a715b2492b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfc9084f-403a-4751-9f4c-9f916b2a7afa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57f46674-06ce-4a6d-881a-f311aff608a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1dbf13-79f0-4597-964a-036d1ebb9abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04e2bc6-30d2-4981-bff2-101b75725e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb8c4c3d-8772-4730-80cc-fa123a8dfe59",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84db77e1-49cb-44c0-acde-a6376fbda7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176bfe63-2e9c-4103-806e-e7467d5e20c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "974dda0d-67e4-4bd4-af63-d2c40facf26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e24fbf8-4b50-42cc-bcd5-cd11613830fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b1aa41-6540-4adc-b54d-3400ed9404a0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716549e8-8500-44ba-8346-8083c24dbeac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5631ddf2-fcc2-411f-af96-cfcbd06c3721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "882298fb-f4e8-430c-9113-99b1ea751ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4c4276-dd64-4020-883d-2ed7823312b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b0d9b8-77a9-4004-bd02-56c5cd4f5ef4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0b9fb3-e2d4-4d61-835e-1e258953d9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1afce3-7245-4235-9807-5b27787f3496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42276522-8a2f-4f65-80b0-3ded709ee27e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d87002d-3df8-45ac-a753-14fba09666a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b907719-4a98-463d-96fe-b0f65fdeb323",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c322f8-ffa0-4098-b1c7-deb41857c2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856705fd-795e-4477-a083-28e627ceb7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a472e029-8d8a-4e75-898a-8b25962c0df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f3ae63-626f-453b-9eaa-080b630f4bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab46b091-bf03-49e8-af8f-8c6fd25e4b48",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691f591d-b07d-45b6-a37e-2f6b399bf8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0113eaa-292e-4568-a21d-eef1176aacfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4320357-977e-41c9-9f79-b07bb89eb2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd758fd2-cf9e-48c0-8ae8-ad72560ece7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e627a5-9640-490d-b2bf-ca02cd10ff66",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00955713-4806-40cf-8493-fe9cea3e24b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c621c14e-afee-47a1-b57a-1950b4dd5703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3ec7b6-f08b-45fb-b52a-03f91c1afc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebdbca8-5242-43ee-9c55-6dd561d164fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296c298d-5212-4066-bd32-3dc7f2e6c559",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6a7860-246e-4640-b2f1-6a67ad91b2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aabe28b-c329-4c85-835d-eb7a1371db87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a8e7fc-46a6-4fe6-b1cc-b70ee8136d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20930ef5-edce-45c6-8022-8b07c4839b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6e6443-3483-4b3a-8e38-8387924cdd49",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77bebe21-a894-4690-bfb2-642cc7cb0535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a383aa-61bd-4df1-879a-735c5dfc2af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540d4a6-8c2a-4932-8e13-851968573ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b3f93e-c8e3-4953-88da-22af4fd18611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c534c8-ca84-41d9-893f-c2287d7317bb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935bd7a8-d283-47c0-8760-37356cefd231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c35d6c04-e80c-4598-94ea-d9da18ab96a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af2edfe-09e3-44ff-afc0-00e582375b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b6d289-176f-472a-b2ec-4e3f5bd1edc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c7a335-be49-4ef8-a4fd-527707f9b658",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1738e011-3b96-4663-bcad-b20263ac94d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ee0542-8c44-480d-ab4b-6aff945262b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd07b56-f7d2-418e-82ab-00f37bf72a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4e2969-ba93-49a9-918b-2e3d0c634d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d0216c-fbe0-4eab-8887-a1136ebec797",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7216893-f8ff-4be9-82f2-9f200f1b297b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1e46fc-eaeb-4c3e-82e2-9e05c34b409f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b906b8f9-6caa-4626-ace9-ec4a6294afba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6e45e80-4e18-47c4-a992-17d8fdd294b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5408d2b9-3ea7-46bc-a53b-a1a343b72811",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518b256c-4b36-4fc7-8fb2-ea64e59b675e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f041ba1f-70ac-4da9-bc55-9ba33e957f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8210f11-6d30-46ee-bbf1-3a4f3a59119b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3c96c4-3386-46a8-8268-7d0a839e9b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402cfe47-e940-4ffb-a4fb-7438e4c70554",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c729ce32-5421-4be1-8ef5-2ce16246cbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609fc4b4-cc25-448a-8ea3-6ff5d9241dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d27a9f9-679b-4e43-b5ea-319ce863a146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bbba599-8e07-421b-b1d3-153c0563eecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ead562-2405-4ca9-8e30-8e282f8bb82b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d77f6d4-0f70-4b0a-bb3e-64ce2d6796f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5360d612-f089-49a7-9b46-c43477654c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c54c46d-ed77-4172-a641-fb742948d9d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b133790f-26a6-4efb-9722-05fe8164becc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755b9a31-57b3-4677-8a4a-7d555795375a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0441d00c-26b6-439f-b04c-5394c0c21170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf9490d-4382-4c33-bb77-0b766c9587e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa7cf96-9006-4303-b8f9-23f0935c1ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4798968-253a-448a-9752-d2c57f6d23d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919b9001-3210-4f93-8247-069564facae8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe12bd2-95f5-4161-8592-5ca304f6bfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416772a3-19a5-40ff-9f43-e7de36767801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ad6966-7110-4dda-b633-dd623f5cf80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a1193e-3fee-4e23-a31d-c033c3b0e84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da597f93-e6df-4d3e-8661-99703d6e893d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e693dca0-6063-4e7d-bcec-ad883b98ed11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26feb565-6790-4a53-b964-f1fb9a4e2e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbdfd68-e014-42fb-8284-e73bf8b82f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d321339d-045c-41a4-b895-91ef13859355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1c7022-e01b-44f7-8289-3a9844633e97",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871b8375-3a46-4ac3-9bb8-47b65a0d883d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68c760c4-d57c-4766-ae47-229c9dc27931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9a4226-dad1-4113-a64f-7229203766c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8460546e-6d46-4db9-a490-ac9fe7603431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4186ec-93fa-403b-85ad-1df311ffa817",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13119205-e382-42d8-ad65-e1d04762201a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf84761-2171-4ad7-8c0b-350560dda302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da384ebb-c0a7-4114-8510-3e0f77898bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fbcf08-63b1-40bf-968c-6b43feaff3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcfd26e-137a-49e6-9e34-b8f549ac351a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15971298-63fd-4956-a5f9-03ab454f7a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ac8028-571e-4973-9200-b6d29788d541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5047e4-f228-4e63-84f4-0429da898c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9caf7d4-331f-4910-bd1e-873af47e77e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ee49ba-d824-4bf5-99e0-17b83d64c27a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbc1a29-9d45-4d54-8493-5b37e0a2878f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d70ed7-8330-4fd9-8932-e542305ec881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "630daf71-1ba9-448f-9100-bce3854cce8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1778fd5-52bd-4a31-b1d8-c0ce00fd2748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea1fd63-9358-45ce-8a74-fa2236b78b6e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4a78bf-99c2-4839-bfb3-865e991d9363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d5f63b-953f-49f0-bb42-ca26fe07b8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41400cdb-98c3-419e-8490-b5ae1e95423e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb152a9-a1aa-4f1f-804c-352dd13ee475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e566e5-c931-4f0e-b94e-9bd68c220789",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c48d143-da93-4681-8d15-02c0912bb053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24490943-a1f7-41b2-b65d-11b0e34440da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91319361-3acf-4777-80fa-f13ce43e9da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc842330-3262-4d62-aa9f-2a5050fd2fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d72056-bf45-448f-9610-fef17bf482a8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e5b180-2b18-4e12-9153-06dd656cb9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e009e6-08d2-4b5b-bc1c-cefc5d186e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7862d7a9-01db-4c78-bf88-e048e367e60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0a8418-5562-4120-8895-e3a68dc61a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1385c234-0cba-4fac-90fd-8e3e195da6c6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f02ccf-806d-45f7-942b-3b80deb8ea60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6a803b2-b278-47dc-96ba-8c1ec6d700cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03625581-18a2-4ea5-aca3-d86db1ce8ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d3c5b5-e323-4e0b-ada0-70f155e3237e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292de586-5af2-455d-ab47-4f0889efff97",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5325bcdd-d61a-48a3-b9e6-ead285ebb08a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8249ed13-3ba4-4630-b177-c08b5b290f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58558108-fbaa-4d29-bc25-0767dc11dd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa1465a8-6f37-4692-b4fd-4be33569b64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2597bb2-702e-4a94-bb5e-01718bfea79b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238673b8-b20a-4cdc-a518-3ade3d3534eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57feb85-6634-42e0-a429-17d6c31e5667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61f1999-1b5d-4320-a20f-46c108c2b36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da127a44-1640-4c89-ac7c-1968fbe1b91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4955722-ec6a-439c-bc5b-d55c501237c2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d1596b-d436-46f5-9bdf-8364dacc8373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc6a0f8-3522-40c1-be83-cc87d4476229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbfd9e4-97d3-4a64-9a18-4250ee5a3d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05954047-6372-4f20-b8cb-be1191a7c858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dab506-710a-43d9-a4ce-522025be3d8e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58beecc9-b256-4a0c-9682-5d4a4420df5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5e358f-5495-4c17-8174-5d2e452afe77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5194c3-fd01-4d73-9302-890ae27310e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e944b4-4382-4dc4-80c3-1396fb2814f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e581b6a5-cf56-46b1-9c19-d7293adc5d07",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20fd66e-bcee-45cd-b7c0-857abc404215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee097cdc-adbd-4624-a47d-ab6dbfdab1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb579c2-a389-4618-800b-183d07326d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394ef23f-6c5b-44a9-b0ba-838e8cc0c129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabf6206-ad52-4e51-900c-d0bff6ec265d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2240e5c0-79af-4aaf-8888-2bb51358b4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7780a5-5e1d-438b-b01d-f87af1cf1e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37ff54a-fb00-49cb-9359-248ad2c5e6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179866c8-b67b-4a09-8974-ca8e38fb2b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29d8a66-95fd-490a-a97a-6897e230630e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175795c1-8e2a-485c-bee5-f897e06edb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38c1e88-ebdb-44c7-a200-89a141248424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ac7325-ba8d-4310-9c81-ad95fe10ed14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce927bce-30f9-4758-99d7-fda1674bf49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011111f6-405a-4b10-9e45-8b62d0443b59",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffd8ceb-79d2-4c78-b8d8-5ec4dc0d5b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf088c6c-c4be-4cd2-b7a1-410455da0cf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bf9a4d-0728-444a-8e3b-854b7d761e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8fc68e-ed60-463b-849e-991de0c12fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d872291c-4890-4a6c-b8be-234b555aff05",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10e05e6-ad57-49f7-a91d-d3d7072c8c12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440cd990-0b10-4f66-adc9-732f8cc7e14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "155398df-2e2f-49f6-a61a-6077334db549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabd026c-162f-4463-be70-634615a128f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a13f3-fe44-4f14-94c0-de6a195082e7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb89fce1-b0a0-4d3a-9528-e78ea133e675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6ba46d-411a-4246-a382-c8d78f944e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc597cd1-ce58-41f9-8ad2-9008ad473f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c03a55e5-a12a-4558-8593-12bc479af347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b693fa-233e-4268-b2a6-c07528f32533",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b108e3-6e62-4a3b-8482-45872bfcdaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ed914c0-cee8-4a7a-8af2-f5cdd6e54d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7a52de-9f0c-48fc-8344-bdfed22b93a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5bb582-3577-4d50-95b5-71cab37fea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10342170-6e42-4395-8cd7-01b1f3fd6a07",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b88b42a-2c2f-4686-badc-369413d90b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f786586e-191f-42fd-93b5-60e99ab4e5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5683cba1-6fb6-4b5f-a59d-c6d10d7765dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53c7303-86da-4aa0-b181-f7b70e8c2f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f39bfd-ec91-4e5a-82cc-0db59b52d6e9",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9aa3ed-b558-48a5-9da0-5a7cfdafb8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3afde8-df56-4b5c-bf95-88a4846c1bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ff5805-2c29-43ff-af0d-2c16a6d7c4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9b1879-277c-414d-ae7a-073385e5a78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4cf1c5-b0fd-41a9-83a4-42f3584341da",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5698bd8-d9d0-4461-a55f-7c59fd75c153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83841811-ce0c-4655-9d25-244117c98013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d477d99-53cb-4a09-a1dc-b2323b3499ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56b9895-5494-4681-8f91-c41085708eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b406b97-359b-40de-81ea-c93b13d898d8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09613d56-5f48-493a-9ccc-39216c598196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50361769-67a3-46bb-a43e-5bdd6424f728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b8290-05b7-46df-9d4b-98517e0ea263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6501899-7ec0-45bb-abfd-dbba8ded3996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484da3a0-0c3f-49c1-b77d-10f8184b4fa6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e075dd2-8325-4cc5-8f6a-2f6d2d0eb3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a77053-52a9-4ae9-86eb-4904dede0561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6ff8b-60a1-4a46-bc11-dd6cac53dd5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17089fc1-db8c-4e07-b0d4-b597fff9a646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3bd8cf-aafa-468d-9c8a-2062130a73e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0772e27a-877a-41a4-b116-2b31c03eba85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2c00b0d-6b86-498c-8499-099934d54388"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27ab250-38d8-4421-8964-f12c51630a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4239a0a2-8d6e-43fb-b335-28a12e35a14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d321124-b9b2-426b-8369-60c52f9d0a92",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc22454-9abc-4356-b292-32dde86bfc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72a7a87-fb96-4cf6-94b2-342e6cdbec17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3ac480-1e38-4065-a499-6e28fb1badf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001cc82c-0ddc-4548-b2b1-c3e111ea3a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d793e090-37a7-4625-969f-a3aa4dc6e712",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da79296b-9f24-4c6b-bb97-b62574fb1dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcd3d96-7ee4-498c-b712-4a664fbefade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2638342-b5af-40b8-b45b-55ba5ad2c7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7438aa-0c98-41fe-bf4c-f8a73b8db0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67e57a9-2c18-4024-a835-68ca6826d18b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752a554e-386a-49f2-aeee-19c62cc5583a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a9a713-1bc8-4cd8-8140-789e4b4427ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae60e0c8-c6aa-4f3f-a4a4-be86b9826ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662ce639-5ab2-4dec-91e3-b025102ea68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7663b5d-9e22-4c88-a812-e72902691ea2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b55493-8d2d-4a2f-b11c-449fecfe6ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a5541d-7841-4c58-ae8b-8344632ab507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb0ffa9-df5a-4311-86e2-81c38d58193e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d8bdf4-7bb6-4db9-8510-99f7a9a9d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfdc1e6-fd55-4198-be9b-5e5b28079419",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb46bd3-f82d-40af-9f87-cc8c5f4cfac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7b9b0f-76fa-412a-b141-73bf8e45326a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af59e15-2e39-41db-b06f-8e8623ef6e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1313e80f-fa40-4761-8a09-4e697f21c316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21a8b12-4646-45aa-a4e0-c35c5558cee1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c45794-3e1a-44f7-be48-336cb87ff0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b78915ad-e3eb-46fa-b087-a79a03bf6660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fcfb6a-8963-45e3-8dd1-ad6f7c7af515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea65ddda-f732-48e5-a796-72b8fed3c160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e32ef5-20e1-4314-854d-7bd011d87ade",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9e10e6-31a5-4ae8-8411-b32a0fd74434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11a7ca39-7fc7-4c51-b704-4baeda89faff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad80ffa2-06a8-4a1b-bcb4-a0cb34664ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f8d418-3e14-4a2e-9766-26751e48eae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d03375d-2eaa-42e0-909b-5bf1531cdcfd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d1b2aa-6fdb-4795-9c47-c2b36aa031e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b24ddb-2bf2-4433-866f-73c8e6db8637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0651e93a-be84-429f-9ce0-76439c125192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ead61fe-7d7c-4476-b5c7-9f6946e55f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef252c-1894-4c02-964b-e4e938d525f2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d0dc52-9946-4f1b-8fd9-9eac6f6d0d17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca55894-3c6e-43d9-b992-3464130eb1d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe5d775-8ffd-408e-8e32-7449577b71c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007bdd4b-d471-4b39-b007-cb765595eaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28645517-1f0a-44b1-b703-1999bb816ca2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab3065b-736d-4ec2-afa1-6f5175f16934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1dead12-9be2-4364-a763-937eca509bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6b75d3-68a5-4e1c-a20a-87795febaa2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9deb6bf2-879d-4b5f-8980-85c37f58bade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07607e97-629e-4326-b652-21d4aadadd34",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acba1ad5-f900-435d-b10f-1cd791e7b70b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f763fdf3-b1db-452d-919f-40f28acd0fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c8129-f130-4346-8f64-c03d17a3c035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7a6f87-655f-4ca5-9bd7-33719a7eaef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c239b9cd-4b72-40e1-a008-c4e2c119e114",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58e557a-b4f1-4e86-bc28-41475748523c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b806074e-6465-405b-8f8e-7705b848d993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1e1838-847d-4a61-be8c-d41be752b7d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc78d450-5ee1-4ebf-8783-ec9e05ef3f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0952ae8-edb3-4b50-932a-264f9c2b1024",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252cce66-e231-46d5-94fd-073645add478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab47b35d-7690-4a7a-9316-0f90f09084da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6907ed-3208-4152-8d6e-de60a933978d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02bb9b19-37ef-4f0f-bd2e-ee66edd97b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51ef647-d886-4469-9ef7-e7c016e6d95b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ff23cc-d766-40ca-b428-f0097565732f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9374618b-f9cc-4690-8229-b0579e3ebc01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4203d64e-2411-4b6f-bb80-6ec2cd5f5c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae41cf6-d3c1-4149-94f1-f560e0e81e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16433751-21d5-4db2-a427-23f488c4f9ca",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db97e117-2864-4b12-8af4-3499fec4d789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33d745e-8085-4f78-a27a-e02dafa92da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83614821-89a2-4868-823f-d1fb1eacb7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e81e5dbc-25a9-430b-9d19-cc41e3242272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d58df9f-a38c-4115-ad73-51afdc1b5d86",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3579159-1a9a-4f3a-b19b-46bc43b961dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262ba8e7-7971-4c05-817b-1fe8d64961d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe996be8-2934-45a5-b6a6-dbabb943d3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b6b083-5ab6-48ee-aee1-baee289fa917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d53d19c-a7f2-4024-87cb-1600864c2cd4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b94d964-ae3f-48db-9604-15cc8bbf51b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43275248-6415-418f-a630-453a026dcacc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6ef0b2-aa7a-454d-95a3-d6e436efd847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bbe6b1-06d8-4ee6-8759-13c5ac5876a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28dc2117-4436-4f37-b17a-01c8b14847e7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83a5fb8-9a95-4a9d-b3eb-81f51658a3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1264caeb-446f-4ac3-85e7-ee33a224ace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c0d950-0606-4126-8b74-7b5435fb134b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c6d34b-8ff4-484d-9879-6e5a264af99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bd2220-190c-48ae-8364-89770e1f1bef",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c202541e-1973-4259-9c6c-9383a45b21d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2800ef0d-bff0-4095-90b3-b4e0f8da9c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52542294-6cae-4748-925d-3f20bbd3daae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bdc572d-7e3b-4bce-8041-20ec230dc9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364a34bc-ed9f-46ac-9999-edab51a7feeb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47123d29-7485-4e1b-9f87-6d37ebb3ccf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "000771ee-36b0-4a99-9f54-6821948fd480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5034fce0-c314-4786-85cc-c5c7617cef40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cde6004-fbaf-44e6-aeb8-be1aaaa7defe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a1376f-77cd-4dc3-be90-5ca970b8e07d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23578ae4-36f9-45d5-8fb8-1ec49b5dc47f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68176aa7-1ee4-4ad4-a006-9ae17bf95ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e69024-734f-4faf-b748-8557dde488b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a078e1-6d6d-4e75-a15c-5a0e65c8fba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285d0596-b06e-48a0-aaa1-06373904c066",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105cdcf9-ff3f-4b6b-ae47-f1bcf8165070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81004ef1-4322-4aa9-810b-e3b2097ab97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72a2571-f86b-458f-8301-7b92a60d1a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badd5174-96be-4723-924e-98276288b8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdeff15-c18a-40b3-b148-e7bb2aa564b5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3845739-973e-4483-8251-fa3e2b0eaaa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d28a7d70-cbbd-4e50-93f7-111459529e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d179b474-cb56-4d28-ad91-61bf589041ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7788d02e-a2e6-43ee-9587-aa8bef8bc112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c4ded0-37c0-4793-bdbf-432be2c867d1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c10b6a-5495-4721-bc75-e3f35c473536",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08ed3e79-5147-4d91-8ba6-6946b0f9bf85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a723e468-9747-4d30-881e-ec7599cea00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888cfe04-264b-43b4-8a8b-da99035e5350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87f83e4-f861-44ce-b666-0f5509746db6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41133730-6940-495d-b4c6-a5d6cfbf233a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254ba1a3-1854-4bd2-bd2b-73ad2ac649e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2d43a6-820d-427d-8d7c-f7df8751e88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b456f56-be76-41b5-a6ab-49f41220db57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a042a8-9641-4216-8a7b-b35d9ff21928",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f007cd-3c56-4974-99fa-5b9898cac58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "730eb0b4-99f7-4506-a72a-9fe78d63aa56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab0c61a-48a3-472a-b19d-14f648e4cb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29da082-4ca6-47cc-98c3-ba86bddf7d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4f0b9e-288d-4255-a38c-e42d87510306",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f60ca7-4e4e-4250-99ac-de23fa6b38ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c54e954c-7c1b-4675-a5aa-9c4c7af4172a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45db3042-017f-4db1-be5e-e1a4fecea494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa7a2e9-292c-43bb-85c3-3eb285370460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b997f-fc35-4a73-a379-028fba84dafb",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaef721-2503-41bf-8752-76e49b8229b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f811b3-76e4-4bb0-977b-590975d8e068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1f2683-b8db-4f00-beb0-ef3cf89d2742",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6737e9-e79e-4197-b202-f541daec2205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0a63cb-a678-4b1c-b21a-96666d665d27",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ea4df0-d466-4602-8b1a-3c04961a714a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46e0688-a312-4e37-b151-32ce246bb7b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f15a011-64bb-4f47-853f-a44b101db1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef3c0bd-5cb4-4ae2-abfd-ac30e351fedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b883be-957b-4357-892f-8f0ea17e2a4c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a448143-4877-4c2e-ba1e-6128734734f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc93fd9-5669-4cd3-ae62-92fd375ed220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2632281b-58c5-4234-a731-627f39ef54f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfba4632-6fc4-4522-b61c-2bbf228fa127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ca43da-b734-4298-a655-ba29e469a56a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de22cf8a-a00f-40ad-aa9d-4e4db5f5cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a1e015-b53c-4605-b202-b815f0720f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a1a941-7dc6-4e35-bf09-ba0885daf7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b33aff-6821-4447-b0f3-7f8935ebb807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be5b24e-7df0-4090-9983-fe7730a761a0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e50a2ef-296d-420e-a410-b8f2ec96c397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6f0f86-c961-4e5e-ac91-e223cf094abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512492e5-c8a0-4a8f-830a-2a443d9ca77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9374b769-4d20-4014-981b-bbb5b6353576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b613a194-f540-4a4a-935e-08174eb94fa3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33df325-1ab8-4270-903e-50aa13baba2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75242dd6-9aa8-4e9a-a9e5-86f19622250d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347bae58-376a-498f-85d9-bac2398ebaf3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eef192d1-19d8-4abf-b452-ac79d68526de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86c9992-b1ce-4fce-95dd-8bbb03ca32cb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6330b0b0-b0f3-44f5-b73d-202f9f6b159c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d4cfd1-8d3d-48e8-b0a6-e15edd662e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e16bce0-1981-4dd7-8c30-18c8a7fafaad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89d8c92-af98-47f6-abaa-dd9953a8f703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08fd7c8-7c17-4448-80e5-b97e5bbc0881",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65928864-f057-42bc-b521-6d13e746270c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ead25a5-9d23-454b-8bfb-5d3c65d47e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657f9c56-faf6-48dd-9ba6-a2cc4d4e35ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4822dfc0-9d39-4daa-9520-c9925196fbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a41afc2-4069-4f10-9d88-f28da5642337",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500c83c7-b766-4eaf-82ce-cd2e992b50e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ac53ba-cf0e-4c09-9b55-20839b9335a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965f5add-efad-426b-baca-5fbbec685888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e129ed47-39c8-4ed0-bd1a-8946b40040ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90859cf-1cbc-4a66-a7c2-6c2b1e6c2596",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e42df7c-6899-492d-9aa0-a9adb49af3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f321720-506b-4889-9aec-17c23b683d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ca4a53-2b44-4cbe-9430-c3f712c971b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff772cec-0502-41da-a627-0734fdd75693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a04ca4-59bf-4aaf-948c-d0013dbc684c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8338149d-8962-4727-a160-1b000632a927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a955e99-8710-4848-a270-c79321ab21a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b678aa51-d3ff-453e-bb31-208682e537a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a4a1d13-398d-4a12-91fe-debd3ef3ea0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fc24cd-dcdf-4e0b-bbc5-3f5cbbb54e21",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ef4375-25a9-4db9-b854-44c6fb3f87d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f025da9-a703-4afb-ad79-3b55ac2bdf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a780f2a5-4044-45ef-9cab-b9d9211b4b59",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fef130-761a-42bc-85a7-87ec4a227b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1baba67-6d9f-4112-baf8-d32926287a82",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8199dc-1022-407d-a8e3-7545ab0ff3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5147fe2-14ed-48c1-ab19-4cfc131751aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e3956-1280-449f-868d-e944dfb74a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60aa401-55b0-4cad-8236-5ec0d0aa8113"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8dfa0d03-c5e2-4b06-b8eb-5c8154143e63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d171550a-c066-4a90-9753-3b2b9f9464e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da4804a-651f-414b-80c9-a039a8fe9c6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce26853c-acbf-4fcb-9c3e-c6d4c3fa6947"
                    }
                  }
                ]
              },
              {
                "id": "a76fb573-b33a-486a-8eb0-a4a91debc41d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73addb08-ee2b-493e-9d46-5f72b284497d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6e1771c-55b4-4379-b09e-097395ff1b00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "50e85c52-48e7-4143-b68b-da2e4e4b7c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0151ae14-89b3-471c-ad71-b9f2fa4b5b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31f4797f-17d9-4ae3-84f8-0976d13fdcac"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92beb846-efa6-4531-b977-636aae79dc08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1606a1d3-6bc1-4377-81d5-d0d71cd5416b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45985a4c-0625-43ac-901d-3a9c0ea5a56b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6219128b-2cda-47b0-bbf9-6ffd76763174"
                    }
                  }
                ]
              },
              {
                "id": "3a2ef51d-ae22-426f-b992-e6015fbf46bf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ff5ad698-9d1a-4fcb-b65a-489627885c83",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a6c75e-106a-4fcc-8dce-13a0f96bfbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "554fa9fa-5d8d-4e64-b406-acaa4416589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd45ddd-b37c-49ea-8aa1-b04d4ae294fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02147a80-5b8e-4eb2-89bc-a8d9239abe38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2da11d67-4a29-4ebd-ae14-7196da7e91dc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f1eeae1-a9ef-4184-85ed-15f389c3cefe",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f75aaca1-9f62-4f09-9060-6cf10fa6f15a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d982413b-646c-4b89-ad3f-11559515d7db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edbaca3f-1eb0-48d0-8eb6-dc69a580d4f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69a4ecff-aba5-4030-8110-cf939a26f439"
                    }
                  }
                ]
              },
              {
                "id": "02a52b7c-6d7f-4a0f-8a72-430f09093799",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "802bef42-03f0-48ab-9445-96eb70632224",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ff09a02b-3b1f-44c9-8fbb-3fb090e61226"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0deaec29-6522-4d22-b7a0-4e2da7821e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e02c13d-105c-45c2-8964-7c39e8005d03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05ba5a64-7f90-4bb2-b904-d9c557475643",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3ac2ddf6-1ddd-4330-a2b6-d360951ecb24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60fda1db-b52a-46c3-b48a-2c4cb60b9332",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31110194-fe24-4c31-8d41-74a8bba3a75a"
            }
          }
        ]
      },
      {
        "id": "4d6f32be-7528-4f81-87b3-4cd386a192d0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b3b76920-8469-498e-86a7-5027dbe00f49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "db96cd5f-1178-4916-b96e-61f2f9478ddf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5c219fa-7f1d-40f5-9ea5-16ce50289cd7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511158a4-3d93-48ce-9068-f0115c5cf008",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f7f74fda-7f10-45f4-8765-4b9deb18f534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22e1e3b-6aac-4559-9589-2fa3269d1dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2c84ea1-9baf-42a3-b496-14d0cf6724bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4edcbf-7cc4-40bc-ab8d-f1bf7d08dffc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "060f0cac-5b13-4e89-a165-476d9e310ca0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10ed7579-c3b9-41ec-930a-50160c88c5c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "921cd275-a226-494c-b2f8-98b62b9eecc6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da697029-0245-4402-9300-01f0435ae1af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e53cb008-4b84-4266-b4ec-15e8fb9c4366"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14b0f2a8-36e2-4dbd-a685-93b52579828d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8a267fb-ec74-4311-9811-2ab86d0dc3a9"
            }
          }
        ]
      },
      {
        "id": "1b69c7a4-b4ac-463e-8636-e4e0b43e7b2a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fce930a9-e9c8-4be4-8478-94169ddf4d45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49191dfe-46cc-4395-9c23-d4690b762a35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a9364fe-cbd3-41e8-b45e-f684f3ca6f19",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88082519-81f3-40cd-993f-db24f3fbe864",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f315235-b0fb-4be1-86b0-eb3515de71f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca82fee-0d9a-4afd-b44b-863586f0346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a530d56-510e-49b6-857a-50f7320a4624"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb416281-1316-4537-a971-a586ec89dc79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40dc3f18-e5c8-4a7c-8502-b56e53c527f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba943fe-9dab-48e4-886f-db17ee7f6a5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d91fad5-8ea1-40df-96b6-b25320dd96a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7d803c5-acc7-45da-b9c1-06bb0a67b926",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f909d556-b0f3-4e99-9f65-504ffeb2baf2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1a1321e-8a13-46e9-913f-5a74c95629dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd35b753-7171-45b0-b39b-02582d5fff49"
            }
          }
        ]
      },
      {
        "id": "3bc48f7e-cd30-48a5-b5c2-d48f373819f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "70d505c6-8a83-42b3-8a39-83c73194288f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b94e932a-bbf3-497d-8f87-85002d008e9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3effdfc5-2a9f-45f9-be1a-5275d7591941",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cba6e1e-4ce0-4c41-9f52-35feca29c081",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35c25bbe-13a3-422a-985e-fb052f9845a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f218271-ba48-487a-9b56-16cc3b5f71c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feaefd33-35b0-4e63-9c18-adcc2c7e953e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e10e50b7-435f-4f8f-bfee-e82a76833f3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cf52cfc-48b0-43b6-98e6-c2e23f8a7d49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fa2f7f5-bbd6-401a-b2ee-dad08dfa2883",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8170147f-f3ea-4c37-8af4-df677993a6cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f1e4990-f2f2-4532-823e-055a661557ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9cd09d25-5258-44db-bc4f-c0e1641881ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dbff639-8308-4097-91df-381184749c52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6440ab3e-c9ba-4e23-8973-c13596ab5bce"
            }
          }
        ]
      },
      {
        "id": "59bc4fa7-6ab0-46cf-9104-f744e717f8bd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f163182-3a91-4e5d-8e59-8b0315734cd8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1cd3204-d6e6-4614-be49-e4f187ee5dc9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9a4b3fda-2af0-4d7d-bd83-ecf05c5f928f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba301917-3be1-4e0f-851b-e4831ec55b8c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42dd46ab-aef8-4f19-a95c-dd4a4a6874de",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.103174603174608,
      "responseMin": 2,
      "responseMax": 904,
      "responseSd": 59.96994344591321,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725583349036,
      "completed": 1725583359187
    },
    "executions": [
      {
        "id": "4e5d368c-97c3-47c3-af21-5f580f8eaa9c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26d3b180-5bef-4b5c-b619-5056032a43e7",
          "httpRequestId": "03dcf7ad-89b9-448e-9c17-c9173a805b28"
        },
        "item": {
          "id": "4e5d368c-97c3-47c3-af21-5f580f8eaa9c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ba7184d5-d6bc-4953-a03e-86b074c61541",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "f912d052-39f3-43ba-96d7-9ab737ba0ba3",
        "cursor": {
          "ref": "ed689735-fd82-4cdd-b60c-041afa6d6fec",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1cdf3abd-3e41-4e1a-8b34-a3e30cc53b4a"
        },
        "item": {
          "id": "f912d052-39f3-43ba-96d7-9ab737ba0ba3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "12bc72cc-c160-4bd3-93d3-e92eb12bc5e1",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "4e00f737-4ad0-40d4-b689-6fcb988c99bc",
        "cursor": {
          "ref": "ce4da631-97a1-48ed-bc89-9a29fd673b96",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2b2834e7-a852-4e2d-82be-3ca26a9aa4fb"
        },
        "item": {
          "id": "4e00f737-4ad0-40d4-b689-6fcb988c99bc",
          "name": "did_json"
        },
        "response": {
          "id": "b139d76c-effc-4aad-8268-c9790f82d38a",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb2c9f7-e6e3-43a7-9ebb-fea4218438e9",
        "cursor": {
          "ref": "1f3ae69d-5dff-47f6-ac0a-3982712063dd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ccb7d88-5f78-4c59-888f-58ff995395e9"
        },
        "item": {
          "id": "5bb2c9f7-e6e3-43a7-9ebb-fea4218438e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "314b6cd7-b815-46f1-9945-ebc004beb3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb2c9f7-e6e3-43a7-9ebb-fea4218438e9",
        "cursor": {
          "ref": "1f3ae69d-5dff-47f6-ac0a-3982712063dd",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9ccb7d88-5f78-4c59-888f-58ff995395e9"
        },
        "item": {
          "id": "5bb2c9f7-e6e3-43a7-9ebb-fea4218438e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "314b6cd7-b815-46f1-9945-ebc004beb3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc37e56b-cf5b-4fbb-849b-28f61f20aad8",
        "cursor": {
          "ref": "9ddc02e1-fa7f-47db-bc5b-0e83d35333cc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "47bebcf0-7fd1-4493-9dd0-060bd00c0b27"
        },
        "item": {
          "id": "cc37e56b-cf5b-4fbb-849b-28f61f20aad8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "66356b4f-ffb6-44ad-87c9-4aafc3a638e8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57aa55a4-789b-4943-8cec-e3a972efe893",
        "cursor": {
          "ref": "293d6f9b-f42b-43c3-814b-5ef4cfd79c8a",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "83c451e7-39ef-46bc-86eb-0636428b7227"
        },
        "item": {
          "id": "57aa55a4-789b-4943-8cec-e3a972efe893",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "150372b4-350f-4e43-8dfb-371ad8e48a8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c882f-5e54-4016-8fe9-2222c8781dc7",
        "cursor": {
          "ref": "ba82a279-ec24-4a84-97a7-b4324a909a93",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d543f921-0cc6-4e78-a353-bda9a15c889a"
        },
        "item": {
          "id": "359c882f-5e54-4016-8fe9-2222c8781dc7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "92792e57-d161-414f-941e-e4f87facbd14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c982b8-503f-434e-92d2-5c0e0c0be969",
        "cursor": {
          "ref": "8a9188e8-3e5d-4279-ac2d-9d1a447a4293",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "422c9591-247e-42bf-a091-88a78d3c4568"
        },
        "item": {
          "id": "b6c982b8-503f-434e-92d2-5c0e0c0be969",
          "name": "identifiers"
        },
        "response": {
          "id": "8cbd3489-944a-4128-805f-2241e23cc720",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9548aa6-693e-4b86-9477-5f2c0935b8d3",
        "cursor": {
          "ref": "4b322419-9409-43ba-8fe8-52951c5450c6",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "79acaa35-3bbe-4dde-8cda-aba213aab6f0"
        },
        "item": {
          "id": "d9548aa6-693e-4b86-9477-5f2c0935b8d3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0654e351-e1cb-455a-a774-1f944b8cec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184d08d8-62f4-48b3-ae59-6137009fecc5",
        "cursor": {
          "ref": "c1b723b5-6b17-41d8-93b6-fe5bb9f3624e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "402968af-b50f-4141-854d-9ee101474183"
        },
        "item": {
          "id": "184d08d8-62f4-48b3-ae59-6137009fecc5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "acabe89e-643f-4dad-9740-2f558e6cfb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7aa8734-7a29-4eef-b1c9-cc194964c2db",
        "cursor": {
          "ref": "a56e5a9b-7871-4e7d-9cea-469ba2a5bf8a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4d6562ae-695e-4c52-90f8-6e5d9e11ddb8"
        },
        "item": {
          "id": "a7aa8734-7a29-4eef-b1c9-cc194964c2db",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ce0d96cd-4336-44a1-a23c-b10d0fd4bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25904d2-0d2c-47d7-8188-2f3f884a6877",
        "cursor": {
          "ref": "172fb7e0-386e-4631-95dc-a3dbfcc2a254",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6ea03cdc-f024-4c00-98c6-e0f4ea1b1419"
        },
        "item": {
          "id": "c25904d2-0d2c-47d7-8188-2f3f884a6877",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0b300596-0e5d-48e3-aaa8-1ac0a1bcc672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c791a2a6-8d75-4604-b7b2-49b4ab8ab564",
        "cursor": {
          "ref": "286c12f9-a3f8-4844-8b02-aa7f81560e94",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9fc58851-6615-4a3e-8d35-4ccd1de11e5f"
        },
        "item": {
          "id": "c791a2a6-8d75-4604-b7b2-49b4ab8ab564",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "69ca8579-e898-4f03-900e-50606159a0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a192b7dc-cdcd-4f21-badc-602a0dd20051",
        "cursor": {
          "ref": "f4c73426-7813-413e-91a5-2f9f2bc99554",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "97657b27-a6cd-4b39-a7ab-58b503daf7b6"
        },
        "item": {
          "id": "a192b7dc-cdcd-4f21-badc-602a0dd20051",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "98b34741-5a13-4b8f-82e7-075da9027ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0044e1-8a04-40b7-95df-aee8b2d06e08",
        "cursor": {
          "ref": "0576fe66-20d0-426d-a700-368289300497",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7e8f123f-eb9d-4bd1-8ab6-7eb70cc31f10"
        },
        "item": {
          "id": "fe0044e1-8a04-40b7-95df-aee8b2d06e08",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2bd79771-836d-4a2b-885a-c49b1345b217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98164819-045e-499e-9055-617c0c9d4a0a",
        "cursor": {
          "ref": "a727e5db-9c59-4d37-b0ac-59740663a218",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8b21cd54-9a62-4c47-8e62-d49da914efdb"
        },
        "item": {
          "id": "98164819-045e-499e-9055-617c0c9d4a0a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8834d91b-80c7-4def-98df-a9d87aedc70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd4dfba-7102-4c9b-a642-4a95d6b8f842",
        "cursor": {
          "ref": "7b9cef07-0a6d-47c7-a7f7-ae3e857ad14d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "869cca52-ce3f-45cb-bcee-49a8250d8c13"
        },
        "item": {
          "id": "2dd4dfba-7102-4c9b-a642-4a95d6b8f842",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "463d7224-2b92-4cfd-9360-6fe494fa3816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af16ccc7-c484-44ef-b00d-6a1a469adbbe",
        "cursor": {
          "ref": "59e4906c-3c76-48f7-846b-3fb235300825",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "715e6cf3-3988-4dab-87bd-21037ce4e81b"
        },
        "item": {
          "id": "af16ccc7-c484-44ef-b00d-6a1a469adbbe",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c17abdeb-e367-4bd4-a7fc-1e913f24618a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facb2b3b-0d44-4d96-b8ee-7d254a80e9d7",
        "cursor": {
          "ref": "a21d4196-04a2-4580-9569-6e5a8336bd41",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4419eb87-4ced-4cf9-95a5-e028b00531d6"
        },
        "item": {
          "id": "facb2b3b-0d44-4d96-b8ee-7d254a80e9d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c99deab3-81d8-4749-8ce9-c05b0e0f30e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b2b6f2-8ade-4f71-a018-be9712d95f83",
        "cursor": {
          "ref": "0f04340b-fa0a-48f5-862a-efe18d1ffca7",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c608d034-ad44-4334-aed3-76de1389f50a"
        },
        "item": {
          "id": "71b2b6f2-8ade-4f71-a018-be9712d95f83",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "90f261a5-624a-4c85-a2b7-f2af6a0d2779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a88a5-f70f-406a-ad14-4682d524c1ed",
        "cursor": {
          "ref": "734e9448-d02c-42e4-9d08-f511f1eb7478",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "efab8d7e-94c7-4a0e-813a-0aff677cda53"
        },
        "item": {
          "id": "038a88a5-f70f-406a-ad14-4682d524c1ed",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1aa0b266-0950-4b88-be2f-a2d42b38a59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53931d3-6e1b-4736-9bbe-a985b421fac6",
        "cursor": {
          "ref": "87df6e34-b245-4359-84fc-b3c87180848f",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4f48ac26-01e0-4808-9f23-65cedb7209d6"
        },
        "item": {
          "id": "c53931d3-6e1b-4736-9bbe-a985b421fac6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f6c37be9-03a9-4683-950d-f610f6f0b250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ad2cb7-505b-4dc7-acb6-eb2d092d830e",
        "cursor": {
          "ref": "7e534abc-5d2e-4166-b166-ecf7d1d9e91e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "da418d97-2b17-4709-a25c-0b4022eeb7f3"
        },
        "item": {
          "id": "74ad2cb7-505b-4dc7-acb6-eb2d092d830e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6a8d36c7-d801-4ff8-aef6-d0e06ae8a496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ba85f9-095a-4fe6-8361-b2b0874dc2cc",
        "cursor": {
          "ref": "dbd587d9-9fc7-4e5b-a457-6d2266223aed",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8ecab9f8-4ce2-41f0-90cd-6e589640534d"
        },
        "item": {
          "id": "13ba85f9-095a-4fe6-8361-b2b0874dc2cc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1f33205e-4e11-4fd4-ba53-c2af397ac6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb0e70a-d75b-4c24-b1c8-7364fb1f8326",
        "cursor": {
          "ref": "ad5a3853-76ca-4028-a009-a8bebe38f17f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a6f1c421-3d2a-4857-b22a-fad7428d2e1f"
        },
        "item": {
          "id": "acb0e70a-d75b-4c24-b1c8-7364fb1f8326",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7651fbfe-76b4-4e2f-afc8-ad0f57139568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb30c2cc-54eb-471b-bd0a-81c8219c3b92",
        "cursor": {
          "ref": "3ab5a60e-65d5-45a1-b28d-f9070bad4669",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ba353108-a67a-4da5-b63b-df4b431de881"
        },
        "item": {
          "id": "fb30c2cc-54eb-471b-bd0a-81c8219c3b92",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "12324f10-0358-40b2-bd02-a5b5c3304c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34517727-c0f7-4252-b5db-4d5c7b20c519",
        "cursor": {
          "ref": "23fcb6bd-def5-49ef-9271-b02c3b1c92a9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "79f5d7e8-2f07-48ef-9e07-d27c7ab0eb15"
        },
        "item": {
          "id": "34517727-c0f7-4252-b5db-4d5c7b20c519",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "35b4d34c-7195-49dd-b86a-ae369b1b1fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45348c72-1ab2-4868-86ab-6ba743613460",
        "cursor": {
          "ref": "6febc736-c934-420b-b065-cb71a372f56f",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "1d638067-40b3-4052-9c51-128f58546379"
        },
        "item": {
          "id": "45348c72-1ab2-4868-86ab-6ba743613460",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bdf09fc6-f42e-46f2-9c6d-eebafc274ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17967b3-801f-470e-acf8-61bd6b510a3b",
        "cursor": {
          "ref": "c7e32c6a-93e4-409f-939b-edfd3b77d16b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d51aee7f-84d8-4010-949d-4c1a002e4fe5"
        },
        "item": {
          "id": "f17967b3-801f-470e-acf8-61bd6b510a3b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a8d82492-be1d-431a-9b1c-b01cb173762b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae550d8-4a09-4d47-b266-320d11a85732",
        "cursor": {
          "ref": "fc8be291-113f-42cf-ad3a-9b86f9763568",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "78b6cdfa-6a49-401c-9894-57af5ab973bd"
        },
        "item": {
          "id": "3ae550d8-4a09-4d47-b266-320d11a85732",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1366d348-2769-49bf-8be1-6cd6297ff533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6731d0-bdef-4e30-af07-290184a0c5cf",
        "cursor": {
          "ref": "cc3e621e-053f-4312-a77c-1fb1c8dd963a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b41e3d84-e305-4d8f-b728-e8cb30727117"
        },
        "item": {
          "id": "db6731d0-bdef-4e30-af07-290184a0c5cf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "99baf5cf-6090-4f32-ad7f-1ec75a868306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c948572-3c1d-4d53-bf40-5a720eeb0a4b",
        "cursor": {
          "ref": "942bdafc-77b0-43d2-aa63-1326fbff1ffa",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "87765c75-8b5c-4100-bb36-866fb45bde11"
        },
        "item": {
          "id": "4c948572-3c1d-4d53-bf40-5a720eeb0a4b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fbbb29d0-36f8-4754-b119-697b508b5c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da93904-ee88-4e33-9a03-3996bf2d8ea9",
        "cursor": {
          "ref": "441fb342-caf8-4e46-a447-60c062390b7b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "863038e0-fb82-4ba7-bc60-314b3f929014"
        },
        "item": {
          "id": "8da93904-ee88-4e33-9a03-3996bf2d8ea9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8493173f-77b3-49e5-91e6-0db644bdccca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4e59b2-999d-4bda-a5ce-942bac5d4035",
        "cursor": {
          "ref": "54dbec96-b569-4f75-b16a-313ffdf04f13",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "76b3a3d4-178c-4951-af46-3952a7b94b56"
        },
        "item": {
          "id": "ff4e59b2-999d-4bda-a5ce-942bac5d4035",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd4a9b1b-aec5-4735-81f9-8ae9baade1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec6518a-c336-48cc-84b7-f02475eda8c4",
        "cursor": {
          "ref": "cd9e1d3e-c37e-43b0-b2c8-566086a62f90",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "9621e4db-ff3c-4db0-94fa-b1524d9b9ef3"
        },
        "item": {
          "id": "2ec6518a-c336-48cc-84b7-f02475eda8c4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "effebbbe-70b7-4143-9cc1-73c8c663a7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af19442-9b17-468d-bc54-d9edfb64046a",
        "cursor": {
          "ref": "3d2ea9dc-20fe-458e-898e-bfe8bbb08881",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "173e8e9e-328a-49af-b23f-390148ea6334"
        },
        "item": {
          "id": "1af19442-9b17-468d-bc54-d9edfb64046a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a99a6b61-c31e-4489-9c0a-d36ea638380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fcadcd-9ead-482b-9b80-829511acbff2",
        "cursor": {
          "ref": "8b37596e-6420-4473-9977-4801b7770386",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d5d6b7ee-3ab3-4c76-81f8-ed6873bd04f8"
        },
        "item": {
          "id": "71fcadcd-9ead-482b-9b80-829511acbff2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "cea90395-fc98-4b87-bac0-9509823579f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13117f0f-6a2a-4d01-9b18-dff482ae1728",
        "cursor": {
          "ref": "c5f5af53-7c8f-48b0-b76f-f036b3dfb6d9",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "af49062d-174b-4efd-b67b-7db08a988dcb"
        },
        "item": {
          "id": "13117f0f-6a2a-4d01-9b18-dff482ae1728",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b7505356-1a7f-45f8-8d26-dec505209489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575c5da9-4e29-41a7-a439-649e62aecfb0",
        "cursor": {
          "ref": "3ae0c2ac-a986-4108-b6ec-645562b82f07",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1d123a93-9e35-4e2a-8c6a-b2e0911ecc49"
        },
        "item": {
          "id": "575c5da9-4e29-41a7-a439-649e62aecfb0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3d8e9afb-b09f-4ab4-a2e3-4201607f859a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaf9bfe-87c2-43b1-93d5-3fb3659ecb6e",
        "cursor": {
          "ref": "ea21cf99-031e-44f8-abe5-bca1fef270db",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "57f56933-fd17-403a-b5a5-ea2389de003a"
        },
        "item": {
          "id": "dcaf9bfe-87c2-43b1-93d5-3fb3659ecb6e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2b4719ee-4518-445d-be96-ab41601763b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b3aaa9-eb76-42f1-b236-6725d8bbbd9e",
        "cursor": {
          "ref": "d233c422-75c4-4c4b-b897-e901aa23b703",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1999a59e-b02d-4d2e-824b-fa4f8252e4cd"
        },
        "item": {
          "id": "45b3aaa9-eb76-42f1-b236-6725d8bbbd9e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bc7289c4-b47d-4659-85a3-29b730b7fac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f04fc-8388-4d76-b8c3-bd1aba1a4e15",
        "cursor": {
          "ref": "59014f4c-b7d4-4869-8f25-119ddc24d58f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3b95ffbb-4b8b-4ee9-b427-93a63090e51b"
        },
        "item": {
          "id": "d93f04fc-8388-4d76-b8c3-bd1aba1a4e15",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "800406b9-6753-4f8e-9163-a4cfaf4b2ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be570ec4-c8c2-4622-9d9f-b0db4cc78b30",
        "cursor": {
          "ref": "cd8a8b58-d252-48fe-9112-ed5726884ddf",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c9de4c14-b98e-4749-8b07-207196684e79"
        },
        "item": {
          "id": "be570ec4-c8c2-4622-9d9f-b0db4cc78b30",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "437fb5e0-e527-46f7-b065-520db0e36c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1c5a72-79a3-42aa-a827-ee61418a83b6",
        "cursor": {
          "ref": "3cdb1a13-0e99-48e0-8d95-443bae5e6ea8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "50978087-7913-49d9-8b8f-ec2fc6de6b92"
        },
        "item": {
          "id": "6c1c5a72-79a3-42aa-a827-ee61418a83b6",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7124be2e-e613-4dfc-9e76-afce28ccd3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9f0bd3-0288-4b30-b361-fc8e29243ded",
        "cursor": {
          "ref": "d2a5560d-eef0-4d11-8a6b-447593ad5dba",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e0153bc-65a8-47f4-9f61-81d709403795"
        },
        "item": {
          "id": "6a9f0bd3-0288-4b30-b361-fc8e29243ded",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8a4dbd2e-d1c4-4a91-aa9c-7ebc42ae6f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d49de02-dc52-479f-95a5-9a1b27b381e6",
        "cursor": {
          "ref": "8ee4cc49-b4a1-4c87-9147-f4f89cb4ef7f",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4a59b815-8009-47c4-a8ca-4cbd9b1aaffb"
        },
        "item": {
          "id": "9d49de02-dc52-479f-95a5-9a1b27b381e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1a0fd4ed-277c-4067-b538-36a6d7f9ea49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1975562e-211e-4d82-ad9a-5c91f9eeb3da",
        "cursor": {
          "ref": "3390d1a3-c9a2-4efd-96e8-c0ef2b083387",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b83271ea-8f32-43bc-8a5c-f14e1dcf5300"
        },
        "item": {
          "id": "1975562e-211e-4d82-ad9a-5c91f9eeb3da",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "73d206ef-2fea-4543-b8df-567a8e8a838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd0bd99-e0d2-497f-ab26-9af880e78099",
        "cursor": {
          "ref": "4ec5b835-a264-466e-9de7-4ba399401845",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be41dac2-77d2-46cd-9931-b77e670a66ad"
        },
        "item": {
          "id": "ccd0bd99-e0d2-497f-ab26-9af880e78099",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d1b91e75-537b-4fa8-80de-c73a6a333022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccea38bb-8d90-49a2-9406-e10a1a113c96",
        "cursor": {
          "ref": "cbb8c430-25fe-4ab8-a1de-500af7ecc260",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "371b9e3a-afac-40f3-b4fd-574c1ae02adb"
        },
        "item": {
          "id": "ccea38bb-8d90-49a2-9406-e10a1a113c96",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d433e551-4152-493b-a44f-94c809dc2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d7f625-70e6-4f59-98ea-c572062ca901",
        "cursor": {
          "ref": "bf4f83e5-dbd4-4197-b2df-71cb460496fd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ab431f2a-7d12-44a2-8911-d0337155f8df"
        },
        "item": {
          "id": "d4d7f625-70e6-4f59-98ea-c572062ca901",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e3008b73-a5a8-4c99-9ba4-b3dc105f154c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c65854e-3d5a-42b5-9472-84d7285065ef",
        "cursor": {
          "ref": "13d1607e-dda6-40eb-aeee-d6fddf259eb5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c435e968-4822-4edf-845b-44095eeff8fc"
        },
        "item": {
          "id": "8c65854e-3d5a-42b5-9472-84d7285065ef",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f47a7fb1-e74f-4fde-a8c7-de25b89466a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa745d9b-96a1-4573-9a3c-48e1f5ade6a3",
        "cursor": {
          "ref": "4cd5d39a-ed30-470c-98cf-e9d3bba512dd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "324360d2-ae82-4cc3-adeb-1d7592175f9b"
        },
        "item": {
          "id": "aa745d9b-96a1-4573-9a3c-48e1f5ade6a3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8776b7a5-cdec-4c6c-8e54-ff488e4228cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37b5d8a-b0d5-402b-ad06-fd378ff85f84",
        "cursor": {
          "ref": "90de8e67-6a63-429a-ae00-986458270ef1",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0b2fd8ea-a78d-4f22-a3b0-0a475003e522"
        },
        "item": {
          "id": "e37b5d8a-b0d5-402b-ad06-fd378ff85f84",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "63de6a02-04f4-4bd1-9db6-b1a371719f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1211f76b-a7f7-4618-a86f-2a45f5870e09",
        "cursor": {
          "ref": "1894f140-168d-4a94-8dc6-301d61868131",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c72d8936-b28b-46ce-8b5c-f07d7ddd5d7f"
        },
        "item": {
          "id": "1211f76b-a7f7-4618-a86f-2a45f5870e09",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "23fd34ff-e049-4a41-a82a-9604b19f9a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309f32dd-a481-4090-806b-57ec9bee9a4c",
        "cursor": {
          "ref": "25cce7bc-b808-4468-81e6-a8576b1223cd",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "27541e95-0bdb-4e68-9ad6-b8927fab4446"
        },
        "item": {
          "id": "309f32dd-a481-4090-806b-57ec9bee9a4c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b1762012-546a-4f19-a851-45815ea41828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d37d8e3-5224-4fad-b131-197b115db8e2",
        "cursor": {
          "ref": "d2934de5-0c20-4b80-aa8e-3c6c3e4a9453",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f87ec38a-baa3-4762-8d29-20fc23e18b09"
        },
        "item": {
          "id": "4d37d8e3-5224-4fad-b131-197b115db8e2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f49cd713-187e-49b2-bf42-ecc70af09f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efebef87-d2e9-4e08-ac0d-6e12a703b1fe",
        "cursor": {
          "ref": "ab04718e-0d2d-44f9-bc28-d65870147c34",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9f2d19ea-7ff8-4021-9ae3-efffcfd0e549"
        },
        "item": {
          "id": "efebef87-d2e9-4e08-ac0d-6e12a703b1fe",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "48964d52-bc51-450e-8c62-f0337709c002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727ecd67-1292-493b-ab2b-85f1e3553048",
        "cursor": {
          "ref": "14cda46e-7cc8-47a0-8eaa-130b3cbe31ca",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8df7f83d-1097-45e9-92a5-21aea191e844"
        },
        "item": {
          "id": "727ecd67-1292-493b-ab2b-85f1e3553048",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3d296c14-a929-4cef-8952-3b3ead362e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5d474b-b346-44e6-8b45-64eda0957232",
        "cursor": {
          "ref": "04d978de-0b67-497b-bfcb-538db475805b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4f3f45fd-f016-47e4-a606-68a495b77310"
        },
        "item": {
          "id": "3b5d474b-b346-44e6-8b45-64eda0957232",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ab4aabeb-3edc-4f35-abc6-3f7d7daae499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e04835-6bc8-4e3d-8a9e-4b669b766d74",
        "cursor": {
          "ref": "881f11a1-0c09-403b-a099-63e92e0d99df",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1813b3c1-6a58-4aa2-89ce-3216c9da5aa5"
        },
        "item": {
          "id": "29e04835-6bc8-4e3d-8a9e-4b669b766d74",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "277257c8-6891-4ecc-9204-ef20a6d0ab3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16ae4c4-2cc9-4e71-8e5d-726b7775cc1c",
        "cursor": {
          "ref": "e9b9c82c-10b9-4711-82ba-7697d7a1027a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cf222001-c2bb-47c1-afec-ca9ffe0f6ee4"
        },
        "item": {
          "id": "d16ae4c4-2cc9-4e71-8e5d-726b7775cc1c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "316a06bc-e2a2-459c-8768-d43735dc41ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c14be01-23e8-4830-aec7-333aef7457b3",
        "cursor": {
          "ref": "d448b6f2-1f12-4a7d-81d4-cc0b466a4c27",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "810fbcbf-b88a-4af4-8c6a-b7cf9bd1bffc"
        },
        "item": {
          "id": "4c14be01-23e8-4830-aec7-333aef7457b3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2439adc4-dc9f-418f-ab45-9c248f238663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4beb2bfc-2e98-4f4a-8add-3c04d2535701",
        "cursor": {
          "ref": "95557279-f376-44e8-a1b8-26170253c97e",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9f7276ce-dff0-44f5-9ebb-8fe4006f8965"
        },
        "item": {
          "id": "4beb2bfc-2e98-4f4a-8add-3c04d2535701",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c33855e6-7c29-4816-b3d5-2efe30313c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f67186-b9c9-433e-b82c-d6c415effbb8",
        "cursor": {
          "ref": "4f390ec9-cc29-40c4-82ff-f52dcfd0efaa",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9131e4a3-c89b-4162-9329-f8cd0d49a8e6"
        },
        "item": {
          "id": "26f67186-b9c9-433e-b82c-d6c415effbb8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9fb4ec7a-f7fa-474d-9b09-1c5ffcf68b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccc8259-a412-4ba5-b92c-480fbca714a9",
        "cursor": {
          "ref": "f3d05f87-ec46-4808-933d-4a5ffd1f5fca",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c47c3f3a-c891-4970-8a61-4af470f52608"
        },
        "item": {
          "id": "bccc8259-a412-4ba5-b92c-480fbca714a9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "436c4050-e5b0-442f-86e1-4c9635c2eca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a16235b-932b-4127-8fe3-5ae2d89ed1a3",
        "cursor": {
          "ref": "0de07b36-7d3a-4b33-9402-493a97694abc",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5febbf7e-5b74-4546-b266-478bd1fa61ae"
        },
        "item": {
          "id": "2a16235b-932b-4127-8fe3-5ae2d89ed1a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4b52424f-5788-4d17-8acf-22132c1c98d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055194f9-58f0-47cd-8e2d-ab16436f0318",
        "cursor": {
          "ref": "5cb9acaa-c125-4fe6-96a8-e79478046b09",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "057ae7aa-fe75-4996-9187-dee077ef750c"
        },
        "item": {
          "id": "055194f9-58f0-47cd-8e2d-ab16436f0318",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6f10bed7-f7cb-4e27-8435-d8c2ff00bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3f8f5c-bcb5-4a07-8e72-17720950b81b",
        "cursor": {
          "ref": "59e19d66-fa16-4812-9cc8-6f7662615970",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "382597a6-1441-4d2d-baca-c17d8aa6d6ff"
        },
        "item": {
          "id": "3b3f8f5c-bcb5-4a07-8e72-17720950b81b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1508a621-1740-4594-916c-3f7372e2029a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f06a0c7-e874-4f4f-8b82-7a4daa589800",
        "cursor": {
          "ref": "ebea6b71-a23f-442a-99db-a691879215de",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "44370849-46ed-4ac6-ad64-0512deb6156d"
        },
        "item": {
          "id": "2f06a0c7-e874-4f4f-8b82-7a4daa589800",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cda7a7be-c4df-4425-9106-5b13c575e408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ddafc6-69dc-40d7-8073-a731960e4c93",
        "cursor": {
          "ref": "69f650c4-bccb-4f2b-b7ad-8dab2f24cea3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ba14a622-99a6-4475-acb0-6511ae4c0eff"
        },
        "item": {
          "id": "35ddafc6-69dc-40d7-8073-a731960e4c93",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "60a661f1-748a-4ed7-8827-8a5ada87d6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768ac75e-2b05-4a46-b119-9bd3689366f4",
        "cursor": {
          "ref": "07baf8f1-e918-4ac6-b2b6-fa7a5307cb54",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1d0ba0a0-1ebc-49af-b680-29e45b3f55bf"
        },
        "item": {
          "id": "768ac75e-2b05-4a46-b119-9bd3689366f4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0763a8a0-3ff7-494d-b736-f9aa9ccea4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd2e53d-ee40-4af4-8997-d7bf62fcace7",
        "cursor": {
          "ref": "36444bbe-9780-4d7a-a234-b48fc5e56ce5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fa1a8be3-e934-4780-b64d-1f72e2b62c50"
        },
        "item": {
          "id": "3fd2e53d-ee40-4af4-8997-d7bf62fcace7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "eb1a01d6-7bf1-42a3-b376-431b2eace861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6c317d-83bb-4bf5-b9e9-94a832d2095f",
        "cursor": {
          "ref": "61325014-b8d2-43b1-af1c-e751ea7496ae",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d6578b81-be9e-4c71-a663-a1c015279ee8"
        },
        "item": {
          "id": "1b6c317d-83bb-4bf5-b9e9-94a832d2095f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "593867b7-9152-45dd-91a2-ea2051d07894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60110398-02ca-4f5f-98d7-3201381b368e",
        "cursor": {
          "ref": "76218295-5325-40ef-b877-8a0521460d9c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "857bbe7d-9f89-4aaa-bd6e-1d54659f56a7"
        },
        "item": {
          "id": "60110398-02ca-4f5f-98d7-3201381b368e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "806de352-9d76-498d-84a9-8bec62544c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e016e4-73fa-4d9e-89ea-2a934e48eed6",
        "cursor": {
          "ref": "82294cfe-65a3-42c9-adb2-2a312415d6dc",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ca39cd4f-7ec9-45d8-b932-19c4363ca081"
        },
        "item": {
          "id": "48e016e4-73fa-4d9e-89ea-2a934e48eed6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "872632d9-2677-4a23-a2d9-9ace401ffff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b8bf7b-5dba-40c1-b61e-50de032a0d87",
        "cursor": {
          "ref": "3346b5d7-f3ca-4823-ae4e-921e79b062d3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c1f2576-983b-405e-b30f-055f40105f81"
        },
        "item": {
          "id": "f4b8bf7b-5dba-40c1-b61e-50de032a0d87",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a31c7265-942c-4fcc-9308-bfe8430cd0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6fa26b-35a4-4188-9f66-da93efb8cb82",
        "cursor": {
          "ref": "a220ffa0-e52e-4871-9f4b-16e480dfc7af",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9b49e6f5-10a9-47ac-bf55-77faf758ce11"
        },
        "item": {
          "id": "7f6fa26b-35a4-4188-9f66-da93efb8cb82",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f730b970-4b36-4a7c-8b07-3a6eafbdbe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fe242c-751f-4042-bcfb-213aae54fe95",
        "cursor": {
          "ref": "e0d9f945-6b5a-4b0f-8a16-24070afc2eaf",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7272f28-5441-4a68-9d4c-eb91566baf3b"
        },
        "item": {
          "id": "68fe242c-751f-4042-bcfb-213aae54fe95",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6e3e7067-9300-4a9b-89aa-06caa15238ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e18a3a1-5b59-4a9a-896d-1b17ca81feca",
        "cursor": {
          "ref": "cdfa266f-cb8f-4ea8-be22-f1adfad73326",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2b352a86-61a3-4d96-b512-f629612cab59"
        },
        "item": {
          "id": "7e18a3a1-5b59-4a9a-896d-1b17ca81feca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "94523e95-68cf-42d3-8fc0-17ba10532966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0373369-a09e-4970-bf9f-9a830e8da128",
        "cursor": {
          "ref": "aa251a9e-1dcf-4581-b6ba-736893d8cd0e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "25e1a78b-33e7-4508-8f2e-b06a1bab3e06"
        },
        "item": {
          "id": "e0373369-a09e-4970-bf9f-9a830e8da128",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "920a62a8-0dd7-444c-a443-2d5dbed9df95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ddd9d9-bd7a-4e0f-a9ab-516675c56d0d",
        "cursor": {
          "ref": "fd9251b5-e10b-4f52-8a7c-24a59a39a452",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "569b97c9-a683-4d57-862c-b09b05c3333a"
        },
        "item": {
          "id": "e1ddd9d9-bd7a-4e0f-a9ab-516675c56d0d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "be0236c0-a610-4680-a992-d60f8c7e3029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2665c45-ee4a-4edd-8af9-08e461c1f10c",
        "cursor": {
          "ref": "6a0a0404-3cbd-4014-b701-d978ce9e7814",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cccb00d7-bf48-4c27-be13-8d8c2412f5c0"
        },
        "item": {
          "id": "f2665c45-ee4a-4edd-8af9-08e461c1f10c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a348d3d7-e5d0-4537-b9a5-4c7ca91cb347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9be1bfc-1845-442b-a2da-8fd8309ea710",
        "cursor": {
          "ref": "00e548d8-5a6b-4e15-8275-fc0f69363ba6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "415bb5b1-1119-45c1-9dbd-bd9b254ad46d"
        },
        "item": {
          "id": "e9be1bfc-1845-442b-a2da-8fd8309ea710",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c1d400ea-d429-43eb-a38b-4abd1383fd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b453e34d-2bf0-47e1-b4cc-c4f5d90c04d2",
        "cursor": {
          "ref": "76682678-0951-4623-baab-60aaede74e76",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "624cbb4b-7cce-4354-a70e-af91325d8843"
        },
        "item": {
          "id": "b453e34d-2bf0-47e1-b4cc-c4f5d90c04d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9bfaa116-2ddc-47db-9615-17a86a7bf739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c39254-88cb-42e0-a2ce-ca86f1f06fd3",
        "cursor": {
          "ref": "188082b2-e789-4ad8-aec5-0cf28c1db48e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a1187e92-46fe-4b31-87a5-628631625b81"
        },
        "item": {
          "id": "e9c39254-88cb-42e0-a2ce-ca86f1f06fd3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6b43f227-4f67-4a89-9595-7459c8bcb91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce97232a-4484-4149-a279-5c7c7d76953d",
        "cursor": {
          "ref": "1f2f90e4-4610-4a8b-a12d-cc40f8ecb292",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1abd8f0a-5174-44cd-97b3-972c25a2ef62"
        },
        "item": {
          "id": "ce97232a-4484-4149-a279-5c7c7d76953d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "59e25421-7f28-4b34-875f-792f53f11cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968cb916-1a77-4bd3-87c8-38399dd8990e",
        "cursor": {
          "ref": "29f8c3ae-e534-4735-8986-9258b992cef7",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "93f5a551-c750-40ea-a527-ff27c8fb468a"
        },
        "item": {
          "id": "968cb916-1a77-4bd3-87c8-38399dd8990e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7e2e8235-a868-4709-b6e1-7f5a37890b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e968694-0154-4877-93e3-84ac2ac66a4a",
        "cursor": {
          "ref": "9378a611-e24f-415d-b702-7be8928118cc",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ec3a8a59-c428-47a0-8b73-4d57e1d27710"
        },
        "item": {
          "id": "3e968694-0154-4877-93e3-84ac2ac66a4a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7cc26c18-1ea9-4881-8728-d78a96a1d301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b7926b-ec5b-48cf-a295-a9acabc50f94",
        "cursor": {
          "ref": "64eed10f-3c13-45da-8976-ef0ac51e422a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b9cd5bf1-96dd-4e2e-8112-d6b3586dff04"
        },
        "item": {
          "id": "60b7926b-ec5b-48cf-a295-a9acabc50f94",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bc5e0acc-dd33-4904-bb26-6d08248cc907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dadcef5-92d0-461c-ae2c-e08914b585c1",
        "cursor": {
          "ref": "16869fe4-2617-4fd7-b193-22d25b52c45f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2d7665ba-a3c5-4a3c-9453-8170fba83e9e"
        },
        "item": {
          "id": "9dadcef5-92d0-461c-ae2c-e08914b585c1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "50ceb26f-247c-4e02-9415-87d5f007db63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e616e9a-e8a8-443c-be75-4e9d1c90eccc",
        "cursor": {
          "ref": "a2157db0-a853-497e-86e2-4217a8b84277",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f7519147-00de-40ad-b275-1af63a6eaa6a"
        },
        "item": {
          "id": "0e616e9a-e8a8-443c-be75-4e9d1c90eccc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "20832dfc-2a73-4061-8075-b8a792228673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d041477-fd78-4a9a-9b40-8612fd9d241b",
        "cursor": {
          "ref": "00b03fd2-aa8e-42c5-9966-f4221158b633",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8dbf9315-e9ea-4822-b53e-034be6638486"
        },
        "item": {
          "id": "1d041477-fd78-4a9a-9b40-8612fd9d241b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "09652f79-b738-4c9d-8443-82c81d2605f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa2504-6fb9-42f0-a706-b91aeb2ce02d",
        "cursor": {
          "ref": "96b7a2a6-ed8f-4351-af34-4fc9dd404d8d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5f3948f9-1981-40dc-b97e-5d866c98317f"
        },
        "item": {
          "id": "d4aa2504-6fb9-42f0-a706-b91aeb2ce02d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a0449339-feea-46c5-b280-633dd9426d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5fbef6-7866-4561-a5fe-05f78cde539c",
        "cursor": {
          "ref": "824ab519-8701-4c01-be0e-46e50e7ec876",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9ea84bd7-c198-40d0-8c90-567adc18331f"
        },
        "item": {
          "id": "cc5fbef6-7866-4561-a5fe-05f78cde539c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1f6b5d7c-5111-48f4-9bba-56bf34810745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8161e6-7e64-4fc0-9bfc-742650b049d8",
        "cursor": {
          "ref": "f8426e4d-c400-4a9a-b12f-35ea33e8dead",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "41467063-1327-49e3-aadb-c7afe93b7f51"
        },
        "item": {
          "id": "ed8161e6-7e64-4fc0-9bfc-742650b049d8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7e7c26d5-df7c-4128-95a5-47d75b96bc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24eb6dce-8dba-462c-a5fe-535f21b89eac",
        "cursor": {
          "ref": "50a4e181-751c-4a50-8577-4bc5553e349d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c63ac49f-348a-4394-bb45-a9fd7532c2d8"
        },
        "item": {
          "id": "24eb6dce-8dba-462c-a5fe-535f21b89eac",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d769e565-9d64-4214-b5b7-741f6983e5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694460f6-73e0-4746-88c4-6dcd73099c27",
        "cursor": {
          "ref": "ee06ddd8-eebf-4eca-9739-632218f8843d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "58a553f7-59c1-4a71-b3d5-27ea359d1e70"
        },
        "item": {
          "id": "694460f6-73e0-4746-88c4-6dcd73099c27",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "025a5e46-54be-4bbc-9cdb-f9a649eb250e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7638cbc-5fa3-4585-a138-40355bd57f8e",
        "cursor": {
          "ref": "b92849f2-73ed-4fc6-b0f6-0556fc94a265",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "726fbc39-404b-4f6a-b21f-e325e6693c7f"
        },
        "item": {
          "id": "f7638cbc-5fa3-4585-a138-40355bd57f8e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a952c869-32bc-49e5-b33b-3df6f9d92f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2095d5-1beb-486a-b50c-bafbd625a057",
        "cursor": {
          "ref": "4d8c2e6e-b267-4a90-b46e-6eacd98ce23a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "870a8936-60d9-430b-b1ef-1ba8843fa4db"
        },
        "item": {
          "id": "0d2095d5-1beb-486a-b50c-bafbd625a057",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b443f8f9-3811-4f4a-baad-a10a463557b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8688361f-54bb-40b6-a60a-d35954e1720b",
        "cursor": {
          "ref": "bfc76917-36fd-4787-b075-93c745a9cddc",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "438a502f-ca06-4704-950d-342cf502b5cf"
        },
        "item": {
          "id": "8688361f-54bb-40b6-a60a-d35954e1720b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e459764e-cd29-4745-b3f4-ef99e0c7dc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a2afc1-108e-4672-a830-53833fbeda6f",
        "cursor": {
          "ref": "82131af8-918b-4e7f-8f34-e0263ef5c81e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "780642d8-20a9-4864-84db-6667bdcb6c83"
        },
        "item": {
          "id": "b7a2afc1-108e-4672-a830-53833fbeda6f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3f9c2eeb-4335-4192-93fe-80e57c31cf81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270bd1a3-096b-4131-9b31-cc0d6191733c",
        "cursor": {
          "ref": "8b0ea438-57fe-485b-8d0a-272bd934004b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "862cf4c6-9608-4a49-a41e-f77f98785f60"
        },
        "item": {
          "id": "270bd1a3-096b-4131-9b31-cc0d6191733c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b0d121b8-1e93-4cae-9557-d615ee011df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9808657e-aeea-4cdd-abe8-8d0c2074849a",
        "cursor": {
          "ref": "bdaacfe2-3142-427d-a75b-c32a4c4d3fa6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0a90c4d0-c2fe-456a-86e3-ceeda9fe92ee"
        },
        "item": {
          "id": "9808657e-aeea-4cdd-abe8-8d0c2074849a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2af448cc-b0e4-4783-9d51-59a9f6d3a763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d5a063ca-15ab-400b-9de7-36df608f10bf",
        "cursor": {
          "ref": "8cfd0108-04b3-4a8b-92f2-4d334f22f3fe",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2c93ea94-ecf1-4399-bad9-6ef1c53d397e"
        },
        "item": {
          "id": "d5a063ca-15ab-400b-9de7-36df608f10bf",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "76008f84-c58f-422c-a2bb-dd59f269484b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cfb375c6-92ca-409c-ab3f-8cf0d6cd6032",
        "cursor": {
          "ref": "34645f97-4408-4bae-b60e-fb3a142bf99a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ccb0d872-ff3d-4a1a-996c-d55575faa24d"
        },
        "item": {
          "id": "cfb375c6-92ca-409c-ab3f-8cf0d6cd6032",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8ed48e99-b226-4945-bb78-ff8bd11f2d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "12e4079d-5104-48a3-8179-2206ad3f9290",
        "cursor": {
          "ref": "d236d95f-ef91-49c8-af55-e13d420a0a46",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d5b6d6ee-5574-45b6-b69a-4fab7a4c91c2"
        },
        "item": {
          "id": "12e4079d-5104-48a3-8179-2206ad3f9290",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f4e1f97b-64e4-4c4b-a311-2d53feeed6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0df4a6b7-d94d-4f75-988d-d90fa91019bd",
        "cursor": {
          "ref": "06075874-3a5e-4844-9d38-e2e609e22555",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7f60bad3-e2f0-47ba-b014-348ca418bd46"
        },
        "item": {
          "id": "0df4a6b7-d94d-4f75-988d-d90fa91019bd",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f10b5d77-dc5d-4b6b-ad5a-a2ea70cdebba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1631cd4a-0bea-4f89-9ce9-4357314e6471",
        "cursor": {
          "ref": "3a056b06-f580-42b3-9f82-8f4b7167e8ea",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da81ce20-337c-4606-958a-1f94b11b2b3f"
        },
        "item": {
          "id": "1631cd4a-0bea-4f89-9ce9-4357314e6471",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "684d7e01-557c-412c-a0c3-2a3bfe4a2b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ce87d708-ff29-4ad9-92be-277d68e350f9",
        "cursor": {
          "ref": "8a1ba8b4-51b7-4c47-8d5c-2a0013e99ae7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "97e7e108-61e9-4bd6-9ed5-1fc26721c134"
        },
        "item": {
          "id": "ce87d708-ff29-4ad9-92be-277d68e350f9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d3f7a0ec-c46d-4be9-9762-d84eb1a43c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8840e6e6-27a0-4817-beb7-a5c4a2979cf7",
        "cursor": {
          "ref": "606bbd71-6918-4f3e-9c58-837adf8431fc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9f011425-06ab-474b-9562-8f2d5ff02561"
        },
        "item": {
          "id": "8840e6e6-27a0-4817-beb7-a5c4a2979cf7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c9f01c1f-4240-43d4-b108-7f9a6bee0f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f8c3bc-e0b9-4aac-a664-cf7f67850a3f",
        "cursor": {
          "ref": "039f9afe-e6e0-43c4-8d19-93b7364f6d89",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c46b4358-3117-4ed4-a2d0-236e005910b3"
        },
        "item": {
          "id": "51f8c3bc-e0b9-4aac-a664-cf7f67850a3f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dbb62a1b-1f26-4292-87f6-56d4298aadad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c68eaf-9a0c-477f-8134-991196668300",
        "cursor": {
          "ref": "599d5aba-9adb-49d1-9ab6-999a0b480b8a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0124564b-762e-44ee-97c8-434560002ae1"
        },
        "item": {
          "id": "08c68eaf-9a0c-477f-8134-991196668300",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba9f1236-10d3-4e35-be0f-64d0a41bb02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c695a6b2-47a7-4f88-811d-586326858e23",
        "cursor": {
          "ref": "9de0c80e-1a67-4b12-8180-e0b2a2bf38b2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "18e5a72f-22c0-4f16-b219-806743cfeaa6"
        },
        "item": {
          "id": "c695a6b2-47a7-4f88-811d-586326858e23",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2da1e2d5-9ddb-468b-b2c8-73f3f3a4b533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c137f36-33d3-4c5c-9b27-bc94ff6bd7a8",
        "cursor": {
          "ref": "01f4f47a-0c42-4cf8-a7fe-7678eca56621",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fb9a066e-683d-4e96-963f-85d8eea5bea1"
        },
        "item": {
          "id": "6c137f36-33d3-4c5c-9b27-bc94ff6bd7a8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fd9c5a09-8ef0-4956-987a-7a09b53d4ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de0ae53-8b24-48d1-88cd-82dd9033edc5",
        "cursor": {
          "ref": "ad8a3df9-e0b1-4419-b53b-b999b379e54a",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f3a7ad6d-7e2d-498e-a11d-90cb9f55e892"
        },
        "item": {
          "id": "8de0ae53-8b24-48d1-88cd-82dd9033edc5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a107e481-6ff2-4dfc-8059-625da4d2a381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070b19fa-6494-4a0b-96a3-dce9a8fa1e4b",
        "cursor": {
          "ref": "496af4c5-730c-4c73-97f8-a85f44dab28a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "16786a41-6bf3-47e5-abcc-27cfe6605a58"
        },
        "item": {
          "id": "070b19fa-6494-4a0b-96a3-dce9a8fa1e4b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b12c132e-1256-4098-aa42-ad0cb0b12d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325f42a0-c76e-4fa0-b971-ec0baf6fbaf6",
        "cursor": {
          "ref": "ebab0856-a0fb-4282-8afe-6433436abb4e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cb2a8753-f084-419b-9e43-7663f57b0ea7"
        },
        "item": {
          "id": "325f42a0-c76e-4fa0-b971-ec0baf6fbaf6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "80dfa996-fd89-4943-a159-7b396a4a39eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ce8698-a2bb-42aa-b547-298fd26e30b5",
        "cursor": {
          "ref": "b901ad7d-3e2d-4395-81e8-33efcdeedfb0",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d9a466c4-9f35-4ee3-87c6-ba3ede3bc5ee"
        },
        "item": {
          "id": "56ce8698-a2bb-42aa-b547-298fd26e30b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cacbc5d8-0e4f-4ff0-b172-66e194671ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "312f811d-b2ca-4c72-97d4-cb648a496158",
        "cursor": {
          "ref": "3abb7ebe-a0a4-4e7a-9013-19f5269662df",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2ecaab75-d481-4f94-a859-2b00aa50b5c5"
        },
        "item": {
          "id": "312f811d-b2ca-4c72-97d4-cb648a496158",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "82c2a232-71e4-4f60-a0f0-a5e43fcd25a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36d6ce2-dc69-4ec4-8037-5d660bd3b324",
        "cursor": {
          "ref": "fd04e909-c243-4f24-966b-99693d62f07a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7a50b4d3-0d30-4f33-8f72-575bcb69900f"
        },
        "item": {
          "id": "d36d6ce2-dc69-4ec4-8037-5d660bd3b324",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d480a212-9a9b-443b-b5d8-ce2dcdcbd4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e80e80-e8f9-49b2-89ed-3034bbfdf02b",
        "cursor": {
          "ref": "c4bc0f01-1853-40dc-9ef0-32115a63c1f1",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8c4d1ca7-115e-4b35-8072-b53a386ada11"
        },
        "item": {
          "id": "44e80e80-e8f9-49b2-89ed-3034bbfdf02b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1400e1aa-21f1-4268-9483-71dae9e5840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd08515-0757-42f5-bf72-a4caa3d8b179",
        "cursor": {
          "ref": "520d1d59-c8e9-4585-8c44-835129de456e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ad57490e-1b68-4b08-b61e-db17e24e6dec"
        },
        "item": {
          "id": "7cd08515-0757-42f5-bf72-a4caa3d8b179",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "96dd07ab-09d1-4ba0-8b9f-172dc8329cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20534d14-6b21-44a8-8cec-3e87b23f2e41",
        "cursor": {
          "ref": "eabc9107-80f5-45ac-82d5-e5750e77e4f9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ec669650-f767-4504-ac60-3d38b76fcc94"
        },
        "item": {
          "id": "20534d14-6b21-44a8-8cec-3e87b23f2e41",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "48ecb7ea-945c-4551-942b-5a4699657589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679d7dc7-5609-43e8-96e5-6258fef3595e",
        "cursor": {
          "ref": "7a9b1a99-ceaa-4057-8646-e58b2eef2d28",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e95353dd-b5e0-40b5-9b82-2f7670f85f55"
        },
        "item": {
          "id": "679d7dc7-5609-43e8-96e5-6258fef3595e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4ee77430-f498-47dd-ba1c-8c6b76e1fbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e65fde-ab3a-42a0-b5c0-f9dd0e9ec312",
        "cursor": {
          "ref": "ecff3ad4-be2f-4d76-9a3e-f9a4bb1a24b3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f4596f2b-d712-4ecc-9a64-8b98a02077a4"
        },
        "item": {
          "id": "38e65fde-ab3a-42a0-b5c0-f9dd0e9ec312",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "9774a228-6b52-40a5-a740-8e9575908a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fe288c-eacf-4146-bbcb-da88aed2d1db",
        "cursor": {
          "ref": "cda50a5d-8fb4-46f4-819d-6534314abe60",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "03fb3a06-386a-4b34-87eb-60cec43a8b37"
        },
        "item": {
          "id": "e2fe288c-eacf-4146-bbcb-da88aed2d1db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7e5113a9-24c4-4e2a-b609-4e637c9dd2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59883c10-96c3-46bd-963d-a3967bc54962",
        "cursor": {
          "ref": "e03abf4e-47ed-4cd5-b378-8522840e37d2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bbd9170a-37eb-4687-8643-af20d340f263"
        },
        "item": {
          "id": "59883c10-96c3-46bd-963d-a3967bc54962",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3fafee0e-f746-409a-878c-7434592e4c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f4914c-bf44-49de-a47a-09925387809d",
        "cursor": {
          "ref": "6d9990d0-08f3-43bd-afde-1bd1e799e889",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3c264326-97eb-44b6-a266-ce7d86f6c21a"
        },
        "item": {
          "id": "75f4914c-bf44-49de-a47a-09925387809d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4782a12e-1115-4e17-8bbf-50889f576a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31453fc3-adc1-45e3-b235-5be3c289498b",
        "cursor": {
          "ref": "30398497-7927-445f-bfbc-f020a4579273",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "11d9b85a-a3a7-4cc6-adfb-173b79ec0638"
        },
        "item": {
          "id": "31453fc3-adc1-45e3-b235-5be3c289498b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ab5247ea-bdb5-4789-9cef-2c3f9ddd219d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d0f5af-c730-4c2d-a473-9bd99cccae49",
        "cursor": {
          "ref": "0b6349fc-c173-419b-ad91-1f1075f1f574",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1ef6ba85-aab7-4f62-aa25-2f8981f52a52"
        },
        "item": {
          "id": "95d0f5af-c730-4c2d-a473-9bd99cccae49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "511c8801-2d01-46a1-9f41-93c053e60d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bba56b-5513-4cc6-8942-1893e54faeff",
        "cursor": {
          "ref": "8aacda29-b88c-4c0d-afa5-1d6081badfff",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ae768229-e1c8-474e-9179-b36f430872ea"
        },
        "item": {
          "id": "87bba56b-5513-4cc6-8942-1893e54faeff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d73c1aaa-e79d-4127-a039-1b807b55bd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec932fc-9444-4be7-b3cb-84878653f438",
        "cursor": {
          "ref": "fb6fe18a-5e0c-460f-9c08-693ba05e5063",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8e454ef4-ce98-487f-89f2-dd1223b4f126"
        },
        "item": {
          "id": "aec932fc-9444-4be7-b3cb-84878653f438",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d613353c-c238-4f05-a0ff-acd3d0c17394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977cc9e4-a00a-4333-ab71-d35a7bc2bea9",
        "cursor": {
          "ref": "d6b06313-bb0c-4d81-bb5a-6d49402b885f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e2fc6e4d-d356-4a70-abfb-5358c5f98be5"
        },
        "item": {
          "id": "977cc9e4-a00a-4333-ab71-d35a7bc2bea9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1110fdd5-f591-4432-b11d-9493824acb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db170697-c0a8-4894-88a8-c2686ac24053",
        "cursor": {
          "ref": "e0eb84cc-7b76-402d-b763-f19a170bbb6f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9cfb367a-236b-4608-afaf-90d3229d45ee"
        },
        "item": {
          "id": "db170697-c0a8-4894-88a8-c2686ac24053",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e50818b5-3b4d-4b7d-ac03-e7aa37bda51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57422412-366f-4203-914d-000d45530693",
        "cursor": {
          "ref": "6bb3d132-29e8-4971-8b43-7060d7bd9815",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d18b2322-b048-4238-8d6e-1f336890d07f"
        },
        "item": {
          "id": "57422412-366f-4203-914d-000d45530693",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "55487a8d-6c6e-4204-b9ea-1bc760189ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d91f09-31cb-4b54-9445-53a4f668c24a",
        "cursor": {
          "ref": "b73652b5-c8be-4844-b3a2-f255ac696bcb",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "873e3153-92cb-4b08-9ac4-2ae41365fff9"
        },
        "item": {
          "id": "08d91f09-31cb-4b54-9445-53a4f668c24a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b85ac9c8-2e34-41d7-999a-6d6c4829f20d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469e355b-514d-4eb9-91f8-20d09059b7b0",
        "cursor": {
          "ref": "61cd0de8-f643-46c9-8a29-a4a5488c7792",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ac7b45a3-3442-4c2d-b9d7-8e89349716b2"
        },
        "item": {
          "id": "469e355b-514d-4eb9-91f8-20d09059b7b0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3dbc78c9-0250-48e4-8141-52ae242de8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b247c-bb40-4465-9eaa-243d412471fb",
        "cursor": {
          "ref": "7633fd18-3f55-41b7-b984-6719b2e3d95d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "552a18ae-b263-485d-afbd-c946c26ef8d8"
        },
        "item": {
          "id": "a60b247c-bb40-4465-9eaa-243d412471fb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b84badb4-84f0-493e-b8d5-1eee1c95dde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9fbebc5-ef63-4bdd-99ec-cb6b6cae50f7",
        "cursor": {
          "ref": "ba572a18-bb1d-461c-9737-6cb32bb1eb05",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c6c754f-0a8c-4e27-a524-829c4676b151"
        },
        "item": {
          "id": "a9fbebc5-ef63-4bdd-99ec-cb6b6cae50f7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "716f0f94-6480-4bd7-8bb1-d0c4d521b627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8a34d6-e59a-4288-aa0e-6af26e44c213",
        "cursor": {
          "ref": "ec6f4511-888b-47ab-bbb7-9c4dae0d775c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "49475fb6-b58a-4ea6-8d10-fed5f8fb60f4"
        },
        "item": {
          "id": "de8a34d6-e59a-4288-aa0e-6af26e44c213",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "14c08157-92bb-461a-bde9-22549bd54935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828687db-bb7a-491d-bb77-c648080707a1",
        "cursor": {
          "ref": "1e286f6a-d1cd-4dff-9df5-e1c040d9996b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "76cb5b56-779a-4a9c-b410-a5b13a4af9a2"
        },
        "item": {
          "id": "828687db-bb7a-491d-bb77-c648080707a1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1f66e1a1-137b-4541-9c85-e32c6a88af1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f36fbd7-cb11-4f74-8e63-b463811cf69b",
        "cursor": {
          "ref": "6fc18742-bce2-4489-bce0-bdef306c1641",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a22fe102-e175-4f17-80f9-bab6e91a1246"
        },
        "item": {
          "id": "3f36fbd7-cb11-4f74-8e63-b463811cf69b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d0c253a5-a5a6-47d3-9bd5-53e44cfb384f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c608dde-f824-4ea6-9f66-23b5288916cf",
        "cursor": {
          "ref": "291ff8e1-e48b-47ba-af2f-92c51fef37cd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "737b9ae4-e539-4aa3-a03c-48c81fec6211"
        },
        "item": {
          "id": "5c608dde-f824-4ea6-9f66-23b5288916cf",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e814aaa0-4852-4dbb-854a-e0139edd13ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14848895-5290-4c92-af48-7eef33f02d5a",
        "cursor": {
          "ref": "95ab8fed-b104-419e-930b-9653a4118732",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8524b190-4d0b-4c0a-8591-380511798a4b"
        },
        "item": {
          "id": "14848895-5290-4c92-af48-7eef33f02d5a",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e940bac0-3b2a-4ca0-8c05-da56f2c18b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e05535b-3b41-4ae8-a097-54a4f64c336b",
        "cursor": {
          "ref": "9ca1f9a3-e8f5-46ca-8902-fc9eefab5017",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9295e523-65b3-44bf-8078-49d839262527"
        },
        "item": {
          "id": "7e05535b-3b41-4ae8-a097-54a4f64c336b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "679a4322-0192-4f23-8e1d-05bb25df29fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16aea048-d339-4bd3-8325-b5d57c410a87",
        "cursor": {
          "ref": "9f53713d-8f3b-457e-9696-12bd488bfe9f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5525047e-7f81-4bea-be6e-991987850359"
        },
        "item": {
          "id": "16aea048-d339-4bd3-8325-b5d57c410a87",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9c574eb4-368b-45e5-b894-20c97da5c32b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a6b088-9052-4dff-8217-a572d19fd7e6",
        "cursor": {
          "ref": "2d2f467e-b941-4a1c-8ed0-641cb7c3ba9a",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ca1776c7-0905-4b8a-a423-54c4669e8051"
        },
        "item": {
          "id": "e5a6b088-9052-4dff-8217-a572d19fd7e6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e040d464-a1dc-41bd-b6f7-8b921df85811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b495be7-4c27-4a77-9a1f-ad1d4b52832c",
        "cursor": {
          "ref": "e9294373-1987-434d-85f8-2dcacca2256f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "399ff41c-18b2-4170-9a39-0af7f6d5ce88"
        },
        "item": {
          "id": "6b495be7-4c27-4a77-9a1f-ad1d4b52832c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f71016c7-6422-41b0-9dad-bebbefe1cede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e070e3db-81d2-401f-b37d-90f79505267a",
        "cursor": {
          "ref": "5f48d957-1321-4e62-9ccd-e02673fcf507",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62aed89b-90e8-4bf3-a8a3-0c559bb96b50"
        },
        "item": {
          "id": "e070e3db-81d2-401f-b37d-90f79505267a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c3576082-15e9-4b00-aabd-c68b58da40bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ecb23e-c355-43e1-8426-72bf7a77d4e2",
        "cursor": {
          "ref": "c04352ce-616c-482d-bed9-f9d4bb877bc0",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9e4a2171-94d1-409f-a6ad-ec0c7cc3b4ce"
        },
        "item": {
          "id": "d3ecb23e-c355-43e1-8426-72bf7a77d4e2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b52e57ce-9d06-4d9c-9810-6bd72f41ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869ea8ad-1f94-412a-bc11-6709db42fd0f",
        "cursor": {
          "ref": "dcf6d007-e61c-4bb7-9457-6212a5fa45d0",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9f84c54c-edc7-4e97-86cc-9d7dc5865680"
        },
        "item": {
          "id": "869ea8ad-1f94-412a-bc11-6709db42fd0f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4a977d3f-8d8a-4fc0-8dcb-1771654f6621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e09b3e-e11d-4153-b0df-7ff582a51718",
        "cursor": {
          "ref": "b65250b0-4603-4803-8f9e-04756a48fe0e",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "74e921c1-56f5-4b26-a68a-45e15217f1ed"
        },
        "item": {
          "id": "91e09b3e-e11d-4153-b0df-7ff582a51718",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f79edbf-678c-4fc0-b613-de2120482412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b46ba6-9e5f-48d7-a159-b71a46c2adbf",
        "cursor": {
          "ref": "f0beafac-9b15-491a-a728-0f31276a0594",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "42578ad1-1ca2-4211-be58-6303c3c5b5aa"
        },
        "item": {
          "id": "d5b46ba6-9e5f-48d7-a159-b71a46c2adbf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "15763c7a-82c3-4836-81bf-c8ee2e69638e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b534266-6760-4efa-a982-37f2f0148a1b",
        "cursor": {
          "ref": "898c1649-49b8-4103-ba2b-2a9dbca2f8b7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b3759311-b2e8-4d4e-b4cb-9ee10f505777"
        },
        "item": {
          "id": "5b534266-6760-4efa-a982-37f2f0148a1b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "db06f703-d35f-4d91-aaf1-58134a0cfc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4b90e5-006e-4280-b93b-3c2608471d44",
        "cursor": {
          "ref": "c1e464ba-1703-4647-a362-aad0d51d3979",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d63232a3-133e-4571-8883-b6826276a9f0"
        },
        "item": {
          "id": "5d4b90e5-006e-4280-b93b-3c2608471d44",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "574e1de7-568a-4ebb-8e56-d3503db856ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c014bd5e-01b8-4e8c-9ba4-d308167fe6af",
        "cursor": {
          "ref": "3b3baf8d-b458-4d58-b064-5b48640742d3",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1b20da3f-672e-42fc-9008-ff8c66603820"
        },
        "item": {
          "id": "c014bd5e-01b8-4e8c-9ba4-d308167fe6af",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "847c08df-e97f-4914-8a88-8d84c0a22fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bce2f3a-86ae-4089-9a84-e92fde1fd610",
        "cursor": {
          "ref": "dfeedfb6-1774-419e-8f13-84829077a9f0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7f75f2dd-cb3f-4882-9239-b9c1aac1c6fc"
        },
        "item": {
          "id": "7bce2f3a-86ae-4089-9a84-e92fde1fd610",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b484f502-7915-4ce2-834b-abe3e39efd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ce30be-de3f-4153-9e45-37f2a56000f4",
        "cursor": {
          "ref": "f5f4cf73-d4e2-4d4c-b005-acf409b5b8b0",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "92c1ce7a-d0bd-4d1d-b712-3f5ebd07bcb6"
        },
        "item": {
          "id": "c3ce30be-de3f-4153-9e45-37f2a56000f4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e50da292-53cc-49a4-8186-cb5b48ab39c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21b0960-da54-4862-86d7-937bd8addbd1",
        "cursor": {
          "ref": "51c6b4b1-11ab-4832-bf4e-bab0e464b09c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e13a1bbd-19b0-4602-a633-2696671cdbbc"
        },
        "item": {
          "id": "d21b0960-da54-4862-86d7-937bd8addbd1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "525eab40-5e9d-49fa-b80a-91d3148a4592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ec4667-0bc1-4bbb-824f-b36c56c9794a",
        "cursor": {
          "ref": "d85fe646-9386-4fb6-a706-8aba3acf7492",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ecb10f2d-1f61-483a-9171-ab20efdd00eb"
        },
        "item": {
          "id": "14ec4667-0bc1-4bbb-824f-b36c56c9794a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b23f6758-98f4-4201-9811-3ca28a84af25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0949c2eb-ae7d-4281-a784-25a715b2492b",
        "cursor": {
          "ref": "77801c09-2280-4ad6-a873-6bdb556a0a89",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0f82ddca-44ae-4e4e-a238-004edc06e19a"
        },
        "item": {
          "id": "0949c2eb-ae7d-4281-a784-25a715b2492b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "dd3d9a01-b72f-4ece-b073-05141cc3074d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb8c4c3d-8772-4730-80cc-fa123a8dfe59",
        "cursor": {
          "ref": "2cd5ba40-98df-408a-a584-07824bec6856",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "77fb7a7e-2050-4a8b-81ee-20efacf837e5"
        },
        "item": {
          "id": "bb8c4c3d-8772-4730-80cc-fa123a8dfe59",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "19748330-ca2e-4a5b-8b4e-7cd6a0f1fbcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b1aa41-6540-4adc-b54d-3400ed9404a0",
        "cursor": {
          "ref": "db88e1f8-7e85-470a-98e3-bd21f2327f84",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "df673ba0-f790-4df3-8080-0fd06843a6ea"
        },
        "item": {
          "id": "e5b1aa41-6540-4adc-b54d-3400ed9404a0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b0deb6dc-f54e-4626-a864-cb23a48d0d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b0d9b8-77a9-4004-bd02-56c5cd4f5ef4",
        "cursor": {
          "ref": "fe9c0795-69f4-4441-93a1-1f15bbe65b2b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0db30ede-035b-48bf-8dab-b7f42a9e9606"
        },
        "item": {
          "id": "52b0d9b8-77a9-4004-bd02-56c5cd4f5ef4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4facdcd5-74ed-4ba2-8265-54fe99861dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b907719-4a98-463d-96fe-b0f65fdeb323",
        "cursor": {
          "ref": "0f51e865-e655-47c4-94d2-7045819463c6",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4c9534f5-36e8-4f5c-89e9-51368ea742f7"
        },
        "item": {
          "id": "6b907719-4a98-463d-96fe-b0f65fdeb323",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d31286a2-3470-418d-924d-c88121054ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab46b091-bf03-49e8-af8f-8c6fd25e4b48",
        "cursor": {
          "ref": "44e7be19-2227-421a-b3c9-c3ec14ef0042",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "942bdb20-327f-4e7c-94b3-79ac9a329924"
        },
        "item": {
          "id": "ab46b091-bf03-49e8-af8f-8c6fd25e4b48",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bd20f4cf-c294-407e-8547-3c346d0f3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e627a5-9640-490d-b2bf-ca02cd10ff66",
        "cursor": {
          "ref": "03de2588-02f6-4618-8478-5ca81fc87828",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d8048fb0-98e9-4e78-8334-3ec842733232"
        },
        "item": {
          "id": "e9e627a5-9640-490d-b2bf-ca02cd10ff66",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "18ee64c0-3989-47a3-af99-55e15c3f7e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296c298d-5212-4066-bd32-3dc7f2e6c559",
        "cursor": {
          "ref": "367c4fe3-8e72-4811-97da-c5b8f59ad9b6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "667540b5-755e-4f4a-ad43-55dcdb230e4d"
        },
        "item": {
          "id": "296c298d-5212-4066-bd32-3dc7f2e6c559",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5e518c16-963a-40a8-872e-9a583f1f8e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6e6443-3483-4b3a-8e38-8387924cdd49",
        "cursor": {
          "ref": "ab2bbbec-76c7-4817-92c6-471ee57d9c67",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8f52bf87-46ca-4063-b1f3-dafb8cce49b3"
        },
        "item": {
          "id": "0b6e6443-3483-4b3a-8e38-8387924cdd49",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "099ac05c-ac75-45ca-bfc5-d475dc2b6c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c534c8-ca84-41d9-893f-c2287d7317bb",
        "cursor": {
          "ref": "58afad83-03dc-4e02-80d3-1c36f0d60fbe",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bceb1438-27c5-4a5d-9740-eda037879949"
        },
        "item": {
          "id": "24c534c8-ca84-41d9-893f-c2287d7317bb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2b468109-c8eb-414e-8665-91ec3d95c848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c7a335-be49-4ef8-a4fd-527707f9b658",
        "cursor": {
          "ref": "60bfe488-60f3-4b4d-9ac5-285a1eaab966",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e36007a-0fef-4bac-b36e-760651b758e6"
        },
        "item": {
          "id": "80c7a335-be49-4ef8-a4fd-527707f9b658",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6b877997-fa91-4f9d-8c63-8234b76e64be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d0216c-fbe0-4eab-8887-a1136ebec797",
        "cursor": {
          "ref": "f6b6a8c9-d6cf-4a78-b648-5eab7297694a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ab87b2e1-8163-44c8-9596-f9d3caff6764"
        },
        "item": {
          "id": "a4d0216c-fbe0-4eab-8887-a1136ebec797",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bfa387ad-7bc6-4d3e-b27e-8fb953ee048b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5408d2b9-3ea7-46bc-a53b-a1a343b72811",
        "cursor": {
          "ref": "3fdbdd45-975c-4312-9ded-3c79e268b68d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5b45100a-b9c5-4365-8632-198214e5006b"
        },
        "item": {
          "id": "5408d2b9-3ea7-46bc-a53b-a1a343b72811",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "80078084-87c7-4cc5-b54d-8004c9baf370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402cfe47-e940-4ffb-a4fb-7438e4c70554",
        "cursor": {
          "ref": "6f5a6255-5af2-442a-adc1-0894885a7a11",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cc8a679e-893d-4cd5-8efd-5b757aa85af8"
        },
        "item": {
          "id": "402cfe47-e940-4ffb-a4fb-7438e4c70554",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "471e2c03-c40f-478e-83df-d5cccf0344e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ead562-2405-4ca9-8e30-8e282f8bb82b",
        "cursor": {
          "ref": "91c0af1e-54eb-483c-8f41-89708fcb3b31",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "16ab136f-2939-4594-94ec-c7b6cdc9273b"
        },
        "item": {
          "id": "c3ead562-2405-4ca9-8e30-8e282f8bb82b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8d5ce211-66e9-4ebc-9f14-f36b6657f4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755b9a31-57b3-4677-8a4a-7d555795375a",
        "cursor": {
          "ref": "a07c3ce1-5b77-41fa-a3d0-9145f2917ff1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d1517cb1-3f95-4946-b5cc-af1c7c55a0ac"
        },
        "item": {
          "id": "755b9a31-57b3-4677-8a4a-7d555795375a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d7af8d5f-4990-4cb3-a35e-8921753c4094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919b9001-3210-4f93-8247-069564facae8",
        "cursor": {
          "ref": "1781b7ca-a968-4506-b948-096bbb04fed5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2db86b1f-970c-4386-809e-389efcae277a"
        },
        "item": {
          "id": "919b9001-3210-4f93-8247-069564facae8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "60eba3dc-95a0-43a7-acaf-e33c54dab98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da597f93-e6df-4d3e-8661-99703d6e893d",
        "cursor": {
          "ref": "82880664-5bce-46d3-9264-b4b1b2050fcd",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d458075d-a9ae-422b-ac85-23a664bde3ef"
        },
        "item": {
          "id": "da597f93-e6df-4d3e-8661-99703d6e893d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "798361c6-7dfb-41d0-b596-d4fe8713a6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1c7022-e01b-44f7-8289-3a9844633e97",
        "cursor": {
          "ref": "1471a1b8-d2c4-4265-b646-6fdfb807f00c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9de75e2f-751f-42cc-a008-6cdb87ac9f90"
        },
        "item": {
          "id": "da1c7022-e01b-44f7-8289-3a9844633e97",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f1f3ccca-ebaa-4380-947b-89af1302b0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4186ec-93fa-403b-85ad-1df311ffa817",
        "cursor": {
          "ref": "a7617123-c853-4c36-aa63-b2a2f5bf6586",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b100ebc3-b549-44ab-bb6b-bdb8c2385905"
        },
        "item": {
          "id": "ca4186ec-93fa-403b-85ad-1df311ffa817",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "62ca7c38-baa1-4ea5-a55a-9d6d4144edab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcfd26e-137a-49e6-9e34-b8f549ac351a",
        "cursor": {
          "ref": "81340b08-bb86-4673-911d-952431f6754b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "04ad7796-fea2-4b0b-b3ab-af1675762f1a"
        },
        "item": {
          "id": "5fcfd26e-137a-49e6-9e34-b8f549ac351a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "37224188-9634-4f59-8a92-3165e14cc170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ee49ba-d824-4bf5-99e0-17b83d64c27a",
        "cursor": {
          "ref": "8599d5f3-7774-4654-beae-6dae4017a7ec",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cb25ce05-452e-47c9-b0b4-073c4570212e"
        },
        "item": {
          "id": "75ee49ba-d824-4bf5-99e0-17b83d64c27a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f8cf7663-e8d4-42a3-88b6-6e69d4ffb1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea1fd63-9358-45ce-8a74-fa2236b78b6e",
        "cursor": {
          "ref": "a314cb6b-4840-422b-b912-5b8c38522ed5",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d767c176-ad34-46e8-8069-6b93f1ac2f6b"
        },
        "item": {
          "id": "eea1fd63-9358-45ce-8a74-fa2236b78b6e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f7a6849d-a638-4623-8033-86a678fe25b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e566e5-c931-4f0e-b94e-9bd68c220789",
        "cursor": {
          "ref": "aeb5a9bc-9ac3-4196-b2f5-2118625090a6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0e08771f-29b9-4731-9503-098b5947b9b0"
        },
        "item": {
          "id": "f5e566e5-c931-4f0e-b94e-9bd68c220789",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6b98b2cb-c872-46c3-80c3-40a2d9932b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d72056-bf45-448f-9610-fef17bf482a8",
        "cursor": {
          "ref": "5f661fc3-e07c-4eb0-8d3b-d485be7e0de6",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "38f3f477-15e7-4613-9ccc-0b88b0ed7397"
        },
        "item": {
          "id": "32d72056-bf45-448f-9610-fef17bf482a8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2da017ed-2998-46f6-ba77-2f8e1fb12440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1385c234-0cba-4fac-90fd-8e3e195da6c6",
        "cursor": {
          "ref": "59450c1d-a52d-4809-8c13-0e85dd2bc5f3",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "de6d918f-b53c-42fe-9a20-3f25b597f22b"
        },
        "item": {
          "id": "1385c234-0cba-4fac-90fd-8e3e195da6c6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c687cefa-0184-4d12-94f8-b22892c0ae01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292de586-5af2-455d-ab47-4f0889efff97",
        "cursor": {
          "ref": "b26a0829-4501-4d9c-a3cd-05ac4dcd2a05",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ab55e661-b9b4-4260-90c5-3abb8cfe8e91"
        },
        "item": {
          "id": "292de586-5af2-455d-ab47-4f0889efff97",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6594117c-2f58-46c8-86f0-cfc062c48cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2597bb2-702e-4a94-bb5e-01718bfea79b",
        "cursor": {
          "ref": "6b9cf518-779f-4764-a494-6e986518a4f8",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cb335869-af45-4472-a3c3-161d3583abba"
        },
        "item": {
          "id": "e2597bb2-702e-4a94-bb5e-01718bfea79b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "09a4844a-64da-4fd1-acfe-96479f7ffb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4955722-ec6a-439c-bc5b-d55c501237c2",
        "cursor": {
          "ref": "59fd84c3-d28f-4f1c-9320-1f6edb6b8307",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ab5d593a-64cf-499e-82aa-08d988cd3c6f"
        },
        "item": {
          "id": "d4955722-ec6a-439c-bc5b-d55c501237c2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6d3fad36-f57a-4753-8c8e-46a2f3f19452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dab506-710a-43d9-a4ce-522025be3d8e",
        "cursor": {
          "ref": "445bef29-49f6-4c0c-b799-4373c1c71d88",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4e0ff02f-8f74-4cb6-bc91-e4ca2fd4c6dd"
        },
        "item": {
          "id": "e1dab506-710a-43d9-a4ce-522025be3d8e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4d6073a6-d78b-40fb-85b7-7a0f389b9ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e581b6a5-cf56-46b1-9c19-d7293adc5d07",
        "cursor": {
          "ref": "e78ec657-ecbb-4a25-a505-48ce1a7c0a97",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4ae014db-6c16-4655-968d-c206f859aaf3"
        },
        "item": {
          "id": "e581b6a5-cf56-46b1-9c19-d7293adc5d07",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1f5d3440-055a-4e67-a7b1-5709f64df62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabf6206-ad52-4e51-900c-d0bff6ec265d",
        "cursor": {
          "ref": "3c574a19-2eaa-48ac-8c93-1bd9e66cf657",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "884a842d-998c-437d-9381-b385a44642f5"
        },
        "item": {
          "id": "eabf6206-ad52-4e51-900c-d0bff6ec265d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "14620807-2fd4-4f33-8d48-8447a437e16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29d8a66-95fd-490a-a97a-6897e230630e",
        "cursor": {
          "ref": "8fe1ff22-8271-4947-b1f9-37420370b102",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "926b6646-677d-4797-91bd-73233a94d92f"
        },
        "item": {
          "id": "f29d8a66-95fd-490a-a97a-6897e230630e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9961676a-cee8-4c18-b565-5a3948011516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011111f6-405a-4b10-9e45-8b62d0443b59",
        "cursor": {
          "ref": "9a8dfb77-4fde-49d3-9b00-321796474d31",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "12e8b718-207c-4b30-b078-d550796963b3"
        },
        "item": {
          "id": "011111f6-405a-4b10-9e45-8b62d0443b59",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1a333635-ba52-4dbc-8a3a-e846a35896db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d872291c-4890-4a6c-b8be-234b555aff05",
        "cursor": {
          "ref": "941ddd1c-2e9d-4419-a7d4-0f1abeb8a77c",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fc7a38c9-fd40-4e4e-b156-fdaa80b69693"
        },
        "item": {
          "id": "d872291c-4890-4a6c-b8be-234b555aff05",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4fe5c873-d7ef-4544-be87-79c30627eaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a13f3-fe44-4f14-94c0-de6a195082e7",
        "cursor": {
          "ref": "17660545-3f10-4a1e-98ce-44273c671b65",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a42e1b1c-5d06-4d94-be46-302a2601608a"
        },
        "item": {
          "id": "746a13f3-fe44-4f14-94c0-de6a195082e7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bfedffbc-cf0a-4bf4-9eb8-2e4126c583b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b693fa-233e-4268-b2a6-c07528f32533",
        "cursor": {
          "ref": "814565d2-3591-4594-8eaf-b79a7d5ddcee",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "09935423-61f6-4ece-b934-23c9b03d6952"
        },
        "item": {
          "id": "87b693fa-233e-4268-b2a6-c07528f32533",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fb7afd29-a646-449f-8a17-583d444659c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10342170-6e42-4395-8cd7-01b1f3fd6a07",
        "cursor": {
          "ref": "b2efb128-b656-4b57-bbe9-7d67fe0d3213",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "68ae5de0-670f-4922-8e70-e25d284d2de7"
        },
        "item": {
          "id": "10342170-6e42-4395-8cd7-01b1f3fd6a07",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "416e2fc0-1a98-4944-8cf5-737fa762d4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f39bfd-ec91-4e5a-82cc-0db59b52d6e9",
        "cursor": {
          "ref": "8d02ea38-b602-45d7-97f2-8ed769f807c1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a1419f4c-a0b4-4e90-8b5f-2a31fc6ed6d7"
        },
        "item": {
          "id": "a3f39bfd-ec91-4e5a-82cc-0db59b52d6e9",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ad7a6200-c0a7-44f3-8d57-a6e4db68dcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4cf1c5-b0fd-41a9-83a4-42f3584341da",
        "cursor": {
          "ref": "2bc970ad-f827-4fda-8f84-c794f591f616",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9cf9f3fa-08b4-473e-bb97-dec1aa707c62"
        },
        "item": {
          "id": "dc4cf1c5-b0fd-41a9-83a4-42f3584341da",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8e88c7ae-7e07-442c-94e6-35db0662cf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b406b97-359b-40de-81ea-c93b13d898d8",
        "cursor": {
          "ref": "1a1521d7-1425-41ad-92ac-a8e72ab9c035",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3ee1e11d-e58b-4cde-a726-c6af57aa9f49"
        },
        "item": {
          "id": "1b406b97-359b-40de-81ea-c93b13d898d8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "68d52524-6184-43cc-8e48-c0e3965e520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484da3a0-0c3f-49c1-b77d-10f8184b4fa6",
        "cursor": {
          "ref": "7135e374-1214-4202-bc73-ea2b682d110e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "615e4fca-4dc1-4f46-ac78-b30ebc2e1ae7"
        },
        "item": {
          "id": "484da3a0-0c3f-49c1-b77d-10f8184b4fa6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9d288d14-60d7-4bc1-a44e-b948158ce393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3bd8cf-aafa-468d-9c8a-2062130a73e1",
        "cursor": {
          "ref": "0ebdcc55-6e6e-4b20-8056-a403951000d7",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5788df18-eef1-4377-8d44-99550983c4bd"
        },
        "item": {
          "id": "3c3bd8cf-aafa-468d-9c8a-2062130a73e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c6496c0f-9f77-45b8-b685-913afd37d3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d321124-b9b2-426b-8369-60c52f9d0a92",
        "cursor": {
          "ref": "d397b46e-f477-411a-a608-7422366acbec",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a7992ee3-a270-4fd0-9382-c870637239ea"
        },
        "item": {
          "id": "5d321124-b9b2-426b-8369-60c52f9d0a92",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7d4ddc10-155c-46c8-a1a1-935e8abcbe35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d793e090-37a7-4625-969f-a3aa4dc6e712",
        "cursor": {
          "ref": "1ec9eb41-6d22-4e05-a422-8e61a81955ca",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e2e31b67-2488-45a7-86f4-ce46aeeaeb8f"
        },
        "item": {
          "id": "d793e090-37a7-4625-969f-a3aa4dc6e712",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bfb00135-cdcb-410c-97c5-6055cf4217dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67e57a9-2c18-4024-a835-68ca6826d18b",
        "cursor": {
          "ref": "ff3f7d93-73f0-4300-8a06-e1f5112c00a3",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f917ab11-26ef-429e-9294-abfd8132a670"
        },
        "item": {
          "id": "d67e57a9-2c18-4024-a835-68ca6826d18b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d78bccda-9ac3-42d4-be6f-eba56606e15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7663b5d-9e22-4c88-a812-e72902691ea2",
        "cursor": {
          "ref": "46be0293-6ad5-422f-8f5c-74ee0dbd16ae",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c751c743-e090-4c4a-ad21-9c067c6e13d8"
        },
        "item": {
          "id": "a7663b5d-9e22-4c88-a812-e72902691ea2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "16205525-e23b-4ecd-a543-308b10a87cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfdc1e6-fd55-4198-be9b-5e5b28079419",
        "cursor": {
          "ref": "02b80b22-eeab-4c09-aebc-f6687dabce86",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f65ad690-628d-4e98-a2cc-ecec957c5d43"
        },
        "item": {
          "id": "0cfdc1e6-fd55-4198-be9b-5e5b28079419",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3c193ad1-186d-4557-aa7f-198e0d6bbacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21a8b12-4646-45aa-a4e0-c35c5558cee1",
        "cursor": {
          "ref": "048f557e-15cf-437c-96f3-c10cfe8f87b9",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "94950541-538d-4397-b336-367a2208c9e2"
        },
        "item": {
          "id": "a21a8b12-4646-45aa-a4e0-c35c5558cee1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ab6c881d-077a-4232-9068-d0e50bd51bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e32ef5-20e1-4314-854d-7bd011d87ade",
        "cursor": {
          "ref": "e26b4cf6-35cf-482b-9194-0783b675df40",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d344beb0-bd90-4a37-ae2f-d1fc05d2d015"
        },
        "item": {
          "id": "21e32ef5-20e1-4314-854d-7bd011d87ade",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fa54da95-6a5d-4535-82ae-f3f828f303d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d03375d-2eaa-42e0-909b-5bf1531cdcfd",
        "cursor": {
          "ref": "8aa4d9fb-e16d-446b-9b6e-71a9f28a0d57",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7c6fb81e-20f8-47e9-9e18-9cd314b8d22b"
        },
        "item": {
          "id": "7d03375d-2eaa-42e0-909b-5bf1531cdcfd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ef2e96f0-6161-44b4-b603-6eda76bfa5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef252c-1894-4c02-964b-e4e938d525f2",
        "cursor": {
          "ref": "cb8c918b-2a5c-4359-82ad-8658ada98703",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bfa1c972-3e5e-4ed2-95a7-be9136fb4464"
        },
        "item": {
          "id": "c2ef252c-1894-4c02-964b-e4e938d525f2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2a84a9fe-63da-4cbb-87ae-fe761ba63a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28645517-1f0a-44b1-b703-1999bb816ca2",
        "cursor": {
          "ref": "4aa06539-abbc-4a8e-a214-a355fa97bd65",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5a746a20-3f11-4f45-b234-9c0d72f2e0ad"
        },
        "item": {
          "id": "28645517-1f0a-44b1-b703-1999bb816ca2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a06d1c2b-20be-464d-bbde-19b40597eba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07607e97-629e-4326-b652-21d4aadadd34",
        "cursor": {
          "ref": "62ff686f-88a0-49f1-b263-f679a14d3a41",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e81aebff-a01a-4177-a5be-2f01c5b89512"
        },
        "item": {
          "id": "07607e97-629e-4326-b652-21d4aadadd34",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "af2eba3a-27e0-4577-8d84-6f2984a5561e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c239b9cd-4b72-40e1-a008-c4e2c119e114",
        "cursor": {
          "ref": "f00e1cf4-3a03-4b31-a0e8-a5ad5241e5fa",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "79d877d8-b10a-4473-bb85-a207088d32c9"
        },
        "item": {
          "id": "c239b9cd-4b72-40e1-a008-c4e2c119e114",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "38b7519b-eebe-44ff-8dc4-690e65e89eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0952ae8-edb3-4b50-932a-264f9c2b1024",
        "cursor": {
          "ref": "00bf8972-d089-4786-ab9c-9b82e384e9fa",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c0def337-a04f-4a7b-9cbd-ea4fb4c43229"
        },
        "item": {
          "id": "d0952ae8-edb3-4b50-932a-264f9c2b1024",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6feac2ec-bb13-4e58-b888-642dc1ce3642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51ef647-d886-4469-9ef7-e7c016e6d95b",
        "cursor": {
          "ref": "3b7971cc-ce7d-42be-8bfa-62da42dd073b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6b9a4636-2992-4811-904e-f4a34d2c235b"
        },
        "item": {
          "id": "e51ef647-d886-4469-9ef7-e7c016e6d95b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f88c38da-7665-4ad0-a820-6a747b858310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16433751-21d5-4db2-a427-23f488c4f9ca",
        "cursor": {
          "ref": "21c8791c-b0dd-4fc1-88f3-8ddb4b1f21d4",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a45f1414-3856-48fc-a50c-bdabd0a91e78"
        },
        "item": {
          "id": "16433751-21d5-4db2-a427-23f488c4f9ca",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4a84e460-139a-4ae3-9cbf-7966a13d5b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d58df9f-a38c-4115-ad73-51afdc1b5d86",
        "cursor": {
          "ref": "f7c5fd36-48c1-42ef-b8e7-5db6c47afd1e",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ade3da2e-6fcb-43f3-a896-cde3ce2958ef"
        },
        "item": {
          "id": "4d58df9f-a38c-4115-ad73-51afdc1b5d86",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "59fb6a2a-8c05-435f-a9bb-86b9c9d8ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d53d19c-a7f2-4024-87cb-1600864c2cd4",
        "cursor": {
          "ref": "a622b26a-3ec6-4aec-a237-2ca793924718",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d25fb35-ed55-450d-bc0e-6c9ad1e2737b"
        },
        "item": {
          "id": "6d53d19c-a7f2-4024-87cb-1600864c2cd4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "362670eb-8cce-4702-966c-65799a12603d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28dc2117-4436-4f37-b17a-01c8b14847e7",
        "cursor": {
          "ref": "5b20d1fd-4059-4245-975f-67a19a532cfb",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9d8f29d2-b72a-4ccd-b84c-a6cade81cac3"
        },
        "item": {
          "id": "28dc2117-4436-4f37-b17a-01c8b14847e7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "abc30fb7-a018-40a1-ba39-c1d5ac5e4e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bd2220-190c-48ae-8364-89770e1f1bef",
        "cursor": {
          "ref": "bab44ed5-3a5e-4154-88bc-9ba7451d2c21",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d5f9b03e-3d5d-4057-beb1-510b222c64a2"
        },
        "item": {
          "id": "a0bd2220-190c-48ae-8364-89770e1f1bef",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "40dd2311-bc89-4ae4-8fd8-ff8367f76525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364a34bc-ed9f-46ac-9999-edab51a7feeb",
        "cursor": {
          "ref": "7679ddcb-be2e-4391-8031-2736058d6cb1",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ac8469d1-5843-481b-b3ba-1cf9833a1446"
        },
        "item": {
          "id": "364a34bc-ed9f-46ac-9999-edab51a7feeb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "05ae5fcc-2709-4e69-bf87-b551ecad1e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a1376f-77cd-4dc3-be90-5ca970b8e07d",
        "cursor": {
          "ref": "7cb69d04-cab5-499e-844a-bc209d4dc81c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3dc2a803-b005-4a33-98fc-7e1210db5788"
        },
        "item": {
          "id": "e5a1376f-77cd-4dc3-be90-5ca970b8e07d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9012ec95-086a-48ef-8da9-ede8bc7e31a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285d0596-b06e-48a0-aaa1-06373904c066",
        "cursor": {
          "ref": "4776e9ed-fe28-4c18-bee3-82cdcfa5fde1",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ebd82428-6f03-4dd0-a237-a1f5dde5a7c2"
        },
        "item": {
          "id": "285d0596-b06e-48a0-aaa1-06373904c066",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4e365740-4b36-4b9f-a31f-03db3adf3bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdeff15-c18a-40b3-b148-e7bb2aa564b5",
        "cursor": {
          "ref": "04887033-f6e7-41d8-9c1a-0d27e239a5d0",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "68c097d9-329a-493f-a6e0-3d5155a3572d"
        },
        "item": {
          "id": "afdeff15-c18a-40b3-b148-e7bb2aa564b5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2de1a5b9-7a9d-4fb8-a9c6-bb862c18632b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c4ded0-37c0-4793-bdbf-432be2c867d1",
        "cursor": {
          "ref": "b33aba5e-3169-4b62-b5ff-a475268523c4",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "aa55b2f6-e7cc-46b2-9663-9e7cb0aa7684"
        },
        "item": {
          "id": "b7c4ded0-37c0-4793-bdbf-432be2c867d1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "49e84042-129a-42c8-aeea-c72b5c4b33ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87f83e4-f861-44ce-b666-0f5509746db6",
        "cursor": {
          "ref": "3d9f3603-7169-4de8-be88-bf354942e15c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d8160604-f2d2-46f3-a777-3103e352a61b"
        },
        "item": {
          "id": "e87f83e4-f861-44ce-b666-0f5509746db6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9347f3ca-85ec-462a-a215-63f359405591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a042a8-9641-4216-8a7b-b35d9ff21928",
        "cursor": {
          "ref": "1fce47f1-8d85-46be-91f2-214ccedc86f5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0fece235-8f27-4813-86af-67b73cb7f72d"
        },
        "item": {
          "id": "20a042a8-9641-4216-8a7b-b35d9ff21928",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be727493-3421-495e-800a-58417a5f7d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4f0b9e-288d-4255-a38c-e42d87510306",
        "cursor": {
          "ref": "790707bb-5ab7-4f12-9664-2b4e477ac4a8",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e7898341-0600-4ed9-b319-62439677b48f"
        },
        "item": {
          "id": "7d4f0b9e-288d-4255-a38c-e42d87510306",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "37e56590-5296-4dad-8bba-9f143925299a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b997f-fc35-4a73-a379-028fba84dafb",
        "cursor": {
          "ref": "bdbec174-368f-4010-9a17-d758e73e73c2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b6886aab-825e-451a-a6b2-4d885a4dc621"
        },
        "item": {
          "id": "080b997f-fc35-4a73-a379-028fba84dafb",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6085a9e3-d571-4283-b1a2-a3e1095cc562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0a63cb-a678-4b1c-b21a-96666d665d27",
        "cursor": {
          "ref": "211fc873-4a0b-4e1a-9c5d-ee14740bb720",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f6003069-f3be-4330-9e46-803f82650f6b"
        },
        "item": {
          "id": "eb0a63cb-a678-4b1c-b21a-96666d665d27",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a359d9e3-883f-4805-90e1-cc8730bbf077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b883be-957b-4357-892f-8f0ea17e2a4c",
        "cursor": {
          "ref": "157411b4-8a71-4a26-8e9e-1d56110588b6",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "505807d9-7243-4944-a7c0-477ad9cdbcac"
        },
        "item": {
          "id": "e4b883be-957b-4357-892f-8f0ea17e2a4c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e3cfea84-26c7-490d-a51d-dd94789f1035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ca43da-b734-4298-a655-ba29e469a56a",
        "cursor": {
          "ref": "b1c5f3c4-db1e-4f3d-ac7e-9e21104d4030",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2a0a1ac8-110f-4768-9a4b-6b7815ac78e8"
        },
        "item": {
          "id": "c2ca43da-b734-4298-a655-ba29e469a56a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6b66c75f-42f2-4ed8-9f2c-8150194fdbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be5b24e-7df0-4090-9983-fe7730a761a0",
        "cursor": {
          "ref": "323af5cf-0bda-4abc-bae5-ad5d1c613caf",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a646176e-d0eb-4ced-9aa8-2c7354c07228"
        },
        "item": {
          "id": "8be5b24e-7df0-4090-9983-fe7730a761a0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "97674264-dc9e-49c2-b65a-106cca847da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b613a194-f540-4a4a-935e-08174eb94fa3",
        "cursor": {
          "ref": "e48ba0f6-abcc-4e76-81c6-1fcc93a6eb21",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "912e265e-7429-4940-99ef-5b8a3396b435"
        },
        "item": {
          "id": "b613a194-f540-4a4a-935e-08174eb94fa3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "26f69cb2-ae37-43a4-aa04-977afa332b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86c9992-b1ce-4fce-95dd-8bbb03ca32cb",
        "cursor": {
          "ref": "4f1966e4-4d2f-411d-a71d-d5e6c3b0d424",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8d23809f-4ab6-4974-8045-e98fd0dfa950"
        },
        "item": {
          "id": "c86c9992-b1ce-4fce-95dd-8bbb03ca32cb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a54210ae-e841-40bc-9c48-9cf1575beb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08fd7c8-7c17-4448-80e5-b97e5bbc0881",
        "cursor": {
          "ref": "d4f7fbf7-548c-4f98-9ea2-6ce35bcf7ddc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0e334933-0606-4268-bb53-a22e9f5182f2"
        },
        "item": {
          "id": "c08fd7c8-7c17-4448-80e5-b97e5bbc0881",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cd99e623-b526-4e6e-b063-7a047a6a38cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a41afc2-4069-4f10-9d88-f28da5642337",
        "cursor": {
          "ref": "3f72134f-1b4d-4cd7-b436-55ddbf6d76eb",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0f41bbb8-7028-4982-8948-021a43e1eca3"
        },
        "item": {
          "id": "8a41afc2-4069-4f10-9d88-f28da5642337",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da488b7f-1c63-447a-bc17-34ed25d99c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90859cf-1cbc-4a66-a7c2-6c2b1e6c2596",
        "cursor": {
          "ref": "8a7661d6-3ec4-4a6e-856f-b90e70a1693f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "af2da611-c01f-44d7-bd2b-bd07e28bff08"
        },
        "item": {
          "id": "e90859cf-1cbc-4a66-a7c2-6c2b1e6c2596",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3c20b11d-42e7-47dd-8970-aa2f4226f489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a04ca4-59bf-4aaf-948c-d0013dbc684c",
        "cursor": {
          "ref": "74c808e4-350b-456b-bb90-28ce7ab690f9",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "41b1393b-af71-4ca5-8d7f-3515f7108551"
        },
        "item": {
          "id": "02a04ca4-59bf-4aaf-948c-d0013dbc684c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cecc9d25-2eef-407b-a2ee-51d810ecd5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fc24cd-dcdf-4e0b-bbc5-3f5cbbb54e21",
        "cursor": {
          "ref": "aac70214-6662-46e2-886e-741cb3f585b8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6a0ae788-05b7-450f-8a3d-3844497493af"
        },
        "item": {
          "id": "30fc24cd-dcdf-4e0b-bbc5-3f5cbbb54e21",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2e735df0-8ddc-40f7-b450-bb04d95af6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1baba67-6d9f-4112-baf8-d32926287a82",
        "cursor": {
          "ref": "c914aeb9-8a89-42be-805d-3fe49ea2d10c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ddf299b8-9d8b-4c43-b00f-f542093954e5"
        },
        "item": {
          "id": "b1baba67-6d9f-4112-baf8-d32926287a82",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6cc1cbb3-14a9-4087-b2ee-5f63f00e3edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73addb08-ee2b-493e-9d46-5f72b284497d",
        "cursor": {
          "ref": "91e1232b-90c3-42df-90b0-0b9fb2499e9e",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2ed3cd43-1927-42f8-90f3-5be4f816378f"
        },
        "item": {
          "id": "73addb08-ee2b-493e-9d46-5f72b284497d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "34115fc5-32f0-4e8e-b210-b0a6e7bc841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5ad698-9d1a-4fcb-b65a-489627885c83",
        "cursor": {
          "ref": "56e9813f-9fdd-4d0b-86b1-a38f3d6db13d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "bf457439-3d59-43e8-8edc-a9bcaad42c71"
        },
        "item": {
          "id": "ff5ad698-9d1a-4fcb-b65a-489627885c83",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f755dd86-2927-4463-ac7c-1541ff50155d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "6f1eeae1-a9ef-4184-85ed-15f389c3cefe",
        "cursor": {
          "ref": "c266da37-2649-4ef9-97d6-c6118ec63c2f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9249151e-9740-4c32-b165-7c925058efac"
        },
        "item": {
          "id": "6f1eeae1-a9ef-4184-85ed-15f389c3cefe",
          "name": "credentials_verify"
        },
        "response": {
          "id": "70a4a6b8-ce06-4926-bb39-a6d39071be9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "02a52b7c-6d7f-4a0f-8a72-430f09093799",
        "cursor": {
          "ref": "ea6be38c-5d05-4158-9f60-6fae3c2ae069",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b7ccbbc6-bb3c-4aad-a75a-3e6e6b1f049b"
        },
        "item": {
          "id": "02a52b7c-6d7f-4a0f-8a72-430f09093799",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ccb9dd20-dd2d-4f65-866a-b68c794ccbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c5c219fa-7f1d-40f5-9ea5-16ce50289cd7",
        "cursor": {
          "ref": "8c9487dd-e1a0-4376-8923-fd319927914e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6714080-7519-4431-b8a4-aa49aa477316"
        },
        "item": {
          "id": "c5c219fa-7f1d-40f5-9ea5-16ce50289cd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "22d9628d-ca31-4ced-a0dc-9f01ee94b103",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c219fa-7f1d-40f5-9ea5-16ce50289cd7",
        "cursor": {
          "ref": "8c9487dd-e1a0-4376-8923-fd319927914e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6714080-7519-4431-b8a4-aa49aa477316"
        },
        "item": {
          "id": "c5c219fa-7f1d-40f5-9ea5-16ce50289cd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "22d9628d-ca31-4ced-a0dc-9f01ee94b103",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9364fe-cbd3-41e8-b45e-f684f3ca6f19",
        "cursor": {
          "ref": "f4a4ead9-a9b9-4a4c-982f-44cc89e829d6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0f2ab1d6-1264-43ce-ad87-3b31a5dd69bd"
        },
        "item": {
          "id": "7a9364fe-cbd3-41e8-b45e-f684f3ca6f19",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "11bdd0fd-b2be-49ee-a3c6-d7b2192b3e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3effdfc5-2a9f-45f9-be1a-5275d7591941",
        "cursor": {
          "ref": "c031c4f4-8263-4ef9-ba11-24c1b107d3c5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "430d0297-7891-4724-9448-4fa774c71aa7"
        },
        "item": {
          "id": "3effdfc5-2a9f-45f9-be1a-5275d7591941",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8881659c-18ed-47fc-89bd-ac07892bafe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}