{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ec53b793-5cf7-4832-b825-f6682f50d9ef",
        "name": "Clear Cache",
        "item": [
          {
            "id": "446e7754-c521-4b14-9f1b-bd17b61a55be",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82076c6e-afc2-4558-8e31-2d62bbe021df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4aa314f3-d7af-4e33-93e0-9a9d7b1bddd7"
                }
              }
            ]
          },
          {
            "id": "1cbcfb5e-e257-4eed-a7c1-e8228e48830d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09d893a3-d7bf-4403-aff5-8eb50eb18c87",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dcaf0f91-279f-475f-bc5a-7fd6151ac6d9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1389265c-82f8-4bc5-bdc8-80aa9a79563c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b62cfc6c-8ea6-467f-b8bc-7f5c198e147c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c6097dc-74c4-4386-99bd-e074914f1aa1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63359690-6c1e-40f5-a588-35fc1d072fad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1b36552-96c4-4489-89eb-9245891cb67f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "666f5ceb-592b-40b4-ae5c-cb47fd72ec4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aaa065e9-ff4b-48a9-9221-de979243c289"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "73e500be-5009-4b12-b109-ddd822361d93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87b4cfbe-40d9-475d-aea5-a5872dabb5c5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33f1f253-5e62-41a3-ac81-a8e467388889",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5e1e12ae-af9f-4cc3-ba72-0b4db77c95c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4d855c-7863-48b2-ad98-cc20fd89659a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bfa4716-6ed7-4f11-ae19-0c50c3b4e809"
            }
          }
        ]
      },
      {
        "id": "623f7061-b0bf-45af-ac40-34b86ed85e89",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e9af4c39-b352-4805-9f58-0dd71209e298",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef0279ff-c43b-4483-9769-22fd247beb29",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6e75fa5f-4ac1-4890-9cd8-10416055832a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6107c1-b8bd-4e00-8a2b-f09ed4297c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c73a5d36-fc4d-44b6-be2a-9e8e5830ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5cd4a4-1ff4-4d2d-83c7-55dca2c7cbdc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7efb44-197f-458d-91b6-27c757fcd720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c023f81f-a995-472a-ac14-76e1272591eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cee90bf-5225-4758-abe8-634dd4cb834c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98cf6cf-981f-46b6-a942-5bd876305129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93d565ed-02fc-4153-b109-e11a9f2e9eff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a2f6eef-2b15-49b1-87d4-683c6116726d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6fe9436-070c-451b-95d0-8f6ae3b82a32",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015368e5-5676-48d6-af07-adddf39fc1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec7a6336-2a15-4257-a6af-5c81887d586f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc112ce-848a-4177-81b8-5b6e40655970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad9c5876-f879-41fd-8af8-0a008ee3b523"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba7d25e8-4812-4f3b-bca6-0a3eb7518e01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a55ba240-b2ea-43ee-b0c1-1f34932bc763",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c447e21a-30da-4f2b-aadf-5285acdfed32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a366a858-1846-421d-8ce0-4dd08558d33c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5649a1f9-3896-4b69-8fcd-fc8101b4d554",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "970a49fd-e7ec-4590-bec5-933af3b2ee1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c8565fb-34e9-40d9-ad42-80af22c55456",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f223f912-ebf3-4d30-8ad6-bff9543bbf25"
            }
          }
        ]
      },
      {
        "id": "47ea3237-fbb4-4fe6-9448-4784b105144f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4b10f607-b9ed-457f-ab4c-07a61cb26a90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0d51c664-7308-4496-ad03-9b98b4cf4b14",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "801378bf-3c90-4651-8dd8-7a26dca962b6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e53e980-4e51-4b6e-8f38-2db83cd42eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2ddb0b-4268-489f-b0e5-732fa5141bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502eb30a-780a-416a-8cf6-18ca1e0126dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1d26d3-cd2b-48b1-9209-d2453b903cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee8bf3c-0760-462a-93b0-57a5db213300",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca3fc83-0d49-44b6-92d9-ae3845ab65c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f470823-d9a2-4af6-a7e3-32b62c59d4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06fbd6d-8d48-466c-b2b9-2ac6cf72c56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "932dfeda-5135-4e73-912c-5bd86b3f247b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10490532-3aee-4866-b61c-080c8c0643b4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4a5683-2d20-4592-b47a-a1b0acb80bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96528265-71c1-4fc8-8498-d6d50c4cda3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb51c3e-1c34-43cd-8517-45d0681bf5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "becc252d-7767-42be-8374-acb08b0fec74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4b85e1-1fb8-4aea-b798-a40f3a92577c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a185f83-7408-4b42-bf85-da31478f9006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814d7749-a735-4674-a09f-26ebff0bf74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c429092-87e4-44c7-814f-e759ba9a3e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0dbdb19-f97b-4acd-bd91-8ca7b509a3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ced6260-79db-49c1-acd8-a082662760b2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2487f77-a2e9-4752-ba1d-e31c2f301d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afff3771-21e8-4c5f-8794-b47bfaa129bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6797e1-2815-433e-ab49-923b58e23fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4bb3b01-73e3-48c5-8971-9321404fb414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc701ec-01d4-4463-b60c-e09f9b3c1910",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2670d5-3aa8-47e3-83e6-a8febbe10411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771990c9-2f06-4394-87e4-0ab2877a6228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192b9245-22e6-4b45-9825-37724d2236bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0490fd8-7f5f-4e76-b3c9-19b8cbdab29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790d07da-d904-4463-889d-e7240c8bb1a9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e9f4b-1dbf-4434-839a-1fc0153520f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb7e51e-5793-4315-bfd5-43c2fc04a6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b48d8e-c45d-43e2-866d-12dd285ded7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0d225f5-e08b-4180-bb56-fcef45333182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf7f67a-07ec-4ef9-898f-8d1f2680e3ae",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f200bb-33ae-4c3a-92d5-d59b4a16315a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33888dad-0743-4099-ab70-c83836c43a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a394ff7e-4382-430f-8973-09be0f875076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faa462f2-73e3-4da5-8ae3-b2c68203dec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdece96-463b-4ab7-b59c-b10e83151876",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74935478-2c8e-4112-890e-870b51ff4ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a5f0f7-d324-4173-8952-3875b95c3050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73811d-0e03-42c3-abd6-ecf89e7e31d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bea2be7-3894-41cc-b35b-ab07c0899a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54acb6f6-b8ee-45fa-868c-c8c85c177032",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339b42a3-119f-4625-9c9a-c69d80b9bbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb905a83-4d5d-4071-94d1-4eb0a8caeb62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee8e62-1830-4e7c-9f0e-47cfb9d3f101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9edd5fc3-a6cd-45ec-900c-28d480168556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9254c560-ecb2-4e68-ad4d-476b4df5e720",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54580d62-c9b5-4f2f-9091-790449f711d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6db8f2-ec1f-4007-98e2-69f3c08961a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c5f146-efad-4879-a5ec-59f41febe970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1edd0d44-f5d7-43d8-9bf3-2f4643eab964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b86262-82fc-47c7-ab38-81a974f77afc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1574cdc0-5518-4367-b8db-7265714f3f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f53bd30-66a7-4890-9c16-7839a048eaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9c1d25-8289-402c-ac67-c13940942c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "358a7bcb-4fd9-436d-a0a6-0967fca43459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb180ee-8a4e-4a47-a7d2-afe9401f90d4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19253085-32f3-46bc-b14d-c2c08aa7efd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71933e2-ee17-4e6a-af10-99156ce72e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0fcc0f-6b30-4d75-a9f5-19aabb167655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44605798-ad8e-4273-ab21-e5e2e1b8b71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c74ee66-82ee-4890-97f2-948da30f1242",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d75430-df36-4517-ad71-ce024b404ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f9f79c-fcd3-4561-91e3-03e35538d30f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c883964-72d6-4280-a108-fa523722eb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f9f0af-803c-4dd1-9e5f-6cb167c95b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170438bc-f4c8-402f-957a-24f0e34017b4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571de1bf-3916-4d53-90c1-2fc53e71cecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51c929ac-6003-419c-a32c-26003bc003d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7192fb-dabf-4b2b-8e4d-fbdaa7dd6507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e11daf44-2d9d-4ffa-93d4-3de1014f0271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab48737-d2a3-4829-8051-bb47e6c8758d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccf67ae-3c75-4551-8802-bdbf58e028cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d07188-f86e-41b2-9b5a-44777e212900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2321e27-7c6c-4b4a-a677-c458a733929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59a3f6d1-c8b4-4e05-8e9d-bf99aedffcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b2b6eb8-2a88-4ded-bf11-50d146430ce8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3788ec68-01cc-4cb8-8323-9c73f4f880ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25a76ef-1edd-4a42-882f-b4d67160ef8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c247869b-4b73-4d14-96c4-395f419aa373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f738c521-2975-4912-90e5-9cd9fc85852c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525bd26d-d011-497c-baf0-8c22abb59e7a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab70bd2f-74e7-42d0-a664-92584b7392fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebf4d17-04f0-47b7-86c8-9891e875b670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd97358-a525-46d8-b17a-f1966f780837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "257f60a6-c80e-4e4b-a388-42566d8efaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfec38f-419b-4067-bdc6-7c0e5f243fce",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfd16cd-18b1-4e70-b574-38efc731b99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14accf6-1ed9-4519-80da-7a9c2ff095c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4071cded-134f-4c25-b7ff-ba0ee023f929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bea132-c1f5-4592-a91d-6b60ecb3d8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41a0926-0893-4d86-a137-c6cb2fd95ef3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1db55f1-28de-4864-b244-6232ff363a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d64a49-c621-4055-95c6-b02dfb735a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49e6bfa-c53c-4887-b4a4-7796aa796ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2042d-6ef1-47e4-b667-dfa01f1174af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bab368e-d0c7-4044-b28c-2e884e36a045",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cd8bfd-94a9-40ad-971d-eacafd1dc752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ae1af5-9a5f-4586-99f8-e397a7ba6ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d68ae1-9d82-4771-a20b-fc26c7652f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fb1ca6-9bea-4499-a238-465faf75f0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d333b98-ba7f-4241-aaec-e9e53b91cc4a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7892ba0-3154-4f79-84e3-b2f08980ea19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e3bac9-37fa-4f0f-8e39-b7c620fb78f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65f95f4-0199-4d55-bd6d-86b810c77edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "700e4f6a-3cf9-4771-a497-09a65d453efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b09a95-7c36-415f-b622-df9849e30daa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ace6be-451b-4c81-ac78-9d17cc4a53f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c0e079-e48d-4084-9e15-0e771eab5fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9cf64e-b457-4a81-a017-569b823204c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76191dd6-b809-4630-911d-bc5a56998799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4254eee5-b3d0-405d-8b36-48e401fb936d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653f2fcb-bb7d-4ac7-8a79-55e30213b828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf5a735-bc64-4144-9b50-98299ea287a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5911b5-7d76-4ed4-bf44-117ca94d3d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d06b8f3-6434-4458-82f5-954343da1aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9e0dac-642a-417b-9acb-25c9435945b4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316ad7fc-0e31-4dd7-8d24-44579636b725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b995389-22b6-4549-bf2a-9bb006f97d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94960f55-d8e8-468b-a1a5-910f0ed1349a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b275af49-bdbf-402e-89a6-d852069382a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee397e9b-da78-4319-8cbd-4cf431424fd6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa275ba-c72d-4922-a54b-e63b8b94cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee3774c-acea-44bc-afcc-1ed75c41d1e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a023ad9-dbcf-4628-bf2f-7e22cf8ad871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2163bb16-24a7-4d36-b9c3-f8933ae25a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c07f040-ae81-4b3d-a909-4af2c433bc02",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22e908c-c676-4bc7-ae6a-bfc7d480149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53c604f-0c13-4770-88e1-1670d25367b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a406b7d-7ff2-41c2-95c6-1999a3a07098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "82315140-11df-4955-bb70-421b84231763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd65800-c727-4824-ae42-cef9176cc10c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f6b5ca-7ae1-48ec-bf50-40cf701a8a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec10de4-fea1-499a-8396-6d089f8450e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbce03d-50c3-455b-ad34-6e5055b5cb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e981c9-3664-4c5c-bf92-19ce75dca77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa262f2-641f-4254-b344-b9906bb7c338",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29044054-38f7-440b-b371-1fea06cbb986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aad1d2c-ae09-43a4-9a19-1df7a7e37fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe355e-7146-4877-91ac-d4f69cb9f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f5f521-b57a-49ab-8e91-f72e7ac03da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffbe051-460d-4062-803f-ad64e4691d27",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acbf176-1cc5-4616-ace4-16afaf6170b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7ca578-b31d-4a9e-b960-c7277ee9320e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56b8621-acc4-4763-85b2-acb6044251bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a871c740-3eb4-4f3a-b415-5d91bf6bfda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5502914-6910-4dd8-abb9-5ad7f4471293",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371acfab-0dee-4667-8d33-94d79b81c84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc0eb89-632b-4494-9b03-c2c0eebcc133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60fe1a1-2ecb-44e3-88c5-dc3d9acba6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c707ba33-2599-46c8-bc51-c75d07e9a11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacfe686-4101-4db7-a5af-ce93ff0b5505",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d076a331-32f3-4f90-9214-1ea59df3dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2dea9d1-f86b-4cc6-a25f-465664a79507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6b7d05-2ae0-450a-9d14-383ba51e18b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c741016-101f-4796-9a07-616162f53b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c0b984-544e-47f5-90c6-5e4f4bf53c9f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910d362f-1c8f-433b-95a9-4c83eb7f92a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738ac1ed-04b2-4e01-95d0-641ae73fa35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24db339-5b02-4501-99b8-e2eef6330399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e186f284-b386-4580-99c5-b59afbb3fe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8e04bb-7ac3-4828-862e-0fead831384c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b5315e-e569-4555-9ad1-52ea909c96eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9fb797-ece4-4a4d-8fa2-2eb04b81a676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69dec82-da0b-43f2-a4a7-67e558a35669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00deaf2-6ee7-4d35-ab31-23263e1e4f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19425ea-d14b-4bc5-a203-c1b494cc6ca8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba7e792-f785-47c2-945a-c139303df820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2fc31c-c458-4545-b96c-66be53de3421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9801acd6-7877-49a9-92e6-9ef1477f411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d7849e-32a1-4502-ab39-365796abca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabfd767-054a-4c7c-870b-4f9371e4983e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbd8eba-326f-474c-b126-a17481a12fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "146c3a1f-e1f7-4814-b1f9-df3de6af70f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64465924-45f5-4766-acbd-d2cb618f0d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae6418e-c590-451f-b78b-36bdc39ece02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52087c7e-5b93-4440-9a23-81b06f61abe2",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a93fa4b-d668-45e5-94cd-785b865ab185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0c8774-5f2b-46b3-9900-254d7c6e0966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426b9b42-cf18-42d4-bb41-8ae230cbdecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4a1158-05b6-42c5-ac3d-97665b802e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d985f32-0436-4fc6-896d-1956b3e9707f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2cf859-9746-4ac3-b820-c6af219e018d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1334cd-fb4d-44c2-8a21-4f7e691bc3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb2b8fe-0ff6-4ad1-a6e5-901f232cd35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a81a13b5-3231-4d92-aab1-584549f534a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33b1458-91c0-4bee-935f-44de8e2e130b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4132de3a-d847-4952-bc11-615aee3aea95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a482e18-fece-4a9a-9ec1-a4eac93f3f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800a8d96-cbcc-4c21-bb2c-2cde0b731fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffcaaec-74bb-41d1-bd04-6dc1e369734f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967175a8-09ae-482e-9310-14488f76d589",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c14de00-a568-4d26-90d6-937b997c146d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210979ef-f3a7-46b1-9f68-6d212f89ce41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f77088c-ac3f-460b-b197-7e1794952e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ef588a-bdcf-4d4a-9cb9-6377ddbdcbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4853f877-6583-4e7e-859f-9472ef1ed531",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9d7e0-d6dc-4bdd-a714-fc1fbdc419c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b439aff-9010-4014-94ce-ee32ba66e18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dff296-4c89-4288-982b-f907f38fc8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eed58785-089e-44fc-b562-574e759947b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0f99a5-638e-494e-9a98-a12f72bed118",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3448290e-cc3f-4813-95a6-e05191bdc3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45fbe69-8a25-40f8-a91f-366f080ac345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950fe8d5-2706-41b0-8675-c9cfabd78c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "29743f90-1838-448f-a75e-e3b74a487180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a848cbba-1008-4a6f-87d8-4e4d14d16ecc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c68877-19e1-40d7-a49b-47b96572aa6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0addeb48-ad4b-4ff1-aede-69c8ef57c007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36747ad4-9803-42f7-b04c-c6ea0d326ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa1b530-78e4-415b-8325-0837520a5f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eb39b3-aefc-4b61-8c98-601a86e59e6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae68bff-2860-4283-a41f-5a0f146318e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5027f999-a259-47dd-935c-b56c693eb857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca89162-057a-4b8c-b3e9-a654293e09c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e9b82a-07e7-47cc-8ea2-3c084fdf1c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b178a796-0a79-4987-b0bb-998f0a983fa3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14824f52-191b-46d0-9cba-9ee30353e55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ca5ab5-5012-42c4-b246-79346a842c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad563a83-35e6-4b7b-9629-db1988818356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e3316d-f7e3-40f4-879b-575e87ece2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6131e648-1bee-45eb-91c0-4312cc4e5b9e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976b9b78-4ffc-4210-97e4-52ba17a0a9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c6aa406-aaad-4c7f-a447-900af871ca61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25638f5-2055-41a8-a42a-b00921fa4cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00ba916c-02e5-4283-ba6a-695749478590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc60d17-898d-4c8f-a60a-247c2e7e1b64",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae7df96-cebc-4b1c-b846-52ac5e98b9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b75fc87-0fd1-4697-b0dc-d4c3705cdf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e328abee-55f2-442b-9412-3d3ba42cef76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18e91236-4994-4b87-bbdf-40865356198a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a71f588-09b5-48e0-9f43-94a773adba49",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9382814-7fcc-42a7-b95e-40910db1e6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3752b9a7-5a80-43fa-aca3-d1b459836904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a27a2d-24bf-48fa-9216-d6f3a265f9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "790fcf6d-78cc-40b5-86ad-b735afe69f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b8ba5f-7719-48e5-a9eb-888c08b34015",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e621e8-879c-431e-90f7-fa575c665fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778faddf-6e59-485f-aa73-77e1a686a130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9888f984-7550-495b-83f1-4e3804b4f153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64028caa-7c60-4854-829f-a31b6d082848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeecba67-f72c-4bf7-bedc-2a63650ed12f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5d327d-5f4f-4b38-9a5c-c331bdcb6dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59842d1e-6e1c-40de-81d7-418ec6751dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cd8622-1b7a-489e-a072-e347c2f34c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "530a51e2-655d-4793-8aed-bb8a4df0f06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27646d24-7335-431c-8b0f-029d19f1b2b5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88836402-e484-4e56-a542-652de4f7a6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f258b6-b615-461b-99d1-89198ff71153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940f1f6c-79fa-4e49-964b-699b64049bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "63141149-a540-44dd-9e36-54b0a122a3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08249e7a-7834-4c66-9232-85f094038e58",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e8131b-55be-4ab2-b4a4-208fffb379af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e331a51-6dc1-4ba7-a0f1-6a740942b761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d60d43-c4ad-4d83-8cb9-e297abf46432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0038348c-0a51-42fd-9796-4795d26c0104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a343f3-c180-47ec-96b3-06c91964ee3c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3d5a07-dd55-49a4-9590-6b3f0bbad803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5736744-602b-48c3-8075-afbfb44047ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909a1cbd-81da-4522-9c54-cdcab0717bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "901bbecb-eff4-4da5-899a-a3999d8a995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e480fe6a-5dd5-448c-be00-d29a1e7d7d7b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b9ef14-dd0b-425c-ad9f-50f0d7c1dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e6c24c-f24e-4c9b-b623-473fc03bd36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1dbd9a-6e75-4f55-80cd-1a5ee3bb80da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f37d7ac-cb33-4e05-ad2c-b8bd6525ffc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103a5956-9442-438b-a447-0c8379cd4a2a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc194d2-355a-43c7-918b-7b4fa7df1788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08122383-c1f1-4d79-b844-af36073add35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff61f26-cd20-4144-bd7d-62a5ca2a2c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b18a38-dd14-4e9c-801b-50e669d6d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aae99ba-77b5-4e5f-bbac-7acc10309f0d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04ba62a-075b-4ae5-a8b3-91294b0fcfe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15f40d5-396a-4ce0-b47c-39f086b40ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca0f2f-30bf-43a4-b2ba-c6c0120ce13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3f59ce-dd94-445e-9496-6f62648b65be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c473be66-9c0a-453c-88af-f1833bee8dc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b710d83-e492-44db-841b-dc07fcdb54dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ec4016-5f0e-4efe-858c-7dce69ea08b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac01c100-1d30-492a-8e3e-022485aa5d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6362c6-21fa-4878-ae90-ad4aed80de66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2f76d5-6b35-476e-93ea-14ea82f99bfa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb9be6b-d369-4108-8b5b-a69e2b975079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b86241-fdf2-41e2-8b57-323a86e6f4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ccef58-a272-4f7a-bf03-d0d405315f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "927b12da-a7a4-4bba-ac19-162922b1a400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fca0004-4064-414c-af32-879e8417dd0f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6c5c49-fce9-4652-8502-397a084d2230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162402ce-0110-49aa-bb2d-963789cc6543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69cc577-3822-400d-bcdf-0bd2e90df739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "236960fe-0332-45c8-b89a-ecc488c97555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ff620f-c6c3-479e-a8f7-1422a17d3abf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6281508d-1f66-4b89-b41f-e6fc21f9cc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93eef07a-9f69-415c-9d69-6605de400567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a975d0-5006-4ab6-978e-2cd042acac4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "794329d6-8077-4fbd-927a-02b1d3a6cac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6be273-08ef-4c93-8569-8947a33d7b40",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7969bdac-1607-49f7-b7ef-9fb7967439a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f36fe9-cfca-4476-8e47-1db560a659cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd27e972-56d0-4896-9579-d275d156b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "27ac6179-0061-427c-9f37-b644b910b6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d03efe-250c-4ea7-ab33-03798e7ba513",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad37657d-8bec-4fd3-ac2e-b51591ecee63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd32412-0185-401b-b31c-0a4825338c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788023e4-65ae-457f-9403-63fe58713db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "295a534e-04fa-45b6-92a2-26caa01e1471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26dee772-5287-41de-ae7a-82152f220ec6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77076aa1-e377-4738-897b-d89ad62597f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96021e55-b70d-493b-b42b-87e88c7b4425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbacef24-70f6-4ef2-9f86-cbcf52944949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4cebbe2-557d-4b59-89a4-2bbcf77f1aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4491b83d-3364-4599-a876-2b87f6e07c5a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb608c6-31cd-4847-bb1a-7edee6573f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f41dd08-eaf0-49db-a91c-6568691e0341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f047831-541b-46d6-bb04-919f52b0bd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06ed7f43-a721-4140-a40d-2ea0bca86a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb18f397-f420-46aa-ad97-93e37f19cda3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d0923e-f46f-4ad5-8415-c29445cb8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e920773d-2f2e-47f6-93c3-850506600d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96f84d4-07a4-43f2-82cb-4fe60617d437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cacc8ebe-6a95-4279-b647-7105b74fcf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f875e0-a7fa-41c2-9a2c-7ed3efc08da6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4a1c5e-5648-4e09-a889-50c52b4ea313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ecea64-6709-45af-8aba-909061818c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc8e4ed-798b-4e74-9ac7-f83633e92704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73938e6d-a359-40da-880f-b95ec693682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744e95a3-59b6-4119-b53b-defafc4903fc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699ea6f2-2d82-4f7d-b008-c1f7b1f73315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793d5ebd-ef56-421d-a7a7-e2f2e85e88c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507f432e-a24f-4afb-96cb-aa84fecb37c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f73583f7-3951-4178-82ed-a778f832fec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b4d97b-4ce0-47c0-bdb1-996bff2716aa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af27a9ed-f733-4471-9d10-1bd20355f417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ffa7c1-def2-40e2-922e-ef5bc55a249d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28973f32-f97a-4176-a1d2-db08896e5d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf929d7-a1c5-4773-8d3d-7a636f56ea88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a02c9f7-1dce-4c58-8075-94b45388e1f0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ed52fc-59ec-43bd-a874-c8c6c4c20fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6a3e62-841c-44c9-a970-fcb70b1eaeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443d5eda-ee95-43cf-8966-89b4bb48d7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a67f3a5-47fd-43a7-830d-e100b75ca5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ecd0c2-aa2d-44d3-9df6-d3e6ee9ef7f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abb5629-1383-4aba-a8f0-775d87457124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1b1767-1d1c-457d-a160-adf6d634a73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ed3a44-a8d0-47cd-b360-cc80c29fbdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff78e52e-6773-496b-9ade-7b99e2d85839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96fa3d7-43a8-43b2-a2cf-cdff165cef50",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5c13f2-ced2-4dc3-bc88-8893a1bf0be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af5fb6e-3a43-432e-8ad3-9ea17d1f3a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d8dd5a-f5a0-43d8-a349-266229f73997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ca962e-98f3-406b-886b-95baf614eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2303011-2e4f-44e5-bfd3-697a478354b0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca277c-dc79-432a-ae3a-e2909c1953bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5a10be-0efe-490b-a1f8-86189b1e7905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918f2a39-0187-41a1-ae30-251226fd38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a20161-2bfd-4f1b-8aa9-9de88e8b593f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1bf2ac9-d2b6-477c-8b6e-99082963aa82",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eca72a-16e1-4bf7-b0ba-fe7d6b2a8d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7997a9b-8ee6-4e99-b87e-c8dabce5e9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7624ede9-fca7-46b3-9c92-4b29fd346824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5fbab6-ed0e-4988-ba9a-a61f7a0e793c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5b889c-3a0b-4d6e-91b7-aa8dd1a1af72",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1520b9dd-ec4c-469d-b09d-6a2d7a20838c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f378862-a56d-4b34-bb4d-a4b28430dfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718cd61d-1a12-4b5e-8c47-dbcf274fcbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cf67f6e2-7ce0-4d09-9585-caf1d5e6b7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11393280-b6d6-4ed2-bf9d-f3be66cae15a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9366768-3665-4a6d-999e-a5f4c29c749b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8f87ce-7a67-486b-8040-c6a707e48d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45db14ca-09aa-4f7f-983e-71f02dfb817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b2af9d-37ba-496c-bd17-eb8a18476454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1db32db-926c-4471-a9f4-e91153678ecf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff14026-580e-4110-87a3-058a4012c34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937aa9f9-d16e-434c-859f-e16fd40026dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bb7e2e-21c4-414c-85c8-4ac80d0659c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21fd43f0-0579-4659-bf87-58c518e80b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956ebd84-19f2-4242-b30b-6f34afa1f074",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66cca005-ba05-4cd0-9f73-6d937739cb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e97615-8b4d-495d-99ec-2ad9e9ef20e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ce1b06-24e2-46c4-80c8-d0bb8619e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab944bd-5282-4ba1-bcec-16f9e10f9225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea59471-3741-458e-9108-b7f059862216",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3864f7e9-e7f8-4882-bb7d-436e931e96bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c96660f-5cca-4241-a007-a067366d6969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923d56c7-65cf-442c-a420-53c82c89ec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76bfb4e5-c008-4adc-82f1-e0f5da43b36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ef1fb7-0ee4-4d10-99ca-2c61d0fbab64",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40b79b7-139e-4a3a-864c-a9a056f5ac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa985834-4d4d-4622-b31e-ecaa1a076f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd6c0b5-6365-471c-ab48-8925057a6b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f5b373-1ca5-4a75-abe4-f4caa013e650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a8e76f-7c50-4167-98f3-efb9c3dc0a6a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe4a6d3-2e4e-445d-853b-383c5335dab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd6adc4-1281-48df-a486-a97c3b1d1117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63696cb2-a9b0-45ba-89da-eeb448ae42f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "932e2967-ae68-462f-9d12-32427b520c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471892a7-3f9a-4beb-8d90-4de8e8e98e98",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2162deea-3ee8-4d59-b6a7-5a1539995b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86773b84-0960-4614-81b4-105d5712336a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9f0810-6ea3-443c-8ac7-0fa51656f418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa5cea6-0d3e-4c81-bda2-4ef278a55d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe71df-4e6b-45a1-bf86-8458b298ac28",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b8e545-677e-493d-a226-74c01b6ffe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6513d67-23d9-4336-ad59-b6dc440aa359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21042f8-9945-4f75-b340-41b8cbc7934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc08ab55-29ba-4651-8333-2bbda89b5520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0016ed5-287a-4194-879d-aa7ef3c65c76",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2c04b9-958c-4bac-8c24-2db355363313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7baaf8-cd4a-4537-8f7d-214d6f63c552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d236b9d0-9370-4c4d-90b3-1e23eaeb5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "180cae33-c2da-4652-87c4-bfd4915a7e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bc47e8-4fa6-4612-aa4d-35256a0dd4fc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c929b9e8-c13d-4b1f-b6e4-83ef51882fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b52a06-b8ad-4813-89ab-dad32d210fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966258a2-f540-48a9-a23a-fde6867a63c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8a996c-94d9-485e-9013-2e599da3627d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe589a3-1fec-4b11-a1ef-a467c5ceef90",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cef0eb-d4f4-4355-be31-304211ed349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7d6cbe-1cc8-455d-a58e-a17b5721ecfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab6fd31-06ab-498d-bb0e-013d9bdf610b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8319adeb-c864-478a-94d4-85cedb058ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c527652-3ce5-4f77-90d3-c59a4b74b31b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c610874-9448-4c60-8c00-11813437d0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae24567-606f-43d3-9c02-70a7efb0610b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d84f853-0d36-4e23-b394-6f29bf3fa0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f20d4cfc-9855-4a9a-8ead-8cd980b3283d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1805610-16c0-457c-8f3e-5b8e744f2294",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67650da7-5622-4755-836b-9ca9a65fbe59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7334d369-7742-40c5-b902-76ee014ec378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c957072-ed84-4337-a3a3-06bfbc125b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f230a45-fc8e-46b6-8af4-5582626cf66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fbf53c-fd56-4356-b5e4-0193983abdbe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf76eeb2-586c-49a3-9c85-308b859340f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b75850-0dc3-45bc-bede-bd64ba4d2a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e33f241-a6b2-4009-8121-3bf4142aaa76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a038f8e-443f-4b56-8a5d-e2e552103006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5138ae95-6ccb-4c1b-b531-8ead42cc2e5a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a15d587-6cdb-45bd-ae7e-b1ebf0db5b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3982d904-6349-413b-b18c-4c295924b87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f16226-bf8d-41be-a878-774907091555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0063b018-bd14-4d9c-8824-865dcc61d845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef220c8-188d-42ff-9e05-beedb37ec8c5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ff458a-a086-4f5d-b995-e5bbe5f61ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94c944e-73c0-4397-9c33-3ca960f2c9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c8736-57a1-4d35-b460-8a1ac6c25624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "077a0c81-7621-4af5-a39b-2f03eaaedf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c9a9cc-93fe-40c2-be68-89fd82b03992",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe80e10-b287-44a1-89d2-4ca41aaccb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645a8ebe-3765-4244-881b-f1ec1a3bd33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025084a8-64d3-41fd-96fb-a6c8902b48cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a787cc-e1d1-4f3f-8e1c-e08d61245fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6953bb-6051-48b0-9533-9040b4185da3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d05387-119c-411a-a9f2-eb85e5564bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3ccdc750-371c-40b9-a550-acc1389362d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf77d0e2-7e6e-470b-9cb2-e8dc5992bea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17cddf49-f520-4fbe-8b82-71093192c009"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aa39dedc-e389-4f50-a09d-e22b80083211",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f55de59-ed84-4aa7-acc0-3e1293b15cb4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa51329-357e-43bc-9fee-635964f3ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03c69193-13a4-46a5-8e6b-94472eda9a69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51286a2-a26b-4817-998c-9c712f8ffc7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29f41e77-5644-4920-bc76-e5bac195a7e8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37d2a499-9f60-4458-9f72-056efd6ede3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0823965b-5e5a-402d-b5fd-80b7abfdc4df"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16a17d24-27da-42fa-b9a0-bd029c205e65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bd6511c-cdfa-4d50-b336-fac3e093dcc3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee8680b2-5b19-4bd1-8573-15cb61b21502",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e80aa2e2-a773-457d-9bb9-3edb0bc3fbf5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "50d335ca-fb69-41e5-8c34-e4efd19e9580",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50b81b5e-1b54-4fc1-a25a-ce33d9af35c6"
                }
              }
            ]
          },
          {
            "id": "1cf5f92a-99f4-4b9d-a9b5-a6fd9f521643",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ff561a8-31a9-46ca-b4b8-d801082fb884",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23b1c232-d4d6-4139-ab41-cfb2a409baa8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe60a767-24c8-4f0d-875e-7134780cd2b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f9e8a0b-c7ee-434a-b7f4-91612cc7519d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc2a3652-4097-4383-8ff1-5c61d0bc62d8"
                    }
                  }
                ]
              },
              {
                "id": "f4e6afa8-c94b-41b2-9df2-6aa21853e9cc",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbeb8079-4b04-4f2d-b130-64529c222e4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d845985-6be4-4c50-9481-fbb24c0200be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3819bd85-39f1-4e1b-80f7-a3c712ed326d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "98bb0892-b671-43e5-911f-0e32e20b3f1f"
                    }
                  }
                ]
              },
              {
                "id": "51d1159f-471c-4a6b-a9b1-fa7b921bc335",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8117bff0-4ba5-49de-8bd8-639afa651405",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adbaf017-3e1a-4d43-9bdf-0bd3e0ddc576"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45fcbde1-d4c2-4826-bcac-1fa7ea1054c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbc25030-85fe-4ed9-9f84-2d2eb55bce4b"
                    }
                  }
                ]
              },
              {
                "id": "3196d22d-fb92-43be-b3c6-14c09d22af46",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abc9c09c-7f45-425a-a063-2e880bce7daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ee21e68-c38e-419d-9408-dbd965fcab90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69b29607-b761-48a6-878f-1c55c43c260b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f9c305a4-acca-46d6-be69-0e8dca3f586d"
                    }
                  }
                ]
              },
              {
                "id": "1b131580-aab2-4644-ae2e-5828ed2f2d4f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "671e4981-a6b4-4314-abbe-2c289580926d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67bbb8da-1bf3-4f01-890b-307d76bad625"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "049d8376-6661-490b-a68d-84f3e860c235",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "436d623a-5bfc-4bec-ab87-ca2e31516149"
                    }
                  }
                ]
              },
              {
                "id": "293b8eea-d776-407e-b8eb-cb1799d06ca9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7161d76b-dcda-47b7-8730-019dbcd4561c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c80ea40-9343-4d4c-818a-d142d5164957"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adfbe936-0504-4187-bcbf-71538e295cdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d67facdf-188b-412b-98c0-a42f5407dfbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90d518f6-9f74-409f-823a-0cc770e3f787",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9880aca-5722-46d6-801d-8dee759e2635"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ddb1a1fe-dc5e-43ba-8fd2-c209fad2a9f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "379146c9-3e55-4132-85f3-851ac447f385"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92932d5d-2752-470c-998b-f415c423f87d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "79da514e-3edc-4d6e-9459-15c9d85476a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c67e956-8b33-4c70-a836-300a2cc835ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb9a5446-35be-40b7-956b-a4df446b24a0"
            }
          }
        ]
      },
      {
        "id": "92fa8f0f-b34d-458b-a218-d6265177ef1a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "212c5a7d-068c-4a08-bb3a-955920845bc4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62da5ccf-c2a1-4c67-a922-e5420021d116",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c039d7f-f119-499f-86cd-1270dbbbf47d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251e2c54-d2e9-4750-a315-84e00582d502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787bd051-4528-4ee2-aad6-54b1f9f24c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6c62ad-e7ef-4642-bdfa-c14755219edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb23310-20c8-492b-ad45-55050b85ea66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe4a354-0fa8-4111-8bf2-4288040986f2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d453183c-7707-40d4-9790-32a6a4acf862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb68e6e-f08e-42df-ac0e-d4eb04b2bc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38325d93-9e9c-40f8-bac8-61ff5936a56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecd17f1-db75-48d7-b4a3-5446082856f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9a33ee8-c147-432f-8756-cdba61ea6154",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ace4bf-06d6-4242-9bda-16747eeaec2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b88ece-eefe-4eaf-942c-da33a7d2f787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1027e316-7348-4d5e-b0b6-62f079fe0f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a25a7925-e324-429d-83d6-fcb119652d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46f10e9-efe0-44ff-b591-1e9796d450c5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16f192e-79fd-4007-8d05-e876637d33ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f3605e-5a01-44be-8d7c-a87be6e376e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6debb4d9-4967-48cf-b2f8-14768cb1e5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf64d28-bec6-49da-9532-3b40bd7a854e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99fb464-64d8-422d-b354-8954ba6a1d8b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c260a7e6-9bea-434e-9e19-9201f96e9e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6abbde-817b-4aa8-9dab-84fd0f1886f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45db68ff-fac9-4d1d-9926-41c696fc47e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a97b9819-0d8a-4aa0-b7bf-777a2d622165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f6e768-5e76-49ee-9f9d-9a584807b6b9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d30dc0f-bf25-4adf-a530-f3cdc9545e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fe4801-4df0-411c-8732-6dadb7dfb985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b678486a-7e67-4778-8fb4-4a086d8c7aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "05c32766-85a3-4305-866f-048226fd1c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b913ac-a9e6-43c0-b336-f8b03617965c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e466b247-ef65-496b-8621-59c6ba7192a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43153b83-de06-4f03-895d-1c7c48f28c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4d8041-3630-42e6-9b46-cbf3d4a683e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abeb9ace-94c0-43ad-aa6f-57712b83acd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c15b20-739a-46a1-9da4-8f07bd94b637",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c852ebe5-b7a7-4c62-b919-a4e4a9ade0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9981af0-0083-47bc-8819-f6ca9f1f9a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c109454-33aa-4540-841a-00966877c8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf1a46b-2aa0-49d4-8608-a73b3f477b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac3040a-119e-4fcc-bc13-fbdf23c7243e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10452bf-272e-4acb-82ee-0c1227c5c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204c2930-d772-45fa-b34c-725fc7848ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee3c76d-766f-4797-a280-e732a34b1da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7595e9-d35b-4e83-bb95-85dc32b03430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7ca89b-c823-4a3d-a376-6dbd1ecce412",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a9b9f8-e962-484a-bf90-d8554b93d253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be76589-8802-45d4-8b88-60b184fcfb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff1fb4a-688b-4c86-9aee-94152c4f43f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfbe767-0ecc-44fa-93b5-dc6970d3d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e757f50-50d8-49f7-a4eb-bb716f19089f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149638c2-a472-41f4-b60d-167e43c016f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae2a66d-3386-4056-a812-a670756ac07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718dec57-6ab3-4308-a08c-abc83432bdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1d614c-2ef3-4c63-8d86-06f5e510db1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270531bd-41b8-4717-844c-365ed11e5f7e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fc7cee-1ff8-41f2-9327-26ec27cbe8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5e8e28-6d2a-4d5e-a0b4-a26b9befe852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84025d22-7818-4865-ac1c-da7a02a2a780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68e468d7-0ec6-4d81-a15d-db5377c16051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8854b10-2623-480a-b0a2-0bbbbfcfb1db",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb6936a-8e08-42a6-bdb6-7634fa2c7d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159b7a68-f248-4f46-98f1-bb7e7e77192e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8befb718-34cd-4d48-a02e-d629df3318eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "280d4955-3426-4254-8adf-e80a91ea1cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916f2e20-e744-41f3-b730-75cac8799101",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cae727b-f97f-4653-bc75-2bed51b06b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5acbfb-7e19-420f-8b10-c3e2b09fe9db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff083153-c570-4e4d-b8e7-10d3e2c45b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e305ab46-0942-40d6-abb6-bc5e332c50a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8596a4fe-fa97-4d58-bc7e-7b487effb0ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15c81df-d41d-483a-9148-e2b009c19228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdeeb30-5eb3-4d2d-b4d1-102bfb05d3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192afb99-94f6-471d-965c-750aad08656e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "283ca7bc-f5a8-44ca-9095-d6c097a137c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabede86-d109-4a0c-b8bf-0762c9ad8fc5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7b5fc1-11ca-4ac1-9cc1-11e6d7aa20b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e550686a-9eaf-4eca-be7c-6bb22ccb355f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9367cd1a-7540-4f28-832c-aa4738382106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf63cadb-e480-488c-8b8f-fef8d3968882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c127fcc-ef36-43c5-9ae5-670f410a4a60",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3145054-ce89-42fd-8fe6-4b89fb2f0686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b19612-449f-41ad-8b97-070ee518a12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea34922-3a98-4285-9ab7-26e95787adef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "511f64b4-e157-4ec9-bb12-4d0565b2189b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33183f7c-28de-448b-82b6-2a84cdbdc773",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f5d1bc-b110-471f-bdbc-c2fdb1c48858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42b22a2-9aaa-4e36-b935-83f4814c1ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47195d0c-3118-406a-994f-71e3ecdd7e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac244a2-2075-4141-b08a-6dff5ad4a7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61055202-1ae4-491d-beb8-e797972697bd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1904f63d-fca3-4d11-bbdc-b61d4b8e344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70fa6c60-ca8b-46e5-9bd8-589e3bc1c932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c303142f-b155-476f-a95a-83e17410a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a90bf3-ec67-4ba9-83c4-f50d7e1786e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cee0c8e-16c0-4942-b4c1-48ebb1a01688",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3268497d-8b4c-438b-ac74-c0c3c0318000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd435b5e-236a-4752-b739-12b5c2b1023b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10984add-258d-4f1e-8f8d-ea41be8ae727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7848e599-edca-463e-a13b-6937a71a1712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd092d5-2df3-45c2-b25c-084d2035a89a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2db0514-663d-43cf-a624-95290fe517a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbdce48-41d6-4980-af9c-89fe0803b797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25e13e2-9e86-4908-89f4-7c54eac3de7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffb67a9-2414-474c-bab2-76bd7c0f8fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53851025-3c00-4d2c-b421-c220687d7916",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052316c6-25dc-4f49-905b-d004b8d606f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e34f1ccc-e6f5-429f-9b41-93734d976eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162b1913-7f07-45ac-b7bf-a010cf41ed73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf617f33-7651-4028-b97c-6b282fada7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934abecb-9cc1-4f66-9ea9-6d910f2235eb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7176eefe-2054-449f-b42a-bb40150b4c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a722da46-1624-4fc7-8468-355cc2d1ce50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589ef09d-5b41-4856-ae58-3f2989835aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc908d64-5686-4cdd-ab0f-be252a747a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1db146-d2ae-4272-b9f3-b18982c79dbd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb050c38-7c20-488e-a774-16e11d42e619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba65b4a-b7d3-4b0f-9c25-f76624f93ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b431879c-9ea5-46e9-aa8e-6fafa05029bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "311a82ff-4428-4519-9e58-8a58983cb411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2f7353-2829-416f-a2d3-f870d2025df6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e797be-a0a1-4417-8de2-05a9566af773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e7bbc2-9e01-486d-8753-52ac5d8275e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137471bb-d044-43d8-82c5-343d6f2baeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83547346-2d15-4213-a8c5-89ec743423ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a73d3cd-01ec-457a-9968-078912bda580",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f139612d-8dfe-41d9-ab0d-a4e1129c5109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bbeb67-ff16-4c27-b36f-9d8a80b90e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3553b6-d93c-4af7-aeba-f39624cc7976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f40366b7-2bc2-44ea-a550-6bf7820428ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209d631e-4070-42be-aaaa-ee9a8380f429",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee8225c-e9c1-49a2-b687-bdc085f3d7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7d46b9-57e7-4d9c-89d4-42d55ed026c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abf35e1-a9f7-4ef8-8d15-7ffda0e63912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8380ef-9c2e-47a5-8971-9074d07d2711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f35caff-e836-436b-818e-7938783cc780",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844bf7c5-e867-47ff-9ef7-97a3b852b9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2896ca73-0b5d-43be-b0bd-454f232f1a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34274ff-5ac8-45a3-9781-73a8bfe7080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e3619e-1bcb-4584-9055-8892cba403bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0e358a-0fed-4d54-bcad-a37c29bc1608",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274cbf65-78e2-47d4-8dcd-dc33f0620ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc65472-9226-4fda-b14f-16cfa3be8e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21c08f1-3ec8-4970-888b-f7dc3024e665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2da8fe-7a5f-4f7c-9a6f-6c374ac91295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beec1175-7dea-4b21-a928-24a08f7d1654",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bef52d-a3ad-49bf-8c74-8696307e4692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cf80da-ef3f-481d-b73d-0de5fd57346f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87267991-576c-448f-b31b-2017999f7802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89d7c899-d6e8-4b74-9df0-f6bf975592e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1b454a-0387-4446-8a38-3bc68bb57c35",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48db1227-fa5c-4f19-b25f-6d5c249225a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00fd8880-1642-4a31-8527-6b2f097bafe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4169a9-c350-4735-8d4d-6462a75d8fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c5efa3-0948-4ceb-981e-72aa1b56a324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cef0f3-f280-4e13-b395-0e53f22532fe",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02517817-6116-42ce-a56d-55524dd23e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7096e6-46f3-44c1-98e6-6742913f0819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2629ee-d8ff-41a9-b8ae-7af4c6c19987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cdc4698-e437-4aeb-846a-910acb268915"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5390944a-5d61-4167-8ddd-b809c54cba0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48b94187-3aa8-4090-9f19-df195a6c0d7d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1edd9-1559-463c-879e-b50083765e13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "19578a99-4593-4890-bf1e-3ed445ea0b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a477e-f55c-476b-bf6c-ce3937fc707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66e6c919-5446-4216-84a2-5a7d2494c567"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11e833de-135d-4d91-a6bb-d4ee975ed687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78d1a1d0-9076-4d0c-a507-cde5f748ac1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e49123a1-9bb0-45ab-b16a-4f89d0e13e71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80277c3e-a572-4aa4-ab41-636d19354f97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7586de50-45a0-4439-8678-52f6c98b3520",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b608758-7a1d-4c49-9a2b-77ef648c58c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1ce834e-4cea-410d-ac27-4d82c06edb75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29a761a6-6a30-47af-9009-9d37fe5a072a"
            }
          }
        ]
      },
      {
        "id": "c1f4d6b2-9a91-408c-8876-10b455b0ca13",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ce3b7e0e-a6e9-4d94-83c8-aaca87316000",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1300c751-dae3-451d-a43d-d481cb8a52e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59d8b684-21fc-4a30-8c84-17bb8d90dee9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73073838-f1b2-44e4-9f64-d363d613243e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561b59e6-4048-4c1c-9f32-76662a6e76c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260db653-2b2b-4bf6-9a40-f1290e38cc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aec289e-1b9b-4a69-ab87-c3d58d9785d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7debedd0-11c3-43c2-a4f0-9490cfc44311",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaf8521-01ce-47b5-a9dc-56ad33de5c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaaae72-84d8-4db7-9be4-e6874c33be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08622ecf-46cd-4405-b293-a7898bf34a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2daefac6-1c08-4e43-8729-bdc8c48d83ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d9f575-b292-4e38-ba4d-b423068058a9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd85607-c146-478b-8020-4a2e5de332d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec11c7a-7179-4394-a4f9-1eddd613b729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698c56c9-5049-4bf5-892f-e2c9fd6d5249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84178330-3369-4de6-8afe-6f73613437d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11d29f1-e9cd-4c3c-bf17-facf0aa5fb5a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae26889-70be-457f-8145-f144fdb3b003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffbba54-624a-42e7-a27a-9e77f074d504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a85d25-ebef-4db2-99da-88cb48d6eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c273909-158b-4764-9ceb-9254e567aae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c221a4-105f-4e92-8157-2d592203d645",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c3db62-d4e3-4a27-ae0c-169fd3a19002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1209ba18-fb0e-4d52-bda7-7d0cc1df985b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a336b279-5b2d-441c-ae52-21d65c54737d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b266ea0a-2ba9-4da7-a0aa-c9e580c79db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952275b1-5da8-43e9-ab99-50206b23f491",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18c89d5-ab39-46dd-bb3e-7e19d0506a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7c7756-ab3e-4271-b61c-b23962f20401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b139454-d11a-45fa-8f95-2648c24167d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "153121df-beb8-4608-82fa-7f8429d0a876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d57a14-b633-4799-9703-29628f5277f9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3446b9-36e2-4c8c-bfb5-6cb6e517c906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e26230-f65a-4053-92af-59ce1b716f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4924ccdc-62cf-4e8d-baa9-0b2480c26c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d31d66-bceb-4577-abd3-cfd9d3e8cb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ee93c5-4f93-42c2-980e-7bc85272bbe9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d160cfe-d6f3-4363-a10d-cd2d9f26d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef35c83-9361-4c7b-b1fd-d6fc8f219fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1779c6b6-55ad-4434-8d03-fabb017ae243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70668352-4e78-4c27-be2d-69c12ec655de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c2dc4-2ce9-4bce-8899-1d4d79950739",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824eb1ca-fea1-4143-81fe-7528c668ef41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f425fbe-8236-4bba-bfe2-ca129b1875fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4dc7db-570b-406a-b09a-9fed058e12c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9230d18f-d64e-427d-b704-cc525cee74d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6929ee1-6882-4a58-b8d5-b8b1f486f3c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b73fb3-d65d-41f0-a03e-3408b2fa80ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3c56f9-80b8-4c44-8e49-1d42756e89ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8659c0aa-b3b2-4426-a63b-8ca94fe419ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e788a5b5-78cb-46bc-aae3-7bc6b672db31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59621ed1-12b4-483d-8c70-7889fefc5c99",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da085157-94fc-4bbb-b023-3c864470cff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671ed4c1-dc56-4789-be39-6af6fbbf2daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85e7899-b313-49ad-bcc0-ca4666c59d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a640dbf8-1187-4bd7-b820-db037942b0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd8eb2-3d64-4e57-a9af-e3062d2b46ed",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2a67dc-4c2f-4bf7-bdba-78ecbe829265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee5162a-e1e5-4d09-bcb5-1fe96a04a84e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af49c517-b781-4072-a3e2-030f17a1d6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8f353f-5595-4212-9b74-3f113ac0beda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056d3af4-dff5-4e6b-bbb8-c14203a4ca77",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266fd34d-3021-4115-bcba-6cd9725a497b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a1dee9-8a21-4906-a378-1aee1df212b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44348626-703d-4840-80c5-bb0ab850a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b09c382f-70de-43a8-b1e7-522e1575329e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4f4240-2c21-414b-b686-1750d0492fc6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab8f5f3-7379-467e-b9c4-29691e395fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbf9322-ba78-4dde-9798-8c7b0526b626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20a8386-592d-480f-8ccc-417cd1c93227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d53b972-7b7f-4703-8088-6f431bcc5fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab67956a-eb62-4758-af56-69faf851b359",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a6fc9a-693e-4087-9878-d7afe7adb8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19307072-d4ab-45a6-bce4-1028f0371776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8f91bc-5903-41d9-b5ed-3cd8572a09b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a93c91d3-5237-497f-a22f-d88d5b0fff76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c24c0e4-a4f2-411d-88a1-6913d084c19f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0613b28b-e8bd-488e-ad09-05157ea90581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead82cb2-e17a-463c-afb6-0cc4b19189c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a83846-2bd9-4f8a-9c65-3b17168fe2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b12bd3b0-624d-4fda-a455-553ca47a9488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0cc600-db8a-4979-997d-29e20067e3c7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902f15c0-ec1d-4198-a62c-dc1b5265e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5809eb4f-d5bb-4b13-8858-1ebd35d0b85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9796ae4-a367-44fa-ae47-642376bf9d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4a54ca-5a2f-4788-8043-e2b80e0d384d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc8e48b-136b-42d4-a129-f085cc01c2bd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344d463e-a9b2-4ea4-909f-569cb63863a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86dc160b-acdf-4514-8ed2-9f783829187b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc394dc-9e64-47d4-b0d6-a423feef0066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39ab6845-a545-4d97-a02e-afdccfd3df66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e52302-d54a-4f53-913a-8b4987549cf3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc8033f-2de5-4376-a3da-7d5d34145b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3644946-f784-401e-aef0-f5779df32c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6910de6-2905-47ed-9100-38dec53d2b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4635ea-647e-4ce3-a56e-0aad1ca9b32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc708fbc-ac3e-4e8e-9325-411bfc4604e7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9493f37-3634-469b-96a3-87d02e11e36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd662b14-124d-4714-a3bb-1fa5a6565228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ac97f5-8c1a-45fb-9967-dcad6583e513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94463be1-96e4-4d71-8ed3-a58116045f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee778b4f-b913-46cb-8b80-abbe52f76c4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ccb9f8-33ed-4e71-9793-c09b5ea14bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bc8a53-d2de-4bbf-adaa-b216a49c9304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b607b329-ac78-4479-b9fd-e1db41bb59d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1a98b7-8fc6-4561-92e2-f6efe7e3eb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa70970-2254-48d3-a437-92c35bbaee5d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ff23f-51a5-45b1-a6c8-d53630359659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa0f82c-bf94-4910-b90e-0428790fee0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f57500-0160-432f-a94b-9bb3fcd5f60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd93a277-6a11-4116-afa3-3e5b0519d289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e580f4b-b35d-4c4d-a167-b071f3ead25c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d1d35d-93b1-4a17-9cd4-d05e75b377d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb6ed03-16b5-4b63-98a9-b0e3c0b1801f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5081b2f-a7b1-4cd3-94db-79c36495b9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc23585-ba0b-4607-87ce-03f568006d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7caf359-2e24-4c17-bf57-9625033790ba",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99734bae-fb11-4e9b-8156-65a34ff9246b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd27b1ba-db44-49d5-b681-cfc1851b57ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e57d178-2e16-4635-9123-2ffe453e4867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01dfc87c-e946-4a14-905e-5de7e1ff6e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8eb8a2d-0e79-40f7-9bb6-8230a6e8e318",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eead85-4a72-41b3-924a-040c05f59a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd959f0d-227c-4195-80a6-3868039fffe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0050aeb5-0c2c-4aa1-8ec7-c363339e1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24e57dd2-6490-499b-a062-64e72664ffe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e040ae5-04ca-4a13-93a3-488b94989915",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bdf019-7798-4b40-96e3-a49e8c76e7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26ac56b4-56ea-4b7b-90f3-cdd009100a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2605042e-15f8-404d-99e7-4bd1cc65abc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6adbff-d2fc-4551-a5ae-168491898ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3be6732-b09c-4dec-92de-71e5a78b09a5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c5cd4d-20bf-4b34-85cd-76572165ff6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e8cd37-4418-4a3c-a258-c6f63bbf8a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391a442e-2e84-4f19-8f7b-95afa3d89a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6bfb48-59f8-46eb-9096-3f8b04ed9ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967d3550-75f3-4149-b7ca-b6468922c5f6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3e8453-be13-49f0-a083-a07a9b801189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753f2bad-a623-4558-93cd-95ad85df0d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e000f69f-de4c-4c9d-99ab-2147e1996f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42f727b8-9e66-4036-8a43-4a80756fbdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64340c43-4e1a-4cc3-b291-c85f67d13750",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8398e76a-c092-4f5b-b078-61fcdc95601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d629d580-61ed-4e4c-b36f-de750f7d7e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c70449d9-8a7f-4e55-83f3-489786e95b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67214677-5186-447c-810f-bf480e9e1254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69614bf4-996d-4cf0-8928-5f514342f1f8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ca3e2b-5352-4b2e-b004-e94fddaa6654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4806878-4613-4635-90d5-fd501ed67596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7d6acf-d6ed-4fa1-b568-50193f6e0ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72260afd-f929-44df-be25-c2720d68f4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3894e2-a1c9-4e2e-82f9-cb1e7989b740",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd20de3-45c9-4a85-ace3-09b1f15a805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ec9210-ddf7-4330-82ae-10e8533d1ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c96502-7300-4390-baec-74a7f8a2b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "873cdb9c-987b-4bf1-9dcc-38f64e886ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c1eb07-e5c9-4ec9-ab75-5132768905ba",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e541456c-e955-4bc4-8fbb-013be66ffc24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a07852-aaf3-41fb-aed7-647ccb3072b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fa0a98-ff9e-410a-b78e-a302e8605ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "998dcba9-cf2e-453a-b97e-dd4a5217c4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78842f07-0b6d-47a7-9e51-d52b75f02f0f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490b5c25-89aa-4535-a154-f14e0464ad49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db7a2c75-5025-4b4e-897b-7ef5f3ca4408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55259fd5-e74d-485d-bf85-9f530890eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "209d85c9-0f2d-41b9-999b-d5b4af97f235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc725c7c-9e37-49ec-b73e-a7e6c9ff796a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58afa4bb-e928-442e-8269-78ccd836936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68724735-ca7e-43d8-a811-ff3b45cb74e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c90e19-c796-42fb-8540-4717563bb830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab65dcb4-a923-4916-b20b-1503b684aea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1141e0d1-38e9-4b77-a8f4-c99dc5d73003",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c23859-cd11-4bbc-8611-7a15951989eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff55f13b-adc7-46b1-876d-abdb81aad286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678d6ccd-ddea-430b-86e8-00568814c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e2c0eab-e29e-40dc-86ff-3c1a92fcc634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b2681f-4887-45b4-bbe8-926b3e32c22c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8090cf5d-35fc-4b9c-99ce-326af432563a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de239e96-5a37-4d00-9e06-d8155531abcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35f45ad-4e75-432e-9a2e-f52688c42ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b27e554-119e-4853-aa79-f3c44c05a399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413b1fb5-f854-46eb-9b3e-c395391e7230",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04256ac-0f07-47d9-8c4c-ce90d9fa2397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccf7699-8d96-4c4c-8248-66e0898b9f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cd9b16-0d08-43ba-87a4-34760e4118bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d787fcc6-672a-4232-9a20-3e0c47f60092"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "899f391a-fe9e-4ee9-97e3-92c906113d29",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0827475e-1875-4bdc-b9bc-278ebd4d6a56",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1f5998-7e51-4f4a-88d5-221d4e684d8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "43b78b96-2f40-4691-9db6-5e346d008d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15ccaff-4c4b-4272-bdde-8ee48442e1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f892723e-6f70-451f-b24c-6363ccf97a10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b750f974-7e40-4f65-a68c-c0d9f6d24013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7ab5807-24f1-41ab-8617-6ed500026ab3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67677877-784c-4c64-885d-700babea73ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a2f34ad-9b97-4376-b3bd-d502e6f8fe07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "573bab4d-f498-4ab8-a686-03762ff33f01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "753c78af-2b35-46d6-be8a-778bea077dc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e197c745-7d6d-45a3-81b0-496cd0dfb9b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80fcec98-9de5-4354-b49c-e600486b215d"
            }
          }
        ]
      },
      {
        "id": "35729474-ff82-4c27-9219-710c6b54d25a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "66cf8f9a-b11b-4572-8481-a2375896f4e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aeac9bf8-bbc6-4003-b197-18142496896e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a1cd2c5-5982-4f2d-8f8e-fbdfc6dc5d19",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1493fab6-870d-464a-a827-aea34c43a38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d93d6339-09b1-4174-a513-004204900444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0670cae6-7185-4cc5-bba1-d87b62ea06fc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b3810-9b56-4e6a-b787-c2ba6977b500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad7aa2e-c9c0-4615-be1e-755d8adda3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50127d4b-25b4-4e83-8d33-30d92f4d5f50",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be766cc-39fb-449a-8e8d-142c922f0ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f545e5f1-590c-4199-bcaf-e83b7abc5889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec2f9d-fd7f-4afe-8f38-4500667f8743",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ec67c0-7bd6-4021-96d9-6ee85852ec08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6567d0-df94-4fa6-a965-c6a2f0580882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0d899b-4761-4d50-85d0-6b4ea40d3a11",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00265020-8f31-486f-b5f5-687549042d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f58262d-bd92-4d62-bcef-248453418ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd84139-4605-48b9-aede-156fc175aec1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae26eba4-4d8d-4ab9-a296-cd38c4377be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1d8960-d22e-4555-bc6a-e1e0d3841ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ed857c-6ce8-4809-abfb-1f26c971f361",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4da55ee-8eae-4f1b-952e-26565a2fb63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62b4f01-262b-413f-a422-cf0d3c53ed2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965f19e2-8d42-46cb-848d-02f3ecab52a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4ecfc2-24f3-4aeb-8221-dc1b4c99e97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b2939d-5c9d-4957-946e-609bc6b67828",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99215eb-a950-4d54-ab54-1380bcf540f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07408979-1ed7-4b0a-b0b1-e0797393abb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b531f7b-5703-4db4-a8c4-9ddd42b8ac25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1321b805-051e-488c-9a50-9ac613ca5021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630df639-a487-44c9-8f32-1468a5218796",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea06f0c-7b4c-45ce-8e89-4f0a84e023ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aad16bb-8f2f-470b-b037-21b613ab86e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c70e1d-2d40-4453-b30d-e475017bbd41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc54c00-14ff-41f5-9217-b2c908f68f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235172ad-9b2d-4a63-b8e9-dbc8d82df840",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3315203-be97-453a-82ba-fa164c098ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da52858-93d1-4792-b4db-f97e20e763f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9033eefb-5c12-4ca9-a399-2afdf5b93a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43307c35-da87-46b3-99c4-deebfb4491ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8780dd5-6de5-47f3-a988-fab81b9ee3a0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c186e2b-9f90-4a3a-b218-39fc07597453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe9f432-701e-45c6-ad4f-7d2a9e6097b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e9cfd-322a-421f-b23b-51b442b296d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f3420f-b350-42bd-aa8a-43d69e6b06c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d70e7ab-a21c-4dea-9ff1-0240d0586a2e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45021c52-194d-4303-8194-aec07b132b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425491c5-297a-4f92-9576-c381a983687f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709399a0-6c7e-4808-9a29-f97478740741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d57970-bc3b-43ee-8ab7-852aa7377c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945cba2b-7ec2-4e00-b3d7-1c9ddcda575a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6d3172-d62a-40c3-8010-cb6732aed8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "138ab804-30ea-4d0f-846b-c3605bf7e533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609960d7-a2e9-41ba-91b0-f9f0a2d44e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76734e5-a573-4278-9833-35e176d2ddb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27a76e4-5232-4e8a-ba9f-77e75a75e171",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b130a9-3095-4b07-bf6a-43eca14a7a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160c2cf5-9f73-4f0f-b230-867352e66bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc7ffb7-3398-47ea-9449-dac183835643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23704f35-dc32-49bb-9330-12ac0e9bef60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc63914-877c-4372-b035-846ae68e358f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3ec04b-22d1-4f89-938c-0d1e7aa2ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2522804-c6a9-4cd8-9015-08e5fc912524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4460c349-fc67-484c-8d2e-39be02f033bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f741ead7-719b-40c8-a4b1-22635ad91487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28240588-9ef3-46e7-8d53-c8a89fea1e99",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fc7d56-d442-4d4f-a456-3f8fc768db38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a746cd-2352-4a54-9548-dea158ac4e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed79669-961b-489f-97d6-30df1475de82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f9df1b-5334-4a00-946d-e56d3bbcd773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309ffc1a-2d3b-47ee-85e4-62192a64e486",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ea1480-b590-482b-85a9-cf530a90d364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b49b49-0412-453d-b890-b18322556ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aa48d9-aabe-4bae-82b9-a32079f846f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c10afa-4523-4ecd-a174-fb262240c315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d468d-bff8-4717-bfe4-df0be9d6bab0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cffc672-3b8e-491d-974e-bfaf21b7fb09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81aec02d-6124-463d-b1ec-8c4942c5a77c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88125435-5407-4b0b-91bd-a6232e271a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d21abf-7f85-474a-8313-7ac93eaa765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c8f38a-aae1-4c40-8e43-8d6bf119eef2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf4dbba-9766-42b7-9e68-910d926ea58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1467b2-039d-4d96-aaf4-ed32365635d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b789d90-c825-4a3a-84ef-f63dac9ebfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8783c01f-8e39-4408-be59-c8ef463f9bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab17609-32f1-4896-a6c8-6979d5cd06ce",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a5719a-937e-424e-b4d2-012130a90851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0429ec6e-e510-42f5-bacb-fc2f0c199dbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c101100-4659-4802-9e62-1349329441a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1480b655-776f-4d1e-be12-274cd824c1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dbb05a-33fa-42a2-9b22-c62a2c10c5ea",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634d7845-8dbf-4eaf-b935-d9b00cefeb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0feabe-33f7-4109-99a2-976c7d1e67ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacf1d35-3ea0-419e-b949-ec146f290249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728a80d5-06c3-4b83-b5f0-c66f409daa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74348c58-2db6-4d25-badb-c42ba5ef6e42",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb44f90f-30d0-4c33-93a6-9ff0cabe71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5cc2f3-b06f-49bf-9918-64ca6aa619db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e912d3-ad45-4bf1-b5b6-3aaa6b768460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbe1c10-089a-436c-81df-dac3c921f24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7538c083-fad0-46fe-9ed2-16f8271005b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30b221d-61d1-404c-8b46-f03935673c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc87ce8-379f-4d56-abef-edc63ade116f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7df3648-31b0-4a1c-80af-cb69abb6b80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba5ff17-4eb1-4512-a1d4-f5a8cd273c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e28162-4046-4237-b48a-881a882bfac7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc07c916-1d8a-4cd2-ae56-d24fcf535697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28409a0b-34db-4ecb-9976-e37fde9dcebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d46e9d-663b-4cd6-91c4-a4e12dd01983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d30d28f-0e76-4d65-a43c-03b69153fab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634f3746-a0a0-4f40-beac-ceb88669a88d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd01bb3-1833-4294-b8a3-897af09399da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df48f640-3868-4187-a985-7d71db2565bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1425d7c-3d94-4e97-ace8-67f03f90cb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edc4c86-9758-4122-85c5-dec3d7188443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1027408-c76f-43e8-8b62-2e83d3a50c20",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0c0880-e2ad-4800-bede-d200604b22fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b77519-1c18-4b42-95c8-cef6b434e2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d38b95-2c8c-4817-8724-865110b7c14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca6e6d5-2e11-43ae-9343-f2bae736ad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7134dd04-e369-4f38-85f8-aa4a3bd6ff5c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7e14ef-1365-4666-b261-f7677ab3b0e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9865a113-6da1-4fa2-9375-02d21acb3c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c711d51-e52a-40e4-a1b2-e0636009195e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e399362b-abca-4ec3-b97d-a3875cdba218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c774f1-507c-4832-b7f4-ce8833feeaed",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18a6030-475d-416c-a837-d021b64167cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd027133-bcfa-4aba-9f4e-9e04caa7d78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca0c3b5-1e09-43dd-9527-28db52edd6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280dd5a9-0152-46c3-9f6c-fac1ba9b0a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5646400-7738-4274-84c1-2586aa6822aa",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc61032-151d-4bbd-b3bf-a836e87971e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2554d472-6fdf-4b8f-90ec-6a54e6ff14c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b45b66-3169-42f2-9f91-283a8341cd4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e16bb7-cdd8-42dd-abe9-5c9524ed0670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d51f23-0c89-48c0-b453-d2f386720fbe",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900e8229-33a9-496e-8c6c-7172fbf63fd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4af2c149-fd29-4bb9-bcc8-7926af2a79a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c23f4f-8d6a-4864-ae2f-1dd8d7dfd456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb070da-2eb5-491a-98d3-7f2e7c920fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69ebc1a-9424-4171-8fe8-d2f009f5a068",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8491a0f6-c0b8-44cb-9174-94b9944d22fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c77dcea-7fda-449e-8674-4e78d23a61c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aebc91f-d116-4017-ac94-3faa98c09eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73bec50-544b-4998-a745-31419be600be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ec34b2-24f1-4b09-9072-1cb97ef6852e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418a5b30-ab27-4d5c-944b-72a0e599c82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b04728e9-9ce4-4d8d-b6ca-fc2518e48962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0800b09f-8029-4936-a9e2-c8f2c556de03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d5db89-a137-47b2-9da6-bd73467f8863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12e65e5-1f35-4383-8b23-fd80212416c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2fb325-7948-4dd5-92c2-87d7ff92d6bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e41eab99-b37f-4c2a-8dc5-42f50d5de3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc167207-57b3-4937-845c-953f8db2b3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cda2f0-0eac-4e3b-8587-098f33b54783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287070c6-0054-4a3f-bb55-7255d07a8818",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e14776-266f-4c5f-ac1d-6ea0a9978d5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab249647-f353-496a-8c1c-39e141165059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa03464-daa0-4c8c-a3c7-b0551e69b212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf1dfe9-ae58-4161-a58e-e2a0c51a9e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf53dca5-ca92-4d20-a5c1-fd1a1f17f6fb",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad11fc00-309b-4c77-9f19-042dc15eb61f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b69c26-f9a5-4eff-bbb2-1ad8b6d16dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a9226e-df72-46f6-9e05-8a09cd2f2106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a76967-f80a-4671-966c-5a198ff9a679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692030ed-b46e-4c22-9127-ade8fd5ecce5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadb8063-48e7-4a00-9602-709d3ef81d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf891d9e-cec6-44f0-be6f-f04a6330e95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c615c4-eae8-4c32-9c45-8666a450c463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1c34d8-1b86-443d-89ba-a929540699d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f5a5a3-8db5-4647-ae32-0f77b4e981a3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622c2c76-0b37-4158-ab28-3499a15a0b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72082948-af15-4960-9c8c-90d2f4739ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa1949e-5d24-4766-8401-24e1973f59c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf21b62-73b7-49dd-8813-496e76fc8f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c39c173-f06a-42a9-8994-8c163615b215",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41417ee-a414-4c45-85e6-529a9f71cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49177376-5187-456c-9ecb-40f60dfcd8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75781421-bae5-45a4-8426-af6847caf192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1962ddda-faf5-4717-a023-c014ef49fae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b61cc5-3e65-4401-9bda-3e3e8883ff97",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf7f19e-8be7-4fd0-9137-f6986b4fcd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac90cd7-1cb8-494e-befa-c47dc6519965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec3095b4-e0ac-49ae-a02b-5fbbbdf2d653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5137a91f-ecd3-4a6a-a982-de62a348dcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8a728d-c088-464c-9e80-5d2bd25711b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b2640a-b6c7-4bc4-9960-f730e1494df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da4fc06-5297-4b70-b754-8ffd6b1c2f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ee328-b973-41d3-ac87-93a8350cf21b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f045e1-bc21-4570-abc1-d3c2f82e29c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b974fbb-d39d-4893-aa4b-79d0b1c2d0b3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ae47fc-0a69-4f43-bb99-eff6fa60125c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5094e2-b094-4893-85da-6031d31cb0cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5acb99a-01be-4f74-8312-fde50e78e330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911207ba-d766-42c3-8edc-d619b4ac3b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49257ad1-fbd5-4cff-9c2b-ae0817ec3ac8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8f7a28-2d25-4c12-9393-76a52f3fc1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a361a8-9e40-4e34-894a-7f29e3480d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80da4c60-c109-4828-82a8-21e4c4fa4b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69b219c-722d-455b-9814-dbb38052a7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba9c107-2abd-464d-831f-3fe68ff4a6a6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219cb4be-efe6-426d-9872-c00ac796d145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae5fc395-b5c4-4b0d-9366-5d393dab29f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fd2631-5ade-4330-8c5e-6fef60623bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dbec3e-d430-4a22-9cfa-f6472fb691e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2ff95e-56ad-4b9e-bdfb-a06533f4a23f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690d785f-a3c4-4c4e-8a56-2c2ff055d608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb33b1b3-5b01-407b-b037-1c23ea84b4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e56053-b0ec-47de-bcd1-6bb3322347ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab51aaa-d274-4e3f-9790-e40bb728470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c167c6d5-4f01-4176-8840-884b9cb99eb2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03dae87b-08f7-4518-8d27-d0e000cb50b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ad7678-787c-4501-b42c-d9bae3611297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1e3270-48d6-4bae-bf9d-5e6d1c083c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c3b38b-6adc-4e5a-9825-88542c380f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c46273-8c21-4ce6-9c3a-ac80c3982dcb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375358b3-2172-460f-b50a-13f3c13c1e50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5eff06-14e1-4ce1-b236-357e151bfefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd17db2b-042b-4d29-9d07-bdd1f86af3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cf49d55-7ca9-4cf6-8939-7bc0631ad673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94aeffc-4001-41d6-b9c3-c0e2b5da5ad2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be772d7-c6ea-4969-b433-608c07e698b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1edf317-46d6-4aef-b2e9-68c8e9f83f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b975e1-47d2-4424-9af5-6adb463d9387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ed8c19-9107-4755-86d1-c47626c3aeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0862a92-c120-4662-9b13-8ce9721082e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81044062-9535-4828-9eb6-ef77bb9691b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db750bfc-c5ad-4a4e-80bd-f1d2c1cf802d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d825e26e-d446-4ff7-8329-33e9a7e54f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf438ce5-09c2-4d28-8c5c-78228b751d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f3c055-3822-42f4-a16d-9d5d742d12ab",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4653e5e-8fde-4108-889f-230462973b7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac449ae-ee39-4e97-8bad-11813d8e418c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f060645f-6ceb-4737-91c0-be03790de0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1810fd01-976d-4f2b-ae8f-5a90a6cf5e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6da716-deca-49ed-b0b7-b48c1401ef7d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b2c97d-ebd7-4c02-b448-60c966b89816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ee5265-70de-43de-a05b-00dacd1f479f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2cfdc6-8cd8-4fc6-9db3-85e065d3cb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fbae805-6af9-4459-b8d7-86bfb7345587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370e423f-95f1-4d32-957d-453a9b54a7f5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "562757a5-0c36-4d45-9dc7-81d736cdb325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11490221-0ba1-4f33-a8a4-ef32081d1f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168a3d8-5d84-4766-a8f0-26beef43a1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c378a8aa-d654-4a31-bbab-2d631be87d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0a0dee-f196-41dc-831b-58ed8d78c1a0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50765c3a-53f8-4240-b5e1-3e778e956a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9567cc4f-6edc-4aea-8455-02a5d0c7a052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95683d26-c81b-42a5-a89c-5a3ca18bb2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166258a2-1d2c-4da0-b775-c50c1cd95241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2013e56-5cf8-466e-81fe-435b7ac3c4b4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05919d2-55eb-4053-9a28-4fb001c9c317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861ef7e5-705d-45c4-b81d-b8720eed0f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036da5b6-fecf-4d1b-a250-0f9407113f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01520c02-25de-43d3-a27d-c4ba0ef7e641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71552f18-f381-4d50-9f37-b702705c1c32",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f1e6a9-4aa9-4191-beab-fd54dd991d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc82f2f-50c7-479a-a99b-a86655c2e48e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3530ca4f-5d03-4a4d-bc65-2291766f792c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea96de5-e6f6-4738-be67-8ecae4d24cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaed49ab-63ef-470c-b7ac-cf5b88380421",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249b341a-0315-4aef-b3e4-61cecf078e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f2c4c7-f62a-44ba-bf66-043b066c22dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceac52fd-555f-406e-85f2-9ae223aa97e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f71e32-7698-4296-b405-24fa3c88638b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368401a4-7010-47c6-bc37-6043c17071d9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b76a236-0634-4b46-b36b-e200d2874e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b973546-9350-47d9-91b8-51f8d9ffae02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f927200c-f2c7-45cb-9e8c-c556650727e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360abac5-9816-40b6-90eb-76a23227a1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c900999a-7bfa-4df0-ab1a-349e58b073e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde80e1a-cc56-4622-aa12-78f10a28994f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1adbc4-2e56-4ac6-926f-55b0a18ecb99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c265347-6667-4c49-ab30-546a9c4a0372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f4439e-d7ef-4bc3-a994-cf5d440a34f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0320045-dfb3-4616-bbfe-2f17f33613fa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c77190-9de1-4547-b421-19e5a741cd2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0276c4c6-53f0-42f2-a37a-87dac111f64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067651cd-987c-4fdd-8f28-e1197020ba9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebdbb06-6803-49b0-b2e3-40c1d08a6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dc8c9f-34e3-477f-9c5f-26f6e9f75de9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c858b36-c242-4c6a-be92-47083ccf5019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3251b6a-6d3b-407e-a6e3-223e0d25be35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b28674-0ab5-4451-ae66-78889dcc3eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb360a6-c7be-4e3f-b1d2-b4e3abe9cb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d777f7b6-3a47-4d5c-818d-ca52b7494e63",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dbca04-dfe4-4404-95a1-0fdcd1500312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e198cfc0-b58b-4bcf-a9ef-74583138e95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead65def-1bb8-4ced-8fe8-67c3c12246df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b0a2a6-1768-48ae-ace1-ea022db9eb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16344337-1e3b-4305-a41a-c11f28b0f2a0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94739bbd-51e5-4e59-ba9c-2314fb4bec77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4237d2f-58b7-47ef-a97d-97112eeca1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d590b1-7e32-425f-abdd-1aadcb136842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde13a37-562e-4f2e-be15-163080f39104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6386defb-7e07-4163-8855-14e654e6dc36",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28a98c4-5890-4875-8602-64d690cdd3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f021204-9efb-4506-8be7-bb2652e8fdf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f030704-dc9e-4d5a-8c37-7220bedaf67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a60f529-fcc2-416a-ab9c-60830365fddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2e571a-7419-40eb-af67-89be2f500e10",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d299256-282c-437d-bec3-30ab30437641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b87e934-4cc6-4542-8b0b-5822bf0062fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af69034-2657-40a0-b6a4-227afa07239e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bcd87c9-5961-46b9-8251-960eea6e6e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a34e496-a957-4815-8509-b6de462be07c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2370f1-2cd7-41b9-9fcb-21e98d91cde3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8fbfcd8-3e9a-45e3-8a7e-0f23aa210ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6e112d-0d05-42e3-a9de-23761c3ea4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67abe33-3316-4826-9618-603ec220afec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda93974-2c2b-45ec-933e-4a138f6127a8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50caaca-2e11-46cd-8289-1f24e854d0c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574ef81f-2e42-4ff7-b41b-0e7fa030fe86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf8645a-c70d-4d99-b6d8-b7f0f7a98931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5b75ed-06c7-4e34-a5af-8c9f4fbf91d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a8723f-5a0a-4104-b6f1-2c8c4f51d435",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dded48-ea4e-47e6-a9ac-195b0874533b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00f879a-9fea-42ef-90db-34458efc30af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0be024-d12f-4a78-93d8-b87a4510c634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ada5e90-f31a-401c-8d25-6d59da29f62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf64f1d-9785-4a57-bff4-b18e81c685be",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96923b46-f454-4e15-a9e0-d1c16f079bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f503acb-7a5c-4983-9016-1152548bac18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737e3178-2516-4548-9044-9093a8f14695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99460f68-75f2-488f-ac74-ea4bce407fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6920925-a2dc-4f62-9ec3-e1691c50b8f0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4237f732-4f88-427a-addb-5335494b5940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9eb58c1d-0bab-460c-9cef-3d9fc4dcb79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b632edb-ec4f-4995-a050-17beeb764901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b393e4-d89d-4245-b1db-1a00ea7bbd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b0134c-85ba-4886-93c4-1f0e23bdf7d4",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba5fc84-456e-4991-b84f-ec2f8eb2c598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "043aeebc-ae2d-47e0-b639-69d81b93e1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "726eb790-8f25-422a-b73f-e107f5b19862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20448559-b92c-4597-b38b-cf0732ca796d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524442b7-32b3-4379-b116-cd21aa6f3d71",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170c58ed-3b42-47dd-a417-1ad43cd3696c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f82e74-c18f-4303-872e-017d0c653b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edc7721-7960-40a5-ac92-1009ea0e5525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8defcc47-e58a-4193-9e92-2175709740e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a0fa32-4a93-4580-bfd4-ab0066ddb80a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee5c15f-8c3e-40a6-a95e-8f1b9009786c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4747acb2-992c-4b12-8baf-a210a804cd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71af95b3-c72b-4be2-9d60-ae5131c349bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9609d21-981b-4c3e-a59e-232fcddfa4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33867e1d-1c69-4600-82e4-4948a6641db6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab47ab7-72d6-4c58-aec1-d0c564f835f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcbf5943-cbb9-4f0b-81c6-2a3c18f6f46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f781201d-66ef-447c-8558-cb2feb6f8703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777f8d21-6ff6-4b98-977d-7847e8582740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0e0090-b974-4643-a635-b2fcf8873bfb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a958051-4773-4042-b1a6-423396dc2800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701943ab-4f21-48c9-8faf-74262c668df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb49287-3bfb-468f-89ba-3b1bbbb837c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7e6575-1f41-47c4-9def-16e3e839ed50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8adeed-7cfb-4e5d-adab-20c800ebf53e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fad675-7ebe-4495-a881-f214e9177cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e9a768b-bd4f-4051-af40-92f42ceb0970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f53f24-5b1b-4fc6-81fe-f558a06bdaee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e742be2-cf44-464e-b970-0748d8116afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8acee3-7db4-4786-a08c-eaecc4079c28",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db169e8d-3d6d-4407-a338-fe668e39b06d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9856307b-1a91-4502-9929-4914b0d4e0c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09db063-4b44-4856-8781-e8b1c1ae697a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da89da22-6746-47af-acc4-4ea5f0c05c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b1d47e-f1c2-43e1-9fd5-cac81ff7161a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa5c3bb-d3f8-4c27-92b8-2c4de3331aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0d619a-d23d-49c8-8a4d-4d7c2ae2f23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4383c945-b822-44cb-b14d-53be4e4faa6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1c81ec-d686-4261-9a92-9fec12545d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e026ff7b-285e-4ec1-8263-563776c2d064",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa7a9b2-8602-4b4f-a59e-be0a8f87f034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "939b82f6-51d6-46b2-8018-e0dece9a8fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f78a6b-3a05-436a-afed-fcf86b37537c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce8debe-34cc-4e4b-afd5-07d1bd798f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7918baeb-4a72-4a86-b2d2-e6b6e81c4199",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e024e9a5-7557-4711-bcbd-01e215cf6d58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93dca99f-429b-4e5b-afc2-87c941dc0089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad1b40-1bf7-4c88-968a-d93edd6ac300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb64491-7b60-462c-afbc-b60c7df0e48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802f1a94-0969-4466-9833-6381a39ff6fc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab5eeec-bd92-4b87-a7d1-75782d0c3688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414500e3-9ab5-4dbd-9077-9aab08443db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b090f44a-9f93-49d6-ba4d-15a1777d0d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a87f49-dac2-457a-8a01-9a414cda6eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298d3031-42f7-4904-828d-82e710fb52cf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e5ceb0-ebfc-45c4-837a-71cb25f69947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd400af-aaa0-4989-87f1-2a493e4222f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4136811-af7c-4e4e-ba70-382f19551de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07bddf50-39cc-47ad-94ed-30d27e7be081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1763b08-4af4-4239-a62c-c8aa0974c6c5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee4b3d4-2d93-4414-8d6a-cb05c0af1f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c33311-2d3c-491c-a359-9ec5e3c9d83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f076b592-05c3-458e-a8aa-1f5302ddd677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61ca363-1f2e-45bd-ad34-f9e8b9172748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf360fb-c26f-4eaa-8992-65961a274bf4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f973abc1-5355-43ed-9003-bf87faccbb16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788e8562-46f1-4899-8dd9-4be52e6eed29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d866f38-6132-4f0a-9a2a-39f0c96e7853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34725aa-47d3-4777-b51d-b0d59daa808e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b547f9f5-a5b0-472c-a5d4-bbdb7c01bf85",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e17135-a94a-4b92-ae80-fd9fec1515d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0adfc6a-4b3b-40af-be84-29b917de027d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1ecca3-a42c-4937-ab1f-8a45c0506099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06557e3a-2d3f-4055-9f6f-4ce922102c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337534cb-3535-4985-97ee-6dbe6b8fa6c3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a85b0d6-7a0e-4904-8cdc-fb6cb8b64ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da96083d-471d-46fa-9c88-1d9b8191b01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c6bf0-edec-4730-bfdd-4102bae41ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb94677-0502-499b-ae7c-a2c1a92e4544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43dd6ed-111a-4039-b63e-a2443d539977",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfed7d3f-34e5-4f3c-8677-80c07e2b1d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdfcc721-75ab-44a9-93aa-414918a77248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f969dab4-f6f0-4e42-82b3-4eaa3c884108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83872833-ef19-4c77-bdb7-055653210148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e05e7b-3256-4ca9-8a34-e5694b840bc2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e7e984-ebcb-4cf3-b43f-5a2913b8dfb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a04aa8d7-6c6e-40d3-9ee1-59298cddf283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b3ad97-9553-46b4-a594-1a3aa07e8e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72692764-5eda-4421-9a02-de09877b3b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef6fb5a-9c85-438f-a433-b5900f9d3b01",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4fba99-49bd-4417-8594-9ee60793e24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9bd29c-7ee3-419d-907d-0114221426c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec27dc25-6d0a-486b-9e04-ca2b6112b55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7043ad16-f855-4de9-8bcb-6af0ae8f0ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16420fdc-1dfd-4548-a1c6-e9b34f772c29",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9643f61-dbe5-4362-8132-a1286720e149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9ff816-2793-4f65-b073-cd85c9d1a46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecdfc77-e7db-4356-a72f-dd4c62119f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0082f0fe-3137-4fcc-ac90-c576a46f10fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8515dcf-cb32-4400-87f4-d7bec058e35e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bf5545-db7d-4331-a16c-1f59e36d735f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae8a8d6-c5fe-4c4e-8ed8-fbbb53e87128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a129595-6b29-4daa-a013-23d140874246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257496d9-f2b1-4500-988b-54762b94d07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e454b1-6c0c-43a6-bf23-3df461e0f914",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e3e3e8-5038-4653-a4d6-ca7801f1826e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d54dd53-e81e-43c2-9bb8-c7ff414aed5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0050dc04-6576-4106-b8cb-629b91b959c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377f5af9-38c1-4162-8207-19ee9e37acac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015e24d1-ae45-4117-9280-8eddbcf7ca8d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8499b315-e44c-48a0-bf5a-ed84069ad290",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b12648ac-3938-4ddd-8cf5-bdb56053d077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d632c819-e117-41fb-a0b8-e1c704ac99f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a18fd289-e206-4157-9681-c126bc42c12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5610d50-3b87-4ba0-a486-d0fda4d3ed09",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abbd429-b93b-4b20-b25e-a35a72b77345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d861fb-d6c2-451e-9c3a-01ba1bf5d976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30829359-8c7d-46c7-8073-5399ec012810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8e37ea-34c4-4f92-9efd-96f83385282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c6906-fee3-41d5-a5c9-412295e67d9a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59423168-4f35-4715-ba7a-5a1273ea207f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a691aa-dbf5-4aa5-a44f-7210800b7e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da171f7f-0b99-429d-ad7b-c13e915f47d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31501a73-8c6b-4b27-8d68-ca9bb78fe2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e23ed4-180f-4cd7-9f86-d95ba823b97c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3afd96-325d-401a-be0d-e80a9d670639",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "848581e8-f581-4d21-894f-5e49469d1585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd84292-f955-46a4-8648-957af2e52642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6740fb-7f1b-4c99-9225-7713224caaf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9af6f4c-01e7-4e3a-a562-3c5fb8617177",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b59301d-a3bc-4f78-9a34-5f57f85e31d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d00b15-8da5-4547-9204-71b32fb4099c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7856e3bc-ec24-4986-aa1b-eee0e1ccea2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555a511f-e623-4a38-b62b-22f85dbc0259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e925094e-14dc-4b66-93d4-c170a52ff855",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75d6f73-70b1-41ea-a7c1-1a69f34b8b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c924aa3c-2400-46c6-ae0e-498a8416cfa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c127b0d0-a7c8-47b2-b33b-94dd2fa2721f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc999cd6-7659-4446-8040-94f5abaf6ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12368db2-cc2d-45da-8e44-e5fc13ad04ee",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e6513b-82c1-4246-a5f7-decfc31ab27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab9ac4c4-86ce-4d9e-8ff7-c1ad2a98d1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66bfb62-37be-427b-bc36-02421dffbee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36ec464-7d7b-45ce-8fdc-d57f278d7f4b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fc87961-231e-4c39-80c7-4549d4d470e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f54bf1cb-c7e1-456d-b3f5-e64349c2ee6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab1c06ab-0706-41a0-b3d4-77f999bdc918",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bcd8a34-aa42-43d4-bbf7-b4eed3041037"
                    }
                  }
                ]
              },
              {
                "id": "fc76a314-a471-4430-8fef-2069545ec961",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75cdb530-c715-496d-903c-5c5a7b2c1c27",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50525320-2a94-4cea-b237-3e0dcb3e441d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f94123b7-4d6a-44a7-891d-322694c7e374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4b99e6-90d8-455e-8cff-496dfa7f4699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9d36161-e421-4bb1-a726-4092cb677f60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e01f24c-94aa-4d90-bd5b-4f93b1c0d9b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9edf2c52-3182-46e7-bf6f-1a1bfb3523be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52a1d2ef-d346-4291-9aca-ed7e5146c776",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fa30da2-90d4-40b0-87c7-33022f4c9de4"
                    }
                  }
                ]
              },
              {
                "id": "b604ebc8-145e-478f-a5e7-96e072095b31",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b39e65c7-8f25-4935-94d3-b1d38de01e29",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d78e0be-5480-4a00-8302-a46f2147132e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7a4f2acd-ac6f-439b-bdea-34a7222c30dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307622dd-7e3d-44fb-bb1f-c00660431b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4dcaba8-dd29-4afa-ac6f-aac0be39dc2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ebf0d698-b0f0-43b0-bd97-661d9ec46af7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd631e5a-39cf-4939-a52c-b067b5f2b7f4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "033d03e6-0183-424a-b993-808fa9ca078d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "78aa239b-a38e-4c53-b32c-3a80a84c0963"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5dba0cb-431e-4772-b9b5-5a23c53ceac9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a62a6f-426f-416a-a8ee-abe14cf7cc61"
                    }
                  }
                ]
              },
              {
                "id": "9a92bb56-f1af-42a5-b13c-ac4bc1565302",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db0d344c-9cd6-4fce-b614-f7ea8da28cc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7dc8e4a1-b6ae-41fe-acdf-c42fa3ca892c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bb4a7cd-b87d-405b-8991-4d41a07d03b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afcdb3f4-ade0-4a8d-affb-97869de4ea12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecf463cc-a971-41b9-bea2-7fd88696c8c7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9c11f8fe-d7cd-4111-89d1-b701ed3740f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dade7c18-c350-4170-89cf-93e10be5f29e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "249a535d-be00-472d-b1b9-3bdf82de405e"
            }
          }
        ]
      },
      {
        "id": "609d75b4-2be1-4f61-b8ef-a8c30130d50e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1e0a7e46-08ee-421b-a219-548b7a54cbf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d48e7ae-68dd-47f1-abf2-7df78da776c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4f5cfa6-2043-40bf-a58e-38554a882f8f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601b09f8-acaa-4f84-91c8-408d641b4342",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "597ef925-ffb2-4ac7-a0d3-cd61543f0abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "977a6dab-6977-4333-84e0-391fbebe459d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86a990dd-91f9-45b3-a4a4-42a4d6703228"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a02db80-e01b-4d3d-a4af-c314ff37453b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "524c9f07-70cb-4647-ac4f-c4b71ee6730b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c5d062e-769e-4b2f-acce-6b8b4de04e63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52a5ce60-aa5e-4dea-b30b-2fd2c6d3f36f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53de2688-b309-4eba-a711-d5f4625bff60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "585b692f-1d52-42c6-9f90-2c25fe857166"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee3e6414-74c7-4ffe-8b84-936bef7c71b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f46dc539-3043-48fd-9dea-419d8d375ae2"
            }
          }
        ]
      },
      {
        "id": "db4908c7-182f-499c-9740-f456e5fc9386",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "840a8702-4d38-442b-af79-5f84329d9ae2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1df91a23-3d23-4817-a24f-9bdef8d227c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c79b4ffa-a0fd-440b-b5bc-0c368f5afa73",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e257243a-4908-4333-b4cc-0c0b92fdd206",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e23a8920-1eab-41ca-917e-67f8d4d9f1b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305a75c7-84e5-4eb0-ac1e-010ffa2bbd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31b9599f-6f9c-4551-9de7-8c6dcb64ce85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "896aaf17-3487-4e7f-a7e3-a8e208b62a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6effb4f-266e-43a6-a8f5-9a42202b3a23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ffe37df-aa8c-4605-84e6-13219ce1f03e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25d10188-7523-4d72-9c13-41684164554e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "681fb8fb-f1b1-4d7b-8b4e-130c29fd735f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "659bed74-7803-40b4-931d-f426821b5b95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8dd9fce-61af-4284-ba80-a906901dfd82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96e3fc67-cb67-44f5-a260-8149e5aaab99"
            }
          }
        ]
      },
      {
        "id": "dc08e6a8-cc25-45a9-88ef-d248d906e545",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "664a868c-f189-4047-a1ad-0cc3bd41a0d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af106dee-6257-41af-9223-ebedd7d2923c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44e09834-7b25-4c14-8ae1-36adfb5580e4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6b0c59-6c82-464f-ab41-7f7768341d54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c5be266-6782-4d6c-b766-a6915c1e9171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e949fd44-1eb0-430a-9dba-b950d028b24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "566de575-d218-4002-a90d-a5525dd4b13d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "570dd03b-af5a-402c-be04-15badc6bc571",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b69bf05-1bd3-4030-8540-6ddfd2a0c373"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cfcc893-519e-48fc-ad31-10f6eca5bb85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53356a19-9325-46fd-9110-9dd75c7885fb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b03eb53f-3838-4ee8-b88f-788a1f6f0694",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "52eab2f7-33cd-49b3-a7c5-24ddf7f780ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2ae6e31-8762-4a7c-bce9-bde66cb61c01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "899a5d5c-6d86-49ac-bac0-66f57fd78e0f"
            }
          }
        ]
      },
      {
        "id": "8787fc63-aad5-4d73-90c1-6f2186429617",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72de8d35-7c18-48a4-8eb9-d0b4af0b8c84",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe5f25e6-451a-4de2-ba34-c90f5828f907",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d427282f-e66b-4b94-8319-be3e614d10a7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49fd710b-fae6-4694-a1d8-96e15cf5026b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e74b662e-e9ad-4dee-81df-a8bf8e385d3a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.292253521126758,
      "responseMin": 7,
      "responseMax": 249,
      "responseSd": 20.743295451524773,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691800233160,
      "completed": 1691800249074
    },
    "executions": [
      {
        "id": "446e7754-c521-4b14-9f1b-bd17b61a55be",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9bd919bc-0054-4cd8-b056-997dd826d516",
          "httpRequestId": "23bd7c50-7606-4ae2-9db8-e80ad02d6f77"
        },
        "item": {
          "id": "446e7754-c521-4b14-9f1b-bd17b61a55be",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e0511990-1c2a-4bb8-a570-e84086a6346a",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "1cbcfb5e-e257-4eed-a7c1-e8228e48830d",
        "cursor": {
          "ref": "416a6693-c3ba-4c15-807d-60a163d2f3de",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c6ab7500-eba5-4b5d-90ef-099e46276822"
        },
        "item": {
          "id": "1cbcfb5e-e257-4eed-a7c1-e8228e48830d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "097f70cf-ad56-447b-abe9-433a5fe583c5",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "9c6097dc-74c4-4386-99bd-e074914f1aa1",
        "cursor": {
          "ref": "ed85ef95-e3b2-4d2b-818e-5a025a725e97",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6d277c58-efa8-439f-ab86-b8add7efa0e5"
        },
        "item": {
          "id": "9c6097dc-74c4-4386-99bd-e074914f1aa1",
          "name": "did_json"
        },
        "response": {
          "id": "33c16667-214d-4b4f-b354-0a0b7d2b89dc",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e75fa5f-4ac1-4890-9cd8-10416055832a",
        "cursor": {
          "ref": "0b873c69-7d56-4343-bddb-b88daabaa600",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eaf958f3-b5e4-4175-887b-edcfd78ba9e9"
        },
        "item": {
          "id": "6e75fa5f-4ac1-4890-9cd8-10416055832a",
          "name": "did:invalid"
        },
        "response": {
          "id": "62ea07a4-63c2-4747-bcc8-19f02347b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e75fa5f-4ac1-4890-9cd8-10416055832a",
        "cursor": {
          "ref": "0b873c69-7d56-4343-bddb-b88daabaa600",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eaf958f3-b5e4-4175-887b-edcfd78ba9e9"
        },
        "item": {
          "id": "6e75fa5f-4ac1-4890-9cd8-10416055832a",
          "name": "did:invalid"
        },
        "response": {
          "id": "62ea07a4-63c2-4747-bcc8-19f02347b2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5cd4a4-1ff4-4d2d-83c7-55dca2c7cbdc",
        "cursor": {
          "ref": "dc988c6e-04c8-4e41-9dd2-833c773ead6b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3a3026aa-0e4c-49a4-b1d1-6d9e74b3c9ac"
        },
        "item": {
          "id": "8c5cd4a4-1ff4-4d2d-83c7-55dca2c7cbdc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d1ebe6b1-5e26-4d83-8bb9-bf93834c0d3f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 88,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cee90bf-5225-4758-abe8-634dd4cb834c",
        "cursor": {
          "ref": "0a9c93e6-3e02-4a6d-8774-b08a6c5d74a2",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5ccd3bc1-bee6-444d-8716-1366fa8385a1"
        },
        "item": {
          "id": "8cee90bf-5225-4758-abe8-634dd4cb834c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "593cbd57-ee63-40fd-b02f-a6dc5649e0c3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fe9436-070c-451b-95d0-8f6ae3b82a32",
        "cursor": {
          "ref": "0ed4c35c-f12b-4fdc-a980-c9e443534600",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c31bb36f-bcb3-45a3-b201-aa9be78f1b16"
        },
        "item": {
          "id": "d6fe9436-070c-451b-95d0-8f6ae3b82a32",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca49260d-e85f-4ccb-a58c-d266e610dd60",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55ba240-b2ea-43ee-b0c1-1f34932bc763",
        "cursor": {
          "ref": "d70c7835-e5ef-49a8-895a-4c481d3131d2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "80a6fa3b-e35d-4e6b-9b69-e11d2b206f39"
        },
        "item": {
          "id": "a55ba240-b2ea-43ee-b0c1-1f34932bc763",
          "name": "identifiers"
        },
        "response": {
          "id": "b05973ae-c257-45c4-a9d0-74e76a51609b",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801378bf-3c90-4651-8dd8-7a26dca962b6",
        "cursor": {
          "ref": "25d90c4d-39d6-40c9-9776-564070ac4d1c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "448a83ed-8c42-4642-9408-779030333ad4"
        },
        "item": {
          "id": "801378bf-3c90-4651-8dd8-7a26dca962b6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a9191ef0-55bb-4912-8837-f2b89a6a9bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee8bf3c-0760-462a-93b0-57a5db213300",
        "cursor": {
          "ref": "d87ea2cf-f05c-460a-93e3-7db877b881de",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3bfc4df4-6f66-48f7-a232-4161d7c593c4"
        },
        "item": {
          "id": "eee8bf3c-0760-462a-93b0-57a5db213300",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b5794c72-5b75-49a1-b5ee-d341341fe929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10490532-3aee-4866-b61c-080c8c0643b4",
        "cursor": {
          "ref": "8c31ea4a-affd-4e66-a025-4500791a126f",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d64a83a9-6762-4ae4-99ab-b327d0159aa6"
        },
        "item": {
          "id": "10490532-3aee-4866-b61c-080c8c0643b4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b951cef0-9912-4e4f-ae0d-7bde6fcc1f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4b85e1-1fb8-4aea-b798-a40f3a92577c",
        "cursor": {
          "ref": "1766f45c-b2ca-4840-90dd-917a34d764b8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a2958a5e-f1dd-4263-9329-a2e5f2ec7132"
        },
        "item": {
          "id": "6a4b85e1-1fb8-4aea-b798-a40f3a92577c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b56583b9-bb09-4fd6-bce0-72d635afea3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ced6260-79db-49c1-acd8-a082662760b2",
        "cursor": {
          "ref": "6714b085-74cf-476a-8685-1fcd2bda47d1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4d07928f-e8fa-4dc9-80cd-009aa46a3ee8"
        },
        "item": {
          "id": "0ced6260-79db-49c1-acd8-a082662760b2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb977398-e04c-4882-b328-495906880ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc701ec-01d4-4463-b60c-e09f9b3c1910",
        "cursor": {
          "ref": "f450106e-9dc9-4434-b46c-b5a844d206a8",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "608c8682-1fcd-4ac8-b871-5edba0ce98dd"
        },
        "item": {
          "id": "2cc701ec-01d4-4463-b60c-e09f9b3c1910",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4ba0a475-abfd-4464-8c74-48b2f3ddfd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790d07da-d904-4463-889d-e7240c8bb1a9",
        "cursor": {
          "ref": "f6621268-a2b6-4dd6-9e14-f5036cae7966",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d5d5f126-915e-4122-8605-a6f429d42f2c"
        },
        "item": {
          "id": "790d07da-d904-4463-889d-e7240c8bb1a9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ec9e757c-5e2f-4853-8fc9-fe798f01a15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf7f67a-07ec-4ef9-898f-8d1f2680e3ae",
        "cursor": {
          "ref": "93e37689-4d85-4ce7-8812-2fdbad1e148a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "55fa48b6-1545-4710-9b70-2666cfa95e46"
        },
        "item": {
          "id": "8bf7f67a-07ec-4ef9-898f-8d1f2680e3ae",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7f6d7880-168a-4a05-967f-e0dde1351db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdece96-463b-4ab7-b59c-b10e83151876",
        "cursor": {
          "ref": "0989fac9-4de3-42c8-8381-2e79902f96a1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0ba0b544-5beb-4a0e-99f6-68581951036e"
        },
        "item": {
          "id": "9cdece96-463b-4ab7-b59c-b10e83151876",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "055c4fe4-f184-4514-9025-9acf4a792936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54acb6f6-b8ee-45fa-868c-c8c85c177032",
        "cursor": {
          "ref": "56cf62ac-4e53-437e-baf8-45ff0afc212f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9aee436-e8be-4831-a972-a6ed0f2009b6"
        },
        "item": {
          "id": "54acb6f6-b8ee-45fa-868c-c8c85c177032",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "40f6bac1-f72a-4aef-aa2f-c3b610d85462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9254c560-ecb2-4e68-ad4d-476b4df5e720",
        "cursor": {
          "ref": "f6b3837d-6735-445e-9d24-9fadd611165a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ca4a20a9-36df-4b9a-8a74-14b986ccda6d"
        },
        "item": {
          "id": "9254c560-ecb2-4e68-ad4d-476b4df5e720",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1d9612ce-4ec0-4485-8f34-822a395bb0c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b86262-82fc-47c7-ab38-81a974f77afc",
        "cursor": {
          "ref": "f840317e-8a90-415d-b7d8-c115f610969b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "34b7962a-6ff7-462e-91d4-cae7fbc83dde"
        },
        "item": {
          "id": "55b86262-82fc-47c7-ab38-81a974f77afc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cfbee88f-1e08-4efb-a80d-6c65068bd60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb180ee-8a4e-4a47-a7d2-afe9401f90d4",
        "cursor": {
          "ref": "862824cd-ad78-4fe6-8f12-901f6c7a8798",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "51a406f3-e685-4c53-be4d-a81588d27d75"
        },
        "item": {
          "id": "4cb180ee-8a4e-4a47-a7d2-afe9401f90d4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2b9f7a09-e287-41e4-8456-0322d797e32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c74ee66-82ee-4890-97f2-948da30f1242",
        "cursor": {
          "ref": "bf556f17-81f2-4213-b6d5-9d90dd17a75c",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c08c7516-c0aa-47c8-aefe-b8a119d6dd43"
        },
        "item": {
          "id": "1c74ee66-82ee-4890-97f2-948da30f1242",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "34239f9b-1af1-42f5-99bd-c8055bbebe80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170438bc-f4c8-402f-957a-24f0e34017b4",
        "cursor": {
          "ref": "e718d18e-95de-455c-816d-9e7572e4dd36",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "17bfc2a2-58ca-4790-8247-bf0e5256ab1a"
        },
        "item": {
          "id": "170438bc-f4c8-402f-957a-24f0e34017b4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "61b6d177-385a-4412-a3e5-3926fbb3f816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab48737-d2a3-4829-8051-bb47e6c8758d",
        "cursor": {
          "ref": "1a956a5d-9c1f-4dfe-a735-e2841fb01d15",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b25cd1bd-8017-4b03-8997-925f203faf7f"
        },
        "item": {
          "id": "9ab48737-d2a3-4829-8051-bb47e6c8758d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "61a59ccf-8855-4b61-8a02-f094ae6e955d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b2b6eb8-2a88-4ded-bf11-50d146430ce8",
        "cursor": {
          "ref": "8339bf34-d88c-4bd7-b06e-b6824d59684e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5df47b58-b6ca-4010-a67e-5d6d8bef77a7"
        },
        "item": {
          "id": "4b2b6eb8-2a88-4ded-bf11-50d146430ce8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3ce1580a-e1ec-471f-9ab3-ccf190e88486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525bd26d-d011-497c-baf0-8c22abb59e7a",
        "cursor": {
          "ref": "87698b82-96d0-4ae6-9658-f9da00a8a5ed",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "88af238b-5600-49d3-a783-2e5e50ab37d8"
        },
        "item": {
          "id": "525bd26d-d011-497c-baf0-8c22abb59e7a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "10aa05a4-9e22-484b-8928-9104dadcb025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfec38f-419b-4067-bdc6-7c0e5f243fce",
        "cursor": {
          "ref": "bb633a6b-dd6c-4091-bbbe-c7ad71501286",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "aad0ba35-11b0-4a75-a633-5ddc3513a2f0"
        },
        "item": {
          "id": "4dfec38f-419b-4067-bdc6-7c0e5f243fce",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9e7c7df2-49b4-48f1-a433-d77791547186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41a0926-0893-4d86-a137-c6cb2fd95ef3",
        "cursor": {
          "ref": "fc38ee55-5f15-4003-bf9f-2ac1a9aa08f4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2922be4b-9d14-438a-9b42-6e2069a13891"
        },
        "item": {
          "id": "e41a0926-0893-4d86-a137-c6cb2fd95ef3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8676dc00-2f21-442d-b140-6293813cd3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bab368e-d0c7-4044-b28c-2e884e36a045",
        "cursor": {
          "ref": "c6a212fd-5108-4e4e-af08-48c7a305fe34",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "febf0f46-f22f-4ded-8fa8-ce13e9ac0fac"
        },
        "item": {
          "id": "2bab368e-d0c7-4044-b28c-2e884e36a045",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fb54cb15-4b8c-47fe-b883-d2670131d828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d333b98-ba7f-4241-aaec-e9e53b91cc4a",
        "cursor": {
          "ref": "a50647ab-67c9-4448-afc5-ff53620e2828",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1752af8f-e52e-4b4f-9d2b-a2e3e324ea7f"
        },
        "item": {
          "id": "7d333b98-ba7f-4241-aaec-e9e53b91cc4a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "679edf91-a7a7-40be-af88-609050d5406a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b09a95-7c36-415f-b622-df9849e30daa",
        "cursor": {
          "ref": "ced9339a-1edf-4de8-a25e-345b9586fbc9",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "38d1788c-7dc5-4a30-b9f6-774bcaa15bb1"
        },
        "item": {
          "id": "29b09a95-7c36-415f-b622-df9849e30daa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a953a6e7-5bff-46cb-b5ef-15498a02ca56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4254eee5-b3d0-405d-8b36-48e401fb936d",
        "cursor": {
          "ref": "c7213f48-26c7-490f-bd78-4c4844cceae6",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "409a0c41-5e5a-4d65-a045-c37c6ee0183b"
        },
        "item": {
          "id": "4254eee5-b3d0-405d-8b36-48e401fb936d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f0ce7c8a-49bf-4840-8f77-c0e9a2379739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9e0dac-642a-417b-9acb-25c9435945b4",
        "cursor": {
          "ref": "82767d0c-9fb4-44df-b35d-22806445fd84",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7992566a-ef2a-42f6-b316-60bae3af2175"
        },
        "item": {
          "id": "1f9e0dac-642a-417b-9acb-25c9435945b4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df3b5aa8-7d6c-49e5-87ee-ae1744ddd2b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee397e9b-da78-4319-8cbd-4cf431424fd6",
        "cursor": {
          "ref": "12d9c6aa-200e-4dda-9a91-72347dd6e1d9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f32bfcf8-98f1-429f-bd36-7828b026403a"
        },
        "item": {
          "id": "ee397e9b-da78-4319-8cbd-4cf431424fd6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "491dcb19-148c-4a77-a56b-df45b6150961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c07f040-ae81-4b3d-a909-4af2c433bc02",
        "cursor": {
          "ref": "65b66b6c-101d-46a4-a87d-b6a679ffa5d0",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4dac1f3e-2c74-48ad-aee4-4a3565a39616"
        },
        "item": {
          "id": "1c07f040-ae81-4b3d-a909-4af2c433bc02",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "202d1d36-5b4a-4c70-9bfe-5f3817ee0115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd65800-c727-4824-ae42-cef9176cc10c",
        "cursor": {
          "ref": "e619e5b9-cf65-407a-8411-f121eb2ca155",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "add93708-81bc-420b-b949-efb9f68b3553"
        },
        "item": {
          "id": "3cd65800-c727-4824-ae42-cef9176cc10c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f5f92025-3d5c-4fc2-ae47-c2a18383d450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa262f2-641f-4254-b344-b9906bb7c338",
        "cursor": {
          "ref": "952c48a8-595e-4604-94fa-63cb63369d50",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "82b27baf-7d79-4c8c-81b8-ab277e37b545"
        },
        "item": {
          "id": "7fa262f2-641f-4254-b344-b9906bb7c338",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0bb6651a-a9a6-450d-a198-b7d443e1b544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffbe051-460d-4062-803f-ad64e4691d27",
        "cursor": {
          "ref": "00f2f562-4e65-495c-af19-264d7e1685ac",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5ece2d38-d8ef-43db-b4cc-d272b825b463"
        },
        "item": {
          "id": "7ffbe051-460d-4062-803f-ad64e4691d27",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3727089a-aec3-4231-b7ae-2bc0111c6911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5502914-6910-4dd8-abb9-5ad7f4471293",
        "cursor": {
          "ref": "c9ae48d2-e547-4088-8f5e-5721e0038dad",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "47eeff61-29a1-4c89-890d-01c9466fb109"
        },
        "item": {
          "id": "f5502914-6910-4dd8-abb9-5ad7f4471293",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "40c8c848-714d-461a-8cf5-62a85b1537b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacfe686-4101-4db7-a5af-ce93ff0b5505",
        "cursor": {
          "ref": "0c4d57c3-be7d-4be9-a7c6-0f3549e30b31",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a323009e-c660-46b0-a536-916790f05aca"
        },
        "item": {
          "id": "bacfe686-4101-4db7-a5af-ce93ff0b5505",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "94f0fb5c-c591-4292-a538-8506a02dbef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c0b984-544e-47f5-90c6-5e4f4bf53c9f",
        "cursor": {
          "ref": "7f90015d-0225-47d0-bbe2-8a77efd23000",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f141d877-0e30-465a-9979-40008768c4e8"
        },
        "item": {
          "id": "21c0b984-544e-47f5-90c6-5e4f4bf53c9f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "30a943fc-2fa0-4a46-b8ec-07f5d8c6eb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8e04bb-7ac3-4828-862e-0fead831384c",
        "cursor": {
          "ref": "384ba598-08f0-450c-b979-b609ea5c020b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "41abf7eb-8749-4164-b6f6-5e60935f2454"
        },
        "item": {
          "id": "1c8e04bb-7ac3-4828-862e-0fead831384c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c70497b0-f736-4660-b878-4ba726060078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19425ea-d14b-4bc5-a203-c1b494cc6ca8",
        "cursor": {
          "ref": "e94be6d3-c5f1-4793-a621-8d89277cc451",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2f946acf-e3f9-4727-9036-6ed034968185"
        },
        "item": {
          "id": "e19425ea-d14b-4bc5-a203-c1b494cc6ca8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "81379930-50e8-48f1-9173-b299caa6c002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabfd767-054a-4c7c-870b-4f9371e4983e",
        "cursor": {
          "ref": "fe990695-b8e4-4e2b-ad41-957669becb09",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9d63e15b-b5ef-49fe-bc8f-4ce69eaca769"
        },
        "item": {
          "id": "fabfd767-054a-4c7c-870b-4f9371e4983e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "42a89d3d-9cee-4d01-982a-d135de3d1755",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52087c7e-5b93-4440-9a23-81b06f61abe2",
        "cursor": {
          "ref": "d91c3483-8e75-4ee2-8ff3-d1153d73de33",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "079e572a-fe90-4d78-befc-6ffa9ffb6a2b"
        },
        "item": {
          "id": "52087c7e-5b93-4440-9a23-81b06f61abe2",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dc3abca1-cca1-4929-ad39-8256af098f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d985f32-0436-4fc6-896d-1956b3e9707f",
        "cursor": {
          "ref": "3b733895-3bed-4512-9420-14595b813b54",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "96838779-c6fd-4962-8c4a-91db99812bb0"
        },
        "item": {
          "id": "2d985f32-0436-4fc6-896d-1956b3e9707f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "724de241-1bcc-4668-8646-08899fd2f75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33b1458-91c0-4bee-935f-44de8e2e130b",
        "cursor": {
          "ref": "89834dcc-c0ef-415c-992c-32b4bc9e4ef9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aa83e1b5-f676-4e0f-98fa-52f275029801"
        },
        "item": {
          "id": "f33b1458-91c0-4bee-935f-44de8e2e130b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "116288ad-f2f2-4568-a405-74be05641af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967175a8-09ae-482e-9310-14488f76d589",
        "cursor": {
          "ref": "02d9fe92-6cd8-431d-b173-18e796b343fb",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cdeb683d-9610-40a3-a8bb-2bba22d13e96"
        },
        "item": {
          "id": "967175a8-09ae-482e-9310-14488f76d589",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b9280509-7ac4-4018-b2e5-ccf89dad9d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4853f877-6583-4e7e-859f-9472ef1ed531",
        "cursor": {
          "ref": "50ff81ec-5e52-4845-a8a1-d872738ff5ae",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "117a4e69-2c30-4560-a3dd-85e6e16cbac7"
        },
        "item": {
          "id": "4853f877-6583-4e7e-859f-9472ef1ed531",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0179598c-d529-45d6-b993-37a58c5de574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0f99a5-638e-494e-9a98-a12f72bed118",
        "cursor": {
          "ref": "92e83edb-e478-4862-b53c-10ebebda81c1",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5853e128-eac8-4f01-859e-1e3fc8146ded"
        },
        "item": {
          "id": "ec0f99a5-638e-494e-9a98-a12f72bed118",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d74b6e19-87b1-46df-a2db-f9fc3273346c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a848cbba-1008-4a6f-87d8-4e4d14d16ecc",
        "cursor": {
          "ref": "eaca1d01-7d60-4794-b37d-54cfa0c1fb13",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "25061c55-0980-4196-b617-fad7308287c1"
        },
        "item": {
          "id": "a848cbba-1008-4a6f-87d8-4e4d14d16ecc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "553ade0c-f181-4a8d-8aa5-9aaa210b5195",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 24,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eb39b3-aefc-4b61-8c98-601a86e59e6b",
        "cursor": {
          "ref": "c552daec-6f2e-4f20-a199-51a9844f5e3e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cdfedfee-6b86-4f5f-9907-72b3292c5e67"
        },
        "item": {
          "id": "01eb39b3-aefc-4b61-8c98-601a86e59e6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b2d8752c-87a0-4cea-871f-544686bfced0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b178a796-0a79-4987-b0bb-998f0a983fa3",
        "cursor": {
          "ref": "f1ff5ed0-defb-436c-bfdf-fa28fb463bfd",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2856eb37-d736-4fe8-b4f5-ed6d5ad86b12"
        },
        "item": {
          "id": "b178a796-0a79-4987-b0bb-998f0a983fa3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1d0e006e-73c0-411b-a6e2-7ff47de3271a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6131e648-1bee-45eb-91c0-4312cc4e5b9e",
        "cursor": {
          "ref": "9479cf99-a8d2-47c9-adde-2f624b8ae9b2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "264839c7-dd20-486f-8020-2fb8cc98d9d3"
        },
        "item": {
          "id": "6131e648-1bee-45eb-91c0-4312cc4e5b9e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8fa6a97b-f6ee-4ef0-aa23-5717fa741714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc60d17-898d-4c8f-a60a-247c2e7e1b64",
        "cursor": {
          "ref": "7f10e9f2-a8f2-4ec7-8b15-1ae346ba2733",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "12cd74d5-f8b1-4e3f-935c-ed9b9beb9e4c"
        },
        "item": {
          "id": "dfc60d17-898d-4c8f-a60a-247c2e7e1b64",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "075a64e8-46cb-4f6b-84ff-03558277768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a71f588-09b5-48e0-9f43-94a773adba49",
        "cursor": {
          "ref": "1cc41f24-7f2f-45aa-bbcb-5c288d661bc3",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "776cab08-e6a9-48c6-98e0-33dcb0d66917"
        },
        "item": {
          "id": "9a71f588-09b5-48e0-9f43-94a773adba49",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c419bf97-993f-45b2-b9ab-06e7e38fcc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b8ba5f-7719-48e5-a9eb-888c08b34015",
        "cursor": {
          "ref": "22e1b47a-eb34-4f45-abf6-70b05cb2c017",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4be9309c-af6b-4fb6-973a-6069c509dd83"
        },
        "item": {
          "id": "c7b8ba5f-7719-48e5-a9eb-888c08b34015",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "60d4a99d-3d06-4b10-98ec-f79bde67ec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeecba67-f72c-4bf7-bedc-2a63650ed12f",
        "cursor": {
          "ref": "90db1893-96df-4ea3-af43-ca84804de019",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "be870c17-5b9e-4be6-97a1-51cb2031cd0a"
        },
        "item": {
          "id": "eeecba67-f72c-4bf7-bedc-2a63650ed12f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "969b8d88-b064-4400-b1e9-f2fe939bcc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27646d24-7335-431c-8b0f-029d19f1b2b5",
        "cursor": {
          "ref": "3b6d64a5-abef-4c12-a685-2e59488ad57c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b3399408-072d-49ff-912d-253861ff7331"
        },
        "item": {
          "id": "27646d24-7335-431c-8b0f-029d19f1b2b5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b561a1ca-ea55-4c5d-8b5d-ad85379e936c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08249e7a-7834-4c66-9232-85f094038e58",
        "cursor": {
          "ref": "718875fc-b9ea-47f9-8184-8efa0780759e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "65619f7f-a91b-40e8-99f5-b609489d21ea"
        },
        "item": {
          "id": "08249e7a-7834-4c66-9232-85f094038e58",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6d11da79-620a-4b69-b0f7-69bedb0917fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a343f3-c180-47ec-96b3-06c91964ee3c",
        "cursor": {
          "ref": "64f58fa1-e665-4892-be70-9b3fe9531271",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1e602acf-9553-4ae6-90ac-8d40ce6fa068"
        },
        "item": {
          "id": "15a343f3-c180-47ec-96b3-06c91964ee3c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0b4806e9-6b8a-4963-80ae-43885cc057db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e480fe6a-5dd5-448c-be00-d29a1e7d7d7b",
        "cursor": {
          "ref": "643110ad-d9e2-4c1b-993e-a50966a343e6",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ba6c2492-c87a-4971-a7fc-aaadce7dee23"
        },
        "item": {
          "id": "e480fe6a-5dd5-448c-be00-d29a1e7d7d7b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9ed19bf6-5724-4620-83ec-ff2e74ffbf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103a5956-9442-438b-a447-0c8379cd4a2a",
        "cursor": {
          "ref": "112f8337-0643-4376-9c12-83c00fb478cf",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ef604a0a-3ccc-403d-9a3c-e2c01c2e202f"
        },
        "item": {
          "id": "103a5956-9442-438b-a447-0c8379cd4a2a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2da6f353-2252-47b4-855a-1ff92582cf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aae99ba-77b5-4e5f-bbac-7acc10309f0d",
        "cursor": {
          "ref": "6953997b-2797-44ac-9001-79f77382d3a3",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a49c64cb-92e9-4c57-8a56-28688ae11336"
        },
        "item": {
          "id": "3aae99ba-77b5-4e5f-bbac-7acc10309f0d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b7e41794-6b71-45f2-b122-c18bc41d20fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c473be66-9c0a-453c-88af-f1833bee8dc1",
        "cursor": {
          "ref": "480fb4f1-b422-4d53-ae0e-60570771eeab",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3a8e2c38-344c-4c78-84a1-2789c3657d9b"
        },
        "item": {
          "id": "c473be66-9c0a-453c-88af-f1833bee8dc1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4663862a-a562-4839-ab0b-4b03fdc3dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2f76d5-6b35-476e-93ea-14ea82f99bfa",
        "cursor": {
          "ref": "a3135141-fe74-4303-b3ec-09f5f428b1f8",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b1f7f628-9a8a-433d-990d-e9cde1d901a6"
        },
        "item": {
          "id": "2d2f76d5-6b35-476e-93ea-14ea82f99bfa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3169de17-518e-4ce4-ae67-0ef10dc5e8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fca0004-4064-414c-af32-879e8417dd0f",
        "cursor": {
          "ref": "ab0a67ee-c4d3-46d2-a3d8-dc811b3ffa7f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ac98b4c7-b4c6-4b86-ae3a-8f742cdd519e"
        },
        "item": {
          "id": "3fca0004-4064-414c-af32-879e8417dd0f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e333778a-e539-4a03-9ac5-cc22dc76b897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ff620f-c6c3-479e-a8f7-1422a17d3abf",
        "cursor": {
          "ref": "af54d5b6-730c-4714-99a0-467d8d9d56b6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9e3d447a-d311-47ac-a66e-70377d7d444d"
        },
        "item": {
          "id": "47ff620f-c6c3-479e-a8f7-1422a17d3abf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8bf22d07-ff42-4466-8688-f2d1eb824047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6be273-08ef-4c93-8569-8947a33d7b40",
        "cursor": {
          "ref": "ce8b8ebc-44e4-4258-b45a-8ba3544dc1ce",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0bf93c92-8895-44e3-ad11-53a1b6fa5d3c"
        },
        "item": {
          "id": "dd6be273-08ef-4c93-8569-8947a33d7b40",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7e5933b0-b8b2-4325-94cb-65bf8bc0fc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d03efe-250c-4ea7-ab33-03798e7ba513",
        "cursor": {
          "ref": "c993d77c-7e07-436d-9a03-07842020d345",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9dd8de1e-67b6-486a-9f27-f45d7ac9561b"
        },
        "item": {
          "id": "b6d03efe-250c-4ea7-ab33-03798e7ba513",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "670fcc08-4c9e-4ee3-9020-2e1af980eec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26dee772-5287-41de-ae7a-82152f220ec6",
        "cursor": {
          "ref": "345cf168-5fe9-4112-907c-a3854d8d8c94",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "49dbee10-4b64-4c32-8446-2bc23cc9c2d0"
        },
        "item": {
          "id": "26dee772-5287-41de-ae7a-82152f220ec6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "191295c7-d369-46fa-87fb-caaa89be0907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4491b83d-3364-4599-a876-2b87f6e07c5a",
        "cursor": {
          "ref": "35fa4d24-e65e-4679-9834-5d39f2a3f262",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3dd673cd-216f-457e-94de-7807957caf97"
        },
        "item": {
          "id": "4491b83d-3364-4599-a876-2b87f6e07c5a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "60ac36af-31f0-47f3-b068-388fb097056e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb18f397-f420-46aa-ad97-93e37f19cda3",
        "cursor": {
          "ref": "a50c1e58-93a2-4989-9a14-e905d8362e56",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ecca7b1f-16e2-431e-a3ba-8703017c202e"
        },
        "item": {
          "id": "bb18f397-f420-46aa-ad97-93e37f19cda3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "50e5b480-e7ce-415e-b8a1-c62d6cf09aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f875e0-a7fa-41c2-9a2c-7ed3efc08da6",
        "cursor": {
          "ref": "2d6414e5-118e-4f16-a425-3758069769f8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f7a087f0-f3a1-4187-a034-2d56727478b8"
        },
        "item": {
          "id": "e2f875e0-a7fa-41c2-9a2c-7ed3efc08da6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5781d7d3-167a-43b5-a1f0-26e8cdae587b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744e95a3-59b6-4119-b53b-defafc4903fc",
        "cursor": {
          "ref": "236f51cd-fe93-4195-b939-e87ef4747630",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a19d919-0148-4133-a493-e89acff36b52"
        },
        "item": {
          "id": "744e95a3-59b6-4119-b53b-defafc4903fc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "13bb6160-647b-470d-bf20-aa7dab8f2db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b4d97b-4ce0-47c0-bdb1-996bff2716aa",
        "cursor": {
          "ref": "5836e02e-f705-4346-9776-028a0bf84a15",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5c22d5a1-0e9e-4030-a1a2-2d9c1424f30a"
        },
        "item": {
          "id": "b7b4d97b-4ce0-47c0-bdb1-996bff2716aa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2b3f15e5-c48e-4a96-95cc-8f7740c95b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02c9f7-1dce-4c58-8075-94b45388e1f0",
        "cursor": {
          "ref": "00c7ce98-f8f1-4975-a6cf-2cd01b80eb64",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "76edb219-de34-48c4-bd90-f6d1e86e0352"
        },
        "item": {
          "id": "1a02c9f7-1dce-4c58-8075-94b45388e1f0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "aff7970d-8a3f-4083-bc39-b3662904e437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ecd0c2-aa2d-44d3-9df6-d3e6ee9ef7f3",
        "cursor": {
          "ref": "f2e39e29-e542-4aa5-9b29-50fd8d4ac1e5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "37f34544-247a-4460-a8e0-73ba16fda748"
        },
        "item": {
          "id": "e1ecd0c2-aa2d-44d3-9df6-d3e6ee9ef7f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b10f7e73-3b19-4c9d-aac1-745e53d8f5d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96fa3d7-43a8-43b2-a2cf-cdff165cef50",
        "cursor": {
          "ref": "a42859b0-9ec4-4b94-b7e3-d0d9f7e0f261",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a2cbae12-d262-4fbf-8d11-f4892c46424c"
        },
        "item": {
          "id": "b96fa3d7-43a8-43b2-a2cf-cdff165cef50",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "495d49a0-5c71-4ce2-a6b8-b0fe70cd71ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2303011-2e4f-44e5-bfd3-697a478354b0",
        "cursor": {
          "ref": "a7b19345-8190-403c-a580-e55b96e494eb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b761466f-1d8f-4305-b5ef-743d1eb3eaf2"
        },
        "item": {
          "id": "d2303011-2e4f-44e5-bfd3-697a478354b0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4fdbad4f-da03-4de2-a21f-0ed7e2510219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1bf2ac9-d2b6-477c-8b6e-99082963aa82",
        "cursor": {
          "ref": "1f6d0880-19e9-4840-bd88-f27d4d8558d5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5bebe71e-8116-467a-b862-a158eda37eb3"
        },
        "item": {
          "id": "a1bf2ac9-d2b6-477c-8b6e-99082963aa82",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a4f149ed-8c66-40ae-b2a1-20227d109ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5b889c-3a0b-4d6e-91b7-aa8dd1a1af72",
        "cursor": {
          "ref": "79c1f3a9-f100-47f7-a5b5-b6a2bed92efe",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ae949fa1-bad1-4796-a676-d2c7e1cd8421"
        },
        "item": {
          "id": "fe5b889c-3a0b-4d6e-91b7-aa8dd1a1af72",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a92e63c9-1db9-4640-a372-02c6c1025267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11393280-b6d6-4ed2-bf9d-f3be66cae15a",
        "cursor": {
          "ref": "5a484f13-54ca-4c94-9bc4-f157eead13bf",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b959bc84-3f50-41cd-8cac-95ed431472c6"
        },
        "item": {
          "id": "11393280-b6d6-4ed2-bf9d-f3be66cae15a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f08504d9-1228-4e80-b237-c18d5399511f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db32db-926c-4471-a9f4-e91153678ecf",
        "cursor": {
          "ref": "d4bfc7a0-c3ff-4bc3-b320-5131695e1ee4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "75bb1c02-6336-42cd-946b-ec69a1a2a519"
        },
        "item": {
          "id": "f1db32db-926c-4471-a9f4-e91153678ecf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c8eff3d6-f543-4136-8344-e46466a49f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956ebd84-19f2-4242-b30b-6f34afa1f074",
        "cursor": {
          "ref": "318261f6-ef18-4ec5-a2dd-10105a05918f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b7acf4d8-73e6-4f58-a19e-a7e7b6d37704"
        },
        "item": {
          "id": "956ebd84-19f2-4242-b30b-6f34afa1f074",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "74dbd1e6-ed3e-4a7f-b909-184615e7b5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea59471-3741-458e-9108-b7f059862216",
        "cursor": {
          "ref": "e90853c3-d554-45e4-8f08-7863b27fd52f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "195e61b5-9826-40b6-b9b8-502faa8db640"
        },
        "item": {
          "id": "9ea59471-3741-458e-9108-b7f059862216",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7f07cc7e-c453-4f80-8bb7-3f0f28030f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ef1fb7-0ee4-4d10-99ca-2c61d0fbab64",
        "cursor": {
          "ref": "bc7667d9-1946-4760-990d-c5a631728829",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a618a3e4-08ca-4dec-a939-53c235557c5f"
        },
        "item": {
          "id": "76ef1fb7-0ee4-4d10-99ca-2c61d0fbab64",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0b131fda-989a-4ae8-b6ef-f0ec8d218ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a8e76f-7c50-4167-98f3-efb9c3dc0a6a",
        "cursor": {
          "ref": "86bc2ce9-07cb-424d-9326-bda2012b8f83",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b7ae5f5c-3309-4e6f-b545-61288bd3bee9"
        },
        "item": {
          "id": "a0a8e76f-7c50-4167-98f3-efb9c3dc0a6a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7c8e7b9b-01f5-41c4-b477-b254f3904bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471892a7-3f9a-4beb-8d90-4de8e8e98e98",
        "cursor": {
          "ref": "7566cc1d-3710-497f-8034-6985163e8597",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "472f16ca-79dc-48e2-8a96-7006748e7ba2"
        },
        "item": {
          "id": "471892a7-3f9a-4beb-8d90-4de8e8e98e98",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8535422f-4f21-477c-bb6a-2f402454727c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe71df-4e6b-45a1-bf86-8458b298ac28",
        "cursor": {
          "ref": "4bc465dc-7ded-4d3c-949c-5a0c06e3db40",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b3223fdf-51d6-4a26-8ca7-20f2f22ec962"
        },
        "item": {
          "id": "5bbe71df-4e6b-45a1-bf86-8458b298ac28",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "03ac7636-5043-48a5-b2d6-04c565f6056a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0016ed5-287a-4194-879d-aa7ef3c65c76",
        "cursor": {
          "ref": "caed9893-8ddb-49fb-80ed-214bdd1d2302",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "933a5ddb-ae6d-4908-87ad-e9c6fa870998"
        },
        "item": {
          "id": "c0016ed5-287a-4194-879d-aa7ef3c65c76",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fdf0c768-b410-499f-b62b-5a9194e15b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bc47e8-4fa6-4612-aa4d-35256a0dd4fc",
        "cursor": {
          "ref": "85e4b1c8-67d0-405a-bc54-d5237d042098",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a5a53182-f51e-4a85-8ea5-21383c5aeba0"
        },
        "item": {
          "id": "44bc47e8-4fa6-4612-aa4d-35256a0dd4fc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "56b502d5-e919-4102-88fb-2f74c34fbf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe589a3-1fec-4b11-a1ef-a467c5ceef90",
        "cursor": {
          "ref": "b1df0aee-0cf9-4252-a309-c78eb7503c58",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "225250bb-e4d2-4f38-b66c-83373eb15670"
        },
        "item": {
          "id": "bfe589a3-1fec-4b11-a1ef-a467c5ceef90",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c245b1d3-f62a-46a0-91a8-919b09ec1e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c527652-3ce5-4f77-90d3-c59a4b74b31b",
        "cursor": {
          "ref": "ee107d81-eaa7-4c85-b5d4-da4dfcb7b3b7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a851d0da-4222-4c04-9666-2abee64ee157"
        },
        "item": {
          "id": "4c527652-3ce5-4f77-90d3-c59a4b74b31b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7d7868f3-1c0d-41de-a057-52326d93e59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1805610-16c0-457c-8f3e-5b8e744f2294",
        "cursor": {
          "ref": "bd4df1e2-14d8-45f2-b11f-2954ef00f3d7",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "02b0e3fa-bfec-4104-8541-edb697931ecb"
        },
        "item": {
          "id": "b1805610-16c0-457c-8f3e-5b8e744f2294",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a45dcfc7-2ded-4144-a1ce-70a377ad33cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fbf53c-fd56-4356-b5e4-0193983abdbe",
        "cursor": {
          "ref": "2e106dcb-3cb8-4536-982e-0f5a70287061",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "871d3c54-a120-41d8-8044-f38cacc22cd3"
        },
        "item": {
          "id": "f2fbf53c-fd56-4356-b5e4-0193983abdbe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "23fa7c25-9ac6-4fde-b5f6-947bdd48f4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5138ae95-6ccb-4c1b-b531-8ead42cc2e5a",
        "cursor": {
          "ref": "2f703a29-0d11-4024-8ef8-50dd45db7b24",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c6cb984-151f-4444-949e-dbaa548b79a4"
        },
        "item": {
          "id": "5138ae95-6ccb-4c1b-b531-8ead42cc2e5a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1e6e04f2-4c94-411c-a6dc-89993371ca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef220c8-188d-42ff-9e05-beedb37ec8c5",
        "cursor": {
          "ref": "4946c2b9-7652-4358-b2fb-182124085d7c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "86739d1b-e15e-428c-926f-115ca45dd67e"
        },
        "item": {
          "id": "cef220c8-188d-42ff-9e05-beedb37ec8c5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1eb88da2-9bb3-45b0-83db-c9b08575d916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c9a9cc-93fe-40c2-be68-89fd82b03992",
        "cursor": {
          "ref": "a244bc2d-3ca9-4506-a5a3-20ab805a2233",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e7894d18-e0a8-4419-88ae-ce001a65296c"
        },
        "item": {
          "id": "c2c9a9cc-93fe-40c2-be68-89fd82b03992",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "210f3e81-c5af-4fc2-b246-3adaced475f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6953bb-6051-48b0-9533-9040b4185da3",
        "cursor": {
          "ref": "782c5bdb-0e60-40a5-8543-453a6866ebb1",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9fc443e2-169e-4245-8bf4-421fc09be931"
        },
        "item": {
          "id": "1c6953bb-6051-48b0-9533-9040b4185da3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "501616f6-d4e6-43e6-8a8b-5862f3c46cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f55de59-ed84-4aa7-acc0-3e1293b15cb4",
        "cursor": {
          "ref": "b5422bfb-0454-4898-b99d-f95743ee3778",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f34641ee-f0b8-4c7a-8b18-c4d85faf5b79"
        },
        "item": {
          "id": "0f55de59-ed84-4aa7-acc0-3e1293b15cb4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ba8f0047-446b-43b7-822c-44909123f10b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff561a8-31a9-46ca-b4b8-d801082fb884",
        "cursor": {
          "ref": "fd7792ca-7973-40d9-926c-c6db959203e1",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5360f0d3-066e-42fd-8b1e-029acde7ec39"
        },
        "item": {
          "id": "5ff561a8-31a9-46ca-b4b8-d801082fb884",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f9d501a4-f85e-4648-9d57-5ebe66463139",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e6afa8-c94b-41b2-9df2-6aa21853e9cc",
        "cursor": {
          "ref": "419a73dc-07e1-402c-9dcd-9e1b535401e2",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "35ec2f4a-c70b-4e24-802c-e607d5d53c62"
        },
        "item": {
          "id": "f4e6afa8-c94b-41b2-9df2-6aa21853e9cc",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c43ee612-2ce4-4a4d-88da-063b03224219",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d1159f-471c-4a6b-a9b1-fa7b921bc335",
        "cursor": {
          "ref": "e893a555-4e0e-4b1d-b1e0-3e28eec23f04",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d8ea33b5-4e26-4762-98f7-2d7b3d543751"
        },
        "item": {
          "id": "51d1159f-471c-4a6b-a9b1-fa7b921bc335",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "32c995be-fcb3-48d2-b8e5-184ad65d3940",
          "status": "Created",
          "code": 201,
          "responseTime": 39,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3196d22d-fb92-43be-b3c6-14c09d22af46",
        "cursor": {
          "ref": "a86d0349-3be3-439b-877e-2ef0aba3b1af",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cc733adc-c776-4f1f-8319-7ad0255eb0a8"
        },
        "item": {
          "id": "3196d22d-fb92-43be-b3c6-14c09d22af46",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f1c5a48d-c6aa-41a2-9545-a3fd68e912bb",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b131580-aab2-4644-ae2e-5828ed2f2d4f",
        "cursor": {
          "ref": "8a320010-0ebd-49c2-ad23-f548ff999fe0",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3e9a8f44-c941-4d02-919f-689007a3a29b"
        },
        "item": {
          "id": "1b131580-aab2-4644-ae2e-5828ed2f2d4f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5279a301-6160-44ac-b02a-07baa5be58a1",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "293b8eea-d776-407e-b8eb-cb1799d06ca9",
        "cursor": {
          "ref": "17ac9575-fc74-42b3-a36f-e48da92dc1d4",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0e8cf5ed-7227-4e49-92c6-054ee0b8533f"
        },
        "item": {
          "id": "293b8eea-d776-407e-b8eb-cb1799d06ca9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "be09e6d9-f04b-4591-85c2-4989eac7220e",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c039d7f-f119-499f-86cd-1270dbbbf47d",
        "cursor": {
          "ref": "304f89cb-b441-45cc-91b4-864f1ee9b25d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "97a911d6-aa13-452f-86c7-7dda82d2adf0"
        },
        "item": {
          "id": "1c039d7f-f119-499f-86cd-1270dbbbf47d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cf605980-9353-4c91-950b-d666da505519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe4a354-0fa8-4111-8bf2-4288040986f2",
        "cursor": {
          "ref": "7d2bc5d7-a419-40e3-af0c-2bb4e85ba6d7",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "19a15b83-7521-44e4-ab1a-a9e215b311a7"
        },
        "item": {
          "id": "dbe4a354-0fa8-4111-8bf2-4288040986f2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d32e6db2-40af-4f2a-9d91-b4a089416205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9a33ee8-c147-432f-8756-cdba61ea6154",
        "cursor": {
          "ref": "8d4df220-00a7-4559-86ef-ea0da686590f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3dc415c3-5a48-4926-b6fe-97eed5728dab"
        },
        "item": {
          "id": "a9a33ee8-c147-432f-8756-cdba61ea6154",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fb7e6557-a452-4779-9314-04d080870690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46f10e9-efe0-44ff-b591-1e9796d450c5",
        "cursor": {
          "ref": "860bb240-7a41-4d50-9b1e-a096db219d47",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1f2c8a06-5f84-4ddb-8c17-f6dac9972056"
        },
        "item": {
          "id": "a46f10e9-efe0-44ff-b591-1e9796d450c5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d93ec7ee-3af8-42bd-b683-c28c34820ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99fb464-64d8-422d-b354-8954ba6a1d8b",
        "cursor": {
          "ref": "3853d50f-773a-4980-a7ab-55e7236f8194",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f37f879d-9e9e-4d0f-b1fd-a8b74f144aa6"
        },
        "item": {
          "id": "b99fb464-64d8-422d-b354-8954ba6a1d8b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "73c1f3f4-e9ba-47f0-a237-e38eebfd7681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f6e768-5e76-49ee-9f9d-9a584807b6b9",
        "cursor": {
          "ref": "7ff3cd30-9bf6-4af8-819a-00ea99cfe0a1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "19ff27e7-4094-4700-8f11-380bc6d03bd8"
        },
        "item": {
          "id": "72f6e768-5e76-49ee-9f9d-9a584807b6b9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c2b73343-e45e-4d0d-8656-ee51e5790bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b913ac-a9e6-43c0-b336-f8b03617965c",
        "cursor": {
          "ref": "913b1f1d-a340-470e-8d4d-af4c68bb1109",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6db7a5a8-668f-49db-9a2e-4981ef4cf86b"
        },
        "item": {
          "id": "92b913ac-a9e6-43c0-b336-f8b03617965c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f487b909-400c-4afe-a8db-cdee1fe06c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c15b20-739a-46a1-9da4-8f07bd94b637",
        "cursor": {
          "ref": "1fc811a1-1e50-444e-b076-99fbb6607939",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "230f3482-8453-4f63-ae0b-0a6d74ffc9a0"
        },
        "item": {
          "id": "43c15b20-739a-46a1-9da4-8f07bd94b637",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fb06626e-bc5d-4a0b-ab78-a64054d6eb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac3040a-119e-4fcc-bc13-fbdf23c7243e",
        "cursor": {
          "ref": "02a86e17-e0a6-4cc1-a25d-5c99e48cbf28",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7be2e977-888c-4632-9fa2-740effd73e9e"
        },
        "item": {
          "id": "6ac3040a-119e-4fcc-bc13-fbdf23c7243e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7f8b98a6-c8c4-43ee-94ab-18b6857bc493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7ca89b-c823-4a3d-a376-6dbd1ecce412",
        "cursor": {
          "ref": "25a345a7-364d-47c0-acb1-ba946d5c2af4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "cbbf1d3e-8501-4dd4-86d0-bc5d85b3655c"
        },
        "item": {
          "id": "9d7ca89b-c823-4a3d-a376-6dbd1ecce412",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62e38692-f89a-4bee-b5dd-cb3921c8e282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e757f50-50d8-49f7-a4eb-bb716f19089f",
        "cursor": {
          "ref": "e1d7f402-e70c-41df-b544-5985766ac4c1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "690abaaf-bb9b-42ed-931f-315e561a8e2e"
        },
        "item": {
          "id": "2e757f50-50d8-49f7-a4eb-bb716f19089f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94fc6cb0-075c-4314-8085-f26453b439a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270531bd-41b8-4717-844c-365ed11e5f7e",
        "cursor": {
          "ref": "5958d767-d2e7-4d4a-ac78-11c269b411d6",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59649cd4-9ec0-4ba4-be27-a8d3371fab15"
        },
        "item": {
          "id": "270531bd-41b8-4717-844c-365ed11e5f7e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "65643a08-f75d-499f-901e-86d5e864c99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8854b10-2623-480a-b0a2-0bbbbfcfb1db",
        "cursor": {
          "ref": "943e5d95-f18e-4b93-bb24-863b425effbd",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "86363128-4295-4504-8df8-f622dff94771"
        },
        "item": {
          "id": "f8854b10-2623-480a-b0a2-0bbbbfcfb1db",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b6f99807-0f4b-4397-a549-49958aacf3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916f2e20-e744-41f3-b730-75cac8799101",
        "cursor": {
          "ref": "2a430474-47c1-4d5a-9c8a-8f7ca318f2cd",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e0c39a0e-dcaa-4fb0-bac2-3a6e3ff71ac0"
        },
        "item": {
          "id": "916f2e20-e744-41f3-b730-75cac8799101",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "44429cc8-94e4-4a5c-a632-836438c0519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8596a4fe-fa97-4d58-bc7e-7b487effb0ad",
        "cursor": {
          "ref": "99b6fe46-aa84-4952-933a-33ff24bd4e08",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c64a64b2-79a2-4bf7-a3c4-21a2faab3e6c"
        },
        "item": {
          "id": "8596a4fe-fa97-4d58-bc7e-7b487effb0ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "37ff587a-d333-4f51-bc2c-aafd135a9035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabede86-d109-4a0c-b8bf-0762c9ad8fc5",
        "cursor": {
          "ref": "20890db0-7618-4e9c-9d91-2d75cbb69e5c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f168a865-f696-4eb3-b383-9ae7737d84c1"
        },
        "item": {
          "id": "aabede86-d109-4a0c-b8bf-0762c9ad8fc5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "16f72a2c-fc41-47b7-94cf-2ce9e028f9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c127fcc-ef36-43c5-9ae5-670f410a4a60",
        "cursor": {
          "ref": "e5fb0adb-fd21-4895-b360-66a54746e7b1",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b706410f-3424-406f-8370-862d093810b2"
        },
        "item": {
          "id": "2c127fcc-ef36-43c5-9ae5-670f410a4a60",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "824f1119-4174-4911-a786-307c21998d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33183f7c-28de-448b-82b6-2a84cdbdc773",
        "cursor": {
          "ref": "dfc541cc-6480-4540-ae05-59b2c08e8d82",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "88e24703-0f2e-4876-8d33-d42d13144f34"
        },
        "item": {
          "id": "33183f7c-28de-448b-82b6-2a84cdbdc773",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5a97bbb7-ea4d-4a4c-a420-2c2109096ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61055202-1ae4-491d-beb8-e797972697bd",
        "cursor": {
          "ref": "1d30e94b-fee8-4758-8cf9-48292ae3973b",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8c7a8afa-cdaa-4002-b848-050a98401215"
        },
        "item": {
          "id": "61055202-1ae4-491d-beb8-e797972697bd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "41e56aeb-809c-4b7e-b475-bc1b2f9de6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cee0c8e-16c0-4942-b4c1-48ebb1a01688",
        "cursor": {
          "ref": "3dfc72bd-1afd-4384-8ebb-6a881154ccb2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1a8c9949-86ae-4cbb-aa8f-33060f2fe2e7"
        },
        "item": {
          "id": "2cee0c8e-16c0-4942-b4c1-48ebb1a01688",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "037015ea-843c-4f9a-9fbc-578e972d6dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd092d5-2df3-45c2-b25c-084d2035a89a",
        "cursor": {
          "ref": "6eb55ba0-e50e-4645-9bb4-84a01adbf88c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a7d73f93-2291-4b08-9e57-d83507482182"
        },
        "item": {
          "id": "7fd092d5-2df3-45c2-b25c-084d2035a89a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d0cbcb93-d3f6-4522-a4b2-f88a6a492f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53851025-3c00-4d2c-b421-c220687d7916",
        "cursor": {
          "ref": "198c11c2-fa0b-4410-8fa1-43b13e02630c",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3311dbeb-0c4d-486d-b2cf-6026571de892"
        },
        "item": {
          "id": "53851025-3c00-4d2c-b421-c220687d7916",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b10c7dd-73ed-484b-aba7-d2aebd3a4c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934abecb-9cc1-4f66-9ea9-6d910f2235eb",
        "cursor": {
          "ref": "95f0b4be-cb7e-4045-9b13-54e8b09c886c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "12069932-1421-4eb1-b855-079f0fd772e4"
        },
        "item": {
          "id": "934abecb-9cc1-4f66-9ea9-6d910f2235eb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "24713193-bde3-4fad-853f-e3c424a84e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1db146-d2ae-4272-b9f3-b18982c79dbd",
        "cursor": {
          "ref": "93e1fef9-40b7-4b0e-8ebc-29c09805a6a6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3e79937d-4aac-4fc8-b5e8-15a26b72d579"
        },
        "item": {
          "id": "df1db146-d2ae-4272-b9f3-b18982c79dbd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2e4aa922-4ef0-411a-b293-d481eef3fc6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2f7353-2829-416f-a2d3-f870d2025df6",
        "cursor": {
          "ref": "182b2fac-743a-4d39-b8ee-41491d412b47",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c3028304-5b48-43bc-be64-4f7fd56eb949"
        },
        "item": {
          "id": "3c2f7353-2829-416f-a2d3-f870d2025df6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c4474ebd-2d12-4c5f-a4b3-61ed36a128a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a73d3cd-01ec-457a-9968-078912bda580",
        "cursor": {
          "ref": "fd4eec73-fc7c-4adc-92d7-1e434a371138",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3c3d61d8-8e42-4e4b-99ba-6a5e078f27a9"
        },
        "item": {
          "id": "2a73d3cd-01ec-457a-9968-078912bda580",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "be3921c0-fc5b-4d06-98f1-59634f9c9b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209d631e-4070-42be-aaaa-ee9a8380f429",
        "cursor": {
          "ref": "650892a7-b964-49a7-aa97-13226a79ce6d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "08d47855-fd7e-450d-b5b3-b757e044ad4c"
        },
        "item": {
          "id": "209d631e-4070-42be-aaaa-ee9a8380f429",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b75ab25-23d0-4286-9be5-1f305a354204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f35caff-e836-436b-818e-7938783cc780",
        "cursor": {
          "ref": "5ceba02a-dc7f-45bc-8f18-aefa63ce73dd",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6089f5e4-1345-426c-8919-973d6898fa2b"
        },
        "item": {
          "id": "0f35caff-e836-436b-818e-7938783cc780",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7dfdf469-4168-4104-93a9-1c8ecfc3ec0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0e358a-0fed-4d54-bcad-a37c29bc1608",
        "cursor": {
          "ref": "1394b05d-b60f-48f5-9331-daa018d71782",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7627ba92-3cb3-4640-9d05-0aafb9cff3ef"
        },
        "item": {
          "id": "bd0e358a-0fed-4d54-bcad-a37c29bc1608",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "890daae3-4cce-4902-8e64-e297b5b37be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beec1175-7dea-4b21-a928-24a08f7d1654",
        "cursor": {
          "ref": "fb052c95-15c9-49a3-b9e5-a3d58357e15f",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "96313897-b4f9-4fda-96d8-8278c1e25588"
        },
        "item": {
          "id": "beec1175-7dea-4b21-a928-24a08f7d1654",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f075812c-fc44-40a1-896a-20413b61e4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1b454a-0387-4446-8a38-3bc68bb57c35",
        "cursor": {
          "ref": "c4660b6b-62cc-4129-9d28-2a203ed0bf47",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dc4e8bce-0346-4230-9a40-38d3c2dc7e02"
        },
        "item": {
          "id": "5a1b454a-0387-4446-8a38-3bc68bb57c35",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "258d1922-d11d-41ce-bb33-6213288ccfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cef0f3-f280-4e13-b395-0e53f22532fe",
        "cursor": {
          "ref": "e44380f0-f7d9-423d-8e52-cb6781e4eb23",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b0feaffb-25d3-4cd6-8bda-af43e04893e9"
        },
        "item": {
          "id": "47cef0f3-f280-4e13-b395-0e53f22532fe",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d20e01dc-4aa2-46b2-82fd-282780fbff77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b94187-3aa8-4090-9f19-df195a6c0d7d",
        "cursor": {
          "ref": "4092e81c-b5c9-4cd8-8948-e778a1a632e8",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ee3f8835-cb27-4fe8-aeb2-e161ec33300b"
        },
        "item": {
          "id": "48b94187-3aa8-4090-9f19-df195a6c0d7d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd630b92-0abf-414d-ad45-7db2427daced",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d8b684-21fc-4a30-8c84-17bb8d90dee9",
        "cursor": {
          "ref": "37f7ab50-2a41-4df7-88dc-48d057056303",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b468923d-6dfc-41a8-b26b-ce78e18f2b2a"
        },
        "item": {
          "id": "59d8b684-21fc-4a30-8c84-17bb8d90dee9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "cd15b634-74eb-4f24-b34a-d7e510c860d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7debedd0-11c3-43c2-a4f0-9490cfc44311",
        "cursor": {
          "ref": "3494e619-0bf1-4949-a3d8-2bc4916712b7",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "950f4458-92bc-4b60-856c-8c4d100f0ae5"
        },
        "item": {
          "id": "7debedd0-11c3-43c2-a4f0-9490cfc44311",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "73d293ab-908a-4653-9063-c8ba5e0c962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d9f575-b292-4e38-ba4d-b423068058a9",
        "cursor": {
          "ref": "2060362e-2377-4f52-af1c-0a67c8c7bc3f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "29f6a458-a73f-4616-9b59-444898b80eb8"
        },
        "item": {
          "id": "a0d9f575-b292-4e38-ba4d-b423068058a9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9eb71c4c-9f39-4b3e-80b5-4581f25e5b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11d29f1-e9cd-4c3c-bf17-facf0aa5fb5a",
        "cursor": {
          "ref": "108eafaf-e027-489b-853f-7078c95a09d6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "47a81948-b1ca-4874-bf88-dbf01a40b8e0"
        },
        "item": {
          "id": "b11d29f1-e9cd-4c3c-bf17-facf0aa5fb5a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "db325c8f-68a7-41b6-bcc9-0bb5461cdb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c221a4-105f-4e92-8157-2d592203d645",
        "cursor": {
          "ref": "260206ff-4c10-47cd-8eb4-bd93c9855728",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4439c715-891b-460b-8578-ed530f75d2c0"
        },
        "item": {
          "id": "58c221a4-105f-4e92-8157-2d592203d645",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4f09a9da-8557-48d5-b69e-eee39d4cb242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952275b1-5da8-43e9-ab99-50206b23f491",
        "cursor": {
          "ref": "3067e556-f959-4198-935d-efe3154d77ef",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b90e43fe-21af-46d9-8e3e-fafd0b419878"
        },
        "item": {
          "id": "952275b1-5da8-43e9-ab99-50206b23f491",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f34fa791-0376-4613-9759-2eeaf264ff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d57a14-b633-4799-9703-29628f5277f9",
        "cursor": {
          "ref": "011e599f-8da2-4559-b672-99891822e457",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c9df57fb-1da0-4b29-b91e-0502113fba76"
        },
        "item": {
          "id": "e8d57a14-b633-4799-9703-29628f5277f9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "31d4fc11-8f8c-4ebf-a241-5904f5012349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ee93c5-4f93-42c2-980e-7bc85272bbe9",
        "cursor": {
          "ref": "23e36b33-4640-4746-b7c1-6b9ec21115d6",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cab32ce7-c063-4909-b5ea-2d26aa44df10"
        },
        "item": {
          "id": "f9ee93c5-4f93-42c2-980e-7bc85272bbe9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d6e0f543-3cfd-46bc-aac3-86859d697205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c2dc4-2ce9-4bce-8899-1d4d79950739",
        "cursor": {
          "ref": "cb7cf079-06f6-4ea2-8e9b-11b48250e171",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "220431c2-1051-4a2b-9bd3-9dced6e2bbc6"
        },
        "item": {
          "id": "a74c2dc4-2ce9-4bce-8899-1d4d79950739",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b518ad68-a65d-4c95-9749-488243227fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6929ee1-6882-4a58-b8d5-b8b1f486f3c4",
        "cursor": {
          "ref": "ce107e16-fba2-4ad6-b375-42aa8e79d7de",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c2207709-848c-438a-a575-c4fe831902c4"
        },
        "item": {
          "id": "c6929ee1-6882-4a58-b8d5-b8b1f486f3c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "505dd0f5-1532-4e0b-8ba0-eabd98d1fc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59621ed1-12b4-483d-8c70-7889fefc5c99",
        "cursor": {
          "ref": "4c5a2226-cb13-4fe8-9355-c095bfd32e22",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3eec7d28-05dd-4ddc-a5cf-30f4d405060a"
        },
        "item": {
          "id": "59621ed1-12b4-483d-8c70-7889fefc5c99",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97b8c7d3-90b1-489d-8680-61f86a6c0b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd8eb2-3d64-4e57-a9af-e3062d2b46ed",
        "cursor": {
          "ref": "b58a38d9-95a6-43c2-b1e7-08f7c8f7608d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4149b32b-4b45-4e73-91f6-a54cc9b96607"
        },
        "item": {
          "id": "31fd8eb2-3d64-4e57-a9af-e3062d2b46ed",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8ec8af87-9fc5-475c-8a76-08c952216fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056d3af4-dff5-4e6b-bbb8-c14203a4ca77",
        "cursor": {
          "ref": "dd32db11-5d27-477f-a1f0-3da8770c6ea9",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0c411eed-3624-4211-be7e-8940c076a88e"
        },
        "item": {
          "id": "056d3af4-dff5-4e6b-bbb8-c14203a4ca77",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "47be7080-90ff-44e3-b49f-96d3ecceb4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f4240-2c21-414b-b686-1750d0492fc6",
        "cursor": {
          "ref": "9ebb6250-c459-4eda-bc35-71928aed01e7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b28b851c-63c5-41f6-b038-3f25c9a70601"
        },
        "item": {
          "id": "2b4f4240-2c21-414b-b686-1750d0492fc6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b5d55c04-7734-4769-89c7-f1430180a2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab67956a-eb62-4758-af56-69faf851b359",
        "cursor": {
          "ref": "883b5854-0505-4f42-b001-8b58b448d785",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9f53d33a-92e5-41db-9350-df0891e5c22a"
        },
        "item": {
          "id": "ab67956a-eb62-4758-af56-69faf851b359",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "82556832-0ae9-42b7-bcc0-0c8eda5fc292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c24c0e4-a4f2-411d-88a1-6913d084c19f",
        "cursor": {
          "ref": "79182301-9421-4fa3-9e57-1542f207c44d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "493a2236-49e7-43cb-928a-3fb28870ae1e"
        },
        "item": {
          "id": "7c24c0e4-a4f2-411d-88a1-6913d084c19f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "adaec47c-adae-4a4a-a352-c0dcc78e2222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0cc600-db8a-4979-997d-29e20067e3c7",
        "cursor": {
          "ref": "343f4027-7559-4dc4-b766-a248ee46b344",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e7adcdfc-de7e-4b61-8682-490693528c73"
        },
        "item": {
          "id": "4f0cc600-db8a-4979-997d-29e20067e3c7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6727a33f-5081-4bed-89c1-8f13ace05c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc8e48b-136b-42d4-a129-f085cc01c2bd",
        "cursor": {
          "ref": "e511e92d-e2c2-4ce3-8738-aa67e1253fdd",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1d77a98f-e56b-46b8-9326-f85f1ca6689b"
        },
        "item": {
          "id": "bdc8e48b-136b-42d4-a129-f085cc01c2bd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4aa41dca-9be8-4f80-81db-78c16525eb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e52302-d54a-4f53-913a-8b4987549cf3",
        "cursor": {
          "ref": "8ff2aa69-fa00-44a1-a56a-ea2b50da3cd9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "807f6358-9934-49ec-ae70-ae2570d100ab"
        },
        "item": {
          "id": "45e52302-d54a-4f53-913a-8b4987549cf3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3b0715c8-9550-41af-bafe-1b96d149718c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc708fbc-ac3e-4e8e-9325-411bfc4604e7",
        "cursor": {
          "ref": "61ee5d4f-7738-4d61-be1a-ac69e1d6c97e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e3e6a9bf-c304-421c-a004-ed2fd4efde8d"
        },
        "item": {
          "id": "fc708fbc-ac3e-4e8e-9325-411bfc4604e7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "05e32317-36bc-4287-9cfd-c639a16e2678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee778b4f-b913-46cb-8b80-abbe52f76c4c",
        "cursor": {
          "ref": "ea96b5ca-333b-4c7f-ac1f-cd739ea0bb98",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "71b4f395-42fc-42f7-a8d1-1c784629d433"
        },
        "item": {
          "id": "ee778b4f-b913-46cb-8b80-abbe52f76c4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c7481c4-7811-41f3-a07a-d44328f463e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa70970-2254-48d3-a437-92c35bbaee5d",
        "cursor": {
          "ref": "7718628c-da07-407c-bd4a-01739fd7a2a1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4882e6bc-4d53-4f72-b498-ec389445fb85"
        },
        "item": {
          "id": "5aa70970-2254-48d3-a437-92c35bbaee5d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9c9c9e8a-1c0a-4428-97f4-ea30cb6debf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e580f4b-b35d-4c4d-a167-b071f3ead25c",
        "cursor": {
          "ref": "384530a3-7a27-4a8c-9de7-15b509d1cd72",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ca5bd540-0c43-4197-9320-8294b0c79dcf"
        },
        "item": {
          "id": "0e580f4b-b35d-4c4d-a167-b071f3ead25c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dac23aad-6a7e-4bf7-98d1-ce245a905584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7caf359-2e24-4c17-bf57-9625033790ba",
        "cursor": {
          "ref": "d98d52c1-58c3-4f2f-bc5d-e0956dab990b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "84a5fdc9-10cd-40bc-800f-7d8f393b5ce4"
        },
        "item": {
          "id": "d7caf359-2e24-4c17-bf57-9625033790ba",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "89c75749-ed9b-49e4-9df7-29c59fc72672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8eb8a2d-0e79-40f7-9bb6-8230a6e8e318",
        "cursor": {
          "ref": "e64b2903-c65e-4e4f-b919-550c83a51d33",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "979964f5-1679-4cc7-8aa4-3dd479665389"
        },
        "item": {
          "id": "e8eb8a2d-0e79-40f7-9bb6-8230a6e8e318",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b72e0e59-7c8a-4c30-acd9-225a20136521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e040ae5-04ca-4a13-93a3-488b94989915",
        "cursor": {
          "ref": "1128742e-a0fe-4574-99de-347757cf76c6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "771b23f9-671e-4582-993d-87b4caa7af64"
        },
        "item": {
          "id": "4e040ae5-04ca-4a13-93a3-488b94989915",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4f56f27d-dc46-4c94-b79e-dc3931a143ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3be6732-b09c-4dec-92de-71e5a78b09a5",
        "cursor": {
          "ref": "bd059d74-9bf3-47e1-8da2-ab3cc7a70718",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "75c6e30f-66e8-4d88-9100-ea9270051d70"
        },
        "item": {
          "id": "e3be6732-b09c-4dec-92de-71e5a78b09a5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "16059198-7deb-48e0-b910-a467163788ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967d3550-75f3-4149-b7ca-b6468922c5f6",
        "cursor": {
          "ref": "bc9e1646-1507-4fe1-9866-9dd4d38c0b78",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ab99091a-6ed5-4eb9-9449-ae685143c748"
        },
        "item": {
          "id": "967d3550-75f3-4149-b7ca-b6468922c5f6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11352459-c846-48c4-9fc6-eefe687bd4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64340c43-4e1a-4cc3-b291-c85f67d13750",
        "cursor": {
          "ref": "fcc5d275-33ee-4f72-abd1-c7020c0054d2",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "745d6f4d-0f1e-47fd-8d14-697cc41ea56a"
        },
        "item": {
          "id": "64340c43-4e1a-4cc3-b291-c85f67d13750",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bf2ee59a-7aae-4661-94d6-ba9caf744c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69614bf4-996d-4cf0-8928-5f514342f1f8",
        "cursor": {
          "ref": "5151eaf3-2a28-4b95-bd96-b6371d38dd73",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7165ffe4-35ae-4485-b7e9-cc102d48ed48"
        },
        "item": {
          "id": "69614bf4-996d-4cf0-8928-5f514342f1f8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec8bb5c7-cfec-4ba7-bf7f-7ccced62b835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3894e2-a1c9-4e2e-82f9-cb1e7989b740",
        "cursor": {
          "ref": "104f1a00-1af7-4ed8-8812-e66e34cf9bd8",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a527ef4d-c34d-4d14-99d8-bf476f41cfa2"
        },
        "item": {
          "id": "1b3894e2-a1c9-4e2e-82f9-cb1e7989b740",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "393f9fac-b98e-447c-8c1a-1316192a4b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c1eb07-e5c9-4ec9-ab75-5132768905ba",
        "cursor": {
          "ref": "c57d41b6-0404-4251-b352-2294bf254348",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b2f90cb0-113d-4779-9011-8051f359523a"
        },
        "item": {
          "id": "f7c1eb07-e5c9-4ec9-ab75-5132768905ba",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a16287ab-937e-4eb6-9d7c-0a1de493f31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78842f07-0b6d-47a7-9e51-d52b75f02f0f",
        "cursor": {
          "ref": "83d9b306-f7dc-4ca0-81cb-d1669fdb6ad8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2d3b846c-a72e-457d-a3f3-36c75f39b8a4"
        },
        "item": {
          "id": "78842f07-0b6d-47a7-9e51-d52b75f02f0f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "654f3e63-02a5-452d-9d27-38a67bdef506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc725c7c-9e37-49ec-b73e-a7e6c9ff796a",
        "cursor": {
          "ref": "9cf701b6-7756-43b9-8165-6a7a78f9761d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "718a678d-cd04-4d02-9c98-484d2e42b879"
        },
        "item": {
          "id": "fc725c7c-9e37-49ec-b73e-a7e6c9ff796a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "73418699-6f79-4a7e-87a8-f0286bf3321a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1141e0d1-38e9-4b77-a8f4-c99dc5d73003",
        "cursor": {
          "ref": "532edd30-2dd8-481b-9f01-f18c16a0dd0d",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5e82c144-dafe-4576-8ab5-11ac050ffbe0"
        },
        "item": {
          "id": "1141e0d1-38e9-4b77-a8f4-c99dc5d73003",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "73f0960e-cd06-45ec-8d59-cc1fd04f1dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b2681f-4887-45b4-bbe8-926b3e32c22c",
        "cursor": {
          "ref": "7c464497-6b17-4eaf-a741-5853f1922e13",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bfddee46-bf34-4f05-87fd-09a6c4e5d377"
        },
        "item": {
          "id": "51b2681f-4887-45b4-bbe8-926b3e32c22c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e5c09c5a-e4ae-4413-9171-e9396cf78533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b1fb5-f854-46eb-9b3e-c395391e7230",
        "cursor": {
          "ref": "473b18d5-53f1-41ff-abe7-d553d9654eed",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7f4394bd-9986-479d-b8aa-f51c2989f058"
        },
        "item": {
          "id": "413b1fb5-f854-46eb-9b3e-c395391e7230",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a2d343a4-18e1-46fa-9131-b7f0f40f13e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0827475e-1875-4bdc-b9bc-278ebd4d6a56",
        "cursor": {
          "ref": "e070c2db-4bbc-40d9-9a28-ce96bf244590",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2fe67922-8b00-45b2-b349-0d0b0cc11296"
        },
        "item": {
          "id": "0827475e-1875-4bdc-b9bc-278ebd4d6a56",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6e395c69-e99f-4933-b9bf-ffbed23a5a4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1cd2c5-5982-4f2d-8f8e-fbdfc6dc5d19",
        "cursor": {
          "ref": "1e394eb5-def4-4032-b6f1-8db39ade9a2c",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "37653f14-f355-4368-8cec-de5d76294acd"
        },
        "item": {
          "id": "4a1cd2c5-5982-4f2d-8f8e-fbdfc6dc5d19",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0b746375-6c00-49bd-a9b7-69b64641e75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0670cae6-7185-4cc5-bba1-d87b62ea06fc",
        "cursor": {
          "ref": "35329bcd-7a2f-46fe-8450-b30955032272",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "93b91374-35f1-4d44-a6d3-ed28575d6945"
        },
        "item": {
          "id": "0670cae6-7185-4cc5-bba1-d87b62ea06fc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bf205d14-58f1-4a71-8344-5af146bcc55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50127d4b-25b4-4e83-8d33-30d92f4d5f50",
        "cursor": {
          "ref": "43472b5a-250e-4123-9279-7bb3224595b5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "179f5b8c-1f4b-4020-8ba0-0b49906cb221"
        },
        "item": {
          "id": "50127d4b-25b4-4e83-8d33-30d92f4d5f50",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "310cabba-6ef2-4bea-aa55-f02b2299a585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec2f9d-fd7f-4afe-8f38-4500667f8743",
        "cursor": {
          "ref": "6f7da315-c33c-47cf-9607-88831a3f2070",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bfa9a0d3-71c9-4a82-8635-c39a1b11baaf"
        },
        "item": {
          "id": "baec2f9d-fd7f-4afe-8f38-4500667f8743",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fce2f6fa-2a32-486f-8537-072c30cd50fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0d899b-4761-4d50-85d0-6b4ea40d3a11",
        "cursor": {
          "ref": "59ab1497-52b6-4ee5-8c6b-4209d6da4af0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ea14c013-37a5-4ead-ba4c-bab12016ead0"
        },
        "item": {
          "id": "0e0d899b-4761-4d50-85d0-6b4ea40d3a11",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e1d5722d-29f5-4986-9e47-32e3e0f229cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd84139-4605-48b9-aede-156fc175aec1",
        "cursor": {
          "ref": "8366fe40-5f6d-464e-bd2f-da8579d615bc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a799145b-143e-48e1-8ad4-13eccea3db13"
        },
        "item": {
          "id": "6fd84139-4605-48b9-aede-156fc175aec1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "80f986c8-5f88-421b-88b2-b5257fbedd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ed857c-6ce8-4809-abfb-1f26c971f361",
        "cursor": {
          "ref": "c9140307-e1df-4791-b4b5-5e459a860328",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "36337a7d-7b9d-4a7a-bc9e-7c1458af14d4"
        },
        "item": {
          "id": "88ed857c-6ce8-4809-abfb-1f26c971f361",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "210cfd3c-ce9c-4ff0-8d65-407dd9575659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b2939d-5c9d-4957-946e-609bc6b67828",
        "cursor": {
          "ref": "08f426b0-b834-46cd-a5b8-5ccef33d4b10",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "777c07d3-511d-451d-bc87-848287eca9f9"
        },
        "item": {
          "id": "d4b2939d-5c9d-4957-946e-609bc6b67828",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2e6c1a6-daca-44b8-ba63-ec460e4ff053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630df639-a487-44c9-8f32-1468a5218796",
        "cursor": {
          "ref": "292c9eb3-1bb6-4a72-9d7e-99a0c3b25d9b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "56f69d26-09a2-4fd8-8340-ce040080f9ce"
        },
        "item": {
          "id": "630df639-a487-44c9-8f32-1468a5218796",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eca3c9b5-bef3-4b6f-829f-274348053f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235172ad-9b2d-4a63-b8e9-dbc8d82df840",
        "cursor": {
          "ref": "dbaef9dd-d210-4006-a0d6-2c6b6408abae",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "45cba8b2-4b27-44a5-944c-2523367d4a99"
        },
        "item": {
          "id": "235172ad-9b2d-4a63-b8e9-dbc8d82df840",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "68b1d76f-b0ef-442f-8ca2-c6750577fbe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8780dd5-6de5-47f3-a988-fab81b9ee3a0",
        "cursor": {
          "ref": "a483a814-42d3-4459-8081-4a0dbd660ff4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e0f75c15-2a6e-4b99-8c9c-71dcf0c05993"
        },
        "item": {
          "id": "d8780dd5-6de5-47f3-a988-fab81b9ee3a0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4ae53c7d-9034-41db-9ecb-2ed86e7dfdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d70e7ab-a21c-4dea-9ff1-0240d0586a2e",
        "cursor": {
          "ref": "7454ef50-dcc5-40bd-b94e-c952f733702b",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "393e8aad-3595-402a-98fd-bd110494948a"
        },
        "item": {
          "id": "1d70e7ab-a21c-4dea-9ff1-0240d0586a2e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a06b2732-7c58-4204-bf2b-35edd86d35ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945cba2b-7ec2-4e00-b3d7-1c9ddcda575a",
        "cursor": {
          "ref": "7f30f84c-5c7b-415f-8a26-4a25d93e8312",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "15f6a396-8964-49a5-afdc-89ff27f1e9ee"
        },
        "item": {
          "id": "945cba2b-7ec2-4e00-b3d7-1c9ddcda575a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c51c2763-ccc5-4262-93c9-ea71c186550c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27a76e4-5232-4e8a-ba9f-77e75a75e171",
        "cursor": {
          "ref": "871735fa-2572-475a-ac51-c8bff785686e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "80115624-acef-42aa-b84f-2327bf267e14"
        },
        "item": {
          "id": "a27a76e4-5232-4e8a-ba9f-77e75a75e171",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7ca74bf5-29bc-4def-b71c-cf6083ade517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc63914-877c-4372-b035-846ae68e358f",
        "cursor": {
          "ref": "61dfe385-59bf-418b-b5f7-ff1755ebe6ab",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2676a36d-0757-4711-99c2-8d1c03519198"
        },
        "item": {
          "id": "5fc63914-877c-4372-b035-846ae68e358f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8238a9fb-6d42-419f-bed3-aa940bed2eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28240588-9ef3-46e7-8d53-c8a89fea1e99",
        "cursor": {
          "ref": "d5d4ff97-cc77-44ed-88d4-000a909b13c7",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1fc743e8-98f4-4d55-bba9-d2fd055acd26"
        },
        "item": {
          "id": "28240588-9ef3-46e7-8d53-c8a89fea1e99",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e14a553e-cf29-449b-82f0-0f4b48a42467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309ffc1a-2d3b-47ee-85e4-62192a64e486",
        "cursor": {
          "ref": "e937f820-b2bf-461b-93ee-ceb31ffe016d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d5db8866-70e3-473b-82dc-e9a67daa00ed"
        },
        "item": {
          "id": "309ffc1a-2d3b-47ee-85e4-62192a64e486",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ceb89a22-fddf-49b1-8a9a-fcd0e2abc054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d468d-bff8-4717-bfe4-df0be9d6bab0",
        "cursor": {
          "ref": "3cb9e1ca-1108-403b-b26e-2c93d3566fe8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3bcde602-29af-492f-b529-97ab7b37803e"
        },
        "item": {
          "id": "1e5d468d-bff8-4717-bfe4-df0be9d6bab0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e33080c5-e660-47b3-84e9-d9f9c3c01f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c8f38a-aae1-4c40-8e43-8d6bf119eef2",
        "cursor": {
          "ref": "e062fe5d-4f19-48bb-8037-d2bc4a52af2c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "55caebbf-1898-465e-b40d-98747c99b717"
        },
        "item": {
          "id": "62c8f38a-aae1-4c40-8e43-8d6bf119eef2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "02670134-df4f-4b5e-8e28-a25dbbf08cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab17609-32f1-4896-a6c8-6979d5cd06ce",
        "cursor": {
          "ref": "5c77e80f-6020-417f-ac65-69234922cfd5",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7328c4e5-6c6a-43c4-9819-fa0a5f0fb928"
        },
        "item": {
          "id": "4ab17609-32f1-4896-a6c8-6979d5cd06ce",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3aa92cfc-6633-4ccd-8830-2130a66ab75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dbb05a-33fa-42a2-9b22-c62a2c10c5ea",
        "cursor": {
          "ref": "ab8fc1ad-395f-4a59-a6fc-916be7622203",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d28e5c80-8656-47cb-8317-b8e8badf4bfb"
        },
        "item": {
          "id": "e0dbb05a-33fa-42a2-9b22-c62a2c10c5ea",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4d6fc7cf-61fb-4823-9a68-535ae842475d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74348c58-2db6-4d25-badb-c42ba5ef6e42",
        "cursor": {
          "ref": "799ba509-a4a7-4c8e-b479-3185b1a7e090",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "77b477d9-cdbb-4935-a755-06284aafb6e3"
        },
        "item": {
          "id": "74348c58-2db6-4d25-badb-c42ba5ef6e42",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8fc58488-47f9-4681-94fe-2b2bd6a87ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7538c083-fad0-46fe-9ed2-16f8271005b3",
        "cursor": {
          "ref": "bd9e0828-8354-4e8b-af9d-d4efba47b657",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8351f3fd-6690-48a2-84e3-924d7c2e5abe"
        },
        "item": {
          "id": "7538c083-fad0-46fe-9ed2-16f8271005b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "348e3368-860c-44ee-a822-6caf925df6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e28162-4046-4237-b48a-881a882bfac7",
        "cursor": {
          "ref": "ceb6e851-38ad-4f66-8329-8bccc63ba875",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9d89f80b-b1ec-4f1b-8253-36a863c029df"
        },
        "item": {
          "id": "d5e28162-4046-4237-b48a-881a882bfac7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ff0f5764-b53d-4065-95b7-57cf4bec7630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634f3746-a0a0-4f40-beac-ceb88669a88d",
        "cursor": {
          "ref": "c70a0556-7d76-4913-9434-906b456a449f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "34aee2ab-2cc8-4f76-9866-df8981647738"
        },
        "item": {
          "id": "634f3746-a0a0-4f40-beac-ceb88669a88d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fcda69a5-d916-429a-af3c-7c2ef51ca540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1027408-c76f-43e8-8b62-2e83d3a50c20",
        "cursor": {
          "ref": "ab372dad-28d2-4751-bdc7-ac0f449adcca",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5417aff0-8f0d-4939-a23a-e774b9b07afe"
        },
        "item": {
          "id": "d1027408-c76f-43e8-8b62-2e83d3a50c20",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e9b40e68-79d5-45b3-9e5c-deb5918d4382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7134dd04-e369-4f38-85f8-aa4a3bd6ff5c",
        "cursor": {
          "ref": "5eb6a825-e495-469f-b145-8a22168f41e5",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3a2bcc39-efb1-4761-a1b1-dd4eb86bcde4"
        },
        "item": {
          "id": "7134dd04-e369-4f38-85f8-aa4a3bd6ff5c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bae3aeb4-20fd-45ca-ac2f-3b0fbf43d3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c774f1-507c-4832-b7f4-ce8833feeaed",
        "cursor": {
          "ref": "629c74ea-8833-4fad-b9f2-2575df2ca5cf",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7da1179f-b582-4be3-b5d2-f93a6d27525d"
        },
        "item": {
          "id": "40c774f1-507c-4832-b7f4-ce8833feeaed",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5de4a46c-2cb7-45f0-96ac-bc2b8e252562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5646400-7738-4274-84c1-2586aa6822aa",
        "cursor": {
          "ref": "cf3a540e-7fa6-4bc1-812e-af08120428df",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7b6a96fd-b648-4a70-aebc-f6d032d2aca4"
        },
        "item": {
          "id": "a5646400-7738-4274-84c1-2586aa6822aa",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc5bf537-a861-40b7-9002-925f3a8a8f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d51f23-0c89-48c0-b453-d2f386720fbe",
        "cursor": {
          "ref": "4f28ace5-640c-4283-9663-5e56d82997ef",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a8b2021c-25c1-48f1-9680-5c02263cbf76"
        },
        "item": {
          "id": "37d51f23-0c89-48c0-b453-d2f386720fbe",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "447df46b-e6d1-435c-8f30-1ffb07e25497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69ebc1a-9424-4171-8fe8-d2f009f5a068",
        "cursor": {
          "ref": "1a433d21-7fcd-4d00-92d5-a0721f08ca25",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "24c10b62-8a6c-456d-a57e-d3fd9f2a4b9c"
        },
        "item": {
          "id": "e69ebc1a-9424-4171-8fe8-d2f009f5a068",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ecb49726-6960-46e1-91f4-2bcbce43db70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ec34b2-24f1-4b09-9072-1cb97ef6852e",
        "cursor": {
          "ref": "b20a0bce-05fb-41a7-8637-df78a1d00e05",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "256a216f-10db-4bf5-824d-3424afa56479"
        },
        "item": {
          "id": "66ec34b2-24f1-4b09-9072-1cb97ef6852e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c3a71ebc-bd1a-44e3-9555-3d08882ecf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12e65e5-1f35-4383-8b23-fd80212416c9",
        "cursor": {
          "ref": "0df53e8f-3a90-43bb-97f0-a84a9a62e994",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aee609d7-581b-4733-a802-eb2be294624b"
        },
        "item": {
          "id": "c12e65e5-1f35-4383-8b23-fd80212416c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "93e10c87-7dc4-46e2-b356-080a77e86364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287070c6-0054-4a3f-bb55-7255d07a8818",
        "cursor": {
          "ref": "30deb938-0f5e-460d-8cd7-da2cff8cca34",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "051811f1-0949-44d5-ba6c-cf2ea57c7fb3"
        },
        "item": {
          "id": "287070c6-0054-4a3f-bb55-7255d07a8818",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f569d018-de9a-4917-a442-6592aca959a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf53dca5-ca92-4d20-a5c1-fd1a1f17f6fb",
        "cursor": {
          "ref": "c87bcf30-8b2f-47bc-8041-1d4cd8873a9f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "94b435fe-b3f0-4f44-957e-0ebcfb411b0f"
        },
        "item": {
          "id": "cf53dca5-ca92-4d20-a5c1-fd1a1f17f6fb",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "65efe1aa-adf0-4b1a-bdd2-4ab54771cc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692030ed-b46e-4c22-9127-ade8fd5ecce5",
        "cursor": {
          "ref": "d3795c1d-54e5-4a49-9921-d69c8f75d7d4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7751bef6-74c2-4193-be5e-5e47b72b0510"
        },
        "item": {
          "id": "692030ed-b46e-4c22-9127-ade8fd5ecce5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "421997d2-18c8-4728-98d4-359aad2ddc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f5a5a3-8db5-4647-ae32-0f77b4e981a3",
        "cursor": {
          "ref": "52a86e3f-998b-478f-86da-e0704d9432e2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f6b293c0-13c6-40f7-986a-86285a4370ec"
        },
        "item": {
          "id": "71f5a5a3-8db5-4647-ae32-0f77b4e981a3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "327da33d-8c41-42e5-a5de-ee7bfd15faed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c39c173-f06a-42a9-8994-8c163615b215",
        "cursor": {
          "ref": "bbaa34eb-ab01-4ebd-8bc7-9e51f31532b4",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3132aaef-d107-4eb8-a662-fd56f94515a5"
        },
        "item": {
          "id": "7c39c173-f06a-42a9-8994-8c163615b215",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b79f2cdf-afd2-4600-9dae-79b9923864ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b61cc5-3e65-4401-9bda-3e3e8883ff97",
        "cursor": {
          "ref": "73944b53-6e84-457e-b5e9-4dfb3a7e3c7b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "652c38d6-4472-4450-8022-a15bc3a39dfd"
        },
        "item": {
          "id": "e5b61cc5-3e65-4401-9bda-3e3e8883ff97",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f3369749-842a-42c2-a63d-bc510a270a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8a728d-c088-464c-9e80-5d2bd25711b9",
        "cursor": {
          "ref": "cd6c1799-6780-4dfa-89a7-44d4f7b81a07",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47a6cc2b-f4c1-4993-bf27-4732ab7dcd2b"
        },
        "item": {
          "id": "7b8a728d-c088-464c-9e80-5d2bd25711b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "76230268-ff84-4987-9e8d-b5eb505ee1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b974fbb-d39d-4893-aa4b-79d0b1c2d0b3",
        "cursor": {
          "ref": "f41b77cc-88f8-482c-a26f-fad1aa779309",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fca1ceb3-3e24-4a09-bf87-7c42fa5fb3a3"
        },
        "item": {
          "id": "4b974fbb-d39d-4893-aa4b-79d0b1c2d0b3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "db083ae0-f6ea-4d76-8b29-833ae7055cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49257ad1-fbd5-4cff-9c2b-ae0817ec3ac8",
        "cursor": {
          "ref": "4b334f30-e3de-410a-95cb-52bec19ab79f",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7999fcd0-831d-4f78-8330-dcfe37e70371"
        },
        "item": {
          "id": "49257ad1-fbd5-4cff-9c2b-ae0817ec3ac8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "33f2b0d3-04d2-49cd-bc24-13deed186581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba9c107-2abd-464d-831f-3fe68ff4a6a6",
        "cursor": {
          "ref": "9c2b6094-06f9-4caf-a2d9-f6d21b09f24e",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b1a4c12b-8dd9-4afa-9fb5-a3976e19ba65"
        },
        "item": {
          "id": "aba9c107-2abd-464d-831f-3fe68ff4a6a6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8269b7ef-3774-4086-ac63-ffad92cd1020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2ff95e-56ad-4b9e-bdfb-a06533f4a23f",
        "cursor": {
          "ref": "ac2b7b1a-5cbd-460e-bfb7-d526d9858ad0",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "71bb9597-9ccf-4e6c-af86-5ff5c6a59c14"
        },
        "item": {
          "id": "dd2ff95e-56ad-4b9e-bdfb-a06533f4a23f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60ac744e-4bdc-46f6-8093-cac4c30d8b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c167c6d5-4f01-4176-8840-884b9cb99eb2",
        "cursor": {
          "ref": "6e6ad68b-5059-4055-be45-66650f480714",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1a0c0c0f-999c-4f1e-8e52-bf6bf535135b"
        },
        "item": {
          "id": "c167c6d5-4f01-4176-8840-884b9cb99eb2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3e1e97a4-1044-4e4b-869e-796445568309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c46273-8c21-4ce6-9c3a-ac80c3982dcb",
        "cursor": {
          "ref": "1e92c8a5-5d8c-4891-b67e-66b280be8337",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "96b6b3fe-1df4-415e-a062-37048c2769bb"
        },
        "item": {
          "id": "11c46273-8c21-4ce6-9c3a-ac80c3982dcb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "95fd27d7-5a76-4053-9a8c-3a8d916f5424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94aeffc-4001-41d6-b9c3-c0e2b5da5ad2",
        "cursor": {
          "ref": "d158de50-ce76-42a8-a498-835cd7ab29c8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "46204c6b-1184-409a-8332-21e48d4d59b7"
        },
        "item": {
          "id": "d94aeffc-4001-41d6-b9c3-c0e2b5da5ad2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d5a9cfc7-6a3b-4566-9595-618132e4b74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0862a92-c120-4662-9b13-8ce9721082e8",
        "cursor": {
          "ref": "5f28b967-4d50-415a-97c3-4313769a3b7e",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9b568860-b1da-4642-8cee-6b0fae2245ee"
        },
        "item": {
          "id": "c0862a92-c120-4662-9b13-8ce9721082e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "19a31aa3-e805-4b05-abaf-6f22e0158b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3c055-3822-42f4-a16d-9d5d742d12ab",
        "cursor": {
          "ref": "d996dac0-f1c5-4cb4-8b6d-76e6e9ab29fe",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "87f796da-9071-4503-b91e-58f73fd6e43d"
        },
        "item": {
          "id": "e4f3c055-3822-42f4-a16d-9d5d742d12ab",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "14435130-43c8-41e8-88aa-7c792986e9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6da716-deca-49ed-b0b7-b48c1401ef7d",
        "cursor": {
          "ref": "de13ebb4-d3a0-4fa6-9df3-3115f1e2df95",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d1f4a055-90fb-4ab3-9f43-c85733bd956f"
        },
        "item": {
          "id": "ea6da716-deca-49ed-b0b7-b48c1401ef7d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "91373c65-873c-4998-97d4-53110a3aa308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370e423f-95f1-4d32-957d-453a9b54a7f5",
        "cursor": {
          "ref": "8ca93077-42e9-4e9b-a91c-d452a56a3209",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5e4bd82d-ccca-46b5-8e3f-4e4e16e7b85c"
        },
        "item": {
          "id": "370e423f-95f1-4d32-957d-453a9b54a7f5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1553f6c5-a875-4c8b-a9f3-a69044aa8542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0a0dee-f196-41dc-831b-58ed8d78c1a0",
        "cursor": {
          "ref": "3b709e35-4dfe-465e-ab0f-72109560b724",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e1e9e3d1-8526-4b58-a43a-01f4c1abb11d"
        },
        "item": {
          "id": "cd0a0dee-f196-41dc-831b-58ed8d78c1a0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3a585571-9fc6-4fcf-8064-4e55a2404a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2013e56-5cf8-466e-81fe-435b7ac3c4b4",
        "cursor": {
          "ref": "86cff8a4-0320-4276-80e6-0f0e11d7f60e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "41d4624c-b02c-4d2f-87c6-13e080c837fa"
        },
        "item": {
          "id": "e2013e56-5cf8-466e-81fe-435b7ac3c4b4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "83680a6f-8d86-421e-9d1a-e3830d959337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71552f18-f381-4d50-9f37-b702705c1c32",
        "cursor": {
          "ref": "28cb8d8a-4e55-487e-b7b6-aceab9ccf493",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "070970af-5537-4a86-b210-6b422c7ba476"
        },
        "item": {
          "id": "71552f18-f381-4d50-9f37-b702705c1c32",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d6d091a3-6620-489b-a2c2-fc4339f2e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaed49ab-63ef-470c-b7ac-cf5b88380421",
        "cursor": {
          "ref": "28dc6f19-d9ff-406f-8f96-07a0fc741f71",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dd2e4c6f-e70c-4628-a33c-78d7da33da12"
        },
        "item": {
          "id": "aaed49ab-63ef-470c-b7ac-cf5b88380421",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "abc05e45-7782-4eaa-ab24-1e22b3e6c6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368401a4-7010-47c6-bc37-6043c17071d9",
        "cursor": {
          "ref": "c47545c2-c9d8-461c-a972-170f7ce3c054",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "60b1259a-4619-4b9e-ae1c-6557e951916a"
        },
        "item": {
          "id": "368401a4-7010-47c6-bc37-6043c17071d9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b06024ba-1547-4fbb-b801-2cbc2f382ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c900999a-7bfa-4df0-ab1a-349e58b073e9",
        "cursor": {
          "ref": "4d03f61b-f09b-4b08-8ab3-81665bbe2f97",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "da4cf20c-23f7-4ea9-8a0b-16b6eea1b11b"
        },
        "item": {
          "id": "c900999a-7bfa-4df0-ab1a-349e58b073e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ad295bb2-dd14-4ffb-b766-9f5b98cd31f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0320045-dfb3-4616-bbfe-2f17f33613fa",
        "cursor": {
          "ref": "c2c12e42-bf64-49d1-991c-c8a3c43271dd",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1ec7e8a0-28bb-4fc4-8d81-40904b523da3"
        },
        "item": {
          "id": "f0320045-dfb3-4616-bbfe-2f17f33613fa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b20a5897-edeb-47a9-ba28-817d2e15871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dc8c9f-34e3-477f-9c5f-26f6e9f75de9",
        "cursor": {
          "ref": "72dc980b-f95c-4aeb-8017-1e39b99b5908",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e8c8b3da-afd2-4c32-8cf8-c6eb8e2382fb"
        },
        "item": {
          "id": "f5dc8c9f-34e3-477f-9c5f-26f6e9f75de9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a6dff715-e15b-4649-90ae-97aaa4b2dfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d777f7b6-3a47-4d5c-818d-ca52b7494e63",
        "cursor": {
          "ref": "d4e27b2c-f31f-4e49-9c4d-e0a1a2fc81b8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4cc2b3f2-4890-43c6-ba58-8c3958fb3f9f"
        },
        "item": {
          "id": "d777f7b6-3a47-4d5c-818d-ca52b7494e63",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cddf59fa-a289-49d0-a31c-032f3daebf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16344337-1e3b-4305-a41a-c11f28b0f2a0",
        "cursor": {
          "ref": "258e344a-a1c0-413f-9e4b-8c1e192d7def",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e6564bd-42f8-4642-bdb9-e452f1a4edb0"
        },
        "item": {
          "id": "16344337-1e3b-4305-a41a-c11f28b0f2a0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5cf4110a-80f8-4ecf-8659-5d86ef116954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6386defb-7e07-4163-8855-14e654e6dc36",
        "cursor": {
          "ref": "fb71fe61-0dbd-4246-8de9-1fabe1fd2c9f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2b114837-3137-48e6-9f8e-886f417d26c2"
        },
        "item": {
          "id": "6386defb-7e07-4163-8855-14e654e6dc36",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3563d727-520b-4164-874d-438ab2fe8e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2e571a-7419-40eb-af67-89be2f500e10",
        "cursor": {
          "ref": "73f0cb8d-2805-403d-9b7c-021bf07bbcbe",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b80f053a-ef10-4741-9b61-f8c0f730541d"
        },
        "item": {
          "id": "fd2e571a-7419-40eb-af67-89be2f500e10",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fbb07342-30d0-4df4-93e4-7be975ecb822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a34e496-a957-4815-8509-b6de462be07c",
        "cursor": {
          "ref": "290f2b87-ad13-41f6-b866-2ee8665cf00f",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b86441e1-c43c-40c6-ab42-0aad81b5c694"
        },
        "item": {
          "id": "5a34e496-a957-4815-8509-b6de462be07c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "eabb8612-fdba-46b0-a5a5-b9bfbbdad89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda93974-2c2b-45ec-933e-4a138f6127a8",
        "cursor": {
          "ref": "6c21e584-7adb-4651-b7b1-8e6eaaaaf3ae",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "59ca26a3-277c-4aad-96a9-ab78cc15014a"
        },
        "item": {
          "id": "cda93974-2c2b-45ec-933e-4a138f6127a8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2d55f91d-e9a7-4d2c-85ad-f951e4b94f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a8723f-5a0a-4104-b6f1-2c8c4f51d435",
        "cursor": {
          "ref": "cd67b87b-42ef-4498-94b2-d7119c883e91",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6faa8432-7ad8-4531-b636-b11376015f77"
        },
        "item": {
          "id": "97a8723f-5a0a-4104-b6f1-2c8c4f51d435",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a7b91a08-bdd9-4508-aeaa-74cf18fda8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf64f1d-9785-4a57-bff4-b18e81c685be",
        "cursor": {
          "ref": "f35c4884-d70d-44f9-a6e0-aa3db57ca5cb",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b9aba40e-8dac-410d-a020-2ce4fd3c83e3"
        },
        "item": {
          "id": "4cf64f1d-9785-4a57-bff4-b18e81c685be",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7e492a2d-e1e8-4ae1-b956-06f3dfe1ac19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6920925-a2dc-4f62-9ec3-e1691c50b8f0",
        "cursor": {
          "ref": "6935c4ef-bb68-43c5-baed-04fa3c903e88",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d1c9e671-343f-4207-9618-6073aee42b20"
        },
        "item": {
          "id": "c6920925-a2dc-4f62-9ec3-e1691c50b8f0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "075a90ad-1e5c-4ebf-a699-8b5d57dd1260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b0134c-85ba-4886-93c4-1f0e23bdf7d4",
        "cursor": {
          "ref": "e2970bd0-2296-4db9-92eb-2f1381413bf5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d96c15fe-d4dd-45cf-90cc-e94c2093c9b1"
        },
        "item": {
          "id": "c2b0134c-85ba-4886-93c4-1f0e23bdf7d4",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bfdcd00d-eeea-41a1-b159-3b430db9eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524442b7-32b3-4379-b116-cd21aa6f3d71",
        "cursor": {
          "ref": "fef2eb2e-ee16-496f-b570-c236e7df97bc",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9cfc17e8-926b-4bc0-b6de-0b6d84d5e10b"
        },
        "item": {
          "id": "524442b7-32b3-4379-b116-cd21aa6f3d71",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "02f3aff6-dec9-409c-8f65-d47f7119decf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a0fa32-4a93-4580-bfd4-ab0066ddb80a",
        "cursor": {
          "ref": "ef92b5fa-d0c2-4c0a-aa4d-75bab5c4425d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ad60c9de-3be4-4918-98a6-ae5a24df01f3"
        },
        "item": {
          "id": "f7a0fa32-4a93-4580-bfd4-ab0066ddb80a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a101e19d-62c9-429e-9fc7-aa723b03d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33867e1d-1c69-4600-82e4-4948a6641db6",
        "cursor": {
          "ref": "5571020f-de4d-4247-85d7-0b1003bba69e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cab833f6-de6c-46a5-933f-2cf7386ac4f5"
        },
        "item": {
          "id": "33867e1d-1c69-4600-82e4-4948a6641db6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "12119ea2-c8eb-44b1-b451-cba160550064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0e0090-b974-4643-a635-b2fcf8873bfb",
        "cursor": {
          "ref": "b48b731e-32b8-4e6e-ab3a-0b49b62bb493",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "41fcfd47-74d4-4c8d-9a42-55144d6b0c73"
        },
        "item": {
          "id": "ac0e0090-b974-4643-a635-b2fcf8873bfb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "41b9742d-0acf-4741-90cb-01095bf60c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8adeed-7cfb-4e5d-adab-20c800ebf53e",
        "cursor": {
          "ref": "1ba83a93-3fbe-4aa2-8a7a-449af0c52900",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5ca5953c-46b1-45a2-b76b-8f052893293d"
        },
        "item": {
          "id": "7e8adeed-7cfb-4e5d-adab-20c800ebf53e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "39b2fa5c-9d1e-4172-8753-1918fa7ef527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8acee3-7db4-4786-a08c-eaecc4079c28",
        "cursor": {
          "ref": "92e1893f-51ab-408d-8a94-0ceaf2453d78",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8089671b-264d-4abd-a21e-841b6ac5ca2f"
        },
        "item": {
          "id": "1d8acee3-7db4-4786-a08c-eaecc4079c28",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f5affc00-eb5b-4b56-a500-0e5807aabbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b1d47e-f1c2-43e1-9fd5-cac81ff7161a",
        "cursor": {
          "ref": "cb1b25d0-6991-4fe1-9346-c36299450faf",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a1587654-dc6f-4ca0-b089-bfe1225ca904"
        },
        "item": {
          "id": "04b1d47e-f1c2-43e1-9fd5-cac81ff7161a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5f76ffe5-6473-47f5-a787-ea1a8a101afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e026ff7b-285e-4ec1-8263-563776c2d064",
        "cursor": {
          "ref": "eb9f2bc6-01f4-430d-b067-16ec30963210",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "df6b4bfa-4d64-4c11-b1fc-8d4ec7adfb66"
        },
        "item": {
          "id": "e026ff7b-285e-4ec1-8263-563776c2d064",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8483a9c9-f93c-4aee-b87d-8b84b1c23657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7918baeb-4a72-4a86-b2d2-e6b6e81c4199",
        "cursor": {
          "ref": "b66c4cc4-6fee-4c3e-ae4b-c8140f5d31be",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "31d25dc8-040a-4e13-a54b-61f450b0f190"
        },
        "item": {
          "id": "7918baeb-4a72-4a86-b2d2-e6b6e81c4199",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a391aa2b-f4a7-49a5-91ba-cdc4b7915d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802f1a94-0969-4466-9833-6381a39ff6fc",
        "cursor": {
          "ref": "e297afd4-6f7f-4c1a-9e28-5155bf247074",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a2c93dd1-f48d-440c-95a6-e3ca165cb95b"
        },
        "item": {
          "id": "802f1a94-0969-4466-9833-6381a39ff6fc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b34d36c5-4539-478b-9111-941f5faf37d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298d3031-42f7-4904-828d-82e710fb52cf",
        "cursor": {
          "ref": "dd768524-0936-4cac-b2c6-49a7a419b1c0",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d75ccd20-73e1-4057-b152-c2cc23579b2e"
        },
        "item": {
          "id": "298d3031-42f7-4904-828d-82e710fb52cf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "49f5daae-8e8c-470e-8ba8-6305dfbb91c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1763b08-4af4-4239-a62c-c8aa0974c6c5",
        "cursor": {
          "ref": "70689874-548b-43ee-a4ff-64290f9b0058",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fa95a7ba-e5d8-4398-9066-59fc408bbd8d"
        },
        "item": {
          "id": "e1763b08-4af4-4239-a62c-c8aa0974c6c5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "14714640-00a1-405a-864e-40b77ccf6ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf360fb-c26f-4eaa-8992-65961a274bf4",
        "cursor": {
          "ref": "6cd1444e-f3cd-43e0-baf7-b96a1b256f8d",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dc829a47-dbfa-4916-ae09-e1e9c581ade0"
        },
        "item": {
          "id": "7cf360fb-c26f-4eaa-8992-65961a274bf4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "21313aa6-3fce-4977-ae73-879247f37dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b547f9f5-a5b0-472c-a5d4-bbdb7c01bf85",
        "cursor": {
          "ref": "b323be97-4bc3-460e-af20-067494dd6e7a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "558865a5-f810-4acb-83cc-c99903c238b2"
        },
        "item": {
          "id": "b547f9f5-a5b0-472c-a5d4-bbdb7c01bf85",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "95f77e8e-66db-496f-b220-7bd8025db4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337534cb-3535-4985-97ee-6dbe6b8fa6c3",
        "cursor": {
          "ref": "f2d60901-5056-428c-bee0-04903b080b71",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d530f6f3-9a1c-4534-9c38-3db66bc397a5"
        },
        "item": {
          "id": "337534cb-3535-4985-97ee-6dbe6b8fa6c3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "91535238-c4e5-4e4c-8bfb-d9cf23b8910e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43dd6ed-111a-4039-b63e-a2443d539977",
        "cursor": {
          "ref": "51b592cf-9b71-402a-a8f0-071cf5437eb4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7cb9800f-f40c-4ac8-afdc-cd4f05143412"
        },
        "item": {
          "id": "c43dd6ed-111a-4039-b63e-a2443d539977",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "90b43eee-491e-424d-b623-5c58ff669bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e05e7b-3256-4ca9-8a34-e5694b840bc2",
        "cursor": {
          "ref": "abd968e3-d737-4501-a8d9-eaa18d84323b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7e7a894f-9b50-4a9f-95a0-6625cdaf94db"
        },
        "item": {
          "id": "40e05e7b-3256-4ca9-8a34-e5694b840bc2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2dc364f0-dfad-4a0b-8fca-57145275cf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef6fb5a-9c85-438f-a433-b5900f9d3b01",
        "cursor": {
          "ref": "441117e6-02f4-41ae-a627-8649f6ccfda1",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0d35a13c-17aa-4344-80dd-e042af3c185c"
        },
        "item": {
          "id": "cef6fb5a-9c85-438f-a433-b5900f9d3b01",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b9cdd9f5-429e-436f-a827-4879a9156a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16420fdc-1dfd-4548-a1c6-e9b34f772c29",
        "cursor": {
          "ref": "1830ad49-0057-4ea3-b933-c79314a387e2",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9fb1234b-0e88-46ce-8d9e-5863797d6cce"
        },
        "item": {
          "id": "16420fdc-1dfd-4548-a1c6-e9b34f772c29",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "176fe179-43ec-4271-8a66-fd808b059e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8515dcf-cb32-4400-87f4-d7bec058e35e",
        "cursor": {
          "ref": "ec3d368c-e54a-4ddc-be63-3281ad41325b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3e016cee-94d0-4326-b2c5-d2fdc2159174"
        },
        "item": {
          "id": "d8515dcf-cb32-4400-87f4-d7bec058e35e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0644f477-e284-4fe1-8bd8-d34fe3e16535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e454b1-6c0c-43a6-bf23-3df461e0f914",
        "cursor": {
          "ref": "bd908987-c109-4b5f-8a60-e6ea7da941f9",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d20b81a2-daa5-4186-9a9f-2f77d3544865"
        },
        "item": {
          "id": "a1e454b1-6c0c-43a6-bf23-3df461e0f914",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3bb09ad5-7260-465e-bde5-4cc0661c1626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015e24d1-ae45-4117-9280-8eddbcf7ca8d",
        "cursor": {
          "ref": "b4cc0de5-02e3-4ade-a544-1fa435e66fee",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "08e51c21-d78c-4f1c-a8cd-d8e962b39263"
        },
        "item": {
          "id": "015e24d1-ae45-4117-9280-8eddbcf7ca8d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b73b3875-3086-4768-8009-a22bc28b47f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5610d50-3b87-4ba0-a486-d0fda4d3ed09",
        "cursor": {
          "ref": "8e7aae00-4112-4cc0-a24a-dd649dc0d084",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "29a48ea5-91b4-4885-9bf3-6bb3f60160fd"
        },
        "item": {
          "id": "a5610d50-3b87-4ba0-a486-d0fda4d3ed09",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7c5bf73b-2d97-4791-87b0-5e0cb52a24db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c6906-fee3-41d5-a5c9-412295e67d9a",
        "cursor": {
          "ref": "18a09f52-0cb6-4bb4-be87-2b36fa249c62",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "e9d89161-c6f1-40ed-a57b-118bde9a5912"
        },
        "item": {
          "id": "602c6906-fee3-41d5-a5c9-412295e67d9a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8a8d8243-1b9d-4a6c-97ae-f0380021c59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e23ed4-180f-4cd7-9f86-d95ba823b97c",
        "cursor": {
          "ref": "13c32f75-d519-401d-8ffb-f8ac3f1ee284",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4e4141f0-078c-4ec2-b05f-b4540c1a6fca"
        },
        "item": {
          "id": "06e23ed4-180f-4cd7-9f86-d95ba823b97c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1782d9d7-03cc-48ad-b3f7-6d4c0bb4ec40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9af6f4c-01e7-4e3a-a562-3c5fb8617177",
        "cursor": {
          "ref": "cfa1f0ac-a189-4016-8b57-5354c34a11cb",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ccf88063-a071-499a-a4ef-3f1f2639bcd5"
        },
        "item": {
          "id": "d9af6f4c-01e7-4e3a-a562-3c5fb8617177",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1e127364-933b-4dfc-a55b-ea6166ce4dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e925094e-14dc-4b66-93d4-c170a52ff855",
        "cursor": {
          "ref": "bcd0d200-cf43-41d9-b4c4-f628d0536470",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "77d00d64-12b0-49f0-9bf4-3d165b2d9547"
        },
        "item": {
          "id": "e925094e-14dc-4b66-93d4-c170a52ff855",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a197419b-ae9b-4aa7-bc26-f9d050da522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12368db2-cc2d-45da-8e44-e5fc13ad04ee",
        "cursor": {
          "ref": "a97b4162-e3c1-40db-9f78-31a4fe0df897",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "24afb45d-a6a2-40fe-b2b5-634ccb666cca"
        },
        "item": {
          "id": "12368db2-cc2d-45da-8e44-e5fc13ad04ee",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "cf0fce22-1064-4ade-813f-4af69877f841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cdb530-c715-496d-903c-5c5a7b2c1c27",
        "cursor": {
          "ref": "eb1fc153-eeb8-477c-8f36-1da36fadfd9a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a35f240b-b245-44ea-afec-ffb0735c1546"
        },
        "item": {
          "id": "75cdb530-c715-496d-903c-5c5a7b2c1c27",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b7e80b9a-9990-46ad-850f-59e031ca6137",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39e65c7-8f25-4935-94d3-b1d38de01e29",
        "cursor": {
          "ref": "19abee34-2274-4ff9-a503-ef05dc853e29",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "60ca73df-5d27-4d42-86d8-a5166919b9f9"
        },
        "item": {
          "id": "b39e65c7-8f25-4935-94d3-b1d38de01e29",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "138d63db-87f1-4fb1-a546-5de6a72b338c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd631e5a-39cf-4939-a52c-b067b5f2b7f4",
        "cursor": {
          "ref": "452d490f-08de-43b6-97a9-920c8b1ce55d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "dc29e04a-227d-44bd-9c88-03002380de06"
        },
        "item": {
          "id": "bd631e5a-39cf-4939-a52c-b067b5f2b7f4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "873d2119-c14b-4b31-84fc-9ef91f2e1d0a",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a92bb56-f1af-42a5-b13c-ac4bc1565302",
        "cursor": {
          "ref": "d0096d2a-7a99-4489-b20b-a71c46afa603",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f1714c68-34ab-4d2b-a4fc-7f48a1dc3d78"
        },
        "item": {
          "id": "9a92bb56-f1af-42a5-b13c-ac4bc1565302",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "82e287a5-188b-4756-adc9-9d9160ffec66",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f5cfa6-2043-40bf-a58e-38554a882f8f",
        "cursor": {
          "ref": "4349fea5-0c2b-4e7c-8192-54e0c97247ca",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c327a4c-6c16-44c5-b50a-6383f486a46c"
        },
        "item": {
          "id": "d4f5cfa6-2043-40bf-a58e-38554a882f8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6185ad6-1b8b-4cf4-850b-6247539f0f72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f5cfa6-2043-40bf-a58e-38554a882f8f",
        "cursor": {
          "ref": "4349fea5-0c2b-4e7c-8192-54e0c97247ca",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5c327a4c-6c16-44c5-b50a-6383f486a46c"
        },
        "item": {
          "id": "d4f5cfa6-2043-40bf-a58e-38554a882f8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a6185ad6-1b8b-4cf4-850b-6247539f0f72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79b4ffa-a0fd-440b-b5bc-0c368f5afa73",
        "cursor": {
          "ref": "48dd81f3-8354-43f2-b43b-d0ef9d076057",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1f92025d-f687-4f0c-9230-058b2c82c66e"
        },
        "item": {
          "id": "c79b4ffa-a0fd-440b-b5bc-0c368f5afa73",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2971e36a-332c-4654-a575-6ac3ac139612",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e09834-7b25-4c14-8ae1-36adfb5580e4",
        "cursor": {
          "ref": "56367de2-dbbe-4705-a32a-83b4e6cd6b20",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f4d1b8d5-ae6d-4c99-a232-dd5814964e24"
        },
        "item": {
          "id": "44e09834-7b25-4c14-8ae1-36adfb5580e4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5e98a7e8-e58e-46c8-a4a7-caaeca9a8374",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}