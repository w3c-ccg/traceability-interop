{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0ef869a8-8c98-4e0d-9b38-40a4a2177d67",
        "name": "Clear Cache",
        "item": [
          {
            "id": "12a09b4f-faee-4dc6-9388-c4735dac76ce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0b3605dc-f398-49a0-8528-77da850e765e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b90361b-6c85-4dcf-81ff-8fc9b315ccdb"
                }
              }
            ]
          },
          {
            "id": "a0f7c39e-e7c5-418e-88fc-01ac70244714",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d23a3bc-21f1-404c-b75b-5aa4c91bd21f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a149381c-b137-432c-a351-011637a8fb6f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eefdd977-4914-4df9-8243-c66b4352abc4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e8c43ea8-3d72-4789-ae44-39a604a1e003",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05d22cf8-f2e5-476e-8835-e49a7673913e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5b59626-a26b-4479-b208-a702b96cd37b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e276af86-0240-4d2f-9c92-b97e94f7ed17"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3d50127-a785-4df7-b8cc-32461b898726",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08374b30-e547-4cbe-be8e-b6ebd496a2a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2dcc9c2d-4da3-4699-a25a-f7dcba72ab7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d1f6df18-b6da-4e2e-a4d1-a49cac987be4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3a4035b-b12a-4cf1-aa93-51b7b1304c03",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a511d9a6-1809-4c18-a3ab-633bc4854423"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb42aba1-e0b8-4644-859e-c9ede9fb4b0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abe880a9-33f6-4375-8634-75e1a2fd33c4"
            }
          }
        ]
      },
      {
        "id": "9404b4f2-0670-49dc-971f-6c86e40063d4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6a6b02a7-b1b0-4117-a8b8-d5bbd0cc0534",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee1cdb0b-ba80-45a7-8c3b-d5ff9fecc22b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14e009ff-011c-4c0b-8ce9-7a58d818cff5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bf6621-5cca-41ba-a33b-3fa2245f66fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a96abaa-8296-4db9-a287-e0da058a2b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc113e0-3e1d-4100-b6e4-0c633e3eb0d2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a9e63f-4a82-42b1-a017-111ff39d8d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c86a7357-8157-4524-bacc-012546613003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3c351b-b9c8-4238-99cd-1e2c5f7dd5ee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d787d8-b953-4690-9862-9dac5e412251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "135b40ee-ce0a-4b94-ab97-1328998bf111"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ee5c64a-073d-4cfc-be8c-0cf5a7cc907a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cc434bc-80e7-4ee0-899d-485bef937450",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daaff76-32a7-4d1f-a342-945e79ab3f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67fb9969-0be3-4441-bfbe-a44de0e8293d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de1926f-feea-407b-bb9f-594a1ac33fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7940cf6a-95cb-42b9-90da-b5936f4a985a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6c86d87-b0b7-42df-b387-74396ee8edfb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d2d16e2-6008-49c3-8d4e-3b5155dbc464",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72589978-321a-477b-bca1-1a42e7ccf779",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4a066647-250b-43dd-9434-97bb137eecc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dea73f79-bfef-4879-aaa3-d7215555496e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c8c154be-be56-45dc-8758-83fae9a16c94"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f8489e6-a334-47de-b271-f21ea9bed943",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "163e0cfd-44d1-4aa3-95b6-354b00759177"
            }
          }
        ]
      },
      {
        "id": "94efba02-87d7-4464-b9d3-e582edecec80",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fac4b296-5af5-4ead-90e2-6ab48f778548",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8c25853-cc1f-426c-bc37-ede7bcbe212a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1801dd29-5f7d-4af3-9b46-c93d2d5a6e98",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ecfcb0-6f1f-4b81-9640-52f3a318103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156d5481-b15d-45d2-b137-8ba91af38516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ae898-8493-4d89-8d8a-1d6fb65966ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1024f8d0-8067-44bb-b735-408029aab344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db11bdd5-916b-4ea5-8bad-88c13429a940",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92c062c-0162-4344-ba72-0ceaefbf8412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed454964-168a-4f19-b79c-e887bd0872cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fd525d-6331-4b85-8d3e-5e9f3d7981c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44b164a5-229d-4f59-8fbe-ce8372736967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88388852-b5ea-4fdb-892c-fdc295107943",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7707313d-eac5-4a5e-aa6c-df5cb3b79780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610689ea-7224-4e85-bcb6-0df2d8ca575b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee4a69d-5397-4a05-944b-600a7d9271ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0436c7d3-623c-400e-a837-c1e2ffabb124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876dd435-6e81-4034-9d92-9e726c882918",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad770e-a98b-4443-b31a-93a8b593d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12697cc6-9b38-452a-91aa-3d90e5b39bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614a3da5-f1d9-47e5-9cfe-8f7d30848fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a84d460-11aa-42c0-b4c6-e1d666b03200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d04e00-25cd-4ff1-bf10-3955af15c118",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83bf1cf-648a-426d-9d96-4022ec7cdbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c02e6c-048c-42f2-ae49-4944de8c7f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ede378-d2b3-42fb-9589-dbabfca4cc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "552333a6-3e77-4832-863d-c277235f5292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f07918-2952-4bda-8318-6a7723647c25",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0772f3d2-5970-4215-833b-0fea0858f702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10741c76-d47d-45dc-ae00-ddd038f474bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86ed2e6-3564-4035-a0d5-31c5a9465301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35423506-0fa5-4844-9486-b20438250f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cbdc1f-f94b-46bf-971b-7b97fbaed44a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e081147-416c-4dd7-97bb-eca54fbfb47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63c1d1d-699c-4f8c-84a9-0fccfaee8ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effdfd0e-2cb0-4d1b-84b2-0a9c2c522913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "025edf42-660b-4525-a847-f6b2ec25532a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b069ac2-1187-4828-be4f-022787a2b999",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7ab855-554f-49db-ab1a-70122ee7eb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7154f83-b8ac-4a48-99e5-37d2af5822b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a885fe-0c3c-4a7f-92a7-2f8161c943b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a449b66-cbbc-42a4-b4e0-ee83b0454786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606ad0d0-6755-48d6-9a90-671d7a444fae",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea194cf7-2a5e-424f-8018-56be4b1aa0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c537e5c-1a65-4314-b35f-74c64f261f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910bf214-be0e-466d-849c-9235fd4acfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ac0c199-9beb-464c-a485-9eaee9da8db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3425fa1-076c-4643-b797-b0303f8d287c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4ba92d-8865-4796-b5ee-2fae269fb32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3633771f-7e9a-4df6-bdac-d0cd5531387f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc97e83-9bad-4bbb-965a-f5b29e96880b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0d63319-c41f-41af-ae9d-85793a2d18a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4abc11-1eca-4097-bbf5-85d5e4b2b91a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0259fa0e-877a-4817-afaf-b8cdf1e5203a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ae1624-c803-4cd6-96b5-6e0849763c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbd5525-7767-4819-9735-e7d08eac45cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f6554f3-247b-4467-84b4-bb04d521f8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256fc3ae-8924-4cc5-96a3-250fe3d4ea7c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c6eba8-98f0-4c9b-beeb-85b6a8d925b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99ce0278-ef51-4393-a489-c24602a2995c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba2b92a-4ddc-4dc6-878b-39bfb85a01af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0db00bd-9791-49d8-a13b-6d11dbe24c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5ff98b-aa22-4f38-8626-3dd3766f32d0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0166f4a9-86ca-4c20-ba5a-57765c642d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f68ce7-f888-493e-86e4-59fc4caaec1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da389fb-6ccf-4eab-8539-1aafb1f11369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36d415c4-e0ce-44a1-976e-c176e49ca93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863c0101-db8a-4590-86ec-d7c4c1e37ce6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1e1a9f-41a0-4c16-b9a4-b7a214840ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7a139c-c12f-47b6-b591-0b00b20e0fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ef127d-634e-49d5-807b-943f4cae2602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb5954e6-74dd-45e6-8fe7-2eaaed5c8351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb03697-0d89-4b38-a6e4-6b3f0cee5cc3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df053b7-a375-424a-8322-31326a396ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2911f47-81fc-4ef8-9030-373dcaecfe56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c630b2f-4ecf-40fb-9f2e-6d40048ed757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7ab3752-88c8-42ff-9314-b7276a596766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dc0307-8cea-48b9-9e42-72801b2ea64f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83400c0-10b7-4abc-a0c7-f4b835528536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56bd7a78-13f8-41b7-a427-806a023d48af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b8f4e5-4ce9-46cb-87ba-cb0eabd230d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b4be00d-9ab0-4501-b770-52ea7b70a481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bf6268-6ce4-4e3a-8267-f768857f191c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0132607d-6e38-4d99-be2e-db9322a0afb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3da52d2-f2c2-4d4a-8f1d-dad2d86b3b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74ed045-386b-469f-b500-f930d2d6c59d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ec3f1c9-a219-45eb-b81a-e87dd46b75e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef2557a-e3b5-4907-b2ec-73c7fa932821",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cf84d4-3961-4e2f-855e-3296b306adc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8cfa16-0737-43f7-8bd9-ecd04c660c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eef8fe-2793-4d49-afd5-afc0514eb028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "124cd47b-c401-4588-964f-fd8a9d9cf71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cb0608-e3cf-4464-b916-47c5bd3f3ca6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ace1f55-701a-4618-8890-bc6756a432f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41db822d-bcfa-4efb-888a-d988dab8a88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6acbe1-5d67-4b9f-b4fa-dd72b0f4f62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5baa2c-b1b9-4dd2-991f-4a0ac8e3e65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa821a6-6e14-4a6d-971c-df8af498dd21",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9800b52d-af4e-47fb-bb82-f19553c4df64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0542953c-94d9-4cb3-8da1-f0e1d8a9be4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feb47b8-2245-4174-b719-17bcf3d9954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6717ff5b-81bb-46a2-8946-e940e37beb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d25aede-0d4f-4c86-a891-f46bf0789056",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2682ce79-9d27-446d-bdaa-ea60d615f01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9f1b92-d5a0-4557-9fbe-64bd8b5adb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06041e95-ba01-4504-aa9f-ef208da345e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69ad70b8-a042-427b-ba34-5b89406e7284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef1316e-fb39-46b9-a8cd-3c33d5d9a37e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c7c53-d661-409d-8886-46bbad3085cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e28a2c06-8e73-4932-848e-d5060c64fa2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46312939-6733-4bcd-8b2d-a674f7a92ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "335e5420-ecc0-455b-afca-1beb45fe7d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bba3732-cdd8-44e7-a25f-36e0f73ab5f7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422a9edb-b4e9-43bb-a86e-8e6e43e5a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c46d66-fe37-4893-bf10-16cde5c4aa87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ddbd38-f67d-4234-9de6-18b19c0b6526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0794e0cb-8751-4404-8fed-4b2168da72c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d2da8a-9970-4f04-aa18-e9f4cb16a7d0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736c7534-0e5b-4d90-a3f1-9b0b0fb6f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77ff603-15d5-4b89-9106-d7a96e9157f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de60a486-c903-4538-b364-0b9ae8c0a872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e4cfbc-c35d-44fa-8bb3-e1589a090eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403a25d9-3615-4340-84d9-3a6a638f0f55",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82854770-c7a5-4ccb-9cb0-cf403f5ff03f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aded218d-4be0-4a97-95a1-2cb12fb181f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0160135a-2c20-492f-a589-537233f6974f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94611685-7559-4f2a-8542-a0da790ba65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f420e-c7a6-49a3-a067-1004cfdeff4a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a220b7-0ce5-4bf3-a1fe-215627a3dab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40aec725-17ca-402d-b048-835db8a55738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9c678d-b27d-47e1-b491-9638a7d1c161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef20e4a1-0454-4276-bb46-1b6928636d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82a3652-4d51-4c8a-bee8-7fd2d524b554",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cff936-a362-4adf-b33a-1bca31f09c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d89e9f8-7891-477b-8728-564ca811d558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12ebc45-5724-4b30-b7df-7019a761601c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e00b32-8ad2-4554-9b0f-9c785207cd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc31df5b-e097-4c39-b4d0-687d273ff492",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387e2b6-0611-43e9-85d3-e24b71900612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e384823e-b128-4588-93a9-02717034f8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fce914-e0c3-4133-89de-6d8de1a2756b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1989a13f-9826-48a1-a04f-ac2eda0eec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eb51e4-3f61-4827-a135-d14bc3942377",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694f505-e550-48af-9422-76bdb7d040cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987c26a1-916b-4584-a821-5069ff5ec1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5576f178-67e5-4c8f-a6e0-b1795f33c245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d583a66c-8c25-4b07-acc3-84bd283ae7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7e5330-bb02-423b-9093-d3ee5024560f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e2d9be-79b0-43f8-96c0-aba05a58ccf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac5c1f1-7e31-44a6-90b4-416c2e10dcb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cd9b5d-5a47-44b4-8898-6a48a01ffda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9ea025-6cd1-4aa1-9648-68ff5bc57894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d34be-343d-4312-9587-b11d9c536bfc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8a7ae8-63d6-46ff-ae4f-eb92ea032a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160131ad-88c1-4ea6-aef9-b273c82629db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59adc02-e8ae-4c55-a626-c8dc1b40a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3511a104-c639-427e-9428-2485db494acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbfa6a4-e8c4-4b47-86c3-a168b3c2a145",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317ae3fa-b5f9-4246-b10a-124128c70efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28af5dc-9744-413a-92a1-e12e7b9eb936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eb897c-056e-4367-849c-417a16a54c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "674c6a81-7fda-4ffe-bf5d-b221182bd5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c1a20a-c99e-4119-b778-d10e44f27506",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04592dc-10bc-41ff-bf2e-7f1f075a5433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2580b8-f5f5-483f-bfe4-55c26ec6de97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b4276a-8211-4c56-a46a-6e1df8c02f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10335104-1b1a-45a8-bd6c-763f5d0ff7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa965c1-fb6f-4887-bb6d-bad4c90e5937",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78640f61-e9e9-4d39-b22f-36b63fea827f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f999634-d276-4b0d-ab59-fb09680ecf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aaf0a5-6013-47f8-9fbf-a59890191d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e66cce14-862f-41ba-9651-d32b0fc68057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c460fd3-870d-460d-8c3b-3bd335218318",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db6073-da27-412d-a979-9288d67a1632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4396619-0bb0-4595-855b-b595074a83c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c13bcb-260a-4821-b5f7-76ff02a26dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8f479bd6-cc32-4e90-83cf-29f8b957e132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8826872d-9151-4fe1-9d31-89d698ea26d2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72014604-887c-4eac-a28c-35310d24d8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67ed25e6-9bc5-4a61-b658-ce3cff93c704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f33c8d-641f-4b6d-87c7-bf9ce3ed0c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd63a1f-47de-4224-b2a8-6c9324c8d60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4f0a16-88d6-4ec6-b16e-f9368f046596",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282647c4-fd96-4d9b-a7e4-f9646c8a32a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0db0902-8cbb-4f93-800b-5cbe29bfda97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9754e364-bc06-4d1f-9997-ccd78a78e35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6658e9b2-0151-4d85-ba37-32d7e0584171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4944c433-1fb8-4f4d-ba86-65e425aaa953",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "089f33ab-8f9a-498b-aeef-f8ffe58dd1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc8d436-761f-411d-b2a1-cdc9869809ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25268e25-ba38-483f-b3cf-b039e27618d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a14714-5d69-43e3-9359-5a409fb5e974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a487d108-cc41-4939-8a3d-9975385b2e55",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cabf24-db81-4f36-8090-124014825f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713456b2-6656-4f01-a4a4-2a2067c4afc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb6084-4205-4f7c-ad36-0daca966f045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c80482-daf5-4cd4-b963-ed35e8e59364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e059b5aa-a974-491f-82b5-cfee61d953e1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74971ac-aa19-4c5c-9b04-458f2ddcf362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9501165e-f287-4f0b-8ced-cd5c189263fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0acad8-6549-4736-88d2-7dd55b4a02aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee9cab9-b478-4a3c-bccd-72f8f2001fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72a41d56-c80d-4e8b-879d-b4a8f4f8543a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf9131c-3e31-4fdc-a933-7e68bbc7d330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2a67ca-af49-4671-b994-08144271b555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4822c7-fe91-4e8b-bedb-cd719a287ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3142d3b3-b91f-4249-8494-99a972ae5982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88f6c58-acd0-425b-8b78-424eb84281f8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd759ef-b0ca-4b1e-8ff1-f08dc07598bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f82c0dc-326c-47bd-b795-f929dc80ce32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f036b2c-f780-460e-8b62-5349f19028e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "91a3928b-51af-4ed3-98e3-538007135759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bfe63b-6cff-438c-8ab0-ad65476ecaf7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3c7e70-94f9-4b50-9860-1c52191839d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d7b36b-86f3-40b1-b5d9-30ef46427db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96749cce-592f-4b13-b9e2-907fb4d1e8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "901ab85b-26e6-4e7b-a625-462d63412d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807741b2-7a94-47ee-8195-7f28bbcc4d50",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641a388d-7391-4bea-890b-194716ef3ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdc31e4-dae2-41a8-9dab-f5b90992fdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530a0cae-13e9-49b6-80c7-0de3e4d8a51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "710cdd29-afd2-45a2-b775-741980f7db92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dc4231-05a7-460b-83f2-04386342ed48",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538baea9-c4d9-4cb2-b16d-b83ca6096dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162cedd4-b9b4-42ad-a34d-94636e78e276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bcf369-b25b-47d6-802a-f570ee0b38e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c84890dd-287c-4cd6-b09f-775f149feeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339a05f2-844e-4c1d-9198-d636e3241cce",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d02ac33-4a8b-41b6-b2d6-56939c83aceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808b1925-9efa-41f5-aa9b-8c24ba3bf38c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de28d95-4893-4f4c-8c30-04e991ed325b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e21511a-3c45-497a-9c91-418c49e242f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cdb846-42e7-4eb7-9a88-16225deeb776",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8eade8-bcbd-4434-98df-50de63d72b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af56dfc-e7bc-4f85-a363-cb983e21a7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e3c241-3ea6-4cd5-a615-debcd7e18662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e3730b-bcb9-4b02-a327-261d5f5cb87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d13e68-7f73-40c6-b7a6-7050c6c4c833",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bc5808-4ada-4bc4-84b5-bfd0415d0094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4ed425-d507-493a-9916-657c951a2d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a4bab3-1691-42a8-8b11-f264979f01cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51fd595d-fb76-4839-b1cc-f7a07ec69dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf62da2f-7e4f-4267-9e41-e66d4f14ce46",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68666603-6786-48a4-ac92-43511e81de2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d577ef-893c-41f3-86c3-b9c28becfe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0277e517-6815-4c8c-8f8c-ce5d5504dd79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ca52b5-387e-4da6-a09d-076e602656a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28fda00-5c84-4f83-a078-383a0a01abfe",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bb49dd-96b6-4055-a54d-7c3b0078706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f61959-16d3-499e-b286-54a2c0965cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d237d8c4-f184-44ea-bc2a-cd087293fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b671e527-45bd-4b47-83a6-a26b403ccc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c228865a-01fd-45b0-b59a-b1e6a17eb3cf",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bae0e3-b8e0-4907-87d1-124c3e5636f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e204b9c-30b1-4b75-b55c-0f30be30b468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b9e455-b99e-4554-a6e6-636c83fc9028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "347921f5-6249-42dc-b94d-a792923acbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2770435-093d-440d-899a-179e1d5cd5f2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf2ac0c-49e4-4088-9d71-ceadcee59054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2f910e-5e86-406c-afdd-3f3f44d41894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730d6173-84d3-4527-b19d-ba217241383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ebd58d-b2a6-409c-8411-fba2c21d3cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3668fb-7fe7-4e62-ad62-3c9adfc4c2ec",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e048ffff-fdf4-4784-acfe-7984c0c61c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda411f6-6f20-4edc-b782-faf883f7897c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0c40a0-e5b4-4b02-a5bf-bc44479a7462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8423b7e5-a8b2-4401-995f-265e67589c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c33f347-d80f-4245-9236-10f0b795ddd2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a43e7c-8258-4f6a-95d3-39dd2e1bcc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ec3545-2dd3-4b06-99a1-b008f2950b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfcbaea-02aa-43c9-86c6-2ac0a959ed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dadf7509-b0c9-45a4-9f43-8fdea03f6be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b31994b-8e6f-424f-8d28-1c0c035adc18",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbba92c-cd5f-49c1-862a-6ec9642eb70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526ab941-9652-44a0-b7aa-5e7031f7b89a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d30a33a-273f-481c-8800-d715037afc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f305ee3-15ce-4079-8c47-b635b273c8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7170a320-f5f4-4548-8da4-778379266aff",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf3c201-6728-483d-895e-3f54d2054c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137f2bf5-8e65-4a89-86d4-435a964c7f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98775e42-5c9c-4458-b67b-a85ff43b60aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "538dd460-7885-4d8b-ada1-e0409566ba5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3132aca-ec9c-48df-8199-0bc86ba42df5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b52f47-b8f5-4d23-ae32-b002c13f333d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ebfdff-9436-4233-a26d-1cf0d10618b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353de57f-96e4-4574-bed2-4eaf2edac6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "effba868-5bea-4961-a2d0-332f65193a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbe0764-04e6-4c7b-a201-97f5cdc72a1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6996c6af-312b-431f-994a-ed7555f6661b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91c63111-49c0-4016-8398-7208fc3988d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38acb19-7150-430c-bc65-7b0f519bab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a4d1554-1fa2-474f-aa84-43e5a93fd51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bc0eb8-5705-46dc-95fb-0dcac71b6777",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098f678e-0846-47c1-9e3e-06cda74ed641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af8736f1-e65b-4cb3-bbd8-8c4e1bf9d80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034facc0-5478-4fcc-a8cb-749f4c0a7df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00f36418-ef61-45b1-853f-c80cd13affc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571a3f12-8330-4684-9260-107bdaea28a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9bc8f7-4c04-4df2-be96-16b847983252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e99e24a-15d8-447c-8646-aecb4755a5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d10218c-f79c-4092-ac7a-fda9f77fc135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5806def8-0f97-481c-b743-7721b3851e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0247d1f4-315b-4372-a57c-32567364238e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c54e87-a1bd-413d-9019-40a8d880e567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd90052b-25e2-4f59-b1da-d2193bbfc1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e455abf-0a1a-4a96-8979-2fb9b4b1f144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c416e05d-3067-463e-89c9-275034297e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b1071c-62be-497e-b413-90805bdef180",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ee6d3d-20c9-4bca-9fc0-e274bbb8186b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e61b4904-cca0-4732-92b9-364f54942f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4aa328-a952-4998-9aa1-3a39aac450ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28c7182-cbc3-48be-86ce-6df2454f664c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdbd21a-10b1-4367-a9f8-4af9cbbccaf1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26e464a-7767-44ea-89f3-e2fe270ca9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47894b77-0bf7-459e-8323-e4891eb8a298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8367bc8-66e0-431e-99e0-bd01b998ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "113520df-00e0-4d9a-bdf8-ec6d93274318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bd9c4e-3d79-423b-a38d-85d6db99dd01",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac224bf-8d81-4644-96a8-a1177a0b7d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1780eb53-ec5a-4200-aecb-c721272f7967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83423c1b-f7ad-4c00-9d04-b46f75624e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6524fcc2-12f3-495f-bb34-6a41060a1387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565c6a7a-5b2a-4692-a374-7a5ea2d95563",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c6f50f-6398-45d0-a5f8-98139d8ca614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3691c8-0705-491d-b0ef-5b1cbe164732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039d7149-e444-4ce7-9d54-14739357c3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d8dd36d-9588-4e70-9800-9feff75bd02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9d11c1-653f-46e2-affd-294071dccf2c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1879ac60-6cc2-4ee1-b2ad-33c27ac47dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548429bb-e86f-4bad-9cfc-1ec5966e2534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befe1317-fc8a-49cb-a776-70785081bd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cebe4fd1-a554-494e-b663-963996285dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b312bd-6368-41e9-99d5-d7f2df4dd331",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a43b5eb-19a7-4cd8-b8cb-0dab7d8248c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e60872-8914-459c-a413-e9a0581fa5bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3722a59-51a0-4988-987c-b3c47e614bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37eb31f5-9f89-4ec7-ae96-c87b1e19cbe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f68a8f9-efb8-41a6-9512-8fb112b7b78b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80f870c-ed77-4e2d-a18d-e85fb2e99438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb982ce4-d12f-429c-a74c-d8768e2ce2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dff0432-3e3f-4e8d-a987-cf1f9409dce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5960303f-68af-4a6c-9dee-51ec35dffa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5969ef38-fbfa-43b5-a931-7302a37debcc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d1a0cb-08dc-4902-b64e-c0b6817ebe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4183d3cd-f270-4d4e-8bd2-70aad7d3de3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469a5a36-03ed-4d3b-855c-f64701c836a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0b98e1-a32b-4f7d-9544-d4c1ccab9106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f18612-49df-4fec-9965-80b8a389f7e6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc95827b-3e55-4ef7-8419-d7613d2ee538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f36e3aa-e432-4ab5-8b2d-0dc1906dec20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c62f62f-441e-4ab6-af27-d19caabb8061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d8e500-ccab-49a3-8f87-29b87263aed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ebad96-c68a-4630-a053-a90ed787230f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3491f98e-59f1-4d3f-bbe3-707844088dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1fc13e-a3c4-42df-bccd-915041618a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a2f59c-4bd3-4e5f-b277-a3b880c70078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7df676-16a2-40ad-977c-a1fd56bad589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b301a0fe-6a22-4d88-9f91-493de7a20b6b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95645766-4bfb-44da-9ad8-25a6741ecc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369042bc-e33d-44f2-ab8e-e422ca8cbd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b4bcd9-3664-4da9-85b9-fb10b10c9fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5515f3d3-144b-476b-9390-e60a9a68a699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7498ceae-b25b-4666-b906-6a925c027805",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ab171e-8594-492f-9757-e38393c7122a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fa8ce8-2996-4691-b1f6-15f0c0835be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c7f093-0d30-437b-8a4a-fbf29a8d9fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "311a4f3f-2a13-4808-ab96-bf340a3a32d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e7433d-c3cb-437a-b211-f48966bfa26c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2298e9c8-6497-4655-88d2-5e9977d9169a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c06304d-36d5-4063-8153-6b9c62786247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1c5a4d-2d33-47bf-9b8e-4f879f23c42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fed3f1c5-4743-4973-ab4e-34d22169bba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c54f4c1-6242-459c-b4fe-a8c09a1c8fad",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e830ce-01d9-4339-88ca-48eff6330e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44987d9-75d0-4e93-abd3-2f953b5c15c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a23aa-37b8-4e6e-9311-c9d5c5041d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfaae85b-6dd7-4828-aea6-81442fbac443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae34ed30-e237-4034-8bad-ec8f7ff7bd9d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d500be6c-fd44-42bc-b85f-7285180e3502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770d18d3-2763-486d-8fdb-3e9255defac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2355ee-8be8-43f6-8232-b2c28f9ed174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e03c56e-dac0-46ec-8bf6-f1f9c2c83cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805ff206-e20c-4c99-bbdf-2de67c5abc28",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffb5fa0-7d7c-4856-bee1-536a39de3eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abda08f-a824-412d-bdba-97f4b926c4ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470773af-00cb-40da-935e-9833f75f8797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc2711d-685d-47bd-b07c-431c1addea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6262fb32-2dc7-401c-915d-0a0d26665c68",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36807d75-b748-4cd4-a716-d1c9181c9d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccde76f-56bb-45a9-8fcd-2d2bd956c29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fe786f-cf21-4605-9b30-e2d2dd29b3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2fc156-0c8e-4fe2-808c-41c733d46ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7e7fe2-88d5-4d49-9b4a-6375971e0c9d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d527791-145a-46cd-8ea4-aa4e3729013c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e91e9b43-5929-464f-bbb6-61950d05d50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a310001-7647-41f2-bd2b-0ae07ca5cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "634bfa68-81d2-4dca-adf8-7a1e8e73228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff2d4a1-adf7-4dbc-b532-d02b07ab01b2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d501d0-b8bb-4db6-b9cb-9c9b0034eee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b839c5d0-375b-4def-869c-6c006a41439a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733ba6ca-a876-4375-90dc-c90c30396b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "751b6172-b51b-4a40-8c48-d4a2029705bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720b23dc-575a-44b1-81c6-19deb53770c9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1a3330-5025-4e04-8855-36f40566acf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2491861c-5d7c-4f67-acb8-71e21dc1bff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6449ea20-89f8-4d57-925b-bcc7ba5d51e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b330ea8-da32-4fdb-be8f-23e372505d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdec17e-f52f-4b13-b613-222ca1a959c4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4efccf0-84f9-454d-a47f-2ae36294ce7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930528a5-4d01-4997-945c-bf34f4c24b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f51433a-6faa-409f-8bc9-f339e862e1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "623527de-3cfe-45cc-9d7d-864af01edc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2026ec-badf-40f9-8c11-650ba9306481",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3946e8a1-19f8-415e-b5c2-b895cbbc3b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d893eb-5f80-4ffd-8ada-babc3a881c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35c3b7b-5902-4a62-aea8-1b4dd3ba9544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7cd589-86eb-4e3e-9946-0a48656f5518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448aa995-9dfe-466c-8791-92fba0a04b73",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8930ef0-5550-4d57-91a3-7998a25a5987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b06d23e-db83-45a4-b712-122673edd1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fd7908-7c82-4042-8031-765f26beff73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a00a37a-039b-4fe7-8302-3da0488dbbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd54e27f-c20f-4cf4-b8b4-4d0e618b74d3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2555bbd2-e9e1-435e-bb4c-d89897d4058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a522f78e-40e2-4920-b3c7-c743e5596bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774e12a0-47c7-41c6-a24f-7d7beb86b4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a1390a-81c2-4ee4-a5b4-0f4a972c4aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44282107-7485-4fc7-bc99-c66b0aec4237",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6209eeb-a74b-4714-ad43-1a53c8cff876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0147b525-cf52-4bdd-960d-acf063eae9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222e41e3-4d48-4bfa-ba88-95ebba2c99b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6af6f1b7-b439-4bfe-9a58-c0c5ed7fb5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7725befa-c478-4456-8d71-4dce84d30376",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c268744b-4e03-42d1-b7b0-3506793b7e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2af8b6b-099f-4e3a-87fd-d7c31b8edd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f6714b-14e9-49f2-ba22-95caf25c7b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eee77a3-9756-4d1f-b307-193bdbcbf978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa0b779-87bb-4be7-a30d-c251008d1e17",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61becf6-b049-45a1-adde-ec458fa3e45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951cb654-2dc0-47dd-9321-5556671b4f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6307cb0f-9a57-4582-bf86-91729b9e79ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "412ba76b-4d5a-43cb-bd0e-6ae90a21edb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89af767f-ddf1-44ec-a757-4dd529903699",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa18afc-16ba-48e5-8483-a83d432c0274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312ff471-3d5a-4cd0-a94a-04b0a245ff6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557c2dba-8e89-4355-8922-c1e70573b9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bafa92-7014-4611-be28-66e5cb7bfc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7237befb-d198-4d5a-ae36-fd2e9125a548",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1c42d0-34a5-41fc-8226-b571817d885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc7c6c4-6368-4b84-becc-8f9fb82c2c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f66b437-983f-4ce0-8a2f-83d7720b4c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba13389-ed12-4943-9496-e8007da20259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46afc7d3-7a69-4715-bddb-2310d8a96f8c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cd25fe-50ed-4604-981d-d5d62e2546ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e620a7-1124-4637-a31b-34497ec781d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3538c23c-dc5e-4e48-933f-a266411b2810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "080c4f10-ec20-481d-8379-c59763d5b98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500a515f-4e0e-4fc4-bf76-bfa5552c364c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27522024-8c5a-4c16-a7c0-d48327183ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d15eff11-1a1b-487c-bd99-fd3f5d339ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e792ca-9ae7-4915-ad4c-fb2540f13ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a922c63-18b9-41fd-ba5f-4f11bc397ba0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "304b0453-4974-4ec1-85e3-9e001b83177b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49207ffa-0b23-4a46-8fae-cddefb17e430",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2296635-e524-4d29-974d-79a16dc27a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ee8b9b2-e226-4bc2-9fa6-e9fd70a01925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6670bbe-2105-4ea3-9f61-a9e0b749b98a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43b7e604-1525-4b44-8006-0104ea506c20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cf0e8e3-7677-44f5-8c78-bfef9f2f5b9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4495fe9b-2ef6-49d4-be58-420f4d2f4806"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67f8dc4e-c703-46c9-ab31-ace2a416a058",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c02af56-4d4c-449d-b1e1-4befa46a6d5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ee3a0fb-1c0b-4373-9a1f-d0a89e1490b7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8501f76b-07a7-4c97-ab21-648d2581f6d7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c068b381-8482-4df9-b911-cab164da57e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc819e88-d5ae-4b2c-b8ba-0a7dfdc0350a"
                }
              }
            ]
          },
          {
            "id": "a021e057-69e6-4899-a54a-a279a0579651",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6a5a157-c57a-4d39-8f5c-e2aeda4ffe4b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0679fefc-8159-4db6-a6f8-3e305eb94963",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fbef9b-34a0-41d4-86fc-a1be18c3c915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d3d93e77-4dc6-4da8-b65b-975426c2d63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90937f06-2250-45ef-bee7-db942d101b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352a168c-f28d-4d16-8d52-26291d320343"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "200b47e9-e00a-422e-bf2f-e8e8db89b15e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a110c6b9-fcd2-401f-a23d-eb91a8b5fbd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50aa74d2-d321-44e3-a8ea-4b21b7a35fbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd2a3fb9-e78b-42c6-a831-527e9461d581",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "05fa04d9-32b0-4e75-84d3-5e7104f0c8a6"
                    }
                  }
                ]
              },
              {
                "id": "b5855685-c881-47f3-87c2-6d391210d2ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60827935-c007-4a16-ba93-350ca8420228",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec1fca66-155e-49bf-8b7b-bfe9b4ef0aed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0717419a-41b0-4126-b82d-ebe8df3b84c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fea76102-4633-4226-b7d3-e1562c991e43"
                    }
                  }
                ]
              },
              {
                "id": "a03ebbeb-e1c7-40ea-a9a9-a8da2e72a7e1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86a65cdb-0946-4667-8796-f1f1a66f656f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "472268ad-564d-4c79-880d-89172049b542"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c7d3a40-5a58-4ec8-b7b9-7fcf2716f724",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1419b0ca-93eb-4421-8e7a-3d20b18c75c5"
                    }
                  }
                ]
              },
              {
                "id": "02dd6f97-eead-4be3-9998-adc442ba23d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef3cce85-7269-4fba-af2b-3115da258a87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6db42af-634a-4f1e-9140-f5dcdbdfe1b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "444a396c-a0da-49bd-9146-d5db0152c425",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c810250a-f885-4f89-ab89-fed1be1549e2"
                    }
                  }
                ]
              },
              {
                "id": "795dbe29-6843-40f0-b904-3ad6072f7e7b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a41c2c81-882d-4103-800f-a797161eceea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8b3f5e8-31a8-4492-8ede-f35b4d110252"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae9d5efe-51d8-4fbc-92d9-511fb99fca02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "82b57150-58d3-40f8-b4b8-955d967427bf"
                    }
                  }
                ]
              },
              {
                "id": "b5d3dd9e-5c5a-4cae-860a-774de99fbef9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaed65bc-17da-4251-90eb-35805978a3ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8194940-5acc-4574-b685-f20a951fa8bb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1fa4d0b-76c8-4abd-9a69-e7f15740df81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0827b7cc-9cb4-4818-b053-7a69cb547f3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b91e674-2090-4434-8043-d58afbc323d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3d0551ee-5993-44d0-8736-5f7a72e1f5e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2bffe103-0c50-49ca-be81-8d2e7eb0fec2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee4811f5-feb0-421c-88f8-d61a237375c5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4a016e6-44ba-4a73-aae6-9f110d3c76e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2c738fdb-b523-4bf6-8e30-e7b666494d3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaad98a8-6547-4f46-951d-65a8839fc466",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9138e8d-600d-4d16-a6b6-02ad86e022e1"
            }
          }
        ]
      },
      {
        "id": "28eeb6ca-959d-49ef-badc-a4d76bdce5dc",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ab21bf19-9a06-4943-a301-92bdf007a9ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d213ffa8-e207-4440-8db7-471df97f1bbf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "34b87264-c49e-4019-8370-0242799eabf7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfd15b8-2377-4c62-b0fe-11e7d499d19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7146dd-2709-4b2b-9650-a95ac9c00390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d0cebe-f024-410c-a286-708a8a00cfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1583dd5a-e09e-433c-9373-0f7078bae193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a254d18f-1f23-4c57-aea5-b2c38afbc13d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a09e84f-a425-43d6-979e-9a8e5123fb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b87dc9b-8a2b-4d67-ba87-4387204a69a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3178257c-caa2-491b-9e51-bcad0fb04be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "703fe4e6-64ba-4989-a3f8-846a952d2ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e7850e-119c-4be3-b94d-72b57b3135a2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba34bec-4497-4ac0-b22a-3e104696045f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dffb17d6-9342-41f9-b2da-1a598c5f367d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46c871d-fa7c-45a2-8d12-500e525368d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4527496-c09a-4a59-a58e-d0af55312057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b954d48-e3a0-4441-97c2-286563958ab9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a30e8fe-576d-48fa-b5f7-d6399d7e12a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907845f2-d36e-4412-a3e0-118122b41529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09854967-5ea5-48c2-b453-7168b371b438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee83943-7a83-4c01-8ff1-04d514e9597a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49f25b9-38dd-4c24-9107-156fcb2e877a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab8e546-ef2a-491e-89b1-2727d82f49bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f071020e-38bf-44e9-840f-8ccf50991583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcbee2a-b023-497d-a734-322eb8ee48dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87d15698-fd8e-4c64-a862-03f2e9465a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee638260-846d-4594-9177-2891d272303b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e93c2b4-f39f-4ee2-8583-a9e40c79b560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a617faa-a83e-477d-94ad-485fc1b9709b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5d193c-6568-4911-90ca-b482a4e5490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "953ca851-36b4-42d1-985d-b82fe4fe6d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83c1b70-5840-437d-8bb4-117a0409fa14",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2151efd9-1124-404b-aa91-9c3aa25e9cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d59f089-e2c3-4a2b-9bf8-2178fc0214cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb30c153-21bb-4d3e-abef-69da6ac72f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7512fd81-a86d-4a07-8165-5cfe78a3c434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f037c46a-0163-43d6-a8a0-ae747770f361",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dbe601-a977-4374-a170-e4075a46cfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b3a5e1-d20c-4f88-b4e3-4c227855d6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81da3756-c2f1-49bb-b9c0-5b2838645c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9fbf22-cf4a-4717-8b86-203bae8b65cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fde346-792e-4974-aec3-5fed8bbb623a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd960f2-74ae-42a6-81af-c7448375539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783a5cab-62d3-4a53-97e6-757b7b7467d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171a283-8440-4b34-b891-dd0c7818660c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3da708-3932-4741-931c-636326af99cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d46d5c-266a-447c-99af-96eaa97bc902",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1b08e7-9000-475e-b046-aa4b7a118490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aac5400-9d3b-4b49-90d7-cd4b9cb2a2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b3735c-9165-404c-8b44-f3529633d2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcba0eb-9ac6-4f87-9e98-dfa9c3c4dc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4f04d4-b28a-4da0-9047-dcf620d927e0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a106d6-d06f-456d-8d6c-0f1a9c213e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2acc002-671b-4f79-9c76-f1434c34fda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73046e-8816-4748-a62d-31a7019520b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29a899f7-07c4-4cca-af01-5ea4b8e72d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a400b-4434-4d1c-9b38-4f6abdd44327",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "430b3185-5aa5-46cd-8c6a-2e6b3da5d2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28a79b0-1abd-4f0d-b2f4-413c904f5e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c44b59-7c9f-4e06-9209-bffcf08426eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6faa76b-a64b-4afc-9966-80645ae461a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2dc608-856f-48bf-a5b6-a0e73f92dda0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15bd00cd-e82b-459c-8938-6232f9204e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17576c13-871b-4ec5-a5d3-84fbc79838f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc627a9f-99f9-42d0-818c-8eaabd5cab04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72090a30-2bee-4869-ab64-dad7bd283593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b7e84-3607-4e53-83ba-ed788af571d4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc69c3e-b958-4672-bd04-3391bfda9f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48548af0-7d44-424c-a902-02a12870401f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6493fa5e-3eb1-4035-b2d5-829e34ee6425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc10677-6525-4609-bdf3-c86d1b30fbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3990ffa2-aa19-4d85-8a74-a13351d0f29d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd1cab0-064b-4c12-96c7-0c8518bf28cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c39d02-a601-4b5a-9010-7986ed1b0519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781b9a3e-f998-4b6a-9812-72af095a294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4c4012-c160-43ae-b138-295e97570c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814ee4b3-15df-47fd-8b54-10967a14cead",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e64f51-6c9b-4efd-823f-b7b5f1123d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f87951-4c14-4690-88bc-a27848ed0daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5833106-055e-4cb3-b0ec-72f0c3a4b1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "41a3d38e-a8b3-43a9-8c3f-484db308338c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1886bdd-82cf-4951-b234-3687cf86c222",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d7963c-ba9d-448c-b7fc-225f85d07f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d70a051-02a9-4dad-b729-870f02d0bac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821770c8-3ef9-40bb-95aa-4f6570aad280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b1ab32-54f7-43ad-894e-d392657301e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab23db7-f71d-4563-8443-2ddd22823276",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1d2e66-e2e5-4e37-bccc-c64716e4b827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6dae1d-f56f-41e6-940d-e739cf55efec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb4e5e4-d294-4b6d-be7a-41fdf86e35af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b85635a-0e1b-4713-9c55-3394b020fa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a388a3c-8954-4024-8740-4205922de521",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5de4730-e1e8-4d0b-80ba-5a2710b8e866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ccb74e-ae4f-4f94-8182-3d690e5f6228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8bd941-8a6a-4514-8b5a-7ee2192f3923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "747665de-85dc-49ec-85ac-6bfd12981fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12db6b6c-ca01-48dd-83df-c98e80e568a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebad951-6870-4744-9189-1fddbcf2d3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dacfe33-9f17-41b9-a3f9-fa717b8d029f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b21506-4da9-456e-a59b-d3ae9cf31bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8413ef-2272-495a-aee5-918d5f8c111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73818571-e8df-434a-935a-caf9669b0b8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7203e049-4435-4695-93a6-ad8d5532f82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe95ff1-4937-4577-858f-2641eb696a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87326b34-bc0d-41a3-b934-4313de942e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0abeae3-e36b-41fc-bb11-89fd6d104ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cb9d5f-9840-4e7b-8b76-08a5fb08077d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39b3a8f-caa9-4411-8479-6f1e7023b891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fae81e3-5d9a-4b21-a07a-156633f03a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a523b644-29e2-48aa-9f48-ea0f6620076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76c66ed0-d613-4a67-bf5c-03a393060a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33074f9f-f9f6-4296-be0e-999e072ae8c7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726147af-d6ec-407c-8fa2-1326b85a1610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83692852-dd09-4fd1-96fe-dd236604b7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f3234d-5e85-494c-9eba-363b73c12b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4416b0b1-6856-40fc-9506-851d0678010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7330bb2b-6d26-4d0c-ac00-9c0bcb7e616f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ca6128-f0b9-49e8-acec-acb5a3dadb9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d39791-082f-4fd2-9179-ea987fefa7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3919d8d7-7765-4fb6-95f9-55a40126f968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20bc21ce-0430-4178-b66a-4ce67bd68edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e688c0-31a2-45f4-a999-f7b0c9c7e70c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d5b8f-4b5d-41a6-8e35-172b6a335c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7f17a3-0284-490c-8ef2-eedad71b6c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005ada2b-9acb-49c4-bb2e-f8446138be4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71cc4209-13d4-4050-b6e6-3b4475ccdafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0730f5cb-afa7-4985-955a-4c032884eef4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840e7a73-def9-4b55-a3d5-5f44a5646893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a246948-4a2f-47e5-85cf-012033eafe04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cea409-e88a-4f60-89c6-b30e58cd46d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1039bda1-6138-4ea1-bb3a-09caa568ec21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74b35c2-29f3-4584-bafc-16722e9e2267",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2df0e39-ddab-45da-9570-faaa2331e66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620d8c45-1b54-4920-bd44-a662a8130b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d366df43-c0d8-4457-9142-fceb05c5dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1fbab1-9388-49b9-a14a-9db999a97337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35505ed-18b0-41dc-bb85-b906f836ba49",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4569e308-2fb2-45d3-be44-51fe85132302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb8e0a5-e37f-4f90-8e29-8dee580c7829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abe2770-0e15-4732-b347-a558d6dfb336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3deb1658-14aa-4077-8ad9-8db7e76ca09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07383b16-7ad5-4a70-a51b-fb8190658f18",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89241ac8-3484-4d9b-ab65-d8554a835245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef7dd8c-818f-495c-acf6-f6102c3499a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01392b46-3e1a-46ef-8ca8-8c041835b5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "012ba154-58fd-438a-99d1-e66f691199fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5e64e0-f24f-4c73-b6bb-6b7044aad49a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f09e1b0-8724-45bc-a3c9-996c02fe5290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1d5e07-aaff-4a80-a77c-46f4bfab7527"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60eea026-48b1-4bdf-8ef5-34b9cdd10127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53dba4ac-ff56-4d2e-87d0-e4a5aa71d4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23b7103-1924-4418-93b5-4d7eefeac821",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debd5812-6186-492b-882c-96b99140533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9e6280-e142-433c-852e-8b2e35b159f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629e5d58-9f0e-4c97-b5aa-61476c82e44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6594049-2323-4050-8e50-8737d27bbeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cc55d9-3de5-4af1-b500-825d3e4d013e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590bd244-5fc3-482c-ae8b-0c01a04fd380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d157ae3-011e-4fc3-a133-3e529a0747d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c494be5-af41-476f-96de-8ce86fe4c0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5592a664-9709-480a-8d15-a61a473facf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276fbad5-6750-46e0-853d-bb285c669bda",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790f3ab-52f1-4e07-91f1-c57895cf214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5da2c5-2c61-437a-a92b-cae612c3c37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acabe17-d0c8-4524-a37b-25efb312417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e308abaf-e6ca-4d5c-b1a5-814e37a6c9fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0afd475-90cb-46ba-9095-3c3a88dc6ead",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "014bb434-8ead-4acf-ba25-106865da007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a6c12f-54a4-4861-b7f0-6bba47723232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8c90f2-9d0a-4ccd-bedf-ebf3160171d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7916e2e9-170a-4175-9d59-3a33bc4b1c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a33847-ac24-4ab5-83b2-cf86f835367e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e14210d-bf6d-4640-ad03-94148e06f0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3fe88f-9dd3-44bf-9f63-765361feaa17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5630fb-78d7-4855-9aa3-d72e930eafb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db6b46c6-3819-465b-88d2-ae55c726e3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df842f2-86e0-43a7-b76f-dda5f6fe3aa5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e907415-623d-4d7b-95ff-3b604f209665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e165d67f-6316-4585-866b-16318eb91396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1276a224-2b57-44ab-8ffb-e80144b21144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "972a6213-ca86-4d79-af5e-229cb055eaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27de886-606a-4c97-91d5-871d0f142d14",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "399c8f7d-d86c-40cc-a4c6-0261a4add564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355cf185-0f91-4862-a8de-547b5e6bc6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488cc504-8f8f-4485-9764-7b8adf83a897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2773e619-9a74-4b91-b6e6-284b3130c43d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72ad828b-d426-4ee8-a460-2a93aa28b0b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7db5be7f-9e9c-4e32-8984-c5633e392133",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabf3f68-da9b-474c-bf1b-e79c2cae351d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61ebb0c5-1deb-4c3d-bfe8-616e6e621e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e8ddaf-538c-4113-9acf-878cf6f38b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19465965-6887-4539-b6dd-c4f21dfb01fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eedfab5f-cd2f-4fbd-abea-0725f977dcfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be0751c4-2ee4-45ef-9110-97c8a704ec6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66b13384-10be-4bc3-9e82-c32850992908",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39471c7e-4bfc-4f8c-8997-213a7dbeccd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9febeb7e-add7-4a24-97a3-5719e9eb520b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f484e4ec-1525-4cf2-9d08-6b0023789d77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4353892-51fe-42ef-9fb0-ca7ec87b4547",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f2ae888-98c6-437c-9cba-acc015b727f8"
            }
          }
        ]
      },
      {
        "id": "6ebe21ab-d017-4df6-b84c-36191f6168f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "684c6141-7d41-4c14-bc37-14f3bba4957b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d2a18ff-422c-4adf-b685-c2bf7217b70b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4907e05a-64b8-47c4-a8af-4153d403b1bb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7ed675-7cc9-4a5b-a5a7-b632b5ed9393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c8b726-77c8-4188-ab53-c1c5be662b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1314e5be-25a0-4099-8102-8af0254f6c17",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec7d956-f2ee-43a0-8fd4-01135ad5ba75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a1d42b-00c8-45ba-b821-f28d58166cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ffd343-ca67-4366-b4d8-3d70cd52246a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8005a26f-3dcf-4251-8fa7-394df59c27ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afea7098-6d07-483e-887a-4d7a380fa616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838b5609-1b93-4aaf-b22c-09a2edc11677",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c743a067-7273-41e4-a1f6-8e6ead2bb902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31d9310-ff80-4e04-b417-223e1917d3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d20e4ef-fa4d-446d-954d-0238591ac81f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a4c047-096b-4dda-b660-ea2c5e53b90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dab7f7f-6f7f-4c3b-9471-7af7964daa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dec8541-0f37-4aaa-addc-7748c6df27dd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfb75a4-4737-41fb-8b16-1113de9b5837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342ac2d4-1e94-4f7e-af08-9cbcf2ff7163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbced95a-5544-46b3-b64d-03dac482d554",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bac384-86c1-41e6-b976-2dc8f93df426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0197da-4027-4313-b118-ff05cf396f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7caacd43-f1ad-4cbc-9a9f-fab4177af8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a099f32f-d684-4144-a258-9cc77cd27553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e30ecbf-072e-4203-b403-91232fb5ef2a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151fdc8a-3fb9-40e8-a40c-af510273a045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7304a4e-3d8b-4224-8c99-d442f0b03f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b158a1b-0720-43a3-96e6-b312305c55d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5726b95b-4baf-471d-bd5e-1c487550c20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e956b00b-8d94-4976-bc98-c0e57337a46d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d37f27-757b-49db-901e-17917d1a9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568d3e01-630b-4903-8c2b-bbcb26e8bd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bb210c-5112-4ba8-a607-262a0791a287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca6c90e-804a-4526-b987-8de60ee890dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f24c808-88ac-4ff6-88ed-700a13e0722a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb08d46-993d-436e-9c66-0588b628b28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4df9b9-6605-4721-86dc-fc48d99c2c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b2cc3d-28cc-4f29-9f25-ff7187ca4d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670887d4-44b9-4c03-ad53-6100c6685dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb49e675-a41f-4e52-94b0-ca189a3ec1b2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c92482-ebb8-4e24-8833-972bd7edf5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd547414-91a0-4ba8-b82a-557d8d7615fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4f1e49-504c-4aef-a308-fda6852e7959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d2fe13-ae52-4319-8682-b49a8211741f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9368cb98-5d13-4823-9733-94b69fd475c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1f3e44-470c-4a92-814f-857383216b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f7e344-5480-4101-83d3-f273421d4450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b43d1ea-8453-42b9-8d8f-2680e1a4c0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c0a135-7555-4984-85b3-d1619f448971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8058cb-e8f7-491f-9195-64bd5bb8808d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac55ef1d-97da-4551-bcb5-18eeac5a5de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44426ff2-efc7-4ab8-8b93-4dc843485dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60469e9e-1026-4885-bb7b-9ef5f8d11cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "431816ea-f9a6-4efa-887d-777059fe158c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d29617d-ace2-4bee-a32e-5e13f587ac36",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ea788a-3ba4-481b-ad36-8ce75380a9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "340cea87-90a8-4214-9b1b-acca54e516a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71026d02-052f-4d5a-bab8-1ad9f7fdd303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc889a1-8182-4a96-a21e-40424ff07ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d7ebfb-3441-41b9-873e-e6938ec3c905",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb99174-8fa3-4b97-930c-6e385080c12e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01e7032-f72c-473a-b852-000280a863e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3408ef54-68eb-47ba-8610-ada7d0323743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d6db62-c79e-410e-91f5-fda29b157540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd232d94-b54d-4bac-a103-bdc70e2adf97",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b182f6bd-9cd0-4f99-9a45-962f6622ea13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3820edc-d63a-49fd-bb88-3afc884c54cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93743cb-af0f-411b-9ff6-4a00d17db9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd7b0b9-2b3e-400d-bd06-11173040cd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b6b943-7d17-4d8e-81ab-dd5ae38a3cf9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88a200e-9ac2-4313-b866-8d1127c2562a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95267837-e047-4dce-9c55-72137dc53a64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a719cc4-4f86-41c8-914a-357af294840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8c841c-ec26-46b1-bd6d-c70822d2d46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f00d62c-e02e-400a-9454-26767ec6c4f2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3bc1fc-3f1b-43fc-93dd-cd5928e027b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26540c6-86b8-480c-800f-ce0d477b44a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6256c1-fd11-4bfe-9a7d-bac18d4b5891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d506072d-6917-447e-908a-14e2b7914066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bc58d7-0156-49d8-81ff-c51359419439",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d84f038-de4b-4a47-bf50-347466bac784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ffeeeb-234c-4899-a3b8-26f4eef7f424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6f2240-4996-4473-9850-5aafeaafdb0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eef481-3d82-441f-bf6a-09bd5ab0abec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d78c81c-2d52-472d-86bd-a4269c0ca705",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95553a44-a85a-4675-bf39-542f35f2a00f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a0beb0-57e5-4d90-a01d-03f0b6458516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc97a4b9-f762-44b8-b95f-93f0c348ce0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a0bfd9-5179-403b-97e3-65ba4857497a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d30e605-7dd9-44f0-9554-809777967a9a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc164670-be32-4b2b-921c-eb39530d6bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13be6274-a608-4931-84fc-e17445b74c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c12a052-3b39-47a8-ab4e-cb377b30c58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6520f076-20a9-4a64-951c-0c63be1557b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc1d8e6-dd0c-4d34-984b-b260f396d93e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1113bebd-c20e-4594-83df-89bc1a03d746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85716f12-bc3f-4806-8997-141cabaf55bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12035d6-3c84-4e5e-b271-d0f5482591d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f295b3bc-9932-40cb-a63c-443382f0335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21928a1d-0ffe-41f0-b701-7add1738eb81",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1935ced-0a42-4536-a09b-f69203ab0c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ecff72-f333-4e1b-93b4-88e85a1c2c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ac298a-008b-4f6c-b12e-e61a462de6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6883ba27-99ac-407d-82ff-92c763b92f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97099634-97d3-4c7e-8050-89df1250a16e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a3840c5-1bcf-499b-bd39-3f3a0bb8e725",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c5380eb-c065-4649-ac45-2b0f2409332a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b59d23-c931-4e1b-a377-d7b0a8fc21cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3f1bfe-7fa4-4938-b8e3-eb82fe5b7874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d602157e-e519-467e-8c3e-0db9ae05c170",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed23a24-1312-4d06-b3c8-88008aff2bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e6e8be-2212-4afd-a4f4-2d7eb92619b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97024087-2347-40a0-898d-f11e8564c843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fcce68d-7c16-4568-aa94-8f1148b14726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e02d30-9a96-4376-98e2-b21c3a375578",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2f51a4-2124-4ec7-bc7e-006d3fbd854a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88bd63fb-b1e8-4dca-81ca-3eaaa8871e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a416338e-cf88-44c1-9a5e-9961997485ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a368fa-d58b-40f8-b7b6-c176469ff5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8b5a8e-2fac-46fe-8a7c-3478d199ceed",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afab7fc2-3a3d-4bef-833d-0e3ad6bcc844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6b45748-e2cf-43be-9a74-d69bdbf7cfd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4df40a7-c4b1-43ed-a251-aabad62592bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eff1939-fd55-4740-bf93-659c258f6cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac553295-29eb-41b9-8e48-77594bc57e39",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c964c8a4-5921-441b-ac2b-0933c66ba316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6ca4c1-a0ae-4050-ac2c-d117b45b520a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee68f695-6ce5-4973-978f-7ad83be87f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e33a1d9c-d0ad-4496-b27d-8320f9456a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adcd9fe-516e-464e-af34-50d1f49bfe21",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6464672d-3682-4e0f-b1ae-edc0ac7759d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ee6d14d-39b3-485b-b7bd-0739121a5d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e398dd-d824-49f9-92ed-b7fdbfb727f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee43e387-0cdb-490a-a184-54c0b3f42177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1886b0-3367-4862-bee4-5c839510502e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b25188-da82-47f1-b030-205604550d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e1e029b-f1cf-44b4-a358-e337b029a278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb98796-8fc2-4f97-9966-1abddc751620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d728c2e1-8a23-41b2-a4cb-cdc85b6ecd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d392a6e7-b55b-4d80-b2b9-8604b27ae042",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826dab55-6609-4cd2-997f-8f2a65b1b21e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189420ed-df2e-46b5-be63-fc8cd476b97f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b236e3a-0e9e-4c5c-b60c-c8775eb5818c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a61fa8-4d08-4aae-bfdd-d29735cd84fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8bdca7-5ea1-4f2b-990b-f1a7d9c341fd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cafdff-9c69-494d-97f1-51a5b07e4094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b79a9f-1a2f-477e-97ba-023b369559de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9b5064-7b54-40be-8ca7-66ab8fc7c01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc29972-ecd1-40f4-9e6e-66136d153ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bb34ee-6616-415e-bbc2-5ad3d93dd993",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c74bd6-e64c-42c0-be65-53b0a523e53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bfda1c-3c05-47c2-bd77-d286c412fcbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f3ce8b-cbff-4386-9e41-f07df0f54f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f20736f-72ac-42b2-b939-7e02648c4df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb2789a-9163-459b-8375-174accfb54fe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe38140-4175-493a-ad39-a31312e61a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c674eb71-6cd8-4afe-8c3a-68adebc1424c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff81925f-8e88-4c81-ab30-45bf255d97ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7af33398-e488-4731-b945-1ec0b1196a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a51217-d1a6-45cc-b0a0-710234825edc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c656999d-dca4-47f8-9e37-b779c288f72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27080ca1-def4-4383-8c85-7f00af45e9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b37cf9-5038-4438-b494-cb04781ac801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2d1ad3-db1e-4cc9-bf81-22a34bbb4905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f1f20b-c90c-43a5-9ddf-64116b533a00",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a19fae-e2f6-466e-8abc-488379598c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c06cc6c-571c-45c3-b82c-d8148833efbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4936c496-d54a-4f65-8e50-3f5405cf64d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5422f41-b8aa-4b8c-8ea1-90737a1a63e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d8c0d2-0294-463c-b98b-799331daca37",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f80332-7ca0-4f44-902e-6c3be58ba5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9d04db-e543-45cd-95e0-4b5f3a930c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a0c8a0-9cbd-47b4-892b-3027849eccf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9ad5d7-7bc2-40a7-af74-f6d678b6feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd3eac1-65fe-4de1-a9c1-362ae58b68e7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c46596d-3157-4526-a90b-0aef4a9c6d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2495e723-ee24-415d-b760-d708bef672da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fdb146-a949-4509-aded-4778174478f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57557791-dd5f-4fd3-9315-fb5351bf5924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562b1bf5-6ff7-45d0-9b5c-7b2b963834b9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf36321-7282-46bb-9e6a-4e4cc001f700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59ba2a7-89f1-4a12-8dcf-b68f781d466d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf70140-4f7b-45f6-a3cd-e711f355d7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a07a49d-def2-48ab-84f4-c539796cde29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1cba10-6c31-4860-a8b4-72be5fb1481f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f85bcbd-218f-46ef-b66a-1f994955e79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b586cc-8ef8-458f-bed5-34c8758b6763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d2d85b-1933-4986-8e06-91e0149d4be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e442ae96-90d1-48bd-b665-a313935c032a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361899d1-32b3-4f99-8b1d-bdf1e6da4902",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893cad8e-cd2c-4fdd-9ef3-ba1f182ff3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5d3a25-580a-49a3-a24a-93c061082c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a079d1f-ea7b-47c3-a6c7-f85ca0d7eb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1189ab8e-d36e-4c54-a263-29ad3a936bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996e89f9-282b-429e-8d55-0d23921de337",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960694f3-cb1b-43e1-92eb-4612fe5725df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9b0c8a-c146-4598-a954-9f3b839413ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae7c8ba-e135-4565-bd27-6ecadb47b659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d98731-a442-49aa-9322-8cc4ec123d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e7de3a-b13f-4077-a0c0-d0997c7e4fff",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412c5849-8a9e-4814-9396-819e57f1c99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58a1de3-e6e1-476e-b8c0-29d93a4715a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f2d2b-8bcc-4ced-b62c-b25708e2564e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb5f4db-190d-4ced-90f9-2e96f8da5dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b5df9f-a3cb-4271-92ec-ad839a4b9638",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80310928-16d5-44d6-98b5-2fbe1291aacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084f9c11-3a3d-40f0-95a4-18a1359471cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3988010a-6bd1-4a9f-a376-c05b19390abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa482b59-8f8c-477f-ad0d-8305cbc31a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81d18d0-b360-4697-bcb8-ce3cc0f70775",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1e7247-f5cc-4f69-809f-a33da5f24f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699b4a9d-4646-49e6-963a-dd673882a232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae3db26-4870-4707-bb83-23669e292e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa6df57-92d7-4e99-ab79-8d42abaf0132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20207c1-6834-46d1-b818-9f02bff79d38",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ed7aa6-801f-4048-a531-6fa3594ee677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b6098a-1ce9-4308-b9ca-06f402d992de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1318d098-93a7-43a1-a2df-c7c188be66c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e05027a-848e-4f40-a93d-701a88ac8c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc89829-5ee6-4458-951c-9cefd98cd906",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3569d8d5-0bbf-45b4-96b7-7739c8677cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c494b509-c522-4403-be2f-d5b2cc85dd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812cbe8b-db27-4991-bf1f-d3fe741d0d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c690972d-b68f-4a08-a602-fbe4917b6825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3257b72-4746-419a-82d3-cbecb7377e90",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958019ca-190f-442b-a775-a61b62f2af89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9da9b4-2325-46ee-b02c-a228123bf40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5376bd-e5f9-4e58-a4ca-daddda43c73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf83fa0-5727-42a4-adf3-c5ad385ae225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8035fd5b-c987-4208-b4fe-5f5363d47162",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46260a8-851a-430a-9d4c-e0e04b18c5cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d5b31d3-5879-4567-86d7-ded05991b3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4140945-c10b-4144-9fc1-7ee3823b01d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b43c9a-e0a7-4280-93e5-2c82a9556c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f994e3-0d13-4bea-9508-4956a2f272bd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e5a07e5-f71b-4921-806e-08ce22b9a214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9b185b-9e51-4855-93dc-ec36bf943795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768ccaec-2eab-4e7e-bb22-2ecd49971ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b14ccb-1231-48ed-a8b5-856a6e4f901f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be399aa-ef49-4ade-8f20-6ea541edfe6b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ae5414-cd34-4ba0-9a92-80de808bc40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9604952e-7b6d-4c1a-aeca-baa75c781246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ea4ce2-8920-40a0-9217-fa98335cb691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8f237e-db1c-4420-a284-b9d3103ff570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534a1fa0-e54f-485d-a915-985c670875ab",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed5ed56-9ad2-4f13-9797-e8d65031f89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083e058f-6c69-475f-99b6-71c64c964ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa32613-0655-4920-af22-dc05a4922b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62a7ab3-6391-457c-9e56-aec538443399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ee232d-6713-42fd-9bab-db4d407fd173",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79ada66-f300-4053-8dc7-d9f5a606c808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a78de13-8745-42bb-808c-c34063568e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a8e1e2-e9bf-4da9-91f3-20bfb9ec99e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8489dc4e-ff20-4473-84bb-5753301c44fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41527c06-f511-40b3-a573-ec33b05ec515",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e79b22-1ea3-4c54-9664-fca1cc8a4a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bcd895-be09-477f-85fd-a3710abae034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01b6907-8362-41d7-8159-bc54d0a1d767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c872da2e-04a6-40f3-96c3-3861e78ea21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54c85ab-11bb-4fda-a0f8-68806dd28a15",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7650d12-3b92-46b1-9ff6-49718e4883a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176572b8-284d-48d5-a89d-a7765845b9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95e2f41-ad50-4aff-a16c-6ee5489286e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfd8df5-15c0-46bc-8c7b-3d5437d1c6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f7df83-8d35-4c6a-8d31-18f2b9630b1b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09840f3-6f69-4330-9c9e-8a0018a513c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c878cad-098f-4cd3-9de4-cecab269d3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b5cb9d-c0bf-4daa-a571-94e2efbf0c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadec737-ad8d-46f4-b176-5fce1fd18387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c3fb49-1b0d-4ec3-b85a-81db30714032",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ded93c-46d3-4352-a3da-75cfa510111e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb64b46-0a1f-45df-9cda-9d58070b6a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abf7e2c-3592-411d-9742-771ee1126a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2134c877-95fc-455f-8bfa-e24f57e8327f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002158f8-227c-42d4-aea2-de1bc656d83c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860de04d-9749-431f-84e8-61d8ec1cee5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcad3323-117c-4b91-938b-ec7a6be56a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5d8787-b276-404d-9b59-81b214e5d24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ad4006-82b7-4577-a86f-30b545b2e1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8683fd9-6b88-4de7-b668-8b21574c9d66",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda22099-4a62-4015-aa28-58412c7e4b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177e9496-7d28-493e-8b2e-8b5000cdf542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c769a0-1202-4242-a633-9701d24b029b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d36e403c-f144-4b87-bd71-183e78f5d116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a797144c-36ac-4b8d-ade2-bcc2bf7dce52",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6e00fa-db71-4e3f-bb37-054743bd4503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d7e56a-aabd-408d-80ad-f906706342a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca7597f-d96f-4881-8eee-4852bf1ed940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801c0378-77d8-41e2-aa9c-9c879fabce1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a50b6a7-2341-4169-ae4c-ee3f89d793f0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3791ddd5-a41e-408f-acd7-611f14fcf21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5025d8fa-ed3d-45d9-9a7d-63fddbef78d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "130309ff-8fe7-4412-aff7-9a92f38250e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b909c3a8-1966-402c-8e91-1a63bc469557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153fee00-294f-4a01-9af2-18cc16cbf8d5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b45908-f9fd-4ca0-8bc7-6061437b7233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a694d18-cb37-4fae-a2e8-52f6f6c98c59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c34370-696f-47ee-b480-2a9d03dbffcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1077bca3-3378-4ec9-bd9f-2c3145b4e155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e70e8d-5221-44ba-b3e8-5bba4df31454",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36614151-7632-4d2a-9e8b-74ab2ba16a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0af9a71-f308-4d9e-8390-2589a9fb36d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8eefaf-8624-4d66-bc7c-f1fc1daaf21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc8072f-cade-4d32-8b64-6143df916f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21c50c5-1a13-44aa-86f0-010e80a21729",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19902f34-1ff5-4a64-9c4b-e6fd11f1176e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1889bd9e-36b5-4ade-9fb6-b3ca4e9bd3d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46ba36c-0198-4ade-ae6d-d80759828bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7aa224-0de5-49f0-897e-2133ee9b36b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f6620e-aab8-48e4-8714-7aa1e9f8fb44",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4defb77-a812-4f09-bf5d-8cab7622bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161d7b17-0cb8-4307-b3e7-504c71a06d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ca6af0-13ee-4ca4-bd1a-9c46eef31172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4938b241-d2fe-41cb-8b46-b31c83c24aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689f4bb0-707b-4b43-9e71-57d8f4167460",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf3dea1-4b42-4eb3-81d6-2ddf0e30b50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f69254-7fe5-421d-b567-e5deb9726de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a07922-b876-4c43-9cb0-2e34f013bd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168752ba-9107-4801-b292-5f40e594de1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477b229e-9a9a-46ad-a9d0-afb3f3c52aa0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b233822e-bd05-4a7c-83ae-e27a2e98f06e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ceb975-c75a-4992-a13c-a4e6bdec6fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca0bf71-7f85-4739-90d9-2f6cfd92e5b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f0197d8-d9dc-420d-931c-bb32925ed9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3106ad-b562-40c2-911a-328c09f0d374",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614f9bab-e083-45f4-86fa-17d6523e780c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a0d371-6039-435e-970d-e05d0d11cd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497d2ab7-4d02-49c4-81bc-16a8ae96b122",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47583e8c-60ef-4996-9abf-9c3da09ee62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1274d115-235a-4f6a-8c89-7dfb393a4b3f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4672ca3a-6e09-429c-ae9a-94395083727e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b615d2b-2ade-43d8-aaf0-d3f793f173d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b3d950-6151-4133-99b2-1680db5dc9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ac85a0-f280-41e2-8a09-0cd11c5937a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980ac508-73eb-4f02-81c7-9ac3e95c1ccb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62735639-40be-42db-b498-546521781dca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1d09144-79e5-4dab-bcac-063869d1edf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c289d4-5076-46b2-a841-0544468e141f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee72109-baaf-4639-a625-fca0e6d6437e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63817332-e834-4046-a881-45b4e088a87b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbde66c-f1c6-487a-8004-c52aa01905d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385aa7c9-eacf-4b4e-9bfc-9d57b946726a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eddca7c-3bc3-4878-9778-57f8bc04ec16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f496c01-6460-43f3-8986-e2cf67c10d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e9f1ad-7fbd-4405-8129-9da828ba747e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e469c2-0362-4dc1-b510-dad1fc664926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572dc750-764a-4ed8-89ef-e1699389702d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f1012d-309d-444d-93eb-5ca80e9dce23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5e06dc-fcbd-4723-bd87-ae2508fad31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2a636e-063a-4f6f-b6b7-8bc0ed00d4c1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3c1f3b-bb47-4b63-ac87-6e02130526c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c768a15f-ed9e-4055-8bb2-31c0d926fad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a964c85-e135-41a3-b6f5-4198c3b4f833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5ebe8-a88b-4296-9859-d3009e4a3fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada03764-5525-465c-b5d1-6d33d28d97db",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d790340e-57c0-4c5e-ad34-08e60bd3220e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f21486-5fe1-4f70-b89c-9c4d0e57b689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2130baf2-4e86-4967-a715-3a6521b2fc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb0d5f7-3fd6-4eab-89b6-e6c71ab4c71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8b60cc-e45b-4eb7-8cf7-92d49dc2ff18",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395b1c38-50f6-49f1-b6a8-a3707a2aea53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c736815e-bc88-4bc0-b69b-d96193961e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8e84a9-d2fc-40c3-a8cd-974f72b00b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d978ae7-ce7f-4ef7-9673-4800ae55a707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22a2705-7d7c-43e5-a824-4d4c89929275",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b88896-c13a-4d2e-9037-177a376dbe98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f75a33-ff89-4b09-8519-845d2ef42597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e19c47d-dd1e-44b4-a77e-77b5a05d9a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2697f121-38f1-4eee-906b-d289951b048d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f12f65e-b51c-448b-8e75-23cc1616b119",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3102ec7e-969f-4a69-81bb-0fb66cdbb881",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f94fe48-8cc7-4011-b5de-81de8e651e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016ff1c4-bc45-454e-8d22-bbd5026e85ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3144aa6-4e7e-423e-bc7d-15df9b03c507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52344071-d3f9-485f-939e-e57bd27a9f87",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c186ad-36d0-424e-97c2-20b00c533c50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf011ca-012b-4cd0-8cdd-37bf043781a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb76cc9d-016d-41c0-9a2a-059fa840fe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d04853-5acb-4fb0-bb0a-2743a64376d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51c95d5-9ce9-47fa-b05e-f9f7736714dd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be84bb7-9e39-4a9a-a441-1146163ed89b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c5d20bb-429d-458d-a8d2-5c3d50ebf1f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd48c35-33fe-4656-913b-c26f976589d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da875de-7e4d-427f-b153-a677d6996c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2adde0f-ef68-46db-96d8-07257a69fd0f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74831750-5cfc-4c1c-a259-50520a328963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e3ba1c8-e37d-4df5-a156-311c08feea06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693b0b04-cc38-48c7-baa1-cc0ab1ca90e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985641db-38cd-45bc-94ce-f6601d98d6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c7bbe-9500-45de-af50-4902ca55d77b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac5aa13-782b-4eb3-9435-88b86a4999d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d78f2a50-7104-4af5-b01b-cb12f24b66d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32dde68-a11e-423e-b29c-88739ed961f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d13290-ce39-4071-a2f3-15fb6ad221ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b692b4-ec72-4754-bf31-1a15fb44702e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd44f53b-514a-4238-8596-22821483ca79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70014c6f-0e7b-4c6d-9fe2-b2b87b204ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2698e222-f245-4be8-b787-85ab3dba2850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e0dca7-1f2d-48b0-a645-fc9bd0732fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754931dc-bd50-4d7a-b8dd-7bf272fc93c2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c11379b-6378-4ab0-a1b5-4ac09cfafe69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f53f330c-c899-4f91-9013-9343b2c6ac95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9324214d-fcd2-4292-959d-751c18cd717e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c9c5c3-18fc-4663-8095-0c5a165cfb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e682b52-e970-4a0c-9251-af9d3f6d00ef",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c2daa5-5519-403a-951c-4a26ea1f7c54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62d99f3e-aae9-4e4a-9f98-6f4839a950a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdfdcfb-895d-4dd6-8094-d05cf962bfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eff00a-15d6-47fe-9ac0-c8f86b947bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7945f00-f0f2-4b3e-b402-29241f41ea3a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98be178b-3990-4121-a648-f2a438161f65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b162d9e-64d9-4112-abba-310d6f1384ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a8d390-946e-4874-8fb6-3fbd182e4b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d844435e-34cc-42e8-acf4-0f58946a5b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bbd620-d9fc-44a3-b322-83740ac64a24",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ef8ac4-bdb9-4d1e-815d-39f9187e485a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43c65c8-a716-4242-a740-88f59656d8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89614183-0ebf-42e9-90e0-ce56ced073d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cc424b-ff03-4a65-8e2c-fdc5b53f73ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af33699b-1e00-45ef-b8b9-4caa989d8ee2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f088da-d693-4d3d-bf65-2159601e8c0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c64532da-0338-4795-8ac5-8764d4fcb441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d39a2a2-a9c8-4a8c-b39b-47b37e1019d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae681f8-b64a-457b-97d9-2383ce798636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc114a5-bcb0-40b3-ad63-4719cf45e615",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5223571-f8cc-46b5-8629-6be7058c7eba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f6551b-5885-434c-88c2-627eb79456e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b84e236-c365-405a-885d-b5686c84c844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba821f49-d552-4085-ac08-90fcbe89d6e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f11016-c483-4a8b-a6e9-01a96efd3834",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f19523-981c-4cc7-bdf2-a39f872ec64e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94cf5aa1-c5c1-4f4a-8150-b68f4842a9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3706818-5fda-485a-a970-170fe835d688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea92c4a9-0e87-4d4f-a4b7-40651a35770a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f7a130-cf7a-4024-b579-f0038ce4b3b3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8609a214-feb5-48db-9285-6d27a0d135b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9b0185-7065-4e32-8b35-ad92f522356d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db1b658-48f7-4f51-82af-a3eefdac2426",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b59623-bcfe-4d4c-bb2f-8535d2ba6c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae62f950-b0ea-434e-9437-f5527f1c3172",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c879bf6-fd00-4fb2-8428-28c2d15c8029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eec00aed-4ed6-48a6-b701-8a70aba7529b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eacb8b-499d-40c6-8d72-269b4f87c85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eeb321-8d34-4b0b-93d9-cf56ba1e4083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e39296-8382-485c-b0e8-17b7c1d258bb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd4576f-cc0e-48a6-b219-b8ff160c142b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b56858-c47c-40b2-9321-25747cc7f9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787ca324-ecc3-4a27-920b-1430a5a7b544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d444fc-b070-4b40-94d9-981217ba427b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1153531e-d81d-40b0-b3e6-49c541ba35eb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2286b1-75a7-4341-ae5f-76aca68d96f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8472ad14-e968-413e-85d0-a95ea011ec73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f5334d-456a-44f8-80d9-e2377beb1b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13a4d370-c19d-4da2-9896-c3f63244f6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae75537-0044-4d1a-8cf5-5099a50a7bc0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9ffc53-6bd3-4343-85f5-f3df2f67befe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b284c67-1ed3-4010-8e94-0e237d13e15a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66bd30b-38fd-4c4c-a3f3-cc9b6bef42fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1ee19a-4708-437f-b4a6-4afdeeece81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea2f248-b106-4244-8b3e-2f7e34488941",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb65c8f1-213c-4dcb-bcce-c7571248e53d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96895a8-18dd-42ad-af5f-629399b16a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbff080a-3555-4115-8376-61031c055f6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7409f34-8b77-41b1-93f4-07d89316554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2839de4b-75a8-4482-bf68-69ab574c9282",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cd165b-89cc-4f74-b2e2-e8f9f5303a42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03889d3f-e6b0-4807-aa2e-7d03de29791b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a786518-d217-4619-b6c3-f95787b5c690",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6d5518-6bcd-41d3-aab1-45bbe698b728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b914f35-8d15-487d-ba74-4bd649b254a2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f1724b-5189-47a0-bb3b-14d52ddabfe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1860e18-8899-4c7b-bd22-ec018d3409b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517e3622-7294-436f-b9e0-b62971f87c9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3c616c-b162-4a6b-b172-654536ecf593"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "334c16a6-9a2d-4a97-9aa2-d425ccf10b73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbcb5192-d4d3-4f6e-bad6-7dd2a66f91ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2252de2e-1966-4ef8-8883-bc9f956b9980",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d698eb3-6587-420f-a4a4-b0b456fc3e47"
                    }
                  }
                ]
              },
              {
                "id": "7976b46e-0603-40bd-9538-06e66976474d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba4f5daa-c5f2-42f8-b26a-6b200434694e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1948d2-7a57-4469-8005-670104671cc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4e72a38d-2aaf-4c1f-a3f6-2ad5de0428fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7ef6b9-a2c2-40d9-bb3f-d58da5359724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3eed96d0-3d74-415c-94d8-9d655e75d39d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3de242b2-fd9f-4c39-a6d0-ad22006c728f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad0b2a8c-a6a7-4831-af00-dd2dcf4727d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd1ba353-6fab-4f61-a0cc-4ce90f9c727d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da1caebe-a99e-4b74-bc3a-2576892b659b"
                    }
                  }
                ]
              },
              {
                "id": "5818447f-aaca-4507-9b03-c1b0c98aa9e7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7363421a-2944-4a72-9450-fef422205352",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b6cdab-eb33-41b9-afca-8ae3a0864cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4d1d9dcf-d0ea-4d04-b5f5-0c4307343e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfeff44-4556-4253-9341-47e4923ccafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5236aee9-d8bc-4ca3-b914-79ff8824e932"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3ff4a227-4188-435a-8831-2d8d8ecf3b33",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fbf03629-5e34-4e1c-acd3-9ffd5ad913a7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa2cfbd3-7b43-4fb9-a4c2-73a7b7b8bebd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "22af085d-6c35-411d-85ee-ba0efd7e5cbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "063156d3-ae63-43cf-b6e1-32093c7d91d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3feb3cdc-2338-47d5-a36b-fa621c5b05bd"
                    }
                  }
                ]
              },
              {
                "id": "c82bb408-666f-4836-bdf2-e2490e47d5d4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ef81b0a-302c-4f79-9587-f328710f567f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cda0a616-e120-4f54-8f64-eff057edfc32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2577d003-0137-453c-a15b-e18a9f50e622",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f381f5d-ef7a-470b-9cf8-58fe2a587af3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2971517-4f19-4780-84a9-b75d670a672a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5a0a09e3-7bc2-48a8-8904-cfea7f2fb5fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5976dba-6d76-4413-a030-eb35fd064e3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14cea159-b436-4742-aae6-2f53c5689f9a"
            }
          }
        ]
      },
      {
        "id": "43ef8461-786e-4964-9917-cf26dffbd010",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9a971492-0163-4496-a24c-eae03cd1b760",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a34b17c-5d06-40ba-b709-7006032b4c79",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33b34b80-9479-49cf-bc41-8363282045ab",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186359c5-d8f3-4133-bd2f-65ff68bf45fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bfddcf84-507f-44cf-8955-8af8b47cbbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7429f0-6983-4520-ba92-0a107b6de730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c823bbb-d867-45c9-ab42-02ab245622fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e5db19f-9df1-43e7-80a5-9b7c87f13d89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3af776b-b3f7-4764-96df-7317713eb204"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "210c9e86-af3a-4485-85d1-25fd63979b0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2dde70-aeac-46f4-b12d-993a9cbc23ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69a2925e-4151-4f61-9892-355801d80a25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d6addd88-b347-4fba-bc59-5a2ee4392803"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b153bbef-bb64-42b5-b624-b896b0625539",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84aa854c-9904-4a67-8902-8a330a92a35d"
            }
          }
        ]
      },
      {
        "id": "f65d3245-1033-423e-b4ad-80941cefc310",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0cc3a055-0379-4a80-8509-2c9b9131c71e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "207523b8-667b-4514-a89a-8bc874093800",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "202c9e06-206a-46d8-b888-25c5e7e8181f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e93f463-5613-4d4a-96f8-e1bfba938991",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac836371-307d-45a7-bf05-03f8d67302f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47de76b1-88b5-4b36-9d38-327e297e0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ddb2fb6-d1a0-4e8e-b595-b5c32616a2c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c77f2451-366c-40fe-af79-2c616f96395d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cb53cc1-2e43-4d1e-9f9f-39abef0a14d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99f1565f-880f-4f36-af12-1e83aa672432",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30208bb3-07ad-40de-b69b-42eb8f1bec81"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9b8e8af-c526-42fc-98bc-2ea01ba0eb07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1b64a724-0cdc-4689-b463-cc1e4e904371"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "200ce9e9-b6ec-4d3b-9151-255c6e0a5d91",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5223aea8-2aa6-4b76-9839-de0887a34332"
            }
          }
        ]
      },
      {
        "id": "08bcfd90-95e3-499f-a530-0399e6c84edd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c023368e-35ee-43ef-a91d-70471766586c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6018349-4037-4d6a-aafa-a78cc7974b52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b35d13c4-add5-424b-975a-4fac6f23a6b5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b1cf7a-aa3b-419a-b8ba-61ca534eee47",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87a25ab6-af56-46ff-aa16-f15d9b6a7558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331b2586-4c2d-4d2a-b28f-bd5fa9fca377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e70babdd-02de-4132-8806-31faeeb2aa08"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f51a398b-dbb7-48ee-ac94-e283980e9fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "383e364c-d78c-4199-a0df-7bd72ca7f816"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7e5d55b-09dd-454d-bee8-c9aafec59690",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82bc5f03-7268-433c-8f0f-76b8e60c084f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51a2a778-7112-4dfb-b8a6-3712a1fe4292",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e505f49b-f71f-48d7-ac69-1106cbe17c35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70bb5a12-b014-4fbb-8cc9-48fcc07cb848",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96fcd5a9-09b0-4f7a-940a-0e15e1b31157"
            }
          }
        ]
      },
      {
        "id": "58d693b8-8b62-42df-8fce-332c2e60f467",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dbc1ef1f-72aa-471d-8c10-50b8b336b092",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d69eee2-9f50-471c-911f-fbb33107b752",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1e7519b1-dc2e-4580-9324-d4a401dedcf6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92a353e9-c3ad-47dd-8147-1dc02a08b0c5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7784d7c-6dff-4f53-91b8-3d06bb3c063b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 750.0198412698406,
      "responseMin": 21,
      "responseMax": 26840,
      "responseSd": 4009.2618135124144,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727916312507,
      "completed": 1727916509991
    },
    "executions": [
      {
        "id": "12a09b4f-faee-4dc6-9388-c4735dac76ce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5b98d516-799e-4536-9126-f12c5b676b95",
          "httpRequestId": "ccc9028c-e579-47d4-abab-2bbdf1203e93"
        },
        "item": {
          "id": "12a09b4f-faee-4dc6-9388-c4735dac76ce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b7e83095-a0fc-4fed-8d0f-a57a8183c431",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 0
        }
      },
      {
        "id": "a0f7c39e-e7c5-418e-88fc-01ac70244714",
        "cursor": {
          "ref": "b8b34bdb-3803-4be9-8eb9-924aba3d8d89",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "000ddf6e-5724-478c-a39c-ab112bcfb0e2"
        },
        "item": {
          "id": "a0f7c39e-e7c5-418e-88fc-01ac70244714",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c47bde6f-c434-4084-a53c-9f3360562b8e",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "05d22cf8-f2e5-476e-8835-e49a7673913e",
        "cursor": {
          "ref": "2229c7b5-f9fb-4c0d-bd82-00d0816ffbb8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "378657cb-a1a1-479f-b7b2-c804c54c8d40"
        },
        "item": {
          "id": "05d22cf8-f2e5-476e-8835-e49a7673913e",
          "name": "did_json"
        },
        "response": {
          "id": "d91cb775-319d-4455-bbd2-6f015b7d3ed2",
          "status": "OK",
          "code": 200,
          "responseTime": 394,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e009ff-011c-4c0b-8ce9-7a58d818cff5",
        "cursor": {
          "ref": "fdb679e0-c6de-4302-82b0-07b2cbb2ce45",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0de66aa7-8462-44e0-8b92-fde3af6c110a"
        },
        "item": {
          "id": "14e009ff-011c-4c0b-8ce9-7a58d818cff5",
          "name": "did:invalid"
        },
        "response": {
          "id": "be8597af-9b4e-4058-b5b1-14a8c894eb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2259,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14e009ff-011c-4c0b-8ce9-7a58d818cff5",
        "cursor": {
          "ref": "fdb679e0-c6de-4302-82b0-07b2cbb2ce45",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0de66aa7-8462-44e0-8b92-fde3af6c110a"
        },
        "item": {
          "id": "14e009ff-011c-4c0b-8ce9-7a58d818cff5",
          "name": "did:invalid"
        },
        "response": {
          "id": "be8597af-9b4e-4058-b5b1-14a8c894eb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2259,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc113e0-3e1d-4100-b6e4-0c633e3eb0d2",
        "cursor": {
          "ref": "9982e4ee-fe3a-433f-9095-da858701ea3b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "aca8329c-8115-4128-9fd4-0ff3b5fe6791"
        },
        "item": {
          "id": "0bc113e0-3e1d-4100-b6e4-0c633e3eb0d2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "324901c3-539c-4377-adef-253a13e39135",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2687,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3c351b-b9c8-4238-99cd-1e2c5f7dd5ee",
        "cursor": {
          "ref": "8c59f758-fe0c-4160-b232-c4a768ce86c8",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ea6c20b6-e690-46de-94c7-71800799502c"
        },
        "item": {
          "id": "ab3c351b-b9c8-4238-99cd-1e2c5f7dd5ee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "64f53023-342a-4b6e-bfe9-08382d95c296",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2236,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc434bc-80e7-4ee0-899d-485bef937450",
        "cursor": {
          "ref": "c1fbef4f-2c02-4a05-970b-fd9bc65ac273",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "49c32cfe-6853-43cd-9cc7-e31f223dcf4f"
        },
        "item": {
          "id": "9cc434bc-80e7-4ee0-899d-485bef937450",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c1c0316d-5010-4c34-939c-31ec2424f8c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2d16e2-6008-49c3-8d4e-3b5155dbc464",
        "cursor": {
          "ref": "35a3ce52-3515-4f34-82ba-24b8ccad013f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "87a69a94-c4f4-4fc8-a5fa-cda2c2096fc8"
        },
        "item": {
          "id": "7d2d16e2-6008-49c3-8d4e-3b5155dbc464",
          "name": "identifiers"
        },
        "response": {
          "id": "1d10b357-a61f-41be-9a7d-09572285295a",
          "status": "OK",
          "code": 200,
          "responseTime": 2500,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1801dd29-5f7d-4af3-9b46-c93d2d5a6e98",
        "cursor": {
          "ref": "c677a86f-450d-4b47-8bff-e88a298d512c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d393a2c-9775-494c-88d7-0c00bb375506"
        },
        "item": {
          "id": "1801dd29-5f7d-4af3-9b46-c93d2d5a6e98",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "780976b5-e8a1-40a7-92e0-dfc66852d964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11bdd5-916b-4ea5-8bad-88c13429a940",
        "cursor": {
          "ref": "542cca9a-474d-490f-b06b-1e76fda20be0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b06a56bc-1b83-4f56-a976-314cf490e8f8"
        },
        "item": {
          "id": "db11bdd5-916b-4ea5-8bad-88c13429a940",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1fbf4d8b-51ed-49f3-bc9c-4b4a2f5492b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88388852-b5ea-4fdb-892c-fdc295107943",
        "cursor": {
          "ref": "eea5debf-3435-41cf-9935-aed496acf996",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4b2f9c06-d4c7-4f9c-9629-6f3fd561a57e"
        },
        "item": {
          "id": "88388852-b5ea-4fdb-892c-fdc295107943",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d314e0d1-1dcc-437c-9ead-fd94458e7759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876dd435-6e81-4034-9d92-9e726c882918",
        "cursor": {
          "ref": "ed8f7542-3859-43e2-8acd-a99b3877baa0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fc0634d1-eb01-4d9e-b0ac-068bd4417abc"
        },
        "item": {
          "id": "876dd435-6e81-4034-9d92-9e726c882918",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a7726149-ec4e-4837-a0cc-103556dddf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d04e00-25cd-4ff1-bf10-3955af15c118",
        "cursor": {
          "ref": "8ca81209-88ef-46dc-b96a-8935d82586b8",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "255ec09f-c63b-4203-99fe-342b201cd4cd"
        },
        "item": {
          "id": "32d04e00-25cd-4ff1-bf10-3955af15c118",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dbf725e9-bf45-435b-867c-e8998b2d94ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f07918-2952-4bda-8318-6a7723647c25",
        "cursor": {
          "ref": "04a5d361-e455-43c4-b6d2-1efd1fc802b4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "888e6ec5-db80-44aa-bec0-b12ef84dd4a7"
        },
        "item": {
          "id": "90f07918-2952-4bda-8318-6a7723647c25",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "63420e38-29ca-4f6d-aefe-0230295758c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cbdc1f-f94b-46bf-971b-7b97fbaed44a",
        "cursor": {
          "ref": "faa7394b-c843-4fc7-bcb1-3d3091e8494a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d4f93391-2cc8-4b4b-9b19-4a8627fa5059"
        },
        "item": {
          "id": "65cbdc1f-f94b-46bf-971b-7b97fbaed44a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "54ea5216-4769-4086-82fc-d3157ff60071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b069ac2-1187-4828-be4f-022787a2b999",
        "cursor": {
          "ref": "8323b503-1507-439b-a8fc-9c0586249369",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9bef71e7-b0e0-4188-8096-17f48e53d143"
        },
        "item": {
          "id": "9b069ac2-1187-4828-be4f-022787a2b999",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "01b03046-65be-407c-b918-728dc3c644bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606ad0d0-6755-48d6-9a90-671d7a444fae",
        "cursor": {
          "ref": "8a7ea707-1acf-46d6-aa95-dc66cda842e9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7c8e7836-d84f-4edc-a9b6-822e6e7f9316"
        },
        "item": {
          "id": "606ad0d0-6755-48d6-9a90-671d7a444fae",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ed3180f0-f5e2-417c-810e-7a70284ddbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3425fa1-076c-4643-b797-b0303f8d287c",
        "cursor": {
          "ref": "47d96faf-6a13-4e08-8d33-a9bcdb266777",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cc262bc2-b91c-4128-8686-fad0482226b5"
        },
        "item": {
          "id": "e3425fa1-076c-4643-b797-b0303f8d287c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "365f6c48-7865-4a22-be6b-c54a64bfb46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4abc11-1eca-4097-bbf5-85d5e4b2b91a",
        "cursor": {
          "ref": "cd497404-9ce7-4ecf-b6a5-2bcfabc5f55f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eb4ca919-437a-4127-bd61-15255da2dbf3"
        },
        "item": {
          "id": "da4abc11-1eca-4097-bbf5-85d5e4b2b91a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "94495efe-0e03-4e7a-8afb-d01cb2045d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256fc3ae-8924-4cc5-96a3-250fe3d4ea7c",
        "cursor": {
          "ref": "d9ae4b1c-8bc6-4736-8fd0-d35bf54bd925",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8161118c-1c81-42fb-979f-d939ef741133"
        },
        "item": {
          "id": "256fc3ae-8924-4cc5-96a3-250fe3d4ea7c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5d91242e-0a55-4efe-bf5b-187af61fe9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5ff98b-aa22-4f38-8626-3dd3766f32d0",
        "cursor": {
          "ref": "b029d45f-65a3-4a9f-83d2-cc455f8fab6d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a2e6a7a4-dc69-4925-95ee-a19439442168"
        },
        "item": {
          "id": "8f5ff98b-aa22-4f38-8626-3dd3766f32d0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "12b16424-a6cf-4997-a17d-4f29a9c6c353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863c0101-db8a-4590-86ec-d7c4c1e37ce6",
        "cursor": {
          "ref": "9768ba0a-a397-4ae1-8040-e67471815a4d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ec92909a-f97b-41b0-b23c-23159e9321e7"
        },
        "item": {
          "id": "863c0101-db8a-4590-86ec-d7c4c1e37ce6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "157aee0a-b661-4dff-8bd5-8fd417e20855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb03697-0d89-4b38-a6e4-6b3f0cee5cc3",
        "cursor": {
          "ref": "213fa679-64ba-4542-9e1e-6746b1661a59",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bebb4109-ad6b-4491-9fb1-0e3b925b7446"
        },
        "item": {
          "id": "6bb03697-0d89-4b38-a6e4-6b3f0cee5cc3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cf5210fb-d3d9-4f33-aff4-1d0b2ae9b248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dc0307-8cea-48b9-9e42-72801b2ea64f",
        "cursor": {
          "ref": "afa16267-78a7-4c88-9d6e-ba3924d63da9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2dee3e74-4d28-45a4-9fc3-bfa0ccfdee3f"
        },
        "item": {
          "id": "85dc0307-8cea-48b9-9e42-72801b2ea64f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2111110b-1ef9-4fc5-9ca7-684d64c77dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bf6268-6ce4-4e3a-8267-f768857f191c",
        "cursor": {
          "ref": "72e3be5d-d6a0-4dbf-8a3e-c9aa78e07e53",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a0290c2c-3aeb-4d51-b83a-e591872a0d2a"
        },
        "item": {
          "id": "82bf6268-6ce4-4e3a-8267-f768857f191c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1063d351-17c1-4e28-93a3-35701ac069bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef2557a-e3b5-4907-b2ec-73c7fa932821",
        "cursor": {
          "ref": "bc5b9451-bc5a-43bf-9999-ca615738fec4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "76cf6e6a-9f1e-4e65-ad91-9d606cd2afab"
        },
        "item": {
          "id": "bef2557a-e3b5-4907-b2ec-73c7fa932821",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c51cb63e-783e-4f91-ba0d-085c3aa0b1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cb0608-e3cf-4464-b916-47c5bd3f3ca6",
        "cursor": {
          "ref": "73e41ff9-7d25-4ab1-b0c0-4b20056f3004",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "396d2e0d-6c9c-47a4-9a2d-07850623e91b"
        },
        "item": {
          "id": "c7cb0608-e3cf-4464-b916-47c5bd3f3ca6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "968fa6eb-e09d-4060-a55e-2bf44db2ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa821a6-6e14-4a6d-971c-df8af498dd21",
        "cursor": {
          "ref": "98a36c76-00da-44c3-b95b-3b424d0628d7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "08c75210-e361-473c-8416-de09a1eaef60"
        },
        "item": {
          "id": "daa821a6-6e14-4a6d-971c-df8af498dd21",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d0065257-37e5-41ca-a2b2-451b52592c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d25aede-0d4f-4c86-a891-f46bf0789056",
        "cursor": {
          "ref": "d9578808-d6b2-4814-a010-cb3cf7713f05",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "351199a9-3072-4059-b2ac-95fa66def51c"
        },
        "item": {
          "id": "7d25aede-0d4f-4c86-a891-f46bf0789056",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a0e71ca8-285d-4d4e-a4cb-aea22c5a48a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef1316e-fb39-46b9-a8cd-3c33d5d9a37e",
        "cursor": {
          "ref": "1eebe2f7-ab93-4ec5-925e-6368ce2a290c",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "14922e4a-b637-452f-b7f4-76767616de15"
        },
        "item": {
          "id": "1ef1316e-fb39-46b9-a8cd-3c33d5d9a37e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "960353d9-51b2-43d6-b0a5-4f1a35b08c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bba3732-cdd8-44e7-a25f-36e0f73ab5f7",
        "cursor": {
          "ref": "51b79d3a-b994-46d5-99ab-aafcd18a368b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7246700-0a86-4bd4-ab5f-4a49dabf5650"
        },
        "item": {
          "id": "5bba3732-cdd8-44e7-a25f-36e0f73ab5f7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e3d776c9-45ae-40ad-b1a6-ea77136e90f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d2da8a-9970-4f04-aa18-e9f4cb16a7d0",
        "cursor": {
          "ref": "788e67df-afe5-4c1c-97e2-10e9674545a3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0517643a-c1ea-460a-a001-5dfd1ce27524"
        },
        "item": {
          "id": "e8d2da8a-9970-4f04-aa18-e9f4cb16a7d0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a0f72352-24b0-4e14-b374-53ac6165f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403a25d9-3615-4340-84d9-3a6a638f0f55",
        "cursor": {
          "ref": "42786287-b0a1-44c4-8c41-d7ec959214fd",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81182995-61b9-4cc9-8366-a9881109d112"
        },
        "item": {
          "id": "403a25d9-3615-4340-84d9-3a6a638f0f55",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f4244df9-d0ee-4b5d-a56f-84dfebdf6104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f420e-c7a6-49a3-a067-1004cfdeff4a",
        "cursor": {
          "ref": "ab647351-3226-43bd-911f-352e0b509620",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0a0c9f95-1abe-4e0c-bd28-5fd178ede274"
        },
        "item": {
          "id": "f07f420e-c7a6-49a3-a067-1004cfdeff4a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d5f18f85-00ba-44d3-9a01-280f63f16199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82a3652-4d51-4c8a-bee8-7fd2d524b554",
        "cursor": {
          "ref": "d17807f8-8c59-4d8d-bdf4-dd094ce95865",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "282714f1-df86-410c-9cdd-1bd3e169f55d"
        },
        "item": {
          "id": "c82a3652-4d51-4c8a-bee8-7fd2d524b554",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9bdfba85-891a-48b0-928c-ded6fc87262e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc31df5b-e097-4c39-b4d0-687d273ff492",
        "cursor": {
          "ref": "e0f4ac30-4fcb-478f-9d59-e8b24d3521ca",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6db9c73b-1582-4d01-9063-3a7f3b441d1e"
        },
        "item": {
          "id": "cc31df5b-e097-4c39-b4d0-687d273ff492",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2400526d-7e0a-4034-b9ff-b38390d2336f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eb51e4-3f61-4827-a135-d14bc3942377",
        "cursor": {
          "ref": "6f7d532e-c8d5-46b1-9de4-f40e3902f950",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7eb2b926-d25f-4749-9685-4d0286853a24"
        },
        "item": {
          "id": "41eb51e4-3f61-4827-a135-d14bc3942377",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "72dcfd64-063d-4722-b7df-36a494d8d3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7e5330-bb02-423b-9093-d3ee5024560f",
        "cursor": {
          "ref": "5e572af2-fc78-4fa9-97e2-bc0d94215f8c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20183263-1ba6-442c-8474-891678da3493"
        },
        "item": {
          "id": "7a7e5330-bb02-423b-9093-d3ee5024560f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e661cbb9-f471-44fa-9df3-c597ee1fae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d34be-343d-4312-9587-b11d9c536bfc",
        "cursor": {
          "ref": "f33641bf-eaa5-48e9-8a30-874c4728abb4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "94750a5f-bc49-4934-aa67-def89fc795aa"
        },
        "item": {
          "id": "3c4d34be-343d-4312-9587-b11d9c536bfc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4a52772c-d2bd-4ae1-9df6-30c667e91bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbfa6a4-e8c4-4b47-86c3-a168b3c2a145",
        "cursor": {
          "ref": "baf83d2c-8222-4b91-8200-dc23f013be46",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "18b36bfc-6c0b-498d-a96c-df212496c955"
        },
        "item": {
          "id": "9fbfa6a4-e8c4-4b47-86c3-a168b3c2a145",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5a7b5377-9b3e-48d1-858b-a2965c29aff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c1a20a-c99e-4119-b778-d10e44f27506",
        "cursor": {
          "ref": "185d224e-6eff-4204-8cc8-0a40b733e704",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2eaf5c81-bb29-4596-8600-1026fd66c291"
        },
        "item": {
          "id": "15c1a20a-c99e-4119-b778-d10e44f27506",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "000ceae5-4cac-4156-9335-d276900652e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa965c1-fb6f-4887-bb6d-bad4c90e5937",
        "cursor": {
          "ref": "93cb94e9-7edc-48f2-b380-d07b988d2dc6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "508ae57c-ecec-4cbf-b8a7-67e7b8b29bbc"
        },
        "item": {
          "id": "bfa965c1-fb6f-4887-bb6d-bad4c90e5937",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "219d03c9-36a6-47e4-8e41-147f42c40d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c460fd3-870d-460d-8c3b-3bd335218318",
        "cursor": {
          "ref": "22d7ca11-e564-4db8-a7e4-98a2c281e19b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fa6e1719-bba4-4b6d-ba15-204f5ef7ac2a"
        },
        "item": {
          "id": "4c460fd3-870d-460d-8c3b-3bd335218318",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6ae41587-ca4c-4ba4-a572-d6c7102759c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8826872d-9151-4fe1-9d31-89d698ea26d2",
        "cursor": {
          "ref": "5d69cb9d-b2c1-415d-ae9f-037b8ad1a85b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7a49865d-608e-49ca-823a-6b2b33300846"
        },
        "item": {
          "id": "8826872d-9151-4fe1-9d31-89d698ea26d2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cb44b7c6-964b-46ed-924c-b994f14caad4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4f0a16-88d6-4ec6-b16e-f9368f046596",
        "cursor": {
          "ref": "c2fa06a3-93ce-4404-a4ca-899ff0e637fa",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0409ca03-77c4-4a68-a966-e6c5c1efcc23"
        },
        "item": {
          "id": "ad4f0a16-88d6-4ec6-b16e-f9368f046596",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5bff7b9b-2778-4b98-83b1-224973f2c692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4944c433-1fb8-4f4d-ba86-65e425aaa953",
        "cursor": {
          "ref": "f0f532ac-be0c-4a3a-8c11-b09c6bff0118",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1fde323d-c7f3-4b26-a3bc-77f204e8aece"
        },
        "item": {
          "id": "4944c433-1fb8-4f4d-ba86-65e425aaa953",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f57e483e-d782-49df-bd72-a02df7671663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a487d108-cc41-4939-8a3d-9975385b2e55",
        "cursor": {
          "ref": "1393d810-c9e6-4473-b48e-3ab7158a75bf",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "bacb9dea-055b-41c3-97df-fa1f9001201c"
        },
        "item": {
          "id": "a487d108-cc41-4939-8a3d-9975385b2e55",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9bb37c69-74fd-4364-8a3a-2a82e96738d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e059b5aa-a974-491f-82b5-cfee61d953e1",
        "cursor": {
          "ref": "3205257c-83f4-48de-9697-0910b8aa5338",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2b95b6ca-c5cc-4d81-94b3-02bd13a61e3e"
        },
        "item": {
          "id": "e059b5aa-a974-491f-82b5-cfee61d953e1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "22edcc4b-247d-466b-bbf8-01818286cd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72a41d56-c80d-4e8b-879d-b4a8f4f8543a",
        "cursor": {
          "ref": "94a31170-0ccf-48b6-825f-0ba8a178cb0c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c96b3f2e-2cb5-4200-9c5e-ca15c0271020"
        },
        "item": {
          "id": "72a41d56-c80d-4e8b-879d-b4a8f4f8543a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "568a13e6-82a6-4baf-a28a-d3c7c2515b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88f6c58-acd0-425b-8b78-424eb84281f8",
        "cursor": {
          "ref": "3bce8fe2-566c-4ee9-981c-7d0766b2a90b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7df1a11c-e228-4eeb-84db-0669b8f87638"
        },
        "item": {
          "id": "c88f6c58-acd0-425b-8b78-424eb84281f8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a7c53d19-daf9-4fd7-8675-1cee47eac374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bfe63b-6cff-438c-8ab0-ad65476ecaf7",
        "cursor": {
          "ref": "bd9bc053-32da-4add-872d-7179580aa6f8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "98d727bd-7d2b-4577-a45d-8f6481791302"
        },
        "item": {
          "id": "39bfe63b-6cff-438c-8ab0-ad65476ecaf7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7b9d8cc4-7228-42b3-95f7-fa6cac59016a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807741b2-7a94-47ee-8195-7f28bbcc4d50",
        "cursor": {
          "ref": "d1ce67a1-7b4d-426d-9a2c-adc94ab9f89a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ea1b6cd1-90ff-4310-8133-a864d1032e25"
        },
        "item": {
          "id": "807741b2-7a94-47ee-8195-7f28bbcc4d50",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65ea741b-4fc9-4cd4-a8c0-d2eb13122bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dc4231-05a7-460b-83f2-04386342ed48",
        "cursor": {
          "ref": "a232499a-6d21-47c4-9c89-e521cc954c12",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "44588190-05f0-43c4-a754-02353068f20e"
        },
        "item": {
          "id": "73dc4231-05a7-460b-83f2-04386342ed48",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d86cb8cc-3eb0-43d6-983c-94c93aeb2022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339a05f2-844e-4c1d-9198-d636e3241cce",
        "cursor": {
          "ref": "f501bd61-c6e4-4f84-afdc-25ba3b68bc6f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bb81082c-9d17-438a-80d4-10c5461d09b6"
        },
        "item": {
          "id": "339a05f2-844e-4c1d-9198-d636e3241cce",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "13d99ea3-2d66-47d5-b56f-e47aac676bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cdb846-42e7-4eb7-9a88-16225deeb776",
        "cursor": {
          "ref": "bfcf9955-d717-41ab-a64b-4b1d00a93daf",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b97aa0ab-3a90-4d1b-a22c-71190f1be3bf"
        },
        "item": {
          "id": "84cdb846-42e7-4eb7-9a88-16225deeb776",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0ffdd4f2-4c06-4aca-834c-87cce9c46244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d13e68-7f73-40c6-b7a6-7050c6c4c833",
        "cursor": {
          "ref": "03e5ebed-21e1-45a4-b4b9-49b75cb9fb19",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c555f68f-f137-4891-8216-56888e568dbc"
        },
        "item": {
          "id": "39d13e68-7f73-40c6-b7a6-7050c6c4c833",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "61707846-eee4-4ffc-8586-4608e7d58cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf62da2f-7e4f-4267-9e41-e66d4f14ce46",
        "cursor": {
          "ref": "a17dbdd9-50bc-4ac1-a4fe-b9ace963b946",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "befda172-e69c-4b85-ac4d-f0e5c24bfeec"
        },
        "item": {
          "id": "cf62da2f-7e4f-4267-9e41-e66d4f14ce46",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "05284b9f-3b98-4af6-8bc2-c6a5fd25042b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28fda00-5c84-4f83-a078-383a0a01abfe",
        "cursor": {
          "ref": "5784267c-567e-4fd8-bedc-30b31c2a2b31",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2d62ba22-ebe9-46c6-abd9-b42d6947b121"
        },
        "item": {
          "id": "a28fda00-5c84-4f83-a078-383a0a01abfe",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "efbccd2a-59ec-4b1b-adb2-e32194d403ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c228865a-01fd-45b0-b59a-b1e6a17eb3cf",
        "cursor": {
          "ref": "6cb9a304-8d8f-4422-b2fa-27c4acb4cbf9",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "40bb5e7b-ce53-43d6-953e-f7046d467dc1"
        },
        "item": {
          "id": "c228865a-01fd-45b0-b59a-b1e6a17eb3cf",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "153b0f74-26b6-4d12-a3f1-b0b70f64ab07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2770435-093d-440d-899a-179e1d5cd5f2",
        "cursor": {
          "ref": "0b506964-4143-4926-bdee-2920352d65c3",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "61c41193-3eaf-4c61-8af3-301014777773"
        },
        "item": {
          "id": "a2770435-093d-440d-899a-179e1d5cd5f2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8007618b-e00c-4bfc-b088-a972d19ca358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3668fb-7fe7-4e62-ad62-3c9adfc4c2ec",
        "cursor": {
          "ref": "74f349ec-84c8-4c81-b8b6-2bb5b838f1d3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3d5c8da2-eef6-4625-822a-fd27c860f48f"
        },
        "item": {
          "id": "8e3668fb-7fe7-4e62-ad62-3c9adfc4c2ec",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "84473c14-7e22-4664-8a07-f448fc05b090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c33f347-d80f-4245-9236-10f0b795ddd2",
        "cursor": {
          "ref": "bcdd34b3-2784-4d57-9ba1-3ab790116989",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fae77bcb-f511-4fdd-9ef8-0c6e326f1dcd"
        },
        "item": {
          "id": "3c33f347-d80f-4245-9236-10f0b795ddd2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "904ef1bf-432f-4495-99fc-ebe3022324e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b31994b-8e6f-424f-8d28-1c0c035adc18",
        "cursor": {
          "ref": "b8ee9f51-752b-4b1c-bd06-4e8c0b7de8a8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a515c63c-3e4d-4801-8226-c8066b903e05"
        },
        "item": {
          "id": "3b31994b-8e6f-424f-8d28-1c0c035adc18",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bb9e3d50-20b4-4962-83f1-30d8b296765d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7170a320-f5f4-4548-8da4-778379266aff",
        "cursor": {
          "ref": "5d4516bb-b251-4ce6-bad8-6261ee6cae2d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "70277d81-cec5-4919-8486-3b9d315913fb"
        },
        "item": {
          "id": "7170a320-f5f4-4548-8da4-778379266aff",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f5c68e9b-24b1-4736-9ec7-f65698861aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3132aca-ec9c-48df-8199-0bc86ba42df5",
        "cursor": {
          "ref": "47fff21e-50e7-4d58-a6a4-84d0e3228e1c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a408832c-4d66-4903-b98e-69ec00fe1786"
        },
        "item": {
          "id": "a3132aca-ec9c-48df-8199-0bc86ba42df5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a03446ec-fadd-4ad5-ac68-a2401aff6901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbe0764-04e6-4c7b-a201-97f5cdc72a1f",
        "cursor": {
          "ref": "dfc55311-1c46-4653-985e-69e883483386",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ee26a0ef-83c4-4484-8d82-5c344c613154"
        },
        "item": {
          "id": "1fbe0764-04e6-4c7b-a201-97f5cdc72a1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "38315d32-2dd4-4374-ae29-d61e0cf1f82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc0eb8-5705-46dc-95fb-0dcac71b6777",
        "cursor": {
          "ref": "17dbc2b8-cdc3-403d-8fae-b61cf975bf4a",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "36eb7584-1a0a-4e71-8500-c4dcc971e6fe"
        },
        "item": {
          "id": "20bc0eb8-5705-46dc-95fb-0dcac71b6777",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e9e027d6-73b0-49ab-859f-53b5bfdb40a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571a3f12-8330-4684-9260-107bdaea28a3",
        "cursor": {
          "ref": "551482bc-4530-4b78-a192-74d019b59bb9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f8848264-d5a1-49ce-8854-21919fd047d9"
        },
        "item": {
          "id": "571a3f12-8330-4684-9260-107bdaea28a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d3247ba6-905c-48ee-a821-3802ef1f7456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0247d1f4-315b-4372-a57c-32567364238e",
        "cursor": {
          "ref": "6ac3db0e-8499-4b45-aadf-a254dbc99815",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "14a75516-f741-48b1-a4de-77925210c405"
        },
        "item": {
          "id": "0247d1f4-315b-4372-a57c-32567364238e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "eac0a00a-712e-4600-95d4-94919d7e3e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b1071c-62be-497e-b413-90805bdef180",
        "cursor": {
          "ref": "13ec474b-0d5d-455e-9599-33a653294067",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "326efdd6-6de1-4b82-8cb2-05ddfc0369c7"
        },
        "item": {
          "id": "36b1071c-62be-497e-b413-90805bdef180",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b0237d1b-cef9-461f-873f-b5629140b729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdbd21a-10b1-4367-a9f8-4af9cbbccaf1",
        "cursor": {
          "ref": "cd3b348a-aafd-4e95-8219-5fa11379e75b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7432b014-8ecc-4d73-9810-597e607a235a"
        },
        "item": {
          "id": "2bdbd21a-10b1-4367-a9f8-4af9cbbccaf1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b961299d-6732-4b4a-bd66-d5a0023c4e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bd9c4e-3d79-423b-a38d-85d6db99dd01",
        "cursor": {
          "ref": "c0104645-35d5-4536-9715-1ed001c64a38",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0bbb4581-db33-490b-a6bc-2f39d4de9581"
        },
        "item": {
          "id": "09bd9c4e-3d79-423b-a38d-85d6db99dd01",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6bd78d67-a638-4a7f-bc4c-5724168516d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565c6a7a-5b2a-4692-a374-7a5ea2d95563",
        "cursor": {
          "ref": "a5f47391-6042-46a2-b940-e48b3e4e9b5e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0c39142a-778b-4d00-b38e-7939331bf77c"
        },
        "item": {
          "id": "565c6a7a-5b2a-4692-a374-7a5ea2d95563",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5b6e72bc-d07c-4735-b683-25f01c1ff197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9d11c1-653f-46e2-affd-294071dccf2c",
        "cursor": {
          "ref": "8f425337-cfba-41ce-9eae-77dda0874997",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c3bd264d-5ceb-476c-a762-a857cc718eaa"
        },
        "item": {
          "id": "5a9d11c1-653f-46e2-affd-294071dccf2c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ea1e1816-0f24-48aa-ac6e-ea2fc747ccee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b312bd-6368-41e9-99d5-d7f2df4dd331",
        "cursor": {
          "ref": "91b38752-46bd-4470-b03a-16879be00368",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fb0d2d94-b47f-4263-b342-0f031bf54670"
        },
        "item": {
          "id": "12b312bd-6368-41e9-99d5-d7f2df4dd331",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "abe38908-7371-4d3c-89c5-0bf993366a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f68a8f9-efb8-41a6-9512-8fb112b7b78b",
        "cursor": {
          "ref": "c2f56bf1-b9f7-4864-badc-4247e3368905",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5abba6b8-f302-4a41-80e2-93be43e51630"
        },
        "item": {
          "id": "9f68a8f9-efb8-41a6-9512-8fb112b7b78b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2b89ce01-1258-4a57-b0bb-501ce1b12ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5969ef38-fbfa-43b5-a931-7302a37debcc",
        "cursor": {
          "ref": "138e4340-399d-4f98-9255-225cd8b9ab35",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b177e927-f2bd-46b8-8814-a2993b1a5893"
        },
        "item": {
          "id": "5969ef38-fbfa-43b5-a931-7302a37debcc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1296ff22-656d-4a4b-92e5-baa048a8aafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f18612-49df-4fec-9965-80b8a389f7e6",
        "cursor": {
          "ref": "49618a6a-71a0-4d2c-93d0-e0773e60e5fb",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1fc5765e-3c1a-473d-9f10-343030b9207a"
        },
        "item": {
          "id": "97f18612-49df-4fec-9965-80b8a389f7e6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "72b14e10-6340-483b-a387-a5bce0d7c221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ebad96-c68a-4630-a053-a90ed787230f",
        "cursor": {
          "ref": "61fcf998-bcb4-49e1-849b-bd76e9ae4ea2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6eae540b-ee75-4158-b4e1-66cb9d08523b"
        },
        "item": {
          "id": "84ebad96-c68a-4630-a053-a90ed787230f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "82477e54-8ed0-4c37-9ad6-692d09ddbe0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b301a0fe-6a22-4d88-9f91-493de7a20b6b",
        "cursor": {
          "ref": "f35fa876-8600-458c-b38c-0ae3060a364b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a7d0da1f-de64-4574-9688-17df55854e89"
        },
        "item": {
          "id": "b301a0fe-6a22-4d88-9f91-493de7a20b6b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "467d7aa5-cb6d-46d3-9a50-1195941df387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7498ceae-b25b-4666-b906-6a925c027805",
        "cursor": {
          "ref": "1a0f23ce-85c2-4e33-810e-a28fcbe9bf08",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9c41296-fcbc-4771-8692-0ebbfa9a8f15"
        },
        "item": {
          "id": "7498ceae-b25b-4666-b906-6a925c027805",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "41ce344a-865c-43eb-9e6f-c92b5a710801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e7433d-c3cb-437a-b211-f48966bfa26c",
        "cursor": {
          "ref": "b7ac03bb-85e5-489f-aef7-34cc746bd3ad",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5610c541-0007-4760-9773-d46f8121b482"
        },
        "item": {
          "id": "a9e7433d-c3cb-437a-b211-f48966bfa26c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f54d46ce-78fb-4e09-a6f7-148d0fcfa85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c54f4c1-6242-459c-b4fe-a8c09a1c8fad",
        "cursor": {
          "ref": "8d87a9f1-a7d8-4126-b67b-c83894991f31",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9556e169-c37e-486c-9906-85ad8b7de349"
        },
        "item": {
          "id": "4c54f4c1-6242-459c-b4fe-a8c09a1c8fad",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ac82986b-62fa-4528-9d46-1fd71f121c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae34ed30-e237-4034-8bad-ec8f7ff7bd9d",
        "cursor": {
          "ref": "54cf5f1d-2255-4e3f-a03c-5a14f8a529ad",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "86231b43-1ece-407a-8a9e-a7358b9cd8b4"
        },
        "item": {
          "id": "ae34ed30-e237-4034-8bad-ec8f7ff7bd9d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "10e9602c-4697-4284-a6dc-ede4bbf4da69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805ff206-e20c-4c99-bbdf-2de67c5abc28",
        "cursor": {
          "ref": "7b561ecc-081f-4827-bedf-ce33cd9e73fb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9b70b49b-8ff3-4e6c-ba5c-1334e36cb714"
        },
        "item": {
          "id": "805ff206-e20c-4c99-bbdf-2de67c5abc28",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3691996-a380-444c-83ff-d43ef08d0036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6262fb32-2dc7-401c-915d-0a0d26665c68",
        "cursor": {
          "ref": "153a0376-ac57-4ab6-a59b-5458ad3bdeeb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6d13e150-7962-49b3-ad05-a69e1ab88792"
        },
        "item": {
          "id": "6262fb32-2dc7-401c-915d-0a0d26665c68",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "76d0f486-7c89-4fe9-8a3f-6cc68fda9450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7e7fe2-88d5-4d49-9b4a-6375971e0c9d",
        "cursor": {
          "ref": "0ac109c6-c395-427a-b5f5-4adc1fcb46ee",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81ba54b8-83bf-4747-8b8b-6636dca288a8"
        },
        "item": {
          "id": "4b7e7fe2-88d5-4d49-9b4a-6375971e0c9d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "83af4b43-8eea-426e-b63d-d6d7e2fcb4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff2d4a1-adf7-4dbc-b532-d02b07ab01b2",
        "cursor": {
          "ref": "e4fe8bbc-e612-49fd-9d00-011e8d19eb6b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b5fa174b-1bc5-4e4c-996c-e8f622a4717c"
        },
        "item": {
          "id": "3ff2d4a1-adf7-4dbc-b532-d02b07ab01b2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46d1a20f-cd12-4fe2-be84-d47685fc5607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720b23dc-575a-44b1-81c6-19deb53770c9",
        "cursor": {
          "ref": "6628cc1e-d4d2-405e-b556-a98a58f43025",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9a4b168f-01af-40b2-aba2-e11735c39d83"
        },
        "item": {
          "id": "720b23dc-575a-44b1-81c6-19deb53770c9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dc7caab1-241d-4c35-8918-e70f4ccb7b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdec17e-f52f-4b13-b613-222ca1a959c4",
        "cursor": {
          "ref": "7b4a4f0b-e837-4439-9b63-16843c232b3f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "07e52c99-b2ea-4b8e-a834-e03b1c30b88a"
        },
        "item": {
          "id": "9fdec17e-f52f-4b13-b613-222ca1a959c4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "70229b76-9d7f-408e-8ba2-15166b4d7229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2026ec-badf-40f9-8c11-650ba9306481",
        "cursor": {
          "ref": "cca6d29e-bb86-49f8-b939-ea50b4704ef0",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "636771d6-3135-486b-9e64-61619b1fd6cb"
        },
        "item": {
          "id": "3a2026ec-badf-40f9-8c11-650ba9306481",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9401559f-c6b2-4298-9438-8ddf728844b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448aa995-9dfe-466c-8791-92fba0a04b73",
        "cursor": {
          "ref": "f1728a7d-3c3b-4304-a0b0-6972d27e2808",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9959857c-1c79-4842-b300-d937db136387"
        },
        "item": {
          "id": "448aa995-9dfe-466c-8791-92fba0a04b73",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "062df721-3b29-43cb-8779-0ead996cca46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd54e27f-c20f-4cf4-b8b4-4d0e618b74d3",
        "cursor": {
          "ref": "7010851c-b053-4aa4-b25b-714029669eac",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5560c21-2974-44c0-8bb0-c178ccf907c8"
        },
        "item": {
          "id": "cd54e27f-c20f-4cf4-b8b4-4d0e618b74d3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9af9e2e3-35c8-4043-b26b-8d519b8cd628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44282107-7485-4fc7-bc99-c66b0aec4237",
        "cursor": {
          "ref": "730b31ce-c90d-44c0-8708-ed328d73227c",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7d21b74e-a061-47f2-a0b3-2043d81d38ff"
        },
        "item": {
          "id": "44282107-7485-4fc7-bc99-c66b0aec4237",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6966b792-1291-4fa6-af09-be010343407f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7725befa-c478-4456-8d71-4dce84d30376",
        "cursor": {
          "ref": "9f33e5f4-ceae-4d4b-b21f-3f950c9e9e0b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "209c38f4-5cd5-4904-b30e-68d80eaf5017"
        },
        "item": {
          "id": "7725befa-c478-4456-8d71-4dce84d30376",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b4eb5ea6-526b-4bc4-9e9b-3dd89c947b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa0b779-87bb-4be7-a30d-c251008d1e17",
        "cursor": {
          "ref": "9abee59d-7454-422e-b56f-be028fdc9811",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2e4f4704-ec97-4c14-8e6e-015b8487cc0f"
        },
        "item": {
          "id": "baa0b779-87bb-4be7-a30d-c251008d1e17",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "47a60700-8b20-4807-bfee-8560f2fe271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89af767f-ddf1-44ec-a757-4dd529903699",
        "cursor": {
          "ref": "ce064bdb-e2d7-4f9a-be2e-17151cf30b01",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b1efb08c-32b1-4fb3-8dcd-c04c3d1f0a64"
        },
        "item": {
          "id": "89af767f-ddf1-44ec-a757-4dd529903699",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3eca9442-505a-4741-910c-0eb9fb3b0fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7237befb-d198-4d5a-ae36-fd2e9125a548",
        "cursor": {
          "ref": "d9d8d133-34c9-4036-b034-d9ec71889727",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eba52977-7a77-47a2-8e11-67bb3159d484"
        },
        "item": {
          "id": "7237befb-d198-4d5a-ae36-fd2e9125a548",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "51f9e242-40db-40d1-905d-05b53037600e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46afc7d3-7a69-4715-bddb-2310d8a96f8c",
        "cursor": {
          "ref": "34ca7999-123f-4107-8a8f-b9614e176521",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "54fe82c9-1783-4a8b-90fc-384d1e294ab7"
        },
        "item": {
          "id": "46afc7d3-7a69-4715-bddb-2310d8a96f8c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4211d7d4-0af4-4510-b171-baab70a5ec8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500a515f-4e0e-4fc4-bf76-bfa5552c364c",
        "cursor": {
          "ref": "9d93cb62-26ee-48e9-9e01-bff5aa78f320",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2a289afb-20be-4846-97fb-179ba01f2e64"
        },
        "item": {
          "id": "500a515f-4e0e-4fc4-bf76-bfa5552c364c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "48201b06-7cab-47ff-a918-1b3802689e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49207ffa-0b23-4a46-8fae-cddefb17e430",
        "cursor": {
          "ref": "913c9a37-0bfb-43d0-88f2-5be1530def2e",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3594698f-e812-4061-857e-874b33a62e89"
        },
        "item": {
          "id": "49207ffa-0b23-4a46-8fae-cddefb17e430",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d595ef44-8ed9-4f06-a5bc-25c2fd036542",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0679fefc-8159-4db6-a6f8-3e305eb94963",
        "cursor": {
          "ref": "d3d5e566-809e-4ef4-ad93-968228989c32",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d2530e4c-6110-4143-b73a-4265167fa35d"
        },
        "item": {
          "id": "0679fefc-8159-4db6-a6f8-3e305eb94963",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "73cd10d0-8654-45e3-930b-7f165a535e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "200b47e9-e00a-422e-bf2f-e8e8db89b15e",
        "cursor": {
          "ref": "14bdd1bc-063b-4072-b107-14fa30d24d81",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "06b4f6de-45bf-4e93-a028-0f69165cd063"
        },
        "item": {
          "id": "200b47e9-e00a-422e-bf2f-e8e8db89b15e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e6c7f1ae-d813-4a43-9af7-cdf5ac59725e",
          "status": "Created",
          "code": 201,
          "responseTime": 26350,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5855685-c881-47f3-87c2-6d391210d2ce",
        "cursor": {
          "ref": "5b5a7781-4d51-4d9c-9af5-86ab8ab7f03f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3e640617-b8af-4408-9d0b-d05b8467555c"
        },
        "item": {
          "id": "b5855685-c881-47f3-87c2-6d391210d2ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0f1e33b2-af0e-4ca4-b548-6397a1f1c227",
          "status": "Created",
          "code": 201,
          "responseTime": 26221,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03ebbeb-e1c7-40ea-a9a9-a8da2e72a7e1",
        "cursor": {
          "ref": "88b5821e-37e4-4c1a-a14c-675af7ca9e01",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "72027afb-0dc8-436c-89d7-159c324408da"
        },
        "item": {
          "id": "a03ebbeb-e1c7-40ea-a9a9-a8da2e72a7e1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0d2e1efb-bd9b-442d-8058-c38107856948",
          "status": "Created",
          "code": 201,
          "responseTime": 26840,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dd6f97-eead-4be3-9998-adc442ba23d4",
        "cursor": {
          "ref": "4a3ac668-5ab2-4a05-a24a-75f6d1019ac9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d02745db-7f96-4aa2-a039-4862c9486a6f"
        },
        "item": {
          "id": "02dd6f97-eead-4be3-9998-adc442ba23d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "42c0db21-e9e3-4d38-ae93-e3e7936c545f",
          "status": "Created",
          "code": 201,
          "responseTime": 25490,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "795dbe29-6843-40f0-b904-3ad6072f7e7b",
        "cursor": {
          "ref": "eba5eccf-4f54-4082-aac2-65c1414b6774",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "570297cb-a795-4d30-9e0d-f51e58f43d40"
        },
        "item": {
          "id": "795dbe29-6843-40f0-b904-3ad6072f7e7b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1cc5ebbd-bd02-4c9e-9fa1-e42e946fbd83",
          "status": "Created",
          "code": 201,
          "responseTime": 25950,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-10-03T00:47:41Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-10-03T00:47:41Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b5d3dd9e-5c5a-4cae-860a-774de99fbef9",
        "cursor": {
          "ref": "1a845590-13b8-41fe-bb87-c6257d956f29",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7e49d58a-bad6-4c88-9cdc-6dffa3f21a02"
        },
        "item": {
          "id": "b5d3dd9e-5c5a-4cae-860a-774de99fbef9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a6bc967c-e663-4ce0-aedb-0571083d7efd",
          "status": "Created",
          "code": 201,
          "responseTime": 26651,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b87264-c49e-4019-8370-0242799eabf7",
        "cursor": {
          "ref": "85aed03d-d421-4cbe-8b7d-623a071a2fcf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "55fa1a7c-cab8-45a5-93f0-dde9b3a7f5d7"
        },
        "item": {
          "id": "34b87264-c49e-4019-8370-0242799eabf7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1950f8d7-84a3-4218-bdc5-987b28e90944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a254d18f-1f23-4c57-aea5-b2c38afbc13d",
        "cursor": {
          "ref": "2ec388ad-0c21-4d0a-85bc-0442c86fedc2",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c8cdaabe-6382-4c9e-bae1-c656c2ceb8af"
        },
        "item": {
          "id": "a254d18f-1f23-4c57-aea5-b2c38afbc13d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "94c0abd2-e215-4c6a-9aec-db02b01b0486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e7850e-119c-4be3-b94d-72b57b3135a2",
        "cursor": {
          "ref": "ff850ac4-69f2-49e6-b304-fe0e9b5e9870",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c86f8f73-672c-4d98-814c-a1372d079ea4"
        },
        "item": {
          "id": "35e7850e-119c-4be3-b94d-72b57b3135a2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8ca5b00b-a20b-450a-8496-dbc7a347b141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b954d48-e3a0-4441-97c2-286563958ab9",
        "cursor": {
          "ref": "b3dba3bf-5e8f-4d03-9164-e60bf868518d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4fde8bb9-1ded-48e1-b86c-f5142d2d818a"
        },
        "item": {
          "id": "8b954d48-e3a0-4441-97c2-286563958ab9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ca8b9dc1-1c03-46f8-acd4-4770660b5ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49f25b9-38dd-4c24-9107-156fcb2e877a",
        "cursor": {
          "ref": "85c7ea99-3e00-47fe-9ca0-e17651487bed",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1ae09a5a-5cbb-471e-bd36-615c97ee42b4"
        },
        "item": {
          "id": "a49f25b9-38dd-4c24-9107-156fcb2e877a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b073ddd-1ce8-41e1-8868-717f89386a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee638260-846d-4594-9177-2891d272303b",
        "cursor": {
          "ref": "f2e43150-5b07-4285-924c-28d3db222572",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d0167113-21a6-4b16-b266-17b52e52181a"
        },
        "item": {
          "id": "ee638260-846d-4594-9177-2891d272303b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "574ca3f7-50c6-42d7-8e6f-7b6813bcd943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83c1b70-5840-437d-8bb4-117a0409fa14",
        "cursor": {
          "ref": "6e189509-5e1c-4ac7-9b44-c645fcc246d4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4f89aae0-bcdc-4639-be35-76b9cfd2a6a6"
        },
        "item": {
          "id": "f83c1b70-5840-437d-8bb4-117a0409fa14",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "01e04363-a611-4106-aed4-a0f22b819360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f037c46a-0163-43d6-a8a0-ae747770f361",
        "cursor": {
          "ref": "7df68a53-7c3a-43eb-b30f-f088c313e16a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7c5b489f-fcc6-453f-83ac-e52f6180677f"
        },
        "item": {
          "id": "f037c46a-0163-43d6-a8a0-ae747770f361",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3863030d-cf4c-4ecf-8c5b-7f539466fdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fde346-792e-4974-aec3-5fed8bbb623a",
        "cursor": {
          "ref": "484c4e49-1699-4e52-8b47-0337c9512f3f",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "32bcc10a-a61d-4574-8d66-6c0767c53896"
        },
        "item": {
          "id": "71fde346-792e-4974-aec3-5fed8bbb623a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f63a6f41-f165-4189-b2d3-e60d30e95d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d46d5c-266a-447c-99af-96eaa97bc902",
        "cursor": {
          "ref": "6cd86f02-5d88-4954-aa7c-cd70aefaa50b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "29937fa3-3413-4bb8-8353-2b410844887d"
        },
        "item": {
          "id": "d2d46d5c-266a-447c-99af-96eaa97bc902",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ba4487fa-1880-41a9-8c79-9dc9f794253b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4f04d4-b28a-4da0-9047-dcf620d927e0",
        "cursor": {
          "ref": "30f0f338-5c0a-43f0-9a52-306cf5213472",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "21dd7957-2e72-4428-a6c7-0e80e48bc435"
        },
        "item": {
          "id": "6a4f04d4-b28a-4da0-9047-dcf620d927e0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "216d89ab-ebb8-44c0-93e9-b6edd2cbe2e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a400b-4434-4d1c-9b38-4f6abdd44327",
        "cursor": {
          "ref": "aa5c12a3-fd82-4e7f-b442-7bbd06f422d6",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "82084325-a3a9-4966-bbe9-94a51bddcf27"
        },
        "item": {
          "id": "846a400b-4434-4d1c-9b38-4f6abdd44327",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "77da5496-6356-4d84-ad2e-8d0fdc1b69f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2dc608-856f-48bf-a5b6-a0e73f92dda0",
        "cursor": {
          "ref": "7db53b01-2299-455e-85c1-bb6961be813a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b0417398-f8a1-400f-aa28-885fc673c71d"
        },
        "item": {
          "id": "8a2dc608-856f-48bf-a5b6-a0e73f92dda0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8bbc0ad8-762f-47c5-803c-8cffd99930aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b7e84-3607-4e53-83ba-ed788af571d4",
        "cursor": {
          "ref": "909a10d1-f47b-4ec3-a5ed-a52be72aaa7b",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a5c88d4a-81d9-42a7-b39f-38e3cf1a7cc5"
        },
        "item": {
          "id": "080b7e84-3607-4e53-83ba-ed788af571d4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9e399594-227f-4565-99da-069339a2e551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3990ffa2-aa19-4d85-8a74-a13351d0f29d",
        "cursor": {
          "ref": "3b80f493-4047-4f4a-9261-2514f9cae6ca",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cfa9d453-9263-4a83-bca9-a1956b1b7ef3"
        },
        "item": {
          "id": "3990ffa2-aa19-4d85-8a74-a13351d0f29d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fa97531a-65c2-48b0-9a54-06188eecd264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814ee4b3-15df-47fd-8b54-10967a14cead",
        "cursor": {
          "ref": "8a7a2d7b-f2a7-47fa-b58b-d1362df83d21",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "84fe8c01-969a-4d81-a505-1f5396135142"
        },
        "item": {
          "id": "814ee4b3-15df-47fd-8b54-10967a14cead",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6abab1b6-6f75-4dd7-a571-b0c238772096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1886bdd-82cf-4951-b234-3687cf86c222",
        "cursor": {
          "ref": "aeb92efc-a7e4-45fd-9532-6958c3a6ac7a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a9572d67-3748-4233-bde6-ff03dcdf47f0"
        },
        "item": {
          "id": "e1886bdd-82cf-4951-b234-3687cf86c222",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "48dec82f-a139-4bfd-a9bb-06388aecb8a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab23db7-f71d-4563-8443-2ddd22823276",
        "cursor": {
          "ref": "eeabd2b4-0410-4177-89c9-dd1045632569",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fd052028-8239-4adc-9fdd-e33af6a25114"
        },
        "item": {
          "id": "fab23db7-f71d-4563-8443-2ddd22823276",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cc49da1e-c5e1-4f6b-8a3a-172f84aa9b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a388a3c-8954-4024-8740-4205922de521",
        "cursor": {
          "ref": "c6ad1d0d-a73f-4967-90ff-f9d812cb2e8a",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "585edee1-6004-422e-bdb3-1f044dd19142"
        },
        "item": {
          "id": "2a388a3c-8954-4024-8740-4205922de521",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3edcc2e7-4417-43e7-88c0-e9f8bd80bf98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12db6b6c-ca01-48dd-83df-c98e80e568a6",
        "cursor": {
          "ref": "efac9060-23f9-4650-aab2-621f3fa40f23",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5c4981d7-d982-42a3-b09a-47c0ce04c7c6"
        },
        "item": {
          "id": "12db6b6c-ca01-48dd-83df-c98e80e568a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "343f70db-de33-4bb7-9b77-5ba9411984be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73818571-e8df-434a-935a-caf9669b0b8a",
        "cursor": {
          "ref": "2b559d4f-dd8f-495a-b580-81ee0bed29a9",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f3d3ca51-51cb-418f-b674-521e536d48fb"
        },
        "item": {
          "id": "73818571-e8df-434a-935a-caf9669b0b8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d347dbd1-6ec6-48fa-b44a-23657c373576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cb9d5f-9840-4e7b-8b76-08a5fb08077d",
        "cursor": {
          "ref": "f4f2c782-4b81-4170-80fd-c7b0161a4945",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c33605b9-f277-4774-b0b5-b8d64ee23b9b"
        },
        "item": {
          "id": "11cb9d5f-9840-4e7b-8b76-08a5fb08077d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b01a2952-d916-4974-9359-360eb6ed36c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33074f9f-f9f6-4296-be0e-999e072ae8c7",
        "cursor": {
          "ref": "0808e8a8-a265-4d3e-8aaf-a8b1da29ccd1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e1c1623c-df52-47cc-ad83-21c7b7bccfa1"
        },
        "item": {
          "id": "33074f9f-f9f6-4296-be0e-999e072ae8c7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "773b2d4e-7f7c-47bc-afc8-289c9229b053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7330bb2b-6d26-4d0c-ac00-9c0bcb7e616f",
        "cursor": {
          "ref": "5cf4ebd0-f3a9-4396-8c14-5a2cdde6e614",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3a3c7e65-e961-4972-af87-312618d7a530"
        },
        "item": {
          "id": "7330bb2b-6d26-4d0c-ac00-9c0bcb7e616f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a0b00eab-0892-4c64-85fd-bb32810ea346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e688c0-31a2-45f4-a999-f7b0c9c7e70c",
        "cursor": {
          "ref": "74c0a5e9-a42e-41d4-9615-664f193111af",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "97ec3b39-6da0-4db8-8532-e8add8312a93"
        },
        "item": {
          "id": "25e688c0-31a2-45f4-a999-f7b0c9c7e70c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "968c750a-b359-4cd0-b4e0-a422244abdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0730f5cb-afa7-4985-955a-4c032884eef4",
        "cursor": {
          "ref": "dd211603-87cc-4434-b610-13a1a799b414",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e31ef46f-ad84-4dee-877a-65446253de6d"
        },
        "item": {
          "id": "0730f5cb-afa7-4985-955a-4c032884eef4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5c579bf1-a26d-4e16-be3e-d30091f64c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74b35c2-29f3-4584-bafc-16722e9e2267",
        "cursor": {
          "ref": "dac86430-a147-4611-9a26-39b1f9203e2a",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fa66ab99-96ca-4207-a658-d2053c2d28aa"
        },
        "item": {
          "id": "e74b35c2-29f3-4584-bafc-16722e9e2267",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a534da1c-a5f9-443b-a059-80ec3a330621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35505ed-18b0-41dc-bb85-b906f836ba49",
        "cursor": {
          "ref": "9984318a-a834-4939-b5fb-88cf9f8e9a68",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "98fcbaa7-8d80-45d9-8234-3c0232f467ee"
        },
        "item": {
          "id": "f35505ed-18b0-41dc-bb85-b906f836ba49",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "935b7975-dd61-49da-a4aa-d7b3338fe0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07383b16-7ad5-4a70-a51b-fb8190658f18",
        "cursor": {
          "ref": "2d81eed4-f9e7-4991-bbe3-9dcad4495ac1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9812805f-38bb-4506-b2c0-a03d26e9b295"
        },
        "item": {
          "id": "07383b16-7ad5-4a70-a51b-fb8190658f18",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0cf1ca92-344e-4f46-8eb0-700e214d0578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5e64e0-f24f-4c73-b6bb-6b7044aad49a",
        "cursor": {
          "ref": "f5fe948d-dabd-4e98-9f0e-3021a1fab493",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "893b4130-97f9-41f6-83aa-954a130f8a3b"
        },
        "item": {
          "id": "7d5e64e0-f24f-4c73-b6bb-6b7044aad49a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a8a1117e-13b0-4e39-9268-2563a4651cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23b7103-1924-4418-93b5-4d7eefeac821",
        "cursor": {
          "ref": "ad274670-c78b-421e-b398-ed1eaf7dfb1d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6a894232-4476-4d35-84be-31cda57d3e48"
        },
        "item": {
          "id": "e23b7103-1924-4418-93b5-4d7eefeac821",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c1472f3e-d975-4902-b5ff-281fc46ebbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cc55d9-3de5-4af1-b500-825d3e4d013e",
        "cursor": {
          "ref": "0aa15459-cf7c-4df4-a5d7-8418d91b50e4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9e286f40-74c4-4659-bc72-34b2f577f37b"
        },
        "item": {
          "id": "d6cc55d9-3de5-4af1-b500-825d3e4d013e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2439c91d-be0a-4154-8413-64429301daae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276fbad5-6750-46e0-853d-bb285c669bda",
        "cursor": {
          "ref": "a29e2f42-4d0d-4fb6-847d-e4ca5db5c86e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "13e10b72-296d-467e-99ff-9d9e898f3c52"
        },
        "item": {
          "id": "276fbad5-6750-46e0-853d-bb285c669bda",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c800c6fe-7ed3-4142-b882-e27ff7815e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0afd475-90cb-46ba-9095-3c3a88dc6ead",
        "cursor": {
          "ref": "b4d3c470-c3b0-4089-8625-9232becd7765",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd0baf65-ed45-4bba-b95c-ed2c5b817879"
        },
        "item": {
          "id": "b0afd475-90cb-46ba-9095-3c3a88dc6ead",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6bd6eca6-efdd-4dd1-8f01-0465f94b0f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a33847-ac24-4ab5-83b2-cf86f835367e",
        "cursor": {
          "ref": "5f96d6f2-533d-4a4f-a6d8-ea188fd51de5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3893b947-8f23-47ed-a59c-9ee4a792c605"
        },
        "item": {
          "id": "38a33847-ac24-4ab5-83b2-cf86f835367e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "e1d09c03-7d48-4dbf-a089-4182944b7e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df842f2-86e0-43a7-b76f-dda5f6fe3aa5",
        "cursor": {
          "ref": "9a592156-02eb-4340-be43-6cca6e71e153",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "13058c41-143a-4469-98bb-7b89546790df"
        },
        "item": {
          "id": "8df842f2-86e0-43a7-b76f-dda5f6fe3aa5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "810f96ab-877a-4872-8d17-50eb91f14e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27de886-606a-4c97-91d5-871d0f142d14",
        "cursor": {
          "ref": "5f8bf238-ce40-4f58-9312-264f13dbdb2a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "eb9bf803-6487-4eee-b9af-faaffbc9672b"
        },
        "item": {
          "id": "f27de886-606a-4c97-91d5-871d0f142d14",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "16a633ef-f994-4a69-a8a7-8b10b921ceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db5be7f-9e9c-4e32-8984-c5633e392133",
        "cursor": {
          "ref": "96ba127a-f648-48d6-9eab-b86197016d57",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ebb44a71-0052-4a8b-bc01-6703cf6ae110"
        },
        "item": {
          "id": "7db5be7f-9e9c-4e32-8984-c5633e392133",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d9d9e1e8-f6b1-42f9-8d6d-823b14c51e3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4907e05a-64b8-47c4-a8af-4153d403b1bb",
        "cursor": {
          "ref": "7a93781b-f0dd-4a1a-9f6a-0785995b581c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49683c9e-8568-41dd-b34d-cd1b23afc2a4"
        },
        "item": {
          "id": "4907e05a-64b8-47c4-a8af-4153d403b1bb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "46dd53f5-5491-42e1-9b2d-d98dfae39920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1314e5be-25a0-4099-8102-8af0254f6c17",
        "cursor": {
          "ref": "60c262e0-ed91-4853-93b7-919df468d879",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "bb074c83-0bf7-4830-bfc9-91a23c321911"
        },
        "item": {
          "id": "1314e5be-25a0-4099-8102-8af0254f6c17",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2b4289c-c947-451d-9bdb-0283f857b21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ffd343-ca67-4366-b4d8-3d70cd52246a",
        "cursor": {
          "ref": "6674d938-2d25-4c45-9938-f60f4b12772f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "986280d1-0f5a-4649-8cad-aa970e98122d"
        },
        "item": {
          "id": "10ffd343-ca67-4366-b4d8-3d70cd52246a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "70e9e88a-ea70-4573-9edc-6580deb05f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b5609-1b93-4aaf-b22c-09a2edc11677",
        "cursor": {
          "ref": "64a7d561-1901-48b7-92d4-cc0344ab37d4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fef284e4-90bd-4b7a-a3cf-46853c9cdf69"
        },
        "item": {
          "id": "838b5609-1b93-4aaf-b22c-09a2edc11677",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c6427d8a-efc4-4765-88c7-a3d8fdd5324e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d20e4ef-fa4d-446d-954d-0238591ac81f",
        "cursor": {
          "ref": "fd37bb23-7718-43a6-ad62-55e5ed746aea",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "479e9d38-13f5-4cbb-90a7-34f143861a50"
        },
        "item": {
          "id": "5d20e4ef-fa4d-446d-954d-0238591ac81f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "458d6531-4884-4de6-9eba-9639ad88691a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dec8541-0f37-4aaa-addc-7748c6df27dd",
        "cursor": {
          "ref": "b77518e1-f49b-4bc7-937c-2e30479f0e96",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e0e9255f-b060-4c24-a90a-23bb7a3d9b69"
        },
        "item": {
          "id": "6dec8541-0f37-4aaa-addc-7748c6df27dd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "51c97340-c75a-40cd-961d-b06dead19f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbced95a-5544-46b3-b64d-03dac482d554",
        "cursor": {
          "ref": "6fa4c832-18ec-44d7-bd14-680c41e4687c",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "edc6d4ad-991c-48ff-8525-fefef0a94889"
        },
        "item": {
          "id": "fbced95a-5544-46b3-b64d-03dac482d554",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "18779ade-f8c6-4189-8885-5f7892d88528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e30ecbf-072e-4203-b403-91232fb5ef2a",
        "cursor": {
          "ref": "fa7ecdba-c98c-4d13-a0d8-af4a40b44e81",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c6eeecaf-2f4b-4365-9d19-cdbaee15e686"
        },
        "item": {
          "id": "8e30ecbf-072e-4203-b403-91232fb5ef2a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3780744c-97aa-4699-b8ec-320664040f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e956b00b-8d94-4976-bc98-c0e57337a46d",
        "cursor": {
          "ref": "cc19eb79-81c6-4312-a380-d092df048219",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "665e5dab-ebd8-4965-8395-f2396efd54a4"
        },
        "item": {
          "id": "e956b00b-8d94-4976-bc98-c0e57337a46d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5b70c819-482e-4f37-8cb4-792e6c92ae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f24c808-88ac-4ff6-88ed-700a13e0722a",
        "cursor": {
          "ref": "cdd8f842-cfed-4832-a092-21197dd55851",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e60e5c79-5b2d-41b2-a767-f2da10c766d9"
        },
        "item": {
          "id": "6f24c808-88ac-4ff6-88ed-700a13e0722a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9ba6bd10-63ec-4d26-b3d3-da6917175e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb49e675-a41f-4e52-94b0-ca189a3ec1b2",
        "cursor": {
          "ref": "35530e81-3a8e-422d-b502-8af9d59d4baf",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ad61195d-5cab-4b0c-8239-f92cae15f38d"
        },
        "item": {
          "id": "eb49e675-a41f-4e52-94b0-ca189a3ec1b2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "480d3d01-a777-494a-878c-911ffd5c74b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9368cb98-5d13-4823-9733-94b69fd475c6",
        "cursor": {
          "ref": "1718fe89-9e7f-4ab2-a19f-bd2c20a4dd02",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "95869712-706c-440b-8d80-3f057a01089d"
        },
        "item": {
          "id": "9368cb98-5d13-4823-9733-94b69fd475c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "772e18cb-30aa-4e9b-9222-9ef69c51ac66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8058cb-e8f7-491f-9195-64bd5bb8808d",
        "cursor": {
          "ref": "fce0b442-81c5-4447-9cc4-b5a5672a2d8b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "64bbeb54-e1ea-4cbe-a884-f3b8dd9498c5"
        },
        "item": {
          "id": "6d8058cb-e8f7-491f-9195-64bd5bb8808d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1d362d69-7fd9-4d65-8295-c2400cc3a0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d29617d-ace2-4bee-a32e-5e13f587ac36",
        "cursor": {
          "ref": "066b7505-83fc-4f89-8b82-7040f9d209f4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3e3d60ec-a831-4949-a3f7-1327f0edcb93"
        },
        "item": {
          "id": "6d29617d-ace2-4bee-a32e-5e13f587ac36",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a467dce4-129f-42e3-943e-b3ee98ed6a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d7ebfb-3441-41b9-873e-e6938ec3c905",
        "cursor": {
          "ref": "a8aea81f-385d-4654-b042-4632efddcc47",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "04eae03b-227a-4ade-bfd4-4fbbf4976a3a"
        },
        "item": {
          "id": "e1d7ebfb-3441-41b9-873e-e6938ec3c905",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "53e8cd3d-c46d-4f37-9294-243aea495adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd232d94-b54d-4bac-a103-bdc70e2adf97",
        "cursor": {
          "ref": "dd157ccc-527e-48fd-ae29-c9f822a870c2",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e39bb655-8cc4-42e0-9c91-4325f06a80f2"
        },
        "item": {
          "id": "cd232d94-b54d-4bac-a103-bdc70e2adf97",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fe0dd50f-146c-4faf-bbff-4f5d6f9d6a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b6b943-7d17-4d8e-81ab-dd5ae38a3cf9",
        "cursor": {
          "ref": "884a233f-fa12-4415-a722-db80753d2b3d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "601072f1-8ba7-4025-a99c-b48d3dbc144c"
        },
        "item": {
          "id": "c9b6b943-7d17-4d8e-81ab-dd5ae38a3cf9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1157a4f0-bc4f-4837-a0a2-0f3f577dbce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f00d62c-e02e-400a-9454-26767ec6c4f2",
        "cursor": {
          "ref": "e5dd02e9-03c0-4db6-9b5d-ff452e99f391",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2b956cc2-634c-4ea3-82b3-debab564c9b7"
        },
        "item": {
          "id": "8f00d62c-e02e-400a-9454-26767ec6c4f2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a78f55bf-b3d9-4ce3-9a3e-d23d38c839a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bc58d7-0156-49d8-81ff-c51359419439",
        "cursor": {
          "ref": "0b23f1ce-5cb4-478b-9b16-350328f49fe9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "237cb3f2-055e-49a5-a25a-5dbea378adb8"
        },
        "item": {
          "id": "77bc58d7-0156-49d8-81ff-c51359419439",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f7aa4656-d249-4a1e-90ba-f943d4f5d7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d78c81c-2d52-472d-86bd-a4269c0ca705",
        "cursor": {
          "ref": "64e4c3ec-7e37-47f3-b90d-4ac8826d933a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3d2045e7-50d8-4636-b874-2cff334dbc91"
        },
        "item": {
          "id": "7d78c81c-2d52-472d-86bd-a4269c0ca705",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a1f9e377-2fea-4003-bb06-6caec2ffb551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d30e605-7dd9-44f0-9554-809777967a9a",
        "cursor": {
          "ref": "b0e7529a-a1b2-4481-a5d3-c38e3cf4ce1e",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cdb5eefb-f3d7-44ca-9a22-e52dad6c7b4a"
        },
        "item": {
          "id": "0d30e605-7dd9-44f0-9554-809777967a9a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b6f44aa9-ce5a-4277-8fbc-305794eaf347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc1d8e6-dd0c-4d34-984b-b260f396d93e",
        "cursor": {
          "ref": "c93b3bd7-1b41-492d-a4a3-5ac9e1306a04",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dcc100f0-8e97-41a3-9e4c-4b2e63159cd5"
        },
        "item": {
          "id": "5cc1d8e6-dd0c-4d34-984b-b260f396d93e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d73a85d0-7f6f-4433-857a-1cf478c2868e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21928a1d-0ffe-41f0-b701-7add1738eb81",
        "cursor": {
          "ref": "1f8959cc-c27f-4ccd-aedf-6b4cdcbb74d2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e5d3a4d2-b353-4bea-83cc-22f80bf6b2dc"
        },
        "item": {
          "id": "21928a1d-0ffe-41f0-b701-7add1738eb81",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "291ae7b3-801e-4893-b431-962826f41bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97099634-97d3-4c7e-8050-89df1250a16e",
        "cursor": {
          "ref": "3ba19856-1a60-4c06-a69d-a8ae01d9ef3d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "00f3d441-829d-4597-b8ff-a275558775ac"
        },
        "item": {
          "id": "97099634-97d3-4c7e-8050-89df1250a16e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b167e083-96dd-4d0f-8339-88aadd534b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d602157e-e519-467e-8c3e-0db9ae05c170",
        "cursor": {
          "ref": "7e36fec9-e7c2-41de-afc5-23e353999f43",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "171e41fa-5427-4efe-a932-d5d1e447c405"
        },
        "item": {
          "id": "d602157e-e519-467e-8c3e-0db9ae05c170",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c1f6247a-b121-4adc-afa1-e129ff24164b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e02d30-9a96-4376-98e2-b21c3a375578",
        "cursor": {
          "ref": "cf5ea83b-15a7-4559-970f-7ea35ffd0ae9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "de3050e2-932b-413e-9fd2-a9950a11004b"
        },
        "item": {
          "id": "98e02d30-9a96-4376-98e2-b21c3a375578",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6539ef92-cee0-4de9-9148-763bfa7c9837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8b5a8e-2fac-46fe-8a7c-3478d199ceed",
        "cursor": {
          "ref": "766b7d9e-93db-45b5-9dce-06f866bb7971",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8d902bff-4294-4b0e-b15a-dbb25c414a90"
        },
        "item": {
          "id": "fd8b5a8e-2fac-46fe-8a7c-3478d199ceed",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f55daf71-662a-4923-a9bc-5ee929d1190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac553295-29eb-41b9-8e48-77594bc57e39",
        "cursor": {
          "ref": "03a4c995-0bd5-47a5-9eb2-850b010c047c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "803592a1-5596-4a18-80f9-3667da89159c"
        },
        "item": {
          "id": "ac553295-29eb-41b9-8e48-77594bc57e39",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ee20bf94-5c23-464b-b244-1581f7118355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adcd9fe-516e-464e-af34-50d1f49bfe21",
        "cursor": {
          "ref": "3af65d8d-0675-467e-8405-ec8dab9d4738",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "541f1c08-6d85-47f0-8640-6f4316f076d1"
        },
        "item": {
          "id": "2adcd9fe-516e-464e-af34-50d1f49bfe21",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "278e2520-ac9f-4c3c-a6f3-f36ec92a148b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1886b0-3367-4862-bee4-5c839510502e",
        "cursor": {
          "ref": "f569162c-f3ff-4cbf-a643-dcdb37f509e0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e5204e66-97d8-45f8-8342-d18e974d3f01"
        },
        "item": {
          "id": "0e1886b0-3367-4862-bee4-5c839510502e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b7565fcd-deda-468d-adcb-10c361f4ecba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d392a6e7-b55b-4d80-b2b9-8604b27ae042",
        "cursor": {
          "ref": "6a404a3c-5ed3-4d0e-831d-86dffb696e24",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "005164d1-4c66-4367-a41e-8fb9df36a3fc"
        },
        "item": {
          "id": "d392a6e7-b55b-4d80-b2b9-8604b27ae042",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04e0315f-acd4-4c66-835a-facff901eaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8bdca7-5ea1-4f2b-990b-f1a7d9c341fd",
        "cursor": {
          "ref": "9549af0d-068a-4c40-86f6-8f704378563b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "15e21d3d-85d9-4454-a5af-b1dcfc2037ed"
        },
        "item": {
          "id": "eb8bdca7-5ea1-4f2b-990b-f1a7d9c341fd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "26ce9da4-43fd-44ae-9081-884e678d750e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bb34ee-6616-415e-bbc2-5ad3d93dd993",
        "cursor": {
          "ref": "a63085e6-8e88-427b-8ff3-3ce55a6834bf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6668169a-8fa6-47e2-a88d-f2dd331c5f3b"
        },
        "item": {
          "id": "95bb34ee-6616-415e-bbc2-5ad3d93dd993",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ae86f476-4a68-4b69-8378-8553a78949d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb2789a-9163-459b-8375-174accfb54fe",
        "cursor": {
          "ref": "3ec597de-970b-43f5-9f75-e8d526332fb9",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "598f120e-67fd-4a8e-863c-dae0ddb3e033"
        },
        "item": {
          "id": "fcb2789a-9163-459b-8375-174accfb54fe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4574e37c-375e-4ff4-824b-abbd96b274ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a51217-d1a6-45cc-b0a0-710234825edc",
        "cursor": {
          "ref": "78f88dec-2e20-4e87-9fbc-a25b122bb268",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6a6f656c-8d70-4969-b989-ee3c5308d93f"
        },
        "item": {
          "id": "13a51217-d1a6-45cc-b0a0-710234825edc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c4942b4b-9d8d-4ecc-9a4b-54dc4d892d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f1f20b-c90c-43a5-9ddf-64116b533a00",
        "cursor": {
          "ref": "6bc434ad-43fb-49af-aff5-d6ab0a3ab519",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f4bc358a-d66e-4e66-b1a4-2a2cceb6d96a"
        },
        "item": {
          "id": "45f1f20b-c90c-43a5-9ddf-64116b533a00",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f16be8fd-ed8f-4abf-9193-0e81654fc272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d8c0d2-0294-463c-b98b-799331daca37",
        "cursor": {
          "ref": "01d78eb2-1d6f-4bb3-b0e6-f099f0443297",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8af4c35e-de67-4f2f-967e-4397514d1d2a"
        },
        "item": {
          "id": "55d8c0d2-0294-463c-b98b-799331daca37",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9fb70513-5db8-4cb7-8423-267bc0011138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd3eac1-65fe-4de1-a9c1-362ae58b68e7",
        "cursor": {
          "ref": "9cf4923e-f2b0-46cb-bce3-21d7d2aa2930",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "07482b20-ebc6-447e-af66-8fa1d7d8cd3a"
        },
        "item": {
          "id": "2dd3eac1-65fe-4de1-a9c1-362ae58b68e7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fb63595a-ee0a-4472-9f5a-8aec3219c468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562b1bf5-6ff7-45d0-9b5c-7b2b963834b9",
        "cursor": {
          "ref": "813eff44-596e-490c-8d74-ef2429f29bb3",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0e459430-4917-450c-9569-ca24465607dc"
        },
        "item": {
          "id": "562b1bf5-6ff7-45d0-9b5c-7b2b963834b9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "929f96a4-c4a5-4a28-9942-cf0b42de3fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1cba10-6c31-4860-a8b4-72be5fb1481f",
        "cursor": {
          "ref": "04d40ae3-75aa-413a-b5b3-d17faf39508d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6dcef8e5-5906-494e-a247-bb991e282a66"
        },
        "item": {
          "id": "5a1cba10-6c31-4860-a8b4-72be5fb1481f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a97e6631-62b0-46cb-8651-7595b234d8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361899d1-32b3-4f99-8b1d-bdf1e6da4902",
        "cursor": {
          "ref": "def464e9-2e37-42ec-ad6e-86037b0e1ac5",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0d215fae-b915-4632-9389-bafcaa8304c3"
        },
        "item": {
          "id": "361899d1-32b3-4f99-8b1d-bdf1e6da4902",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "54e7603f-ae58-4e77-a059-28149a392418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e89f9-282b-429e-8d55-0d23921de337",
        "cursor": {
          "ref": "a09f878f-f9e7-4dd7-b285-6d9dcbadfdf9",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1fdb3dac-0815-4607-82e8-d29a26757e74"
        },
        "item": {
          "id": "996e89f9-282b-429e-8d55-0d23921de337",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "70d75e76-4a5d-4a44-a5a1-95deffd30084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e7de3a-b13f-4077-a0c0-d0997c7e4fff",
        "cursor": {
          "ref": "1da3ed70-e04f-47b2-b929-636278cf3846",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2365dab7-5e0a-4313-84bd-b9c1333c50ba"
        },
        "item": {
          "id": "b7e7de3a-b13f-4077-a0c0-d0997c7e4fff",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "81236102-297e-4ecb-98b7-aec18a42ee49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b5df9f-a3cb-4271-92ec-ad839a4b9638",
        "cursor": {
          "ref": "43e8a5af-0bad-4a5c-9af6-e518ad722330",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "77f8bdf4-9931-423d-b073-f5bf03f40636"
        },
        "item": {
          "id": "95b5df9f-a3cb-4271-92ec-ad839a4b9638",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dd2681b0-2540-4b04-ac16-09d16e63e5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81d18d0-b360-4697-bcb8-ce3cc0f70775",
        "cursor": {
          "ref": "63caeb9a-bb78-49cf-8476-ed2786e70128",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f5484f73-39a2-4105-83c4-e7740e2acbe5"
        },
        "item": {
          "id": "a81d18d0-b360-4697-bcb8-ce3cc0f70775",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55ebd541-9fe2-405b-ba98-aaffda104d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20207c1-6834-46d1-b818-9f02bff79d38",
        "cursor": {
          "ref": "2cc2a855-80b7-45aa-ba61-86e83cfec115",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b4470477-d35d-4175-8f48-07af52bc0e02"
        },
        "item": {
          "id": "b20207c1-6834-46d1-b818-9f02bff79d38",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8a2db1a6-ef61-4af2-b4ba-efc9a14f9d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc89829-5ee6-4458-951c-9cefd98cd906",
        "cursor": {
          "ref": "3618a33b-1e35-458b-80e1-84d20c19856e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "957697fb-fdd6-4a3e-a403-2d743c58d251"
        },
        "item": {
          "id": "7dc89829-5ee6-4458-951c-9cefd98cd906",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7a2d9b1b-4441-4479-af55-da16d339df72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3257b72-4746-419a-82d3-cbecb7377e90",
        "cursor": {
          "ref": "49154e43-10b6-4eb7-8af2-f81f4f4ac1e4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "970909cd-5547-438c-884c-f3608bba49ea"
        },
        "item": {
          "id": "f3257b72-4746-419a-82d3-cbecb7377e90",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6432f1d9-9f03-4c3a-bc1c-88c411724a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8035fd5b-c987-4208-b4fe-5f5363d47162",
        "cursor": {
          "ref": "9171c711-89fb-4e6a-8d0a-e4e0b1495f74",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5757c2c7-6c03-4ca8-9f85-2dae96d70823"
        },
        "item": {
          "id": "8035fd5b-c987-4208-b4fe-5f5363d47162",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ba3d227c-6abb-4790-b53a-1d443bd989cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f994e3-0d13-4bea-9508-4956a2f272bd",
        "cursor": {
          "ref": "31572dfc-ee3c-4e01-827c-2d1a531a55f7",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f698a440-2e10-4808-82bf-690bbc73bd3b"
        },
        "item": {
          "id": "02f994e3-0d13-4bea-9508-4956a2f272bd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fa7ab99d-1d07-4df2-b2cd-1e0a71d79f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be399aa-ef49-4ade-8f20-6ea541edfe6b",
        "cursor": {
          "ref": "ecfe6461-ebf4-42e1-8dff-c9c55a3b7098",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9be23cd6-cf31-4e18-bec8-7534d20b92d2"
        },
        "item": {
          "id": "6be399aa-ef49-4ade-8f20-6ea541edfe6b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "120d2944-c3aa-46d0-9a1e-fc44c852805d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534a1fa0-e54f-485d-a915-985c670875ab",
        "cursor": {
          "ref": "7d276a22-5453-4257-8cf0-3c8d9eede2e7",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec195fac-4883-45ad-ac0e-b83a77787919"
        },
        "item": {
          "id": "534a1fa0-e54f-485d-a915-985c670875ab",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7e3f5c79-6c1b-4420-b747-60e6c4b88cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ee232d-6713-42fd-9bab-db4d407fd173",
        "cursor": {
          "ref": "6555fdb8-bf61-4e59-91c5-bb86f65b2449",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1a34c69b-e306-429b-ac35-c21d99d557eb"
        },
        "item": {
          "id": "14ee232d-6713-42fd-9bab-db4d407fd173",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2f37a7e4-e673-4cce-91be-16cb65933543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41527c06-f511-40b3-a573-ec33b05ec515",
        "cursor": {
          "ref": "101b3d3b-326d-4345-81f8-d5cbb5c7fa86",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fd546596-9549-4405-bc2f-cdf390509cd7"
        },
        "item": {
          "id": "41527c06-f511-40b3-a573-ec33b05ec515",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "05dc7866-15c3-4017-96f7-82cbe29a140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54c85ab-11bb-4fda-a0f8-68806dd28a15",
        "cursor": {
          "ref": "d6abb11a-2ad3-4f80-a8f6-68558af7e952",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "901b6c0e-081a-4f8a-a875-7b1bccb54795"
        },
        "item": {
          "id": "a54c85ab-11bb-4fda-a0f8-68806dd28a15",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fd2ad9ed-9917-4a3e-9059-fc31cb899fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f7df83-8d35-4c6a-8d31-18f2b9630b1b",
        "cursor": {
          "ref": "9800faad-a6d6-417f-a5f0-f1e65f27848b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "42802dde-b211-48a5-9fbd-90cf4f7ba6a4"
        },
        "item": {
          "id": "42f7df83-8d35-4c6a-8d31-18f2b9630b1b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "8adf94df-5330-4012-973f-d9eabb09c888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c3fb49-1b0d-4ec3-b85a-81db30714032",
        "cursor": {
          "ref": "c9e63365-1a61-43a7-ab70-e5e95cd1b8f3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1e0cbfc0-f3d4-4688-97c3-242ba8499b71"
        },
        "item": {
          "id": "a8c3fb49-1b0d-4ec3-b85a-81db30714032",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3d36f761-7d8d-461d-9bfb-8c9a39b26d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002158f8-227c-42d4-aea2-de1bc656d83c",
        "cursor": {
          "ref": "94a92a32-f7e3-423f-b8c5-82d21af2540b",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "85bac557-07ad-4359-93b8-f2457507dbec"
        },
        "item": {
          "id": "002158f8-227c-42d4-aea2-de1bc656d83c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ff5a4625-546a-48e8-a34a-386633379fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8683fd9-6b88-4de7-b668-8b21574c9d66",
        "cursor": {
          "ref": "604dfd74-2d9b-48e1-a910-5556bc0cd23b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1a7a2a76-ce5b-4e8d-a83d-a926634aec79"
        },
        "item": {
          "id": "f8683fd9-6b88-4de7-b668-8b21574c9d66",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d4488e89-d85b-45a0-af5b-d155d4fae30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a797144c-36ac-4b8d-ade2-bcc2bf7dce52",
        "cursor": {
          "ref": "707f99d3-36a7-4a0c-ab08-692ca73a0be5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "13c46f14-924e-4d00-898a-1c625eb41551"
        },
        "item": {
          "id": "a797144c-36ac-4b8d-ade2-bcc2bf7dce52",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4802e97a-8870-4dea-91b9-e892398c2d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a50b6a7-2341-4169-ae4c-ee3f89d793f0",
        "cursor": {
          "ref": "d2066a66-d692-4a29-bcaf-6b5a8ce6f64d",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d715beb1-fb27-4625-ad73-fbba4ac79d9d"
        },
        "item": {
          "id": "8a50b6a7-2341-4169-ae4c-ee3f89d793f0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "90768ba5-43b5-40ce-9bb2-3eb3bfca78f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153fee00-294f-4a01-9af2-18cc16cbf8d5",
        "cursor": {
          "ref": "1afa7555-a7c0-415b-b6af-c3e1cf7e2a3c",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "61761035-1f46-4b17-b1bd-8bae84969a86"
        },
        "item": {
          "id": "153fee00-294f-4a01-9af2-18cc16cbf8d5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1585911b-8fa0-4ff9-93ad-1143d3b81ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e70e8d-5221-44ba-b3e8-5bba4df31454",
        "cursor": {
          "ref": "6590428f-3135-4100-943f-47334a79b5ff",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "64e9b360-5ae6-4ac4-99e1-f08cb67492de"
        },
        "item": {
          "id": "44e70e8d-5221-44ba-b3e8-5bba4df31454",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3820f8da-76f0-4861-865f-0d4c862e9b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21c50c5-1a13-44aa-86f0-010e80a21729",
        "cursor": {
          "ref": "402ab23e-aec9-47bb-8f8e-7df6dab857ff",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "46ab4c68-1bc9-4e05-925b-2ead9b806a2f"
        },
        "item": {
          "id": "b21c50c5-1a13-44aa-86f0-010e80a21729",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c30e5db5-9086-45f4-bcc8-26c2d3e89292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f6620e-aab8-48e4-8714-7aa1e9f8fb44",
        "cursor": {
          "ref": "b4dcd707-24c3-4c0c-9203-145da9075b88",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "802c5444-4540-4b79-ab7c-ebe89d7c928d"
        },
        "item": {
          "id": "b4f6620e-aab8-48e4-8714-7aa1e9f8fb44",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f755224e-6b3f-4138-ba76-c23b95d3a69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689f4bb0-707b-4b43-9e71-57d8f4167460",
        "cursor": {
          "ref": "8c3ae2f3-7aab-4058-81c2-d16436400745",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2142be01-a19a-4ea3-8642-e5f989ee6a9f"
        },
        "item": {
          "id": "689f4bb0-707b-4b43-9e71-57d8f4167460",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c0192323-1fba-4e9f-80b4-1788b165fc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477b229e-9a9a-46ad-a9d0-afb3f3c52aa0",
        "cursor": {
          "ref": "42890949-8002-4485-aa54-f4764cac6182",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e89a2ff3-b6ab-441c-972e-95dcfd0e8ce2"
        },
        "item": {
          "id": "477b229e-9a9a-46ad-a9d0-afb3f3c52aa0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "41598dbc-d8ae-463e-a68d-1c180401a175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3106ad-b562-40c2-911a-328c09f0d374",
        "cursor": {
          "ref": "b94ab46c-fafe-4e76-a3f5-88c4d7937d84",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e6dcc475-b34c-47d6-9aa0-e381a3f0f473"
        },
        "item": {
          "id": "bc3106ad-b562-40c2-911a-328c09f0d374",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "58149860-5356-45c4-838a-9db55cdca586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1274d115-235a-4f6a-8c89-7dfb393a4b3f",
        "cursor": {
          "ref": "8fedce6a-17b3-415d-812b-feb81f82fde8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "06e64fe1-52ef-4b31-a2af-84a36076488e"
        },
        "item": {
          "id": "1274d115-235a-4f6a-8c89-7dfb393a4b3f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e7c2ad1d-b66b-47c8-bcca-93ec0e93f7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980ac508-73eb-4f02-81c7-9ac3e95c1ccb",
        "cursor": {
          "ref": "56d7c621-a362-4e9c-9222-6e68517e8114",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ed43a38-d234-486b-a1a1-94e43ebed89a"
        },
        "item": {
          "id": "980ac508-73eb-4f02-81c7-9ac3e95c1ccb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "258de93a-53b2-4cd0-91d4-32cd1b51043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63817332-e834-4046-a881-45b4e088a87b",
        "cursor": {
          "ref": "9340eccf-44bb-4a42-b630-d2aafae01899",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d0ebb79d-40f5-47ce-9ab9-b29bca17ceae"
        },
        "item": {
          "id": "63817332-e834-4046-a881-45b4e088a87b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9d0442c3-ab20-4096-8886-a50ebe32a4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e9f1ad-7fbd-4405-8129-9da828ba747e",
        "cursor": {
          "ref": "d5cca476-ead4-4472-a45c-0172e55e9f50",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "95a7cfd3-0db8-456d-a9c4-3f623b5215db"
        },
        "item": {
          "id": "08e9f1ad-7fbd-4405-8129-9da828ba747e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f0278a01-f67f-477e-9adb-a186c9edbe5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2a636e-063a-4f6f-b6b7-8bc0ed00d4c1",
        "cursor": {
          "ref": "9d6fd258-1ce7-44df-965e-e409d45b5582",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "22b9de5e-37f6-4805-abe2-4bd2ca6525d6"
        },
        "item": {
          "id": "2c2a636e-063a-4f6f-b6b7-8bc0ed00d4c1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3e2d6483-b202-41bd-ad7a-0be3fbdd28d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada03764-5525-465c-b5d1-6d33d28d97db",
        "cursor": {
          "ref": "3c47ffa6-2c0c-465b-a515-e7783447e310",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bb1ad055-40f7-40cc-8318-bbe0ca37c3d3"
        },
        "item": {
          "id": "ada03764-5525-465c-b5d1-6d33d28d97db",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "485f916b-f3ad-4866-81ce-fd61eda8c073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8b60cc-e45b-4eb7-8cf7-92d49dc2ff18",
        "cursor": {
          "ref": "4ab3e081-6f33-425a-9c96-2576829c263d",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "cacac6b0-ed98-40b4-abd2-133b20021196"
        },
        "item": {
          "id": "7b8b60cc-e45b-4eb7-8cf7-92d49dc2ff18",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dc20e499-0711-4fb2-95ae-83e919fc80a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22a2705-7d7c-43e5-a824-4d4c89929275",
        "cursor": {
          "ref": "44ab79e2-b6f9-4ec9-9a1c-ce252e7c604c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "436afe4f-4c57-4c2f-be94-bcca9cc3e5a0"
        },
        "item": {
          "id": "f22a2705-7d7c-43e5-a824-4d4c89929275",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e84987d-3945-488b-83f8-34452010df2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f12f65e-b51c-448b-8e75-23cc1616b119",
        "cursor": {
          "ref": "f2d3eca8-00c7-48ef-9bd4-7825aabc7f2b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "561ed675-9046-420f-a5ab-6dc6403e128c"
        },
        "item": {
          "id": "4f12f65e-b51c-448b-8e75-23cc1616b119",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "daaf79fc-bba4-4b24-93c5-c91381b4ee5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52344071-d3f9-485f-939e-e57bd27a9f87",
        "cursor": {
          "ref": "fa36559e-6fef-4de3-b924-2e2479f15fd6",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "78b18a79-42af-4eb5-add7-f54ecdab85fc"
        },
        "item": {
          "id": "52344071-d3f9-485f-939e-e57bd27a9f87",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b3164be5-bb89-4e43-b217-be6be22190ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c95d5-9ce9-47fa-b05e-f9f7736714dd",
        "cursor": {
          "ref": "df2d5759-7bfd-4ece-a77d-bde19f23599e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1b8fd858-5003-4fc0-a65f-a66d201fc3c6"
        },
        "item": {
          "id": "b51c95d5-9ce9-47fa-b05e-f9f7736714dd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5234246d-b42f-4c83-a6dd-30e7c521779a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2adde0f-ef68-46db-96d8-07257a69fd0f",
        "cursor": {
          "ref": "7b67bbae-b6a2-4454-aa2b-ca62e329f36e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "62297e54-fccb-4f8a-94d3-40830798caf8"
        },
        "item": {
          "id": "d2adde0f-ef68-46db-96d8-07257a69fd0f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2bc2ed75-8991-4df1-be62-995c7f7ad9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c7bbe-9500-45de-af50-4902ca55d77b",
        "cursor": {
          "ref": "c76bcdd7-7288-46ce-85a1-f61fe07662c6",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3ed6791b-2792-4fd0-8918-9b74f61a7875"
        },
        "item": {
          "id": "729c7bbe-9500-45de-af50-4902ca55d77b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6cfa5a74-02e9-4cb9-afbe-b52437570123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b692b4-ec72-4754-bf31-1a15fb44702e",
        "cursor": {
          "ref": "bfdc50d2-fe2e-44fe-a9e7-a53eeb6199c1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "14d7790f-797d-41df-9851-1e015c68eb65"
        },
        "item": {
          "id": "31b692b4-ec72-4754-bf31-1a15fb44702e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a3a55c75-f53e-48a7-8e2d-2877129c3df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754931dc-bd50-4d7a-b8dd-7bf272fc93c2",
        "cursor": {
          "ref": "d6abbeca-8647-41a8-9a62-970dedf4cdef",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bb59553-0f11-47e3-95d4-70ddda86efd3"
        },
        "item": {
          "id": "754931dc-bd50-4d7a-b8dd-7bf272fc93c2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "991c52b9-ae22-47d7-bb21-546a96f8568d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e682b52-e970-4a0c-9251-af9d3f6d00ef",
        "cursor": {
          "ref": "253ddebc-0bdd-4d46-83ba-ee260ad62eac",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "26cade04-1720-4d88-9308-b9a8a9c32e07"
        },
        "item": {
          "id": "3e682b52-e970-4a0c-9251-af9d3f6d00ef",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e5d5f163-00cc-470d-b06d-17bb4b61b9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7945f00-f0f2-4b3e-b402-29241f41ea3a",
        "cursor": {
          "ref": "09223fd3-9674-4f1d-a57c-ed73dc97abf6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "145c1b07-6a6c-46b5-8521-550be322b817"
        },
        "item": {
          "id": "d7945f00-f0f2-4b3e-b402-29241f41ea3a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e024a9d3-6789-4cdd-b4e6-32e8bac26d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bbd620-d9fc-44a3-b322-83740ac64a24",
        "cursor": {
          "ref": "261be5f6-2650-4dd6-94b9-1c6530fdedf9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ede0eef9-ffd9-460f-9cb0-48aafbb8c765"
        },
        "item": {
          "id": "28bbd620-d9fc-44a3-b322-83740ac64a24",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7910fa6c-6c89-4a8e-94a8-3bc7f05aefa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af33699b-1e00-45ef-b8b9-4caa989d8ee2",
        "cursor": {
          "ref": "7dda5ef5-1d1e-4086-99f9-3a2ed16ccacd",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b77d6f01-a249-4c2c-a00f-55dd0256e821"
        },
        "item": {
          "id": "af33699b-1e00-45ef-b8b9-4caa989d8ee2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0b7fc402-98ac-4480-870f-6fc672a72051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc114a5-bcb0-40b3-ad63-4719cf45e615",
        "cursor": {
          "ref": "b883c6e0-83a1-46b4-8ec1-d322c3f1b7f6",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "24372038-da17-401f-9f65-1907688e28e7"
        },
        "item": {
          "id": "ecc114a5-bcb0-40b3-ad63-4719cf45e615",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d154195c-5fda-4204-b877-b21992b2115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f11016-c483-4a8b-a6e9-01a96efd3834",
        "cursor": {
          "ref": "f3785586-2fe1-4d47-8ee0-d31fd341b17c",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "dc931b02-0615-427f-acd9-097a92a59452"
        },
        "item": {
          "id": "44f11016-c483-4a8b-a6e9-01a96efd3834",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3895d67e-4dcc-42ab-9861-7aaaa7bb97b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f7a130-cf7a-4024-b579-f0038ce4b3b3",
        "cursor": {
          "ref": "291e87b0-1ac1-4241-9b4d-e9487ae873af",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "166133cf-8731-4634-afbf-56a7f54d8f1e"
        },
        "item": {
          "id": "29f7a130-cf7a-4024-b579-f0038ce4b3b3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e8aa6ed0-db4e-4d1e-a07d-a37780051dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae62f950-b0ea-434e-9437-f5527f1c3172",
        "cursor": {
          "ref": "9d61d6e1-db94-4729-aa6e-4e63aef751bd",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b32a8fdf-cb16-43bb-bc4c-5d17770716ad"
        },
        "item": {
          "id": "ae62f950-b0ea-434e-9437-f5527f1c3172",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "acdd4152-3221-4009-bc5b-ba8e61e520d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e39296-8382-485c-b0e8-17b7c1d258bb",
        "cursor": {
          "ref": "1ab2fa7a-66b7-4008-9051-7ba2332426b8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7b105aba-1e60-44af-9b98-cd4858a1866d"
        },
        "item": {
          "id": "50e39296-8382-485c-b0e8-17b7c1d258bb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4ea51baf-d0f1-46d4-b1b5-b785335d10ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1153531e-d81d-40b0-b3e6-49c541ba35eb",
        "cursor": {
          "ref": "612223df-6d6c-49db-bdc3-0f629bcd37b9",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dd4c1748-a197-428f-9141-ddd0af0f587f"
        },
        "item": {
          "id": "1153531e-d81d-40b0-b3e6-49c541ba35eb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ef06efe5-be23-4a94-a98d-80afd64f4351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae75537-0044-4d1a-8cf5-5099a50a7bc0",
        "cursor": {
          "ref": "b6015d6a-624c-4c69-96d4-f7c0818c6845",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ce6b3bbe-4214-4c22-b052-27a404a9e513"
        },
        "item": {
          "id": "1ae75537-0044-4d1a-8cf5-5099a50a7bc0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "07a3470f-3101-4270-943d-c83ccc5bf8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea2f248-b106-4244-8b3e-2f7e34488941",
        "cursor": {
          "ref": "32123579-aef2-4851-8c14-42063839301f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8db21d4c-b44a-47ae-b5f6-6f14b3465176"
        },
        "item": {
          "id": "5ea2f248-b106-4244-8b3e-2f7e34488941",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "78154a03-0fe1-4ff6-83c6-fc9325c24dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2839de4b-75a8-4482-bf68-69ab574c9282",
        "cursor": {
          "ref": "71d306ff-ace7-4a88-8b86-98a88beafd60",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c8d36849-8926-4d10-bb81-6d7a81d03c80"
        },
        "item": {
          "id": "2839de4b-75a8-4482-bf68-69ab574c9282",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6ded0897-53c5-4dbe-9b93-1db94697f800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b914f35-8d15-487d-ba74-4bd649b254a2",
        "cursor": {
          "ref": "e7af6bdc-5541-4682-aacb-f3b52d75ded7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c9b7b187-a321-49b2-a4c3-c046353ab992"
        },
        "item": {
          "id": "9b914f35-8d15-487d-ba74-4bd649b254a2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e8958ec3-97fa-43f0-b43c-0ec20ce24e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4f5daa-c5f2-42f8-b26a-6b200434694e",
        "cursor": {
          "ref": "508c6711-08ff-4a58-a4ae-356e2b7e1b84",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02805b7f-38bc-433e-938a-5d78699794a6"
        },
        "item": {
          "id": "ba4f5daa-c5f2-42f8-b26a-6b200434694e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "229ce7d1-907e-4645-8a87-8372a7ddd269",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7363421a-2944-4a72-9450-fef422205352",
        "cursor": {
          "ref": "2c65cd1e-52eb-4989-abc9-52da380cc62c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "886dda03-27ec-4e51-bf65-4fd39c894f84"
        },
        "item": {
          "id": "7363421a-2944-4a72-9450-fef422205352",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3aa533f4-95a2-4345-bc76-950979b412f2",
          "status": "OK",
          "code": 200,
          "responseTime": 2209,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf03629-5e34-4e1c-acd3-9ffd5ad913a7",
        "cursor": {
          "ref": "0267302a-38a4-47fc-adca-05ed5476e6f2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "79a0024f-bb4b-4991-b714-4d757dbeb5a8"
        },
        "item": {
          "id": "fbf03629-5e34-4e1c-acd3-9ffd5ad913a7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "53c74474-0aee-4f8c-97d1-0e77bcb86f4f",
          "status": "OK",
          "code": 200,
          "responseTime": 4006,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82bb408-666f-4836-bdf2-e2490e47d5d4",
        "cursor": {
          "ref": "367ce213-7357-4a49-a243-df107a7eb33d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a81f36fc-2e6b-458d-9fdc-41b1c4f19e5c"
        },
        "item": {
          "id": "c82bb408-666f-4836-bdf2-e2490e47d5d4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fac9bc34-fe3b-4ef8-bbe4-2f693792cb4e",
          "status": "OK",
          "code": 200,
          "responseTime": 3392,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b34b80-9479-49cf-bc41-8363282045ab",
        "cursor": {
          "ref": "aaf12f0f-2665-49e4-bdaf-b4f130fdee86",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "048c99c0-f3dd-4e50-8464-506d07877f34"
        },
        "item": {
          "id": "33b34b80-9479-49cf-bc41-8363282045ab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7debf73d-17e0-4be4-81f6-ebfed1eb917c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b34b80-9479-49cf-bc41-8363282045ab",
        "cursor": {
          "ref": "aaf12f0f-2665-49e4-bdaf-b4f130fdee86",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "048c99c0-f3dd-4e50-8464-506d07877f34"
        },
        "item": {
          "id": "33b34b80-9479-49cf-bc41-8363282045ab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7debf73d-17e0-4be4-81f6-ebfed1eb917c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202c9e06-206a-46d8-b888-25c5e7e8181f",
        "cursor": {
          "ref": "6ecd5e63-b983-4a77-9e7a-ff91ef77711f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b370084e-d63e-4ee6-b358-548a89435a5a"
        },
        "item": {
          "id": "202c9e06-206a-46d8-b888-25c5e7e8181f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9213b40a-e1a9-4e20-b363-4eec06c5407f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35d13c4-add5-424b-975a-4fac6f23a6b5",
        "cursor": {
          "ref": "3f187ae8-a257-426a-9e49-afad4f3eb4a3",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1131947e-0557-477c-bb33-8fffb1711575"
        },
        "item": {
          "id": "b35d13c4-add5-424b-975a-4fac6f23a6b5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a522a748-d6e6-4fda-bd22-e12dcb72592e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}