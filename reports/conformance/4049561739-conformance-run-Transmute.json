{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "58bb9aaa-214c-4b84-8f1d-e0318e17e8d4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "145ee10f-87ff-459e-9639-29a1bb675dc7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc1b633b-d7ff-476a-afb8-6b56c96658a3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e243030-ffd8-4d76-9fb8-7e9d5fb8ab24"
                }
              }
            ]
          },
          {
            "id": "43d5a1e9-cc8c-45eb-8186-3544d0987c20",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4dba3df9-b4e8-40db-a79e-a1b27d695b85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e6145fc6-0c4a-47c1-a046-977218da6703"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "99904aaa-a887-4a2a-8528-da3a6a8315c1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "556ae3ee-d06a-4192-8c0d-f9ead52249d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f9723fc-95ec-4995-81b2-74c55f9d9148",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfa2021b-2955-44bc-b180-6897f191628f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe09b337-e664-4952-9ff0-9ec5707c197b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d76f2940-2356-4e8d-8e18-2788a71792c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "79dad911-8950-45a9-b913-e972a716413f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "64b828f3-3c2e-48c4-831b-16f051365eb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f720f19-89a5-41b8-a02e-4cd123422a7b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2fdb561-970b-456d-9fcf-4155f51d90bd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "656d66b2-e4cd-4d9e-8d6f-3befce5b2b5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f835a4b-9002-4a62-8a7b-1563ed8725ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5408f86-2369-47c2-b697-ab2a6dfe403b"
            }
          }
        ]
      },
      {
        "id": "ceafee34-c7b6-4479-bee5-de1167a3e034",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b09d6b6f-f4ff-4866-b72c-a6c70e3e8508",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52c97197-6e8a-435f-aca0-4aab94f6aa2d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64de11ee-74bc-4aab-93b5-4188fb6d1ac7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823faa6c-b272-4467-8167-5957135edb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd39b438-3d3e-4032-a03c-91d29f7deac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbcad8f-523a-4387-a16b-67115638b1fe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9751f6c5-280c-4280-b482-5279ebb3d24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f28117e0-4267-45ad-8711-2ba995474414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8606317b-b13f-4dc0-a1e2-91f17f9fbd86",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b4a678-0fc4-4427-8ccc-b73f32a16740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a27a597-aecd-4f39-9d1d-f5930dcb1d3a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "75808a5d-3395-49c2-b75d-8bf2a6108b7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "726e7714-2492-4f08-8f6e-f2847292bc53",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bab7767-6d92-43cc-b9ff-9b6309d0d17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9bc8eae7-9209-4e44-a4d5-0c35e017c6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e72e18f-13c1-417e-9d0e-39d5e1e77c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66412f8-78ba-4c51-a39d-dc76d773e6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc296536-e8cd-4e11-bbc5-f39c2a5becaa",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f705ea66-90d8-4e04-9382-9b4b2687ea05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef011674-9079-447e-b13a-ada1c8e4b013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501e977c-6460-45b5-8de3-629c9beb1011",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6468f5a5-2fe5-42c9-a408-c824d1da4091"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d1e06aaf-8b87-49fa-a268-ebf0c4ff4b3c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9088d253-816d-4d00-a26c-c6b5cc09bc85",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa6d19eb-699a-4b47-a7cb-93e30fac98a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "88cb7eb4-d6b7-46f8-98fd-dc1e1eacc2c5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa243126-d763-470f-8a29-acb93faff210",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "49a73e41-f6f2-4564-a783-b1924758e44d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88c8965b-26df-4d14-bc1d-25352bb2907d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cae42817-0680-4b7c-9126-90d6c64de072"
            }
          }
        ]
      },
      {
        "id": "9aec3679-ab9e-43ab-9b9f-ef760cde088e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5843dcef-70f2-47b3-bd57-b9faa2512460",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42d75f92-c3b8-48d0-957e-9bf9afc12958",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e7afda70-f5fd-4f3e-adb6-91b3698c6a9f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcf19b3-f3ca-47de-b6ed-08e8d69e9648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8d7eae-0283-418a-9e78-30b1647fd577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e7754c-c328-46a6-919a-2fc800d6bad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c29f6ca0-310b-4015-84db-533e68d9f858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0fc458-f686-4f95-bb60-836609ef3dc7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23462c93-9d21-44e6-9f2d-6fb34e15111e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3fdcdf9-c09e-43df-9e90-afde831f9e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8549b641-99cf-47c1-820f-a868775e4655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e623cf3c-5389-4252-aa32-7e4ec0511ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1100583-54ea-45b5-80ac-b7661b271169",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd751d8-c2e8-4c95-91eb-fd88cb632f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecc4729-b82f-4ab3-850f-cf4ab7b8ecac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c095f26-a9ed-45b6-967c-87564ffea938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9c25974-dbba-47ff-8ae2-e6e69f81d9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a699a78-2367-4a49-aa0e-6262a114d85c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82fb952-90ff-476a-ad13-c136dac40df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0619bba4-48be-45a5-8ffc-88276f8a3aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a77581c-83b9-47f8-bb57-759bb0dafa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ebc1512-330d-46c5-af68-b765ac630d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410c4183-9dca-4274-897f-a03984411355",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab5da70-2fbe-481a-8081-39179f049ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b63276-21f3-4de6-916e-d79046e6283a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19b72b4-7761-45a9-a671-911a69502828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3667408a-5115-4d7e-8b84-91f847c75ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d65ca36-c9e5-4ab5-8875-eca682611ee5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9131a7-fd51-4551-bfe1-b5ec85529b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fcba3e-07c4-42ec-b0e0-3910572367ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf044796-e831-48af-a4c4-f3e3846825fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6b32004-e081-414f-b65b-c06ce3e9b861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a92301b-c6f3-4669-8f81-3397ff799d33",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43025316-834f-4586-b9a7-eb520927649f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b636fc-91ed-442e-b095-9661bb8ec89b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0fa4cc-bbbc-4a1f-95a2-0c2667554e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1884e48-1cf2-476b-8223-438c9eb269f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc9236e-f6ff-485e-9671-b6efd0a3f4da",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d20887-8559-40fe-8d0d-60cfa6cb455a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a828a46-a8e1-4f7e-84fe-60b598bbf976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba8db2b-8eff-4f6f-a1b5-c7679db61673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22596673-4d23-40f6-a837-400c50bd977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63976f82-ce94-4454-8cab-a06ddddea461",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d41a84-72d7-4750-a6d1-2e17260bc736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a025fc-9f67-495c-959b-489235c80fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19e6559-ff0d-4eb3-b619-a153310c7ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "020f810e-6233-4801-83fe-462acda138a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a62cb27-6182-4461-8393-711a1171f048",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346d0863-e88d-4dc8-9232-94e0ef715d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3933f5-50ac-4230-b516-c8b0231abcbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37b58c9-5d88-4ae9-b9b4-91b720b44b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5c48864-4f9a-4fec-bd04-b152fdfbfcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eafa5d7-47ef-4d9e-b42b-c721857ecd33",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b60d391-3c63-46d5-8a25-9684a9176215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ee2cfa-30d5-47f2-a13e-850516e9125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c220e9b-4d8b-4bbc-9d3f-9af16df12d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef2f703-6ee4-4858-a731-e0912829344d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0178a920-d509-456f-aef9-82683434dad9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef392f4c-74c5-4aaf-b28e-1dc4a62bf600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325a33eb-eaf5-4b0a-a484-deeabaaa8691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c7f23d-c0d7-4af1-8b0b-1119e4b97fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d5ca942-076e-4285-b7db-a30c2879cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9ca964-8844-4ab0-b324-c0dbf2fe52d4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c2c253-8187-4b6d-8038-3d509b89540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b89e279-78f2-48cd-af4b-159e74452f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9417535e-780b-4fda-93ea-2a68cc89ba2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e46f78c5-920a-4b20-b1ab-197a486b4993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6c5fe2-7c3c-4532-9790-49e585ad619f",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585b58c8-3c97-48e6-9157-45e3aeebddd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a314ec-b0b1-43b6-a0ee-caf1182c7192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa331a6-be55-4a39-9f23-12f124eca0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7400a8-ea2d-4b35-8c43-fae7b76b3cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf544559-fef4-4304-a3e7-33a138d2c48b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2bbaa9-b963-4db3-bde3-8b1f6490897d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db4f841-5799-48b8-8f69-4f57bd162b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919dcf8e-c29d-4e4e-a732-2593fadd06f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25e24e39-ca42-44af-a739-69f8dbe3bb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718a9351-ecef-4771-9ca5-18fa976b6374",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90abd031-bac7-4602-a81f-e4deef5efd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f0e154-5f8e-4143-959e-5cae5c384cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddf7e01-6a76-406e-9dbf-afced77f7784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4fb19c4-01b1-4f33-b3e4-b1f2d6bd2d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bdca1f-d2a2-4631-931c-c4c15eaafa21",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f953a1f-5ebf-4b57-9d0e-b81e2a4424f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7295e0ad-f7c5-4672-a818-d938f07ca679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8157ee11-ba32-4dd0-aadd-bd5c00874496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbe90254-cae6-46bc-960a-e64dbc739270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f44b7a-6660-4e14-bff1-9d3b676d2680",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395cda5-e37e-48e2-a2f2-cdab5d5be9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d339ca8a-78c9-45a2-b3da-44185ab9f7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6b409d-734b-4b03-94b8-492e90245b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3c3313c-66ff-4222-904c-bc2d9bbf18f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be74a6a-2007-4017-b0bb-11104c863876",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4781be6-c585-487a-aec1-7d6f61360830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38606bb-9736-48a6-aaff-f40c3fd72785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f362d23-d341-4346-bb4a-53e79e0774fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bafb047-fbaa-4328-a369-a2474e9d790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d3671e-daaa-443f-a372-006bf658349a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6f04ad-4080-406a-87da-a179303c91e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c4e723-914b-47e0-9f30-8f5abad06f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a889355c-4bbd-43ad-9f51-f0bd29b103a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba395471-273c-4729-82d1-5d17b3d0f678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e15004-a675-430e-a0f8-d94f5b6b4125",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17a613f-d68e-47a9-80ec-4c51420dddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2452ba0f-7d45-47b6-99d9-b4e37f21c2f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f60b05-000a-4984-bcef-718531e099c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d076873-dccf-4a70-84d6-7458b671455f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ab273e-5116-4261-89b4-a72de9cbd631",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2a3948-d13e-4aa4-b21b-6149364a88ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0184acd4-bb26-4d7d-8809-1be0e56b911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9e904e-82bb-4877-997e-40c3832caa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b3bfd3a-0cfb-4420-9741-ddcf6c0c8775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d150e5-71cf-4da6-8625-149956e9a247",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a31d5d-fcbd-4fa0-92d7-159ad85b1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852968c4-312c-49dd-8123-8d39d44278bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12d11cf-bc26-4838-8d40-14eb03d8eddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e923389d-b337-48c4-b652-cd278d807159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecae1b00-8157-474f-911b-51fa4a3a9216",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1343993-422c-4464-b991-8e7c203d06a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda1e8cc-5736-4e28-98f1-8dec44252d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e913aab-298b-49a3-8f5f-7398917d2bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "629a081d-6887-4c5a-8c65-6a2d754535da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb038e71-1c95-4c22-9fb7-c091eebcaf7d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ea4b80-5306-44fc-86c8-a3c42efd09b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b8a533-88ac-47b6-be3b-fed5dadaa38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c668445c-6892-458a-b877-ac584689a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2928bd-e9da-4c7d-bf43-48b3a350fd17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eaf27b-ebca-4b0f-affe-58ea9abce980",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39427515-1487-4aa3-8ca5-19d39b8b49cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a401457a-4150-4fd2-94c4-bc070d1f6403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d447bdf-d031-43f4-84fb-ec4eee91024b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca99beff-d863-4496-848d-98f259827c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf6dd2-715f-478e-89fc-7c8e9c1b485e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f964376-092a-491b-bb3e-5582766a3b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ca85a0-d356-419c-b0d6-32a9249122be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c174f3a-cacb-462a-8110-46ef74158b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "64755c5d-9f79-44ea-a954-6e1e946ef576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22af9b56-714e-4c23-b06a-f00f68076805",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637b3295-f285-4c70-8009-d44442143c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2190cb0-2b88-4788-9fa6-69b31a6ccd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4583bdfe-e62d-4d3d-8d46-288cf88b3591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7356535b-cebb-4218-94fb-ece6fe2720d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f89559-834d-4de4-b67d-a0c8b3869e8a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cc38b2-a339-472d-aed7-8b807a7e36a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f4e898-5de2-45d7-98e7-d93675e36a76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe6228e-a8f3-4372-a655-2e56bd47587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7162abb-d127-4fe3-a60c-eb6c17ee29fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba1b628-3f74-4ad6-8663-e0301bce8387",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d42feb-a414-476c-ad81-b40a443a4939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7356ceea-547f-42aa-962c-a860da0b81c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fafe5e5-1d65-4a51-9392-53f5f3be341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0fdbf6-8080-42a7-b91a-7318b7b3bfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7578a11d-ae22-440d-a0a2-ec5f2dbc500b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d48e89-4789-44b7-927f-fa7f14d70d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48dd53f-aa26-4550-98c6-21988af3bd05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e4c2b2-0414-48b7-b247-54ee9ac2ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b2f6f5-ce92-4f65-bd1b-4c3b7568419b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77444be1-76e5-4944-9d03-b6b5e8074b6d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc97b67-e24c-42b0-b5cb-d4b9d7dad899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde9e47c-20bc-49eb-9a3a-5f7e075063b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1381a4f1-20f9-4135-b872-571d809ebf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a824c773-701d-4ba6-8592-3ec02d1b62ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eedd014-eab6-4bcc-8344-1368ba6a66d3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c0e0b0-ada9-4989-9d5f-2601384a978b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e4b741-4c8d-4bb7-af62-cf6b2d6a613a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c6f3ad-1db4-4ef1-a07e-58ead9f8a59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1920682-5660-468a-9cbe-b2699b8489f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174a2276-1ea8-4052-b8eb-2d7db086867d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed37ff0-c50b-47f9-a495-ff64bd437789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef4f123-cfdd-4c00-8ee5-24dced8ae31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d420f4-d2c8-4d2c-9ad6-2c1644c68faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb364fe-5873-4d87-83e1-2540cc826500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe576fa9-ae9e-4933-890f-c3aa1d81607d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed413d2-d5bb-48a5-aff9-a67ffcfac29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8300b71f-0341-4458-964f-3f3a1a0e8d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e2cbf0-8eb5-428f-a5e5-77714c955efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7ef7e6-df62-4043-b112-4c8217b205a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54acace6-3b82-4ed7-acbd-38eb1acce002",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e95973-27a7-4a25-9963-4ebb91d261e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96d6e0e-aeef-4322-bcc2-aa20cde792d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1024143-0fc3-4a60-9316-cb3468dcb6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3404570b-8f57-462e-990e-f24260e71675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c3ee05-ffb0-4ee9-9dfe-b7c24f93178d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f8fe22-b85f-46d3-a9cd-027870730aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb09b27-0a1c-48bd-ba4c-2912967b41db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef8e478-880e-4fef-8543-5cb183cb51c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bf241a-8011-45af-883d-07f3cf01b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a1a8da-654e-44c6-b435-edce1b1137cc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a523fe3e-a3cc-4678-b3b9-28634c87a8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5baaec0-d906-475d-aee8-37764eea1e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd41a5f-4b06-4bf5-a205-3d43e9bf6531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f9e57cb-330c-45cc-a09a-3039ac785d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0b3489-f094-4118-80e0-7f03cf8acedc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05be65c5-5a06-4abb-a55b-2a0cb5a2dfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a29fa0e-6016-4b5d-a4db-3c3f39becbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f03719d-aa8b-400f-b822-b558cc5ec707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b157328-1d44-460f-943d-f7c99a90d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2f779f-066f-4cf1-9c73-e195e2c1e21d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51811366-5488-4233-bf12-93f9267c8aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624bc3a0-cfc6-4a59-85ad-3abf2ce34a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9999da-d9fb-4a0b-b183-07e11cac0e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f839643a-5696-4003-8b75-19911d2f858b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcda2cbf-7832-4a36-b206-8f61f88e163d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643b02ea-358f-4a25-846c-d624c12197c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a56553-6b68-41f2-b32c-191213c9950f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed328529-eea3-42d3-9384-b31c10a0e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed471ff5-40cf-4128-9230-c19a279a65bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a02972a-5083-4f40-b28c-27ed42395a9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7c5f6b-0852-424e-9c07-c80b969b70d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730b6806-828f-46db-bee0-03fe31938003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcda28ed-de53-4591-a7dd-bf14ea6c552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b412f29e-17d2-458d-aaae-8ca39dcdce5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9108ae66-9b77-4b30-a26a-6029ae425787",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b531c52d-ba41-40dc-83f4-95c44a1a8112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f210ca3e-f5b1-4c97-b1b4-4623d98727fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49693cd5-6b23-4cf5-86bb-b4b80b42bb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3fb259d-899f-4e58-b28a-7890883ea019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a190f42b-54aa-4b6e-9165-c3cdfe3c69e0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e450ff9-1e44-4733-a005-2c06bf15dcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfbcf06-5cc4-43bf-ac0a-6533b1caa079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3e97c0-7eb6-452c-b5d4-199a0d54c06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7555ee29-a8c1-4fc9-a9de-a5fa617a442c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ec7098-2036-477f-a08f-53b6ced2e20e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4998bf-1a9a-453a-86c5-41720a538bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78224d9b-30d2-4a42-b6b7-2e2603b815ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e001024-0bc3-4c23-9704-fbd8e7305801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f54121-6767-4947-a036-85559f8e62c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb0137d-8789-4ca8-9601-16c3aa5f62e4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36e5bff-43dd-4347-9928-0c9ee4efc21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34f69ea-134e-43de-9dcf-d80b4b42aed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e7263e-3ceb-48d6-ba8c-52114218e6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "18d7ee21-9928-470c-a6bd-a6a4da7cf96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4386c91a-7272-4822-9f31-f911094f62c0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68792ad9-9b46-4994-a919-2c262b8e493d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3ee1de-2994-4e2f-a66f-01bf3879dc6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5314df-51a0-4840-ac24-3c84e180501d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3570eddd-72d7-4280-b627-3a5334ccc4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ec6568-5b74-48a3-bb34-4a77f8ed8f00",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b808fa56-aca1-4f09-956c-c64bbce21f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22fcce9-7793-46f7-a4ea-731aeada7283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a5ac45-6739-498d-94c3-3dcd29b1481d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00df356-7f01-4b45-8df0-460935230ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0450bbb3-a891-457a-8cfc-87503e5f5816",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd7353a-4079-4907-9d37-e1852e015ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdefda1-6ffa-405a-be08-91c8df8653f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff981162-1583-445d-9b91-ffa5ab23e715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3ab634-0ba6-4f24-8e9f-8d0debffbbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840ee505-b441-4c50-9e02-6a2b97bba41c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de33c75-c2c1-46ac-9611-43731c5b13d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872007c2-75bb-4429-8ad5-843a496fc34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc05d25-a2a4-4748-9240-752048944853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8039bd16-5976-4dfd-b273-24bc23e2eb2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef61b9f-e105-4004-821f-633b8654c8d9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc530c8-c4f4-411c-b348-42ec542c8ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614653a6-f80b-478c-bb01-5e418bf40d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0976f26-25ca-42c8-ae6f-6da05de634f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37591f29-45ab-4bd5-ab97-2c1a32374654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f25a3b8-7a06-412d-8cc4-e8d6c4aec933",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b989c-2c09-43d7-bb30-623d23d07249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2feba2-b86d-48e2-8e4e-32199ef33e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad595f5c-f48b-49b1-9306-032197dcf0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4cadbc92-5b7b-4d1a-86c9-41941fff34ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1cef11-f130-4a0e-9f99-1cb0b80e3093",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e080c7ba-5ede-4cf3-a397-a8d2e71c4acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9790c2bd-f56c-41b4-9bf6-54226819efef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d1d0f9-5421-423f-9924-31fa4d65a822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8611d7b6-f56d-46ce-84bc-dd14c1da067b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2a5f48-26db-41bd-85c2-b67f580e8092",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c0b84d-6a86-4f48-937d-38fab2a2d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef0faa2-3cb4-4738-9c4d-cbc44d74af69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b4c6d9-3d83-4cd6-994d-864eca3aa1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aef910f-cc19-4482-9123-ef6021dd5ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd96e852-2448-4fe6-9233-9bafbe3dc48b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6569e3-1766-46b8-8046-a92de08307b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c318c977-90af-416b-ad4b-768a96b7500b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcbb68d-54a2-4545-bbea-2af13791626b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fedb82b-8499-4f93-8882-407c342326a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67309e8b-be10-46bc-a068-261184774147",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe78086-8021-4864-8e4e-ed4a55fc3e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64ca102-543d-49cb-bd24-94cb9d4ca518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f76d9e-6273-47a5-844c-e27f31dabe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14bda290-f4fa-43d3-bf02-f256fcc8a0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd927b5-7ff8-4d9a-97ca-f88293267e20",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdd516a-29c3-4041-aedd-99b62e75cb47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42207c07-a351-4a6d-9a0b-ef73f5a6b099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684e9001-97e2-4e6e-bba5-768ce5fce776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db438a42-527f-45ed-8611-2ae6bbe0bb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379de586-e843-4098-958d-fadd8c3f0f03",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050c1fed-71f1-49cf-afad-7257171b3837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6364d5-b402-458b-b3d5-447cd90dc161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e78e1e-6e65-488b-840b-b404971544f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fd933520-1e3d-41a6-a617-dca86a3773ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87102144-bf37-4193-bcfe-aaba5d61f803",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50bdd56-c6d4-47e9-8fb1-47511a904963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f9c51e-5aab-4ae0-b2cc-57df422e6992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e48934-beac-4602-ad49-5667f0e73bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24270f0c-d52c-4f0c-9622-1c2136715e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fb27d4-3654-4fa8-b952-ec45f063d173",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc069c55-d045-4383-84bf-5a30f557f306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c616f079-c12c-460f-8709-613341819b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7221b-4980-4938-a660-c0bfd50b7318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16b7447-a63e-477a-bd1c-a9100b46209b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76708f3b-9894-4ad7-817a-59187a39d391",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "432cfa6b-f9d9-4e8e-914c-7628e86daae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6c65f1-0422-42ae-9722-7cc72956b7a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02f5459-038b-41aa-ab78-2b79970af7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e71c2bf-0d85-405d-9b7a-d028c908f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d276f85-1c80-404b-868a-a3f75ab2f7c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac8a167-3765-4dc7-b846-582657b22c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0728d41-f048-4f6a-8bac-a82c9c513215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072db826-df60-435c-a2d0-4184aca2adef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "330a5305-0fda-404d-80cc-65b76ab0b057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f4f0e7-67db-4503-b1f8-4cc33a37c355",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665c4630-7baf-465c-801f-08a203c125c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d41b1b-bd29-4ff7-97db-3572c8f51216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390454f2-9741-4812-a1ea-3db36eba0338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff393674-118b-4263-aa50-0f9af77af94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab7e299-7172-4b83-9637-0d373620c412",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f9dd1e-6048-4cf4-a9b7-0712b9deaa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6584a472-1e27-49ac-afb5-bf49840a1192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42a0d91-abfb-48b3-9011-fe83e5472c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ce6b7c-54c3-45c5-85ec-e4dedbe42d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f068b6f-b1f6-41e5-b98c-47577d7e722a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5aa5c8-62a2-4f1b-b3bf-cbe83eba2745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26caace-a98f-497a-b137-be768985dbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9bd138-8a91-42f7-b7ca-665359207d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b8f521-dba7-4813-851b-2910aa5eeb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfc5a8b-ffa8-4eb6-8cbe-b6369f27a04f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4bcbeb-de6b-4f14-b2f1-4cbfb248134f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4321a89-e286-4e1b-97bb-acff23f72233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23800c10-c1a8-4e77-8a68-c4165722e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb00f44b-7268-4493-be34-ca8bb301a9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac2264b-448d-4f70-8b72-640069298cbf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10310ea5-aced-4e04-a858-5086c2d5d95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad44537-1966-440e-aee2-e61dcf1f0457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72578924-9fd7-4cac-a2e8-ae32e470bbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cb3961-81e3-4b69-aa36-aa9300940dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1990676a-5720-4eae-be70-3bf8609ad291",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33400311-4e03-4dd1-b795-407a505e1f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9f2deb-4c9e-4bca-a701-a0e31ffa475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21e7aae-f072-4345-9348-8d9615d3a864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98c2d24b-a696-4167-82a9-8486c95e2718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b11953-5740-4320-bce9-b1a471ce626b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dec038-b29f-477e-ad83-e8ade36c4805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1feeda25-813a-4fe2-99a2-dca1d9dec41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bec713-9c91-4968-a470-9fce5aa301e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9985eb4-5b4e-4e54-be80-4d93c6261588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d67747e-7b34-4865-9111-1c37ce993549",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3194133-2b48-4beb-a75b-8cd47cc4529d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9ac651-42ac-4890-ab86-d9a224be4f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2b6ff1-770c-4594-b667-d3950cf59dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f31ddc2-a4d5-498b-8868-05a85fb2305a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa30dfe6-a4db-45a1-b898-02e89d867327",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9710bb-a355-4bdc-8768-dc9546d19d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e52075-c1d5-4995-8751-b122b103fd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bae211-0b7d-4ae9-93d7-b62656aa81b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "394a1f8e-6342-4c90-bc38-ef422a6d9294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe85962-acfb-4597-9e64-32ada35ae634",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7f3eba-8108-4195-94b1-a763ff492fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871d9538-a241-4644-afe7-807f3c7be816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7334f9e0-4420-44d9-a332-7452b470b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac2516d-1419-4ab1-baba-e2ae332e0c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b37aee-72de-4c4a-ad20-7d5e907f6147",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de463833-3bd0-4e6d-8b2e-781f98199e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f68db7-c4b1-42bc-85e8-374cad4900c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af29a994-4611-4550-9fa6-253315792293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff86645f-150c-44b3-bbc2-38496ad682ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b45a15c-32e5-4767-a57f-abc82138ccc1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848137ba-cbf8-44ee-ae41-f6f20bbca923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79c63b0-a1c9-4e55-afda-3a0f8a5f2a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f20b2c-11db-4fd7-8d22-ce066e7d90fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bac63fb-7046-43ff-88f3-50200f2b67be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4413f3f9-d94f-443e-ae95-c7759f0268cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c657ce43-5b9d-41be-a47b-ae7387b66689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eccc6b35-548e-4e2d-80ae-b291c1f4d9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a762b8-d623-401f-85fe-8e8b3cfc51e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "abbb4d0e-e66d-458f-a3aa-069a9f8341ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15d2b35-758c-4555-b8bc-3a2405d2ee42",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49037cc0-901c-4218-a662-f5b039530b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13210a6b-27d2-4f00-b17c-9197c957dd89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bde851-77ac-42fe-87db-be9304cd41fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb35c62c-ee07-45ed-b9ce-e9af8bdbe37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a964ad8-1f00-403f-9f80-49f06b90e711",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9949a53-07ec-44c1-89f4-daa0b81d8bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57be0f3-efd8-43b2-af34-3d392238bde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0873b0-1472-4705-95fc-db39c428a98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b557ab92-df76-4c2a-93a8-d4499a093171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d6c8d6-636d-4dcd-bec8-cf179e85a42e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7b3afe-370f-44a9-b540-10c97e51dff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e54fef4-0bdc-4327-92c0-428fa527de78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb01632-8d54-4f72-9f89-692464d88bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7f77174-d625-4892-9488-e46f17d5c20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29f8759-78e3-407a-bca6-4f206fb4d0b9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a020ffbd-b26c-49b9-af25-518073e37e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e4f1bb-a3b3-4151-b3ec-b08eaaced8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55d7417-6f85-49b1-8279-524c3979ffa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edb18710-83ea-4a85-8246-62772333ed8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca6ae1-0065-49a7-a9a4-39bbbb077886",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc109265-9245-4e9e-a76e-3cdc91f60be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bb25be-d5e0-4572-ab4d-cf8f2bc28d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7012f1a5-1ad7-461a-bf86-82b6a3ee4991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9eedeb-fe40-4c71-b0fb-24175e5ccd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac3c7a0-bae9-44bf-bb5c-1921597142d2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d528d0-4f16-404f-9690-4e56f300ea06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2addffdc-2667-4b12-9277-1dad590024e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fb435a-7c81-4e1d-a9ab-4706e4c9565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e92b4e5c-73b5-4b0a-942d-66ac91801d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cddd777-b83f-4968-8f9d-6161566f4375",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c6682-56d5-4c43-9a58-dbdeb154fe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96513497-e63c-43e0-a194-0243fc6ed990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393fe64-eb7b-4c00-8b53-6d34eb4be64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "228cea56-54a4-4fac-b4cc-2fa369ce3051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047fa3a5-451d-470b-99ed-44bccd49c0e5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644ccae7-0cad-4728-b1df-4c06ba4c112b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a670f43e-d3b1-4fe8-b0e2-5a8e7f696fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2792560-181b-4d21-9f15-71d314cc2fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f4b2d3-a2de-450f-9d35-f6fbdd7d96f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308aa0bd-d0fe-42ad-a65a-1e317813690d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b75cf8-2148-4b1d-8819-4aa5d267f8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a0d550-2de1-4ea9-ace8-628dc26482d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54310b8-1d7b-41d6-9652-ec75667e8ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "134f5cb1-deec-4b28-a714-94c51e57f1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ac3a5f-3b33-4046-9b4b-d1d68efca81d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e76cd7-11ff-427f-9aba-76466e3c4c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7595c341-1c2d-415b-b6b7-b1a9191e3aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeda1e2-50be-4767-8922-4d7c12a15ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42b44f78-c212-4d7d-b44a-5ca2d57c6cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9de873-2424-413d-bc24-9824ef96ff11",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766a0a45-a7c7-4045-9f17-14107220ef9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ad3549-d614-460e-ab98-38127b9a1271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726d1924-2618-4449-83ec-2a732dcbc383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ee3714-8cde-4546-9854-7e38d44a9ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bdd54b-1abb-4447-b3fa-0aa7aaab144d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a14fd69-856a-4893-96be-8533d9d45c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a823ecb-e9cc-4b7a-a223-84c442a3e38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bd006f-27a2-4cbf-a16d-6db7d9b4922c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea8a871-dc40-4eaf-aea1-14f977e5ebc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec00b5f1-2396-469d-bf82-ff9bd77d7d64",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382ad4f3-c6e0-46bf-bead-47e07dbba16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0648d3da-bf99-43b3-a4af-f067ebe8c44a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b4ba3-9788-4481-a3fd-e7beebfbdb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfe2317-ffb4-487a-890a-540eb936d885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c730f3-b89a-4b16-aa9f-89f3d388965b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b4a85-df11-4d19-a8f5-fc1b5b2e13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349cda1f-7f27-4688-a78d-aae1158714d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3bcb8e-0f63-4f55-9a29-29e575e2ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "16d987c9-de84-40e2-bdb0-0648855dfd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931e917c-ccf7-4928-b119-75d88d1c71dc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87bb518-f269-4ca4-9d89-64d9e8f91f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4709905-f78d-426b-b9bc-30d3fd280713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943f499e-0f42-48af-83fb-cac039d4277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad36c992-f85a-41a6-ae1f-c9ce1720e806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3bbb0c-0047-4d79-9eb2-a6e6f14b633b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5aec901-ebea-4d2a-b7c2-553080d4b338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086498e6-104c-4de9-8383-1b5ba9f59f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681a7678-3e35-4de1-8530-32a09e8f9b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "563e6941-eb01-4d35-9a1d-9338dd51522b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3edd98-a6f6-4766-abef-af5be9e730b6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26640eb-9810-47f1-b04a-927aadcb6caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fa7213-d384-4101-9ffb-c0b3f22beed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ab1b8b-5212-4830-a1dd-cc113e912b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48cc7398-68be-4db8-8e4e-1310733c2632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e400ef9-41b7-40b3-81ec-99d41157edaf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a259e77-d738-403c-9233-ad4d258dd9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9815fd9d-f9a5-4233-99ef-78c2a5bc59d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59661914-7b3f-4005-881d-63abda61fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3d30a3-9ece-4ba7-afd4-714631c69469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0012d9-e6c8-46b6-8bd4-c978071a2787",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582e82cc-a676-49b4-85a4-456440147f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30f68ab4-8d34-4624-aaae-a74a0c2a9436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb89888-b004-4385-ab9c-afa56363e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c772a24-b738-494f-ac26-758a0c62d4a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8bbaca22-9080-46ac-9cf8-fb8fed9f5691",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "042d3f78-5c75-42f1-94bd-75901b3b1638",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b542723-0ec7-4c39-9c1e-5eeec861b3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95af688d-7099-48ff-9887-9731ee375dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b111eebf-6f2a-4a96-be2f-43ce1a7d9f62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f0a95c85-5041-4a9c-b05b-29eb030d0dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8175d52-0d00-4bb9-afad-266d5077a47e",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ce8eaa-1553-4bd0-a7e5-cf94e82c376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59e980c5-a4a4-4d73-8eb5-5985882acad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200a5a7f-1881-4bab-92c1-e2ae8f5aac26",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "c92d2f48-68b0-470b-9f37-bb89697ec19e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6208872d-a8b7-4e17-b947-779c87a0bb28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "238bb2a9-ca73-4348-9564-7a79729828e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "301d083f-4605-43f0-ae46-4e949768daee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fb57d6e-ef42-4f8a-9e5a-ffe9a6fe7acb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6a4dd646-420e-4f3e-b965-636425dfd72a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d34823c6-af33-43ae-9564-4f93784b3254"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "663ec7b7-4057-4709-931b-79d0ada3e825",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "378accad-c607-4758-bebd-321d6d2d326c"
                }
              }
            ]
          },
          {
            "id": "69ead58d-70bc-4e9a-868b-d1198317b267",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2c0b445-31cd-4082-9c6e-bc8277da57be",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6979bdd-31df-406c-bb74-095e499f780c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd0e4043-3c4d-4628-a182-00d8740fe58a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96dc560a-dd3f-4fef-883d-43046e401c38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "14eec885-287a-4bcc-8b05-ee317e11d920"
                    }
                  }
                ]
              },
              {
                "id": "5a2567cf-5aa6-4b14-a369-f01d33bdf442",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9bc1f98-3364-4f9c-9742-85c2356c61e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e85d134-e450-4d83-9b12-dc71c7d3c95a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3281802-1064-48e1-89f2-0297d93f6ef9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d04b65df-d4cf-404c-a849-50bb12d88dbc"
                    }
                  }
                ]
              },
              {
                "id": "bda4779f-d2c9-40c9-9e43-3c0dee4b0a53",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e57f6794-fe5e-484d-aea6-26aefb5f7456",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ea71672-ed3b-4392-b304-ce28253882f8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55cecf40-66a6-4721-b8fe-1839e3de5de3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1da3e193-e452-4f52-8401-43b4d8c5fd33"
                    }
                  }
                ]
              },
              {
                "id": "0f1d31b2-385d-4e13-b8f1-f9829d56d9c2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5730da2b-4570-498c-b3b9-b62ca79e2f18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03830ec5-8b91-4b11-b8ef-30ef42627b6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "275aa39b-efad-4ad3-818c-d0c8abdab311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a14470ba-46ae-4c93-8ce5-68631e6dffa1"
                    }
                  }
                ]
              },
              {
                "id": "1a8f6403-4cba-44a2-ac43-d129f36ac58a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b56ef8e-765a-4d8e-b0cd-d5878d50d573",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "601bae8a-fa90-4cbb-a225-a8b9caf0cce9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17f0ac72-3c15-4763-a53d-40f13c7305d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c27ef77-bf04-4273-8d1b-05a99e42e0b6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89aea02e-0928-471e-9a38-63643e5c7ed3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9febff8-4758-4787-a890-c15e4d746d61"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "944cbd70-de5c-438e-90a0-78c3b13618f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2449c74-5d30-435f-85bc-4ad49dcb3916"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fba6d5-6e28-4e1d-899d-a6a4cf6452f0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3701eb2e-4100-46b2-97f4-03a7b0967dc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bc12822-f86d-4557-9dee-35e73ee35fc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af6bea1b-b1d2-4151-acd2-249fc0f3d90c"
            }
          }
        ]
      },
      {
        "id": "deb1dbd7-ef13-49b6-8d30-049070cc5b85",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "849edfb0-89c9-41f9-a71b-2b9bb133aaae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c00407d7-69b4-4a24-89ad-c0d7715c9b1a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "588d00e9-967b-4f06-b351-b6b1248f9b3a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05977ae-a23f-4c9b-b8c6-8cac09e2f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa75cdae-a299-43cb-8b19-b6552b87790e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc00d06-248b-4a85-8737-bb17a67b398a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "959621ab-52d7-4a46-a269-f26095da86e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27dc8f7b-6ac9-4dea-a9eb-dea5a02252fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bffebce-fcae-45f5-bd54-72cde867b020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329ec09c-29c0-43fe-b105-eadacafa0ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d27058-b992-489e-a702-fa3134349302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "356cd442-a614-4563-9603-b341f24c030c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e9f2f7-0cbf-4245-af28-3cc90377c41f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee468498-cbe0-436a-ab95-718b1582ce5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e14d309-7134-4065-9158-661663b2c96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94320bd7-7850-4160-a356-4de50d1ffaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c181807-f98e-4fc1-86bf-05a69015f7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afa2661-b584-4a19-9c8d-cc8235410119",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccb687b-c99c-4949-813c-43bebb62b0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d62ad3f-51d8-4e44-ae5e-aa32267be2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edf2fbc-2ad8-4747-8e99-3dfd741e062b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e765ced-1f4d-4b06-b4b2-ba4f569ce3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2943162-0c4e-4a66-89f9-417969c83995",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01cae33d-4798-43d5-bf43-0d601c8df149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a49b0fe-88b3-43b4-9cd9-ec586e284289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e56a45-b9cb-4dfd-bd4f-2f0d21165586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea78ad77-4074-4efe-a9ea-59a12ce2cd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dedb2a7-33cd-4fa0-a65b-9fe6bcd6e8b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26380ea4-57a4-4e29-a643-af32a86343f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b83492-8651-46d8-8ad6-444bccc23781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5494b36-9134-47a7-aedf-78a318fb2614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c336615-c93d-4f1f-a456-df9db52977d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d2b7dd-d5ad-45e9-8123-c676845f0b65",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f84f2c8-43c5-46c8-a5b7-03ba051f5374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577813ef-90c9-4bd4-944e-252a36854b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e314437b-68d6-43f2-87ee-3e3ee52c65fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4705407e-d6a8-44cf-81fd-2e7cb938c531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c228d8-b4ba-4381-93b8-c0ccd8ef0691",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ea8a14-4b01-449d-8f54-21fd1dcb0907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed65580-5866-4a02-b9cd-19f91186fc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0f221b-465b-435b-ae73-eec14ea45d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66e5c5a2-d141-4386-9fc6-da744a5a7556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a6e553-aded-4d71-9146-1f3d32b307ab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fe7b78-33ae-4a94-ab59-d8c4f0bbda07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d74a19-37a2-4d61-8e4f-989691628694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ee8e32-32e0-4c44-991d-299bfc00a133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6361243c-c9fe-43c2-86f8-74ebd0bc6ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72357ef2-7f4c-4e6a-9387-95340c5a06a8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1ff9f9-6193-4222-8e0a-420b015b95fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b71aa8a-d04c-4e7d-b3ba-a525f009e485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6507f68a-8dae-433b-8846-429080f6fcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4007b6-3b14-48cf-b0d0-b7e87d301e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba87db2-138c-4b2f-a79c-7b7844f802e8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6785592d-c10e-4ffc-8a8b-9ff727521860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757f88a9-fbd5-48a0-9693-a2245cbcd434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272af8b9-2fb9-4775-96fa-e340474217ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb61dfe-9a85-47c9-a2d5-5f29bb86d3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ed6888-6e88-43f6-af57-accfbd8068a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c72654-c15f-4f1b-8671-d7edd5cff049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e27251-8075-446b-a3dc-58d6b2776ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39692dc-100b-4864-9fe3-5d1e4d16bf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb2675a-5753-415f-8b4a-10f46a487ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd116e2-3121-4c8b-81dc-b27d87864f35",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f18e61-b4e5-4ed1-9896-cfdf80079a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174a62ec-a4a7-4e5e-b91a-d15e95514a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a070775e-d04a-40e4-901b-c111ced4077b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "474197b7-5d8d-4482-99af-4598deade48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa46898-f80c-4e10-9ad2-4351426e0a66",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508962f6-a202-49ef-9d20-09ab3d57d06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c94c13-b529-4c22-bbaf-e5331f63afe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7667fcc6-b44a-4625-89e6-69ddb19c486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0e5274-b50a-4f86-86a0-3451ddd9b250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fc4495-ae99-4ca4-8094-e09dcbdfc016",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86b6727-075a-4f8e-bae2-611a7d6b08de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3421170-6a95-4039-aa34-c10236a57fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b7c07d-929b-4260-872d-c803e7b56088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2352a3d-41eb-4e96-9ace-5f7b418b5a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef3d068-be7a-4d23-82d1-214a8649e5af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f473d72a-ba9a-4f67-81ae-35e1c40508a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b338c0-fdf1-4e6a-9706-62297f1b37cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006b89e1-8899-4913-a956-5c49c224f214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3329e7e-7efc-47f6-be5a-bf3ee0396bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99d3ed4-ebdf-43cc-ae5f-bfa992f2710c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f1c943-becc-4b5e-8428-b60493a1ccde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba0a778-4585-4417-b702-4d85f26ce70f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca619162-150f-4a67-b8f7-8348fddedb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dffc9d8-9131-4185-a1ee-298272eb0904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e4c647-79ad-4023-9bf1-1c23c1cad9e4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "211e3c0d-7183-4ad4-a9fa-9c74f5f9fa51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b8c38e1-636f-4dbd-9e64-c847d830383c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4dcd61-4615-48ca-97fc-a487663e8084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16425b04-0268-45bc-826f-e3b39825c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03380d6c-69d6-4d04-8be8-e7105bebdc4f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d16b8b-94da-4241-a968-027664ec91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149a7c19-7e6d-493e-83e7-aa59e1be9198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aa36e6-183a-4f64-a493-dc6458e1b20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23829ee6-c957-4082-84f1-a945a0efafd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65ed0c0-ae26-4d21-bde7-18eba64f0d90",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f51a36e-4e1b-4c04-a3d3-2a397d69fde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0009524-8c61-4b2a-ac84-590b6b4255c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f5ded6-6867-43db-acee-c169826b5f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9318d0aa-6f7b-479f-a001-4f8698617851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d966f3a-0fd0-4249-921a-a5b8590a3691",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf7bf3b-b1e4-4a39-8bb1-ce04184d885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e631c0d-f4c6-429a-ac87-220eb406fee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bf1975-9330-4d2f-adce-1fc971f8b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63231dd9-8cfa-42f0-8ef3-5619b80a591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b39c2d-2bb5-4c62-86ef-c2e542cc4aef",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b59bb0-a9d0-4d4a-9aa7-14a9d331aee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cc39b9-8f4c-471a-b4f1-129c9a5efc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e843d-ae46-4773-8c0c-975cca65721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84fbd949-c1f6-450b-aa09-684c9a104a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a661aa4f-d6a3-48a1-be57-04edec0afdd2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34176874-c615-4dd1-9348-495c8c8fbcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c0ae92-a11f-42bc-a196-eb3c5e3076fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d684dc-85c8-49bf-978f-c2f588e445c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8e954d-9fd0-4f33-940f-1dca10a264d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dd3839-35fb-4128-b469-a268048c54ee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa4db1-0877-4232-a07b-2f51f7456203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbcdbc3-d40a-4f64-b6e6-8f55bf41a077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c31c77f-bcc0-4b19-83b0-73b25c9c9c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74be8a27-2f08-4278-acc5-9931edc0c42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dc53a0-627a-4f64-bb96-8a2364cdf74a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9377e6f2-9353-41d6-9fcb-2a625b682c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863efeb7-bc07-4080-a6dc-4911d10ff5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373d1c7e-8a32-4f40-9426-58c02823894c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "532e8ff9-5bb3-42c8-8f17-8fcc670f2584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab82b48-7dfb-427b-bb73-bced7cedb1a5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08298426-e29f-401f-b4f9-e5dfbbc8a16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0368c5de-7da0-42df-822c-a307e9d2f91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ce815d-8203-4795-a2a1-b250ff1c0892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96383181-dc2c-42fa-917f-77f1ca2a3442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1172c4-706f-47c3-8e8b-726beea2848f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877a91b0-b7b3-424d-a076-8121a1a9c19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bd92bb-f22a-4121-b96d-d810c0291f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8263f367-f1ba-467c-9fb2-1e6c55417a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6608c2-401c-4fc0-83bc-899af1abef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cf1c5d-5f56-49a4-87ef-7776b1baccb0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664f1ae1-bc3c-4687-ae2c-843a7f04cad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc6b69a-f106-432b-b36f-241c8d8c8b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d6871-3a70-47c3-a7f0-8987650d900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "991149ad-a987-4311-a03a-09fb0be92800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432028a8-ea08-4c23-a636-27e4bb205767",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4752fbad-a726-4c2f-acdb-45ee4ffd467d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75722944-f594-435c-93fa-fdd126b64ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef46a14-06f8-4383-a8de-3f5bdb2f7e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2413455e-c559-4bf5-bf08-0de0ddbfdc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1211fe3-e076-41e1-8ea4-cd79655a6772",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651ed866-d101-4033-ac8a-f9d964c8a787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013c236d-cf37-4e08-a6b6-3d1c4c8535d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a18d1b0-a7e0-49ac-9134-552b8a8dea45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e669bde5-b092-4d1d-aac9-c08279846a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4efc33-418a-4694-bf2c-cb21ab4a9425",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bae234-09df-4aaf-a21a-4dac5caef23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7a91ad-02f4-416a-ac99-715b2610fadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02f2c3e-b92a-4398-acd2-b0af3b6b2f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0aedafa-0c5d-4fb8-9639-369bde66ba85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135c98e9-a8ab-4f78-8888-625c586e7d1b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42ed1d8-e27e-4aae-ab01-787cbb750782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc949d4e-8875-4815-b910-02d3242a06ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62e1848-d3cd-443a-a05c-ee375fcb6dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10181bc-da2e-42b8-a0d5-9e15d45f5810"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1ce35900-6021-46a6-ae7c-3e0d5e37e4b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc27d0f7-31aa-4b9f-9a21-97aea644240f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fca515c-7af0-4a26-860b-90dfaf5b324e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850abff1-edd8-4408-a4d7-ccc1dcdedf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bf547e-61e0-426b-8279-201b6f18bf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d45b759e-2b97-48c4-8191-024189bd28a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af818f99-7e12-4e57-aa0d-8cc2744ecce8",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ab0514-315e-45ec-b720-80570109d593",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "59cb95b6-d5fc-48d0-9bdb-404c33307fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717417dc-1df4-4beb-890a-9b007d59b1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eddf90f-339b-42e6-ab72-2fe9d915cb00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a4135ed-f35a-4e2c-b792-bcb100a5d900",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c4ae56f-2412-4987-b5eb-8157b8f84d9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00008bbb-f6d8-4657-9394-d304aa5bf108",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfe847eb-9785-4bfd-9979-c2f7c4f18c0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b4429d6-0c15-4b40-8153-f889d85ea497",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27378680-417d-4dc9-bb0d-d21ccc84d987"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4782775-dbe1-451e-a672-da80e7072411",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6aa83bb-b24c-4d00-8012-ce35f1f42cb0"
            }
          }
        ]
      },
      {
        "id": "b892b445-6125-4e25-898e-5c2d9b3e3d4d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9a24fbc9-130b-492d-a463-27d11628dfa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f4ecee8b-7c8b-42be-baed-a51f72b8d824",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ae24b8b6-98cf-486c-a424-dd794a1cf1b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d362b290-935b-4838-bd80-31224f1e78fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e571af-e69e-4318-88bd-28f433136be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e097f7db-d641-4141-af9b-a0f6ca6f78e1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "068bb3a2-08b6-4a9c-9a58-0f33a64aa1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7712ce-4744-4884-927a-7aacb2984ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e6855d-ac52-4fbe-a3e9-447e35eaf552",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c962f-2a0d-49a2-89dc-88a12a6436b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62d1212-5b6a-4d16-9709-60d35b16ef26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b9c5db-c846-4a06-9181-2d62b466232c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3575f52a-1bd0-4ab1-9c07-5f33a1a0eae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385cf18b-6112-4c09-88a3-ec0d66bab7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d56854-45e6-4a34-91e3-090c62173c19",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a77c2d8-6d0a-40f5-9f6d-e1ef1a653429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d821c2-0232-4586-bc66-ef98d84993b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbd591c-7201-4d46-ae3d-1f1c5ea7c028",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6595cb5d-16aa-4270-adcd-1a400579e672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb88ae82-0ba6-45af-9b0f-03e36564537e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14815d99-0baa-4d38-874b-56a2d8247e70",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32891af-487c-4b35-8888-77094f14bab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc30376-f6fe-418c-93e9-ac04c6ceb5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b8ef3d-3d72-4430-9998-024bf965234c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fe38585-22b4-469c-8d56-4b99a4d52d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d79ba96-27e2-4d0e-8ffd-43224ed8ad68",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d7eed5-2d98-4552-857f-1feffe413692",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "914e6fef-9ba3-4b03-ac9e-8f30406d4356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b811d8-a263-4e60-b44d-c3f590b0bfb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2953f9-6b33-49a3-b72e-724023f79de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82617b3-4c0c-4d0b-90a5-338ad660b3bd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf66d11-0999-43f0-809e-033bbc2189f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7062fe3-22c4-464b-9779-16b799f3eb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd5444b-edfb-4e9b-b99c-6297cde2e10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5cabcf2-f78c-4830-a2e8-33818826dd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ecd0b4-3522-4209-8f81-8b6c8229b3e2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a2c4d6-906a-43f6-bba0-1de04072dfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d8cb95-bb6f-4228-8141-c73339819352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6fe2ee9-2427-4864-ab7f-1d650f20700b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bdc081-f331-4904-911d-6b669c1da80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2de70b-bdd4-4914-aec6-d94626236961",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45c68e7-4fe0-4262-a48f-6780102a9cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08b293e-3bf1-4508-b632-064c9ab67537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d57bcc-9a27-4bea-a475-bfa403615463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d687a1-4a68-41e3-b5f9-38d439fd0bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10647caa-8ecc-4f2b-914c-677139299d9d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d63c69-b715-48bd-a5e3-96dbe4f8fe86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "020ee850-faa1-451d-a6ce-116740701f0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb0443d-f4eb-41e5-a504-2037c457c183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f48dae-183b-4462-ae75-05e36f8a77be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7c595-1602-49d9-8683-58be054775c8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc86ca7-d132-4255-bee5-b99947d0ecdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14770562-f460-4ea9-8c2c-dc6276ecec63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49edf05b-a7fe-428f-bf9f-7041e2f2badd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91654e9f-df99-4638-b859-2a081fe59f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d7531f-5f08-4d31-853e-167235a00c65",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860a8b6d-351b-4bb6-9ef2-a0f60ce2282a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d38f2e8-1ca0-414f-8740-cad41e25dd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e256093-3e96-42d3-903c-cd6db5985c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085484b9-7de3-4517-913a-e37f50c7361d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dd393e-6f43-4c3b-842e-ad63a66b983d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79af64f5-d052-4f5a-bce6-9dae5d9ca009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c37f4662-89e0-4229-90d4-b9c074c61cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a76ecfd-c9d3-4140-ab88-8781ac7b2fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028e8fa8-a97f-4c43-b526-c3bc14ecf79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cded93-7597-4787-be75-ea261706f3c3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dda780-3038-4c56-acbc-d933ddb71e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8978a46d-98d6-48fd-8140-bfc2f1c75805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df21241-98ed-44c6-8b73-0db01a2303f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f3f120-0550-4284-b194-ab5fa1d0649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2255d1d4-1063-442a-8d17-db9a1b38622b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ad0d11-313d-4a61-a559-dec1a3745cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7428a5c7-36ab-40c3-a70e-ffb1cdcb2978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f8fb0e-77e1-4d3a-846d-164ba4aeadd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5453898-8ffc-489e-9b11-275ca61e45eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4ebbbf-0ef6-43f3-9f4f-e89ea3484f68",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c4e4b2-b651-468d-9491-13aa67535412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b482879-80a7-4e12-909d-5581adbf1572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5eea4c-3efc-400e-b61c-6c842e442547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2127be-95b9-4ee5-8f7b-4c9ea7487769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc336dc-aa78-4667-b895-f14d8ff77df5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0545e016-a1b8-4f6f-a210-6290e7dbe68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caecfc91-6c39-4e9f-a7c9-eeb89c3c236a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7265113-9d25-4219-a792-08d0a4222dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c088227-3131-41ad-b224-e5214efd20bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963e8bcc-9744-4d5f-8db9-26790cf317ea",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085e75a5-7d02-4287-bbc1-109499b17529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b05b96c1-d7c0-43f4-86d8-585254ddee06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01890063-8579-4556-9a30-57c5c21db6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4920cda-f67a-45b9-bc43-996c06144104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba63f70-4876-486d-a0a1-67d52fd3c9b1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee08b5e0-7807-424a-b784-18d9e076c1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0e7b91c-fc03-4d8c-ab68-52c598db012e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e79c1b-1d2c-40f4-b257-37c04ab4e189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33673cc4-cefd-4add-866a-b01fd9e2c778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cee8e8-9346-446c-adcb-d0fc4c181473",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e44d38-673a-40ba-937f-0e906eec68ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50d9ddc-8600-4fb6-9481-b3af61cb5e68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c9239d-112d-41cf-9f24-f142b1fccd2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2633753e-3568-49a2-a5d8-446ce2962862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d4fe1d-01e3-42fb-bd6f-43963cea3912",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a570137e-c2d3-480a-a28d-4a8ebd5413c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdcd38a-2dfe-4538-b414-bca8c823bf3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb80300-fd82-41aa-be47-4a59375700ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e7e7ee-875f-49b5-9a5d-7347cdac7b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8f98ce-8bba-433d-bf06-384217f03d8f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6888889-973e-4144-a288-89b41de3718f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7eac2b-4dd0-4444-8fd2-325547424227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f143b02-40d8-4115-bba0-549dabdbf72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eea599e-7366-4f65-869f-a01bf92945a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f18abe-b2af-4294-a721-0afab145730d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91cfd76-7b25-493a-ac57-d2f345c26148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb62ea1-bd18-4f19-907f-15a23ab9b374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771521f9-6141-4f71-8030-a9195cdd6474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d177818-5af6-4690-8805-006b8b9f92a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeae5c5e-8a2b-4a0a-8004-dd1710f50847",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffec0f95-4904-4dc8-b6cf-6c5b9221bd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3541c725-b839-4787-9f86-363ea68e5065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a09781-9614-42bc-87af-bf0aa1e473f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d0fd6e-c8a0-45d9-a950-4e751f852bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92db41b-3650-4c33-8ce4-436c272ec46d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7f3221-84c4-4f44-a3ad-18e9aa2263ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d62f97d3-ba40-46a2-aade-5ba8be4aba06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c272a202-740d-4078-afdb-f0f559c40daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab39ad3a-5ced-4d26-aa10-43c22bb7e404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbad454-1cda-4e5d-8e48-8db6eb83f74b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc22126-1662-4691-a1d0-0d590a696fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91f7c21-2db0-4744-a99b-ea8cf56aad92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d950493-552f-482d-baa8-32e1bad64b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41de8ee6-bfce-4d34-8359-3681b2331adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2c73ac-f6e7-422f-a1a1-869612256898",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571e37be-053a-4df8-aa2f-7f128063cb60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08120d92-a494-4f09-a7f8-4b79b48f1718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c88ab7-2bc7-4173-b31f-8cd53e4186bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812d678b-2a4c-4eb1-80a6-a1c9d1dc1c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94561bee-913b-43f7-a65c-2c0439882c5c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6bb8a43-b7b8-4fc3-923e-9b23955aae7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82c3855-1a01-4641-b161-1444d064aef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14241963-497a-4ddf-9957-465b53545ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c450bd-9b41-4772-98ff-f0825b6620fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12410648-efbb-4f4b-b4cd-3b1eb6df9393",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6796fe57-3a6d-49d7-8290-6e746d1bf799",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebf117b-9e4b-412c-a675-adfcefca8c13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a640547e-d1bf-42bd-978e-6acaccb49421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f58f81-e64d-4dbf-9b3a-30f0735ea407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2174afc2-2470-4354-baa3-310930f4d613",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78bb53e6-7a6c-46a6-9502-1e57ada9550c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e664d328-8709-4668-a9dc-ca0b7259f966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3795ba9c-df5e-4803-b9d7-a71e13a26a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0346a396-ad31-4d0a-bbb2-d93becf1b409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660d983f-1459-460c-aa7a-4e5512aec5f4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2bee78-1757-423f-8386-6f7f169b1e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0475c02-b180-4e1c-9803-edd2a66bba76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b077d2-2c51-4122-9d84-2373d7bfb10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c8e01e-b16d-49fb-936b-cd232c7b735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5914c3ac-b3ee-474b-b6a3-601437d3bb8c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6db690-9b6e-4667-931c-648330f278ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beea8c31-4c97-4eca-a888-96a048641ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eaea753-2d19-4fb7-8602-a293dbec7c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ef412d1-672e-4eca-b785-50931fb3558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107f9d25-d5b8-4622-9d7c-8c411a1897d3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56465b24-78fa-4168-a720-2ad915eb1060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b51988-3479-49a2-8427-f5ad78889d27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f7c4f2-859d-4f33-bddc-392ea70ccf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b57437-ee87-452c-ae77-97a4aa018ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0aec492-6b00-4108-a502-649a80c48b84",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4465d6cb-f222-4a9d-9d76-be881b4c1c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d3ecc77-e8b5-4d57-9066-753f733ce8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5403a559-5238-4f33-ad84-c7429dc9fdb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9094d4e9-4663-4ad0-abb7-168bfb7c82f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b4e71e-9694-4107-94ee-8264521aea50",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f950da-c169-44ca-b26f-bc0fb1e418f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7647f2-fb96-4aee-a286-22b10a7b37c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01253cc-e194-4f0a-86dd-5ffd1ea2fa86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec9094d-9f2b-43ab-8444-9cb2e22ceb74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3142069a-407e-4c19-8616-a49946a0e33d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fb53d3-1d4b-4fef-b373-c2109d36f858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e9ccd8-ecdb-42a7-b039-e66b407cf730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df413b-0009-4815-beab-1b6683380872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c0249c-4b43-4a8a-9c18-666b0806a719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd2edef-8897-4baa-9971-fb622de9e43f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef26783-bc6f-46b2-9241-d77eefe4c9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895c2424-6045-4e8c-b0da-0b42713a9dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccd2126-4fe1-4aef-83c3-c97276902201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa619b5c-c612-4171-9cee-2e2f7a2dd4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c7929f-e990-4f50-9ab1-080872511a66",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57f9d75-208e-4aff-9525-6950c3d815e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20af071-3359-4b7d-bbb6-2b1734b8b7bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff2a4a3-9038-4969-ad3f-c7107a7063ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7147074c-c912-4d45-a584-008116708c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20df7944-35aa-4062-8608-c6fcff5bdf98",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cfcd8c-ebc0-4161-a773-c8db7e2f98d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e99959b-78e7-4883-84ee-f5496b1c9cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f680eb60-05e4-4efe-9d37-3b3ba1b1e731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db21d147-50dc-49ae-8017-d23e03a5ae48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d440a95f-27fa-4f8c-aa1f-a35f1f512966",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eebce83-74be-4b7c-b3b0-0719f4c708b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b6f24b-7d61-47de-ac8c-9373605f4235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feefde77-133a-433d-be22-2ea1111ab3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077cf09b-8e66-45b6-b413-5d8ad1d5005e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d45719-514f-42f1-a009-7136834b77b7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a827d3f7-e7dc-4548-8caf-8bb810d299fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92080d4e-fa93-491d-b276-37cec2b4dee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc92e190-fff4-476a-9364-9f23714c7c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4194a5b5-2d55-4c53-8c75-56099783b5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034456ef-7167-4c24-b7a6-0589827caa0d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044f332c-c259-44f5-a391-7c2766b508d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17d047d2-adb3-4fb4-ace8-3cbfa458761b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70989c0e-8393-4391-95b5-08cbaf3570f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6830f0e6-2256-464f-b541-ae1105de115f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4ee7b7-a984-4470-a01b-e27f1ee14c72",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9008a0-dd95-4822-baab-1b41aff34844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60310e8b-7c97-45af-9f61-3827efd26f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e22a84-5500-43ff-8d82-a1ece4bd6ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76e5c8c-f021-4385-9e6e-e4eb54e4a23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d13be-3015-467c-b127-19fbb87fc119",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfee248-3dec-4596-825e-3ff236f827af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb585a58-3e3b-4b05-84a8-d2acb04c2a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ca4a7b-d85b-4a98-92d0-b7babedc8f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d4d862-6824-4786-bb3b-c426da200dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01db804c-5c4d-4577-92f7-393ad0ab130c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486b426a-db8b-4848-a7a0-c354b5b1fb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a8d4561-e8e6-48be-8d3f-781b7d9d3af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceff28e-000b-415d-9978-3ac7887e91af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5836fb64-1510-4c4b-9684-ab48e013bed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e2f600-8318-41a5-a4a4-02bd4fd98ef1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3af97e-3254-41da-9dc4-82a18171ddf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5c483f-8126-47e4-bcea-007229997149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cfbd10-d3a4-4d5a-826f-c321ddd2d277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60223e0d-9cdc-42da-b9a9-9b4b501c4bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0e1786-9d07-462a-b9fe-83eaab88c276",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05eeae3-25be-475c-92ed-5e3e2b11e26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd86594-7053-4fa1-8240-5f701ef59935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27778882-1f16-4c8c-b563-a19efc6b5a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5589de-eb3e-4e49-967c-af58c177a0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df3804d-cbee-4767-8f3c-78ddbb892f8d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a84ae52-2d61-4941-abb1-6879af384130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca3dc42-60c1-4417-bf0d-c20aaff948fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca4ab5c-9041-4003-9270-a25439f3bf70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92348d33-3e14-4b8e-a056-3bf59ce5960c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e60703-5c5c-41e2-99e8-18f9e7d0b150",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb790131-00aa-4853-a4c0-96479fa4282f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f944978f-9a62-4e33-8db9-8eac539b4f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbda5869-fa66-4282-a4ad-837dc54e77c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422f1273-4af7-415c-a624-bcee56e6cea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd21a9e8-d77f-4430-9073-f6791fcecf23",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a04725-4790-425e-8f9e-e213d50dbfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af759c6d-4ef0-4b19-ba68-14daa2d0a100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9bcdbd-f05e-48cc-a443-dae4cd4dc4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91264456-7766-44c8-974c-a5133bf3df71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d374741e-53ac-420c-9979-ad13d193e140",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def2f842-df2c-40fd-a8ab-8a9042482ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cd7ebdd-3cb3-457e-9623-90fb89508c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e526bd0-6ed0-4661-b6ed-462fffcf946c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1535ceb9-10b7-48cc-8350-ed13578b9442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65944a58-39e9-4b2c-b710-99b84eec8d29",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9221b0e0-b9fc-4938-b450-e0ab3d4008c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9363fbbf-c17c-4916-a819-9dfb0d42debd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd2534d-ab16-4f79-ae11-6508b90c2fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c9a52a-845c-43b8-9d5e-0249f1616d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55badc0-4491-4275-a981-7a3aa5a25afc",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b508a23b-9b8d-4945-a9f5-ba41c20262d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1914a80a-97fb-40a1-9dc5-e7554b2106f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1098f1f5-8380-422a-8799-0b72bc8f2652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c185e77-1775-447a-af30-5f41417b88e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e666bfb2-af79-452f-958f-38daf1dd4db4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65961e4-3072-47a1-8f12-e07e7eb56298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14b86b5-c1ff-4885-9309-2fac75b67b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a703b66-12a6-49e3-9fea-091e7d2ede0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d0ad54-89da-47fd-9df5-70b9bf6c9e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659e0b9a-15d2-437b-a484-322739b86e7e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50edbb9-abf5-4a9a-9c78-8b57bd88c50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2117b273-11c4-4a57-b375-55bd457f9663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e3b6f4-5713-4003-9488-6b8d829c868a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8b77c8-183d-40f9-a796-bd501c85747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6199bff-0e54-4405-b10a-8ee1d4d99f71",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90a0e4-2c8e-484e-863d-29e5f6c7463a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f7b534-76f0-4328-bd8d-a8c4c643f5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e204a7-664c-4cb4-9c7f-dc3c370d0f77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0be309f-aa61-4855-b3c8-1772a58b81a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdd17d2-0939-42f2-beaa-b399503ec372",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a28a8d-ac6e-4026-8f32-61ab890f4683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c45df14-d688-426b-82bc-125d37c2db51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6679fab4-90a3-4b48-94cc-e86809e79528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639aab2a-cb8f-4c73-a317-a7431853be17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0895e3-2ed8-4484-91d6-38dbdcd2ec86",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb69cd9-9a58-4fe2-be45-e3c500ba2ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3488b728-667b-475c-a7d9-afb7bbc38838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e7fe59-3e17-41ec-9f35-98397adc512b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3548416f-5dc4-4225-be13-7ea1eb5e173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597e81fa-5b30-4d96-9fd8-27264ce1a8ba",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b1c57f-bf8b-4b5e-8ed6-25a8a7a0d64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b17398d-6c77-49bd-b785-de13c8fd131b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11edafbb-fc95-4254-b075-0e6c633d7270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d141d8e2-df53-4b40-8f2f-89fcecff76f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85aeff1-0a64-4938-9806-82e79337bdcc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025a2af2-190b-4cee-b7d5-3b99b89213e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671b9835-6ecf-434d-8c3e-9f641a631936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02e03e9-9d72-4e91-be22-743cbb619336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bede47-fd2c-4e77-a770-0175dfd8af4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c930a987-aec0-4b0a-a734-fbcd6dadbec3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb530da-8d5d-4c0c-abc3-a9dfd32e95ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3db143-ebea-4fd4-9c5f-019f9ec8897f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c0d87a-6ab9-4c91-87e6-2f4e1956ba33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2124cf5-b03b-4952-abe7-ad066571767c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db8dac2-be99-46a7-9d80-f5ad06d34795",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c5e80a-fcc7-47e3-bce4-90332431bb4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c952cde3-7e72-4dd3-8209-edc2bbf88996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9842b375-5e82-4044-b187-3a1338fc374e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f725d8-3802-4aa2-900d-29d07dd42642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad23794a-10ce-4e4d-8f4b-63345a8fc4a0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a80daa-0d89-43d7-8f1b-1bc1eb535347",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a27e491-2962-43b1-bd39-9bc788b5796d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ff5acb-2a71-426d-9c43-2291b20a5551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82147b67-af7d-42dc-85dd-bb62c1c6c063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266d91e2-d19e-48c9-b70f-99ba19fd392e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff468a1-0f86-414d-8e5a-20e7ba22da2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a07a9a-6c25-419c-9ecd-ac636e1e2382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6796f1-412f-427d-b616-f8565fba9cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7ac122-7edf-4c06-9c86-d071a2d9f374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c3cf3d-74c5-448f-ab53-55efa2d3c613",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dafbee2-1cd2-43fa-b2bc-65068ca2798e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf80141-07f4-4604-89c0-3b2f14e3d5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3d524e-b7fe-4132-9620-6f1601f8f72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fea2cbb-21d6-4e8b-a38d-d5b298d9141a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4667ea-0b1d-4df0-b4ca-fd3a960ce094",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68e562f-5ae0-439a-b262-e15e40c22ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "508feea9-9a08-4b36-9d08-b5b2ccb6e7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278a4aef-0a8a-4346-b964-221daa3c482f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de13aa9c-05c6-4e71-b2fb-0df51ef31eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206ff1ff-92bb-4fa9-add2-465189c98d6a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84aedb8c-6361-4138-ae89-1051d1242624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "755bc0ee-20b9-4635-aabd-90415d2d4b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee78f35-7819-494a-8ab2-891400426b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b313851a-260d-4d84-861c-c09a021b7442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c566f1-1b9e-4e35-b7d0-2a10c57c5f76",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539b7930-fc99-4dcb-822f-296dcac33a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9f533e-fa07-446b-9d70-6915852a943e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954b1cf1-ae1c-40db-a425-104b47db92df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825c7d83-b9b8-47c8-989f-05772b929143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7833c4c3-aad1-460e-ad2a-dfa0320f21c6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224d5f9c-507a-4a2b-a1ea-2cc620ce1a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63dcf456-2fe5-49df-b2de-22ba2bc16411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349f73db-d246-4965-b19c-2757619f19f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63610ac0-754c-4132-bf90-fdd2f82fc0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2401ea-e709-4f7c-97d8-817e2e95bed1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff7db5-a336-49d8-86c1-71e0f180c736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382292f3-385e-48d4-83e2-cb79441db55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26441fda-fdca-4904-ae0e-7437a6122cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85681749-57f6-41d9-af0d-3d984a901040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5a3179-c35d-4fa0-b8b9-de6c86d97b60",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8bbcb6-7d7e-4381-9f7d-a943d2ae27c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "471947bc-5de5-4b0e-9b27-83fa53909078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15df021d-8e8d-403d-b40e-067beb82eb0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69b26b6-d532-4e7e-9a38-e44f6b95ca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebba454e-b733-45a2-ad0e-444f39e31161",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94623a4d-61aa-4c5d-9a0e-c497628dc938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e165248-012c-4a55-8f0e-0032579b4de9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efc765e-baa9-4712-8c6c-d238b3d54da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b901fab-3e37-4533-a469-3656fffa372b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf200d1-db8c-4ede-a09e-abc6d796875b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe0b52c-4efa-4674-9f7f-c12c2e3f6186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280eee58-1f69-4baf-ba6a-78db0788d5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0183398d-f527-477f-b493-8932402bfa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d70381b-15b2-4ce0-9bf6-9b699fe1b8f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd29c056-d10b-4099-87f2-aa70ad029830",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14be4da9-f84d-46ac-9f32-a776a356aaae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d1fcb4-ecac-44cd-8e00-f52268cc3313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea048520-79b2-4b54-93a5-9037d31bdfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040cdd30-6882-4c22-8a42-5bcc049d37a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fe1a18-9e21-4cc6-96cd-377869606f21",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2135c1b-48b6-45ae-9dab-863a256a0fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e330b870-4121-451a-9f8d-47283b207c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b051926-6a69-4934-9984-95e8194403ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6099fdb4-03b4-477a-a432-3d4fe020d24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1cc039-da18-4390-aee3-cdb9e988e362",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d5608f-79d2-45ed-b25f-53508dc85aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7262410c-9262-44da-a136-1f78025606af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccb5a04-319a-4da3-8647-8fdd877ca18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86459740-a789-4a39-b120-a84b3f87d659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cae40a8-2910-45b9-b7d0-3fc007c7f5f0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8522ef64-8697-4078-b031-3a97adb78f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604e0e7c-6bf8-4eea-8d38-bdaf262fb5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af681cc-f6bf-411d-a95c-072db1a6051d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0591af18-c243-4f94-9da1-962d89ff29f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f7d35a-6666-4c22-934b-07497d49c2df",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9090a5d0-2447-4436-b7b0-8b3763725c6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bd1784-a486-4b12-bcc5-0dac9251227d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7492a8cc-246b-4db3-b6e1-d2d1088e8f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a2bf92-05b1-427f-810b-3b50c162da22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fa8143-c923-4fbf-8ff1-70f7f9277fbb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b3289b-9409-4c2e-b6b8-a41e6d0f1454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "688049c3-a11f-4a0c-9355-8232757a1df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302f21ec-46c0-48a2-8a7f-a5706cd6391b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2faa849c-c276-4c37-81c1-7ab1457fe8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014ef632-f127-4fa1-aadf-3c1c99e2ef3e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc746209-d43e-4c1b-8187-a94b0f6b6693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1bdb95-c994-4709-bc24-2d7ce8f246b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8081c18e-19fd-4aea-8d41-c4dc5daee28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84f55e2-12af-42c9-bca4-98e48d3c7191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608ba9b6-1bc6-49c4-9284-cbff4705dc9e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0e1fb2-a2f9-457d-bf02-c402c56fe078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a474d23-5f79-47bc-b4d6-82cc43c74f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03309d4e-c8a6-41b7-931c-eb8901548cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb826aa-0832-4c87-ae3f-fec7ac21026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8783baa5-d41d-4129-88ef-5e20eb094bca",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a0a082-6dc2-4d6b-891a-dccb5854ae1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432e9622-a838-4c2a-9ad8-e34f4c41f6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d52415d-753f-4471-98e4-98bbde75c02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac18550-57b7-4c37-88a7-0686d6bfbdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41abef55-0e0b-46c6-a0e2-d75488dbcbb7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "893df704-c8d6-4c2d-8c40-76764074d27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53f07e3a-1619-4b22-a3e8-28487b2c9c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b14489-5334-47d5-8cb1-bc9a853afbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b747737-0534-4645-8586-64db7b3f3e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71faaa2-0a85-4ce5-a806-b67923894d80",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afcbef5-ef7a-44e3-b637-ccad20161ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfa74adf-ef24-4d00-a1a6-a10a2179a91b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7199958-c9d0-4774-aba8-701607af05c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e06001e-9850-4f7a-b1c0-3a70940b8286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2d1d46-e7f2-4196-875a-c2b0ec043b81",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065cad33-266f-4b2f-9e7a-8f04b8ad8009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30854ea9-fe78-4acb-be59-0d75c30fb8fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860e5661-1251-4cc9-a5c3-805e907487a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f9e080-4bba-4971-8d01-6646589bd140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8070975-0831-40c4-a469-2f846b3d79cf",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f22316-af00-46db-b833-9413154f51a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e1cbf5-96ce-453e-ae8e-f41cb9488387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b77451f0-1c91-4733-8dc2-79dc0fb17b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8abfad1-167f-4918-a5f8-6653485c007f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3682e175-0ee7-496f-b012-b2355390a9d0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9139617-6e87-4ec9-925d-6eb4b201aa31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15b5deec-3306-4609-877e-b3a8cdccbff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb155436-0e90-4db6-ac0c-bb624c041923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d88edcd2-e867-49a9-8be2-79d2fb013d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8ba558-a852-4dfa-b3e9-542b3c1b42d7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c63b97-c865-4e05-a673-f185a35f18c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787a8711-dab9-476b-9fe6-201d2ef1f12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff1bc6f-19ac-40f6-959f-a38d7f1de99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ddac32-aa8c-4fc7-9247-82e3087b631c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d849eb-47f7-4a5b-9547-98b2d6da06e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a52557-838d-48a9-8b54-8e18df9ce00a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ccaaf21-ded2-44bd-a4cf-acde29eea813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d3a467-c3f6-4d38-867c-354b6921fbd0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2682a1b9-bb7f-4f16-b71e-a1bdddade57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d54012-bef0-49a3-b0a2-073e10d23cd2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de51d945-7180-479f-9d66-512c3d195d0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7db0a21e-34d3-4022-9be8-8c83637e8244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfda0250-3382-4c19-bde2-0bbb1d4c9a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c33e75af-7ee7-426e-9aec-e2dab78517ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c51a5-392d-4325-bb67-ec0608ba5287",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f1c8c49-213e-43a6-9ba4-68a6b0386265",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23c758a-ec45-406d-8d60-a7da3ced83f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a322956a-b500-4334-a5f0-bd5ee94f1dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4b27e5-a13a-4f4d-974e-e190555f3d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae753f1-9837-46d1-a830-5cbc3600fdb6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ede4b2b-c965-440f-81c0-39f479183464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f217fbd6-2789-42b9-a8d0-68450cde5ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c7d6da-2e0e-429a-b26c-af317c5ddc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6a8177-4d81-421d-b2da-27fe16ca2141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1b658b-59f0-4874-a6bf-94c77fa35d13",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b6b44a-9da3-406c-9ebd-fcdca7d480f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d0c74a-c18a-46f7-a9de-2bab7872c0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0066ba51-c6aa-49d9-b5b7-eda8c0257cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c772d36-f831-4c07-bb3d-b60ac18e3175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09928a85-93e0-4d90-a771-713ebbac71a9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928b772b-3a6f-4943-8fae-c8b84f7d9380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea43b76-b4ff-4f16-a20f-8d7163c42000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b9a613-255b-47a4-9648-cceaac93a573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669b8a1c-f8db-44b5-87c8-d4ffe5fe6772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80074a97-715c-44e8-8730-0d2ebb131678",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada2d853-0295-45ae-8dc9-d32cb6552df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e81cb214-a9a0-4d06-bf04-454481ab6de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a437432e-2ded-471c-91cb-2f89c86b35f6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12589cb2-9bec-45c8-95ba-e11493b59c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dff580-a433-4147-8a8d-8e2057bbf31a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5670e0-356e-4411-aa4d-a2cd8855aab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c0026d1-dabe-4f4d-b875-edf3f8544609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba4d061-b420-412b-9f15-37f9182d4a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0058cd04-d3e6-4de6-b7a5-7495fcfef914"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "928e1595-d59d-4761-bd15-495d301cf63d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b0363ca-f0fa-43f4-9be3-1631cc73f669"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4168bb4-28f2-4e07-82e5-d9f1735c37fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b947756-980f-454c-a977-f380f770c441"
                    }
                  }
                ]
              },
              {
                "id": "a9ddaea8-1877-4323-8fe9-7eea77238ca2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90840fa7-af18-4c95-ac58-7f6a6d9354bc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d5aff3-0823-417a-b643-30f4ecfa22d4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "65f0ad54-e377-46f7-8b2b-fa9326cf85f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3cafed-0a10-4cf0-a5c2-e86436f2bfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48ffc556-694e-42f1-a02b-9b63810b8060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8f766b-cb36-41cf-b17e-b339355aaf9e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0cd95-8f0f-4b62-bc91-8515e32cf1f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3090ab34-c362-4e30-bd87-fa936a76baec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b64dc-07a8-474b-a654-05cdafeb7b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39cb8558-3642-45f9-aed6-523834daa078"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d779e4e-9275-4994-b52e-dc8ae3d0cd90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44a2fef4-5fe7-4ced-a0c9-229706e3bda3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dac2be29-018f-4df9-b860-b5138bccfad6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88edf305-38d0-48a0-8bf2-e5876f446b70"
                    }
                  }
                ]
              },
              {
                "id": "3fbf135e-8806-4661-876d-c544a76d074f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5b19c02c-878f-42c5-becd-dbbb6f745f3d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55123c69-aa25-408e-ae23-8ce4dc09e1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "668b975d-3ab0-4fa5-a84d-b49577e0bf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecca518b-f66d-4a9a-b4b6-72430d447747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72a3876-695b-492a-8265-17af02b60cec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7feab391-6376-4298-bd36-eeda4546d4c6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "147b7a91-c7bd-48d4-8b93-7dde7a7c5ae4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71710013-761d-4a5c-94bc-a22213aaf2ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "abafc95e-8df1-4648-9031-79eb06d64cc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62514810-a2a1-407a-961b-7944dfa6039d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70a8d2d6-1651-4f3e-b1ef-cb435d060000"
                    }
                  }
                ]
              },
              {
                "id": "3817a281-a157-47a8-a93c-55398ac44f20",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e44f474b-c6f6-49e3-8846-b985405d1ee6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "203d7fed-9f60-465f-a4c8-4a43482a4c08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19882612-b7d3-473e-ab60-183cbeb38caf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3311265-6904-44b7-b8a0-4c0aa99cb2ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43bf281b-65f7-47e0-9960-07a1c36e6433",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e51e9deb-c03f-4a7b-b494-89fb0e2cc213"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc876db8-307f-45ed-bea3-53337ab1fd20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eabab64c-49aa-4024-8f85-0f6cf30e4c3d"
            }
          }
        ]
      },
      {
        "id": "15e36737-06a7-42cb-8523-50a9eebe6156",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d8c82413-7ad8-45e6-8612-c0beee98e042",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2355f39-940c-49f9-a7ea-5ef34e965956",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c814e7b1-2d17-4cca-846b-40c61cc0c894",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7406c18a-429b-4bf1-9279-c3e92f0a73e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a082f73d-470c-4c0a-bb1e-459d1e735957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbd47cd1-631a-4a64-b2d0-5622b827a77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c329c029-0777-42a8-b6ed-8942643171dd",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fc56fc-7614-4b16-867f-0030af3ad110",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "51d755ac-717b-4186-9282-22845cf02138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6acb688-4999-4370-a00f-82d250ee9ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b76fd62-d1a4-4de4-93ca-9799eba6f8b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea27b12f-5e48-465a-b885-d5b0591b6da6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77b359aa-f04a-4fcf-b0fc-c0744cc87290"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "91351111-a1db-4a48-8797-0c10be257349",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f663fec0-0d12-4653-9604-863ec16591b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50d9eaea-9df7-4950-92d3-dd0bbac59e57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "387f5953-65e1-456b-93f0-fa1026eee25e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b7bccfa-7240-4ef3-8936-3b6e09f8f838",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5102b285-ffc2-4663-b992-6232a967a907"
            }
          }
        ]
      },
      {
        "id": "eda82ec2-5c6d-4bb5-a5ed-8a02b7e535d4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5a53983d-b6be-4cc6-b9ae-ed08c21d1837",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1cca140a-166a-471c-8b72-06420a13786c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e1bbb1d-c51f-4f3b-85af-d47400e9663a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34461dfd-a51b-48f0-ac40-e71c141fa133",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3daf15fe-b1b2-4053-9e15-d936ee31b41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfedfeb-70d6-4b09-86df-da81af64f52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dc6abdc-6085-4e93-934c-e9a3185ad443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d1bdcf-cbc2-4beb-a48f-5d0542939872",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6ac489-4047-4478-922b-4b1a510153ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0087bde6-ea88-498f-8f8d-d867c60d0bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8259933d-caa0-4722-8843-7b71d2bb53d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e9e9c9f-e1f8-490c-b237-cc9b4a19176a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d43e5b50-72d9-40ee-8322-6d526052e2dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "708abe3e-628a-4fa8-9242-f86098d45d69"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52103986-3c5f-4caf-bd11-e7db66dec2d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "337c0824-423c-46b4-96ff-cffd5c11e4e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69058e0c-9a76-47a0-b836-ef6650f471e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eaa1b81f-b816-4e3c-9a5b-911703f7a8d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5422c0d-940f-40b0-b841-e66a06a79c3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "728303d5-46a8-4b2f-afe0-66d32096fb0f"
            }
          }
        ]
      },
      {
        "id": "5fc8d3db-b5d2-4271-94a2-6d6fb6e260ce",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a97a024d-a338-47e0-976f-6f52a2cfd5fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5108fb92-e3d0-44d2-9744-80dc4f4389a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "90448873-3595-4956-a58f-124876d9113a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b89941-fbf6-4771-99fd-b2c1cdeffa3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5a2f04ba-4aa6-4ea0-86a8-1127ee947420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65aceb8-7717-47a5-804a-746df132ced7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "113940c1-fe56-4bab-acca-008aaccdb91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c294ec-dd62-4f28-a895-82a37d66e05c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a561c1d-c34b-4c54-9b62-420be306148b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32950fd4-dceb-4691-a45e-0a9dfc02ee68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcdf4e1-4956-4ce3-aeb1-901eef8186b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "764e64ed-2e39-4f3d-9e79-b723d0d7879a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e48e021-b490-443e-b6d7-7625a538071e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f35470a-c1a4-4482-a910-dadb1306f55d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36a87df7-c7f7-4ad9-b6b7-8dfdb2c94b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "baf57790-5242-47e6-a37c-2619c8dc3150"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76c57dd7-847a-4d2c-a07a-88d9c80a1035",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e237af08-d816-4af7-bc80-579bf1c61137"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d4b03e5-b16d-411e-ab58-2568c868de8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17be52a6-fba7-4712-8256-ee25bfad05e7"
            }
          }
        ]
      },
      {
        "id": "3d725854-8320-46a0-8cdb-e05c378099a4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb6f0f5b-d7cc-462f-8a08-cd7f5bddcd15",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f46e102-d780-480a-b781-ac6c307e3535",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "dd162a32-726a-47ad-b589-c6ff2ac24640",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97b817ca-7cd6-41fd-abd7-7c50feaa2a65",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29d6bad0-c2cd-4210-ab8f-5eb0c4c7b587",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 629.5610687022898,
      "responseMin": 9,
      "responseMax": 5757,
      "responseSd": 711.6478365154909,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1675125699050,
      "completed": 1675125874598
    },
    "executions": [
      {
        "id": "145ee10f-87ff-459e-9639-29a1bb675dc7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "784f0c23-f98a-4336-bf5f-10900ae06793",
          "httpRequestId": "578e4dc4-e3f6-4df0-86cb-e1787d0500a8"
        },
        "item": {
          "id": "145ee10f-87ff-459e-9639-29a1bb675dc7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "721f96ea-ec54-4196-a4c4-0abdc6aee239",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "43d5a1e9-cc8c-45eb-8186-3544d0987c20",
        "cursor": {
          "ref": "f9f51970-70ed-4ba0-89eb-c33ce6ffb484",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fde565c8-aacb-4842-920a-7f460c324f10"
        },
        "item": {
          "id": "43d5a1e9-cc8c-45eb-8186-3544d0987c20",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5a6cc100-0630-4ed7-b00d-4451bfe9400a",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "6f9723fc-95ec-4995-81b2-74c55f9d9148",
        "cursor": {
          "ref": "9baa9210-976b-4de6-ba83-6660090e83d8",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7600aaa0-c87a-4016-b90f-04651dfd9301"
        },
        "item": {
          "id": "6f9723fc-95ec-4995-81b2-74c55f9d9148",
          "name": "did_json"
        },
        "response": {
          "id": "f28852be-0567-4bbe-86d7-af6dcc80226c",
          "status": "OK",
          "code": 200,
          "responseTime": 911,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64de11ee-74bc-4aab-93b5-4188fb6d1ac7",
        "cursor": {
          "ref": "5e4e595d-240d-4d62-a38d-c9c721f3c3eb",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b178c2c3-2c1a-43a3-8ba3-0706ba3d051b"
        },
        "item": {
          "id": "64de11ee-74bc-4aab-93b5-4188fb6d1ac7",
          "name": "did:invalid"
        },
        "response": {
          "id": "fb848b9e-7f70-4e6d-ba76-4d8227dcf2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64de11ee-74bc-4aab-93b5-4188fb6d1ac7",
        "cursor": {
          "ref": "5e4e595d-240d-4d62-a38d-c9c721f3c3eb",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b178c2c3-2c1a-43a3-8ba3-0706ba3d051b"
        },
        "item": {
          "id": "64de11ee-74bc-4aab-93b5-4188fb6d1ac7",
          "name": "did:invalid"
        },
        "response": {
          "id": "fb848b9e-7f70-4e6d-ba76-4d8227dcf2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbcad8f-523a-4387-a16b-67115638b1fe",
        "cursor": {
          "ref": "96ad7a45-23fd-401c-98b8-6381971dd7d0",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "752bd893-2ccf-4636-b913-1ea9aa6e8134"
        },
        "item": {
          "id": "9cbcad8f-523a-4387-a16b-67115638b1fe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "30876c9f-be31-423c-b692-d26708824e13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 581,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8606317b-b13f-4dc0-a1e2-91f17f9fbd86",
        "cursor": {
          "ref": "844dd606-3476-4410-9b6d-9a9d99c13f0e",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b3298cb0-d226-41c8-ac47-3e5ac94121c2"
        },
        "item": {
          "id": "8606317b-b13f-4dc0-a1e2-91f17f9fbd86",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "876b433a-11c7-4250-9c59-95342b1e7189",
          "status": "Not Found",
          "code": 404,
          "responseTime": 508,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726e7714-2492-4f08-8f6e-f2847292bc53",
        "cursor": {
          "ref": "1b2a92a2-11f7-4739-8f05-bdcf28803601",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1001353f-1617-460c-a1a9-00044709ef32"
        },
        "item": {
          "id": "726e7714-2492-4f08-8f6e-f2847292bc53",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "82b4d53f-6e3e-49df-8e7b-a997f212f233",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc296536-e8cd-4e11-bbc5-f39c2a5becaa",
        "cursor": {
          "ref": "c47eb31c-3fcf-429a-860a-0370badb960a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c1c98d6-8ea9-4cc9-b663-363924ca5cc8"
        },
        "item": {
          "id": "cc296536-e8cd-4e11-bbc5-f39c2a5becaa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e929a2e1-716c-4a8e-b145-798ac69c4031",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc296536-e8cd-4e11-bbc5-f39c2a5becaa",
        "cursor": {
          "ref": "c47eb31c-3fcf-429a-860a-0370badb960a",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3c1c98d6-8ea9-4cc9-b663-363924ca5cc8"
        },
        "item": {
          "id": "cc296536-e8cd-4e11-bbc5-f39c2a5becaa",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "e929a2e1-716c-4a8e-b145-798ac69c4031",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 502,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9088d253-816d-4d00-a26c-c6b5cc09bc85",
        "cursor": {
          "ref": "d4f3c753-8110-47de-a193-48865531d2a8",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "02e63d91-50a1-45c5-8681-c9b33eb9beb5"
        },
        "item": {
          "id": "9088d253-816d-4d00-a26c-c6b5cc09bc85",
          "name": "identifiers"
        },
        "response": {
          "id": "a158d275-012e-423c-9dc9-2605659d20e2",
          "status": "OK",
          "code": 200,
          "responseTime": 872,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7afda70-f5fd-4f3e-adb6-91b3698c6a9f",
        "cursor": {
          "ref": "4532d1d8-ab53-49e7-ba60-50aa0d47d53b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f219834c-1af2-4b5d-b426-9bcc90b02c11"
        },
        "item": {
          "id": "e7afda70-f5fd-4f3e-adb6-91b3698c6a9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fe4f4441-b843-4c93-bc63-8b76867ce454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7afda70-f5fd-4f3e-adb6-91b3698c6a9f",
        "cursor": {
          "ref": "4532d1d8-ab53-49e7-ba60-50aa0d47d53b",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f219834c-1af2-4b5d-b426-9bcc90b02c11"
        },
        "item": {
          "id": "e7afda70-f5fd-4f3e-adb6-91b3698c6a9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fe4f4441-b843-4c93-bc63-8b76867ce454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0fc458-f686-4f95-bb60-836609ef3dc7",
        "cursor": {
          "ref": "3957248b-5b66-4bf4-a19d-ff23d349c61a",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "332dca18-b7d7-4f79-89a4-a83285b4f9a0"
        },
        "item": {
          "id": "ff0fc458-f686-4f95-bb60-836609ef3dc7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "eaf03830-6e0c-489f-b68a-0146ce47cf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1100583-54ea-45b5-80ac-b7661b271169",
        "cursor": {
          "ref": "9f1e6914-2b0a-43e7-8942-32c363af3052",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4e65c4e3-deb7-4b70-a5b5-1e2cdd2202b4"
        },
        "item": {
          "id": "e1100583-54ea-45b5-80ac-b7661b271169",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "dfcc8227-ae9b-4afd-afba-f323b899fbb4",
          "status": "Created",
          "code": 201,
          "responseTime": 2710,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "0a699a78-2367-4a49-aa0e-6262a114d85c",
        "cursor": {
          "ref": "fab535ef-e53e-42e2-92bb-aea0274cb058",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8b81e485-5a7e-42dc-b590-da3b800855d5"
        },
        "item": {
          "id": "0a699a78-2367-4a49-aa0e-6262a114d85c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a078c572-ec74-4804-ab58-317c9ba7e71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410c4183-9dca-4274-897f-a03984411355",
        "cursor": {
          "ref": "b19c4502-3ae7-4351-afcf-4349e3cdb914",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c2b411e5-2e0e-4aac-a175-c77ab90632f0"
        },
        "item": {
          "id": "410c4183-9dca-4274-897f-a03984411355",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0a1179cf-8fc0-47b4-9e12-7f5f93be817c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d65ca36-c9e5-4ab5-8875-eca682611ee5",
        "cursor": {
          "ref": "531a455d-8fbe-425f-a8f6-c8c070689e25",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5d7ac8c6-db72-44ae-abf7-0f854c9ebf9f"
        },
        "item": {
          "id": "8d65ca36-c9e5-4ab5-8875-eca682611ee5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fa9721b7-0b1b-4a45-9059-b67c85a1a3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a92301b-c6f3-4669-8f81-3397ff799d33",
        "cursor": {
          "ref": "e27fad84-9d55-4873-a30b-0f4b5adfe7e9",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "de4f9d3e-eb8b-4c26-bea9-19f0fe68707c"
        },
        "item": {
          "id": "8a92301b-c6f3-4669-8f81-3397ff799d33",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e2617b08-88e2-444e-b047-19f2a58a540c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc9236e-f6ff-485e-9671-b6efd0a3f4da",
        "cursor": {
          "ref": "66dfb67e-f967-4bf9-b794-76020237dc6f",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8f0fb002-4c0b-4d86-8b87-b790bfd9d3c9"
        },
        "item": {
          "id": "bfc9236e-f6ff-485e-9671-b6efd0a3f4da",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f825f6d0-5f8d-429a-b9aa-4004baa7579f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63976f82-ce94-4454-8cab-a06ddddea461",
        "cursor": {
          "ref": "6401c8cf-3069-4c03-8a1e-2977c6b21b9d",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "69100e42-1251-4779-9eca-7fe192d3ba3f"
        },
        "item": {
          "id": "63976f82-ce94-4454-8cab-a06ddddea461",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "262de3fc-73dc-46b6-993c-aaa62b06f868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a62cb27-6182-4461-8393-711a1171f048",
        "cursor": {
          "ref": "fecd36d3-77ba-40dd-9264-78975027823b",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "23f0dca2-fbfc-47e8-ab2b-f43116bd4737"
        },
        "item": {
          "id": "5a62cb27-6182-4461-8393-711a1171f048",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0a9cdb39-1eed-4457-8885-e2115a56f446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eafa5d7-47ef-4d9e-b42b-c721857ecd33",
        "cursor": {
          "ref": "d8494cd0-dde2-4209-a392-c5d751d19895",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "12ff40b4-cd23-4597-b407-6434862888ec"
        },
        "item": {
          "id": "0eafa5d7-47ef-4d9e-b42b-c721857ecd33",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a4d565ee-9788-44f0-8a85-5b8efab9b38e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0178a920-d509-456f-aef9-82683434dad9",
        "cursor": {
          "ref": "6f2e6f7a-02f6-41e9-9b18-093d0e34cf8b",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6249c23f-0549-46cc-b339-06399feec5ae"
        },
        "item": {
          "id": "0178a920-d509-456f-aef9-82683434dad9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c234fdda-0801-4df9-a1f5-2891b52bfe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9ca964-8844-4ab0-b324-c0dbf2fe52d4",
        "cursor": {
          "ref": "163bb7dd-eb04-4e55-8d2b-26e2ebf4586a",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f64b22cb-1397-4fc3-91f7-263edbe91db2"
        },
        "item": {
          "id": "2e9ca964-8844-4ab0-b324-c0dbf2fe52d4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "27406b8d-6709-40ba-9a1f-70c32d66a59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6c5fe2-7c3c-4532-9790-49e585ad619f",
        "cursor": {
          "ref": "40b73aaf-5846-47f8-88e0-206620d1db0a",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a52bbaaa-4eee-4445-a6df-6ce84d62ac06"
        },
        "item": {
          "id": "9f6c5fe2-7c3c-4532-9790-49e585ad619f",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "208377e2-190e-4c66-b3a2-eea9b64363b2",
          "status": "Created",
          "code": 201,
          "responseTime": 4514,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "bf544559-fef4-4304-a3e7-33a138d2c48b",
        "cursor": {
          "ref": "12ae5f21-07f7-41c2-aab3-d9be8d42f0ee",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1c50edb8-9a0e-470b-ad8b-2ccb1ad9781f"
        },
        "item": {
          "id": "bf544559-fef4-4304-a3e7-33a138d2c48b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "164fb3c5-9e03-4aab-92f5-557875a83012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718a9351-ecef-4771-9ca5-18fa976b6374",
        "cursor": {
          "ref": "a9173aad-326b-4928-a798-48c0483a750a",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9149fa41-f978-44e7-84ac-523f1fb10976"
        },
        "item": {
          "id": "718a9351-ecef-4771-9ca5-18fa976b6374",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e52d171c-959f-4643-93d8-dc217fa66b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bdca1f-d2a2-4631-931c-c4c15eaafa21",
        "cursor": {
          "ref": "1bd4be57-2558-4e09-90d1-406111323bf4",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ef181c66-13ae-43eb-8cd2-7ff405c49bda"
        },
        "item": {
          "id": "c7bdca1f-d2a2-4631-931c-c4c15eaafa21",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "44c704c7-205b-47ed-9286-020466e3ebf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f44b7a-6660-4e14-bff1-9d3b676d2680",
        "cursor": {
          "ref": "d63017cf-2984-4cec-8e37-a6bb79f91a81",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bd5af081-a308-4591-b1b0-63840d37e3f3"
        },
        "item": {
          "id": "54f44b7a-6660-4e14-bff1-9d3b676d2680",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ccee0bbc-c97b-4199-bc48-53a089363e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be74a6a-2007-4017-b0bb-11104c863876",
        "cursor": {
          "ref": "303191da-2758-498a-975f-04e02e0b7e21",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ca225747-558c-4887-bcbc-775f1645c1e8"
        },
        "item": {
          "id": "1be74a6a-2007-4017-b0bb-11104c863876",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9601d466-5817-4b12-974e-ef81f5bfffbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d3671e-daaa-443f-a372-006bf658349a",
        "cursor": {
          "ref": "b22de5a8-cca1-4945-98fa-fb72549b9340",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7b26a415-7942-4d03-90bf-566f0ad98977"
        },
        "item": {
          "id": "86d3671e-daaa-443f-a372-006bf658349a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "90065705-204a-4cef-aeaf-d61ff5fb1fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e15004-a675-430e-a0f8-d94f5b6b4125",
        "cursor": {
          "ref": "8e7af040-bac2-4042-b51e-bfb8b3fa37aa",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1e0a111c-5dd9-4c6a-a140-35f8e3254cee"
        },
        "item": {
          "id": "a6e15004-a675-430e-a0f8-d94f5b6b4125",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "93260e62-7f0c-44e5-849a-a237c73aa856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ab273e-5116-4261-89b4-a72de9cbd631",
        "cursor": {
          "ref": "52d8a08e-499b-449d-83c6-82b8eb88d981",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d34c46d5-3e7f-4442-a3a2-c19f78c3d060"
        },
        "item": {
          "id": "b1ab273e-5116-4261-89b4-a72de9cbd631",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2f6bab05-56f1-429d-a892-ab052b3692df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d150e5-71cf-4da6-8625-149956e9a247",
        "cursor": {
          "ref": "43ffebbf-63c3-4337-a400-f460abe0f545",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d87c3650-a8c5-4b91-9604-2947a147f184"
        },
        "item": {
          "id": "79d150e5-71cf-4da6-8625-149956e9a247",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4621194a-b8e3-4808-b777-f7ce17a59a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecae1b00-8157-474f-911b-51fa4a3a9216",
        "cursor": {
          "ref": "4761e96e-eccf-471b-9820-1483eed7c434",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2e015653-14cc-4cee-8cf7-f74d5417dba8"
        },
        "item": {
          "id": "ecae1b00-8157-474f-911b-51fa4a3a9216",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "81e3802b-d30c-4066-b726-292c3bfa0f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb038e71-1c95-4c22-9fb7-c091eebcaf7d",
        "cursor": {
          "ref": "0575ebe7-a570-438d-aff1-8127e8f4ce64",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "63a9aca9-2836-4ac4-a7fd-8b01686dedd5"
        },
        "item": {
          "id": "fb038e71-1c95-4c22-9fb7-c091eebcaf7d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3137081a-59d4-4c94-b080-74d0af582a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eaf27b-ebca-4b0f-affe-58ea9abce980",
        "cursor": {
          "ref": "9eb0d6ba-da71-4e14-9bbc-1ba4969e5bee",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "315d092b-1409-412e-8ffa-3f68225c632b"
        },
        "item": {
          "id": "33eaf27b-ebca-4b0f-affe-58ea9abce980",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7cc0f7ac-ab2c-4cb3-9ff5-7c7da3e26e0a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1965,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "9aaf6dd2-715f-478e-89fc-7c8e9c1b485e",
        "cursor": {
          "ref": "6e62b755-2f87-4b73-ba02-6778225ae3f1",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "644c6071-198b-409a-bfe5-48a513f9ffbb"
        },
        "item": {
          "id": "9aaf6dd2-715f-478e-89fc-7c8e9c1b485e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c535f685-fb77-48ca-a0b5-99590abd0195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22af9b56-714e-4c23-b06a-f00f68076805",
        "cursor": {
          "ref": "2921e8b5-f143-4a2c-908d-b253a3a0d3c6",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b72c5068-1755-447c-82b5-2340a8d355ec"
        },
        "item": {
          "id": "22af9b56-714e-4c23-b06a-f00f68076805",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7ca648e2-b02d-4ae0-a97c-57974568fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f89559-834d-4de4-b67d-a0c8b3869e8a",
        "cursor": {
          "ref": "e2169ed3-15b2-46a3-9731-aa465f648e0d",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4368a1d9-c617-4277-968b-5d5e7715e4dc"
        },
        "item": {
          "id": "18f89559-834d-4de4-b67d-a0c8b3869e8a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "547d9ccb-fed0-48ca-8178-859891a91437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba1b628-3f74-4ad6-8663-e0301bce8387",
        "cursor": {
          "ref": "a1455c20-52e0-4e06-b9d1-06645dcb71be",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "42dd4fcd-fc81-4502-beef-d6df0337ab49"
        },
        "item": {
          "id": "7ba1b628-3f74-4ad6-8663-e0301bce8387",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "24020bb9-0939-4112-8489-3ab730b8c5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7578a11d-ae22-440d-a0a2-ec5f2dbc500b",
        "cursor": {
          "ref": "4b76da88-e492-4803-a067-31a943bdd5dc",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0d888cff-b8dd-4dae-8857-0145b852df5c"
        },
        "item": {
          "id": "7578a11d-ae22-440d-a0a2-ec5f2dbc500b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9ca1a642-1b55-47e9-9d60-f03d85c9101c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77444be1-76e5-4944-9d03-b6b5e8074b6d",
        "cursor": {
          "ref": "ef28a68f-a980-4eb0-b998-9cf8f86a44fe",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2b75663a-c160-45c7-9488-21c04352b1ce"
        },
        "item": {
          "id": "77444be1-76e5-4944-9d03-b6b5e8074b6d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1e5b76a3-83e7-4634-870b-9f274c92372a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1140,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eedd014-eab6-4bcc-8344-1368ba6a66d3",
        "cursor": {
          "ref": "61608c8e-5456-4c0e-a7d2-87a0f4ac15bd",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "295bc977-7ee4-438f-ac74-cbdf0d0c7cff"
        },
        "item": {
          "id": "5eedd014-eab6-4bcc-8344-1368ba6a66d3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "20afd3c3-5337-48c1-ae7a-25b42ced49d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 894,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174a2276-1ea8-4052-b8eb-2d7db086867d",
        "cursor": {
          "ref": "815b0a97-d272-498c-900e-c310ff4d3735",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ad094f09-1f3e-4ba9-8d02-047457c69a5b"
        },
        "item": {
          "id": "174a2276-1ea8-4052-b8eb-2d7db086867d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "51b0dd66-dc73-463f-b5cb-e268cdef6ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe576fa9-ae9e-4933-890f-c3aa1d81607d",
        "cursor": {
          "ref": "04ce4b0c-ddfb-421b-8ffe-27fb29ae184f",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b54a545a-4c73-44dd-90f0-ce8563ad3f4f"
        },
        "item": {
          "id": "fe576fa9-ae9e-4933-890f-c3aa1d81607d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "cd4bd6b9-3335-4c74-9aee-dd99ccb5bc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54acace6-3b82-4ed7-acbd-38eb1acce002",
        "cursor": {
          "ref": "81a73bb6-828f-4668-a38e-25b27431d7de",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dcbf53bc-508a-4a0c-b910-7abf1ed32675"
        },
        "item": {
          "id": "54acace6-3b82-4ed7-acbd-38eb1acce002",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f5b5a815-6587-4126-a074-f6f90b58c274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c3ee05-ffb0-4ee9-9dfe-b7c24f93178d",
        "cursor": {
          "ref": "38112d6c-7e1a-402e-a15b-9e541dc6d6e2",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "96e07729-54e5-477c-a8e3-724d89bcdcca"
        },
        "item": {
          "id": "15c3ee05-ffb0-4ee9-9dfe-b7c24f93178d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e4c0d26e-199b-4868-b475-a63fb877159f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a1a8da-654e-44c6-b435-edce1b1137cc",
        "cursor": {
          "ref": "82e12a0d-6462-481a-8ffc-1f031f93bcfe",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "927a6567-7c88-4467-8d63-237247567b68"
        },
        "item": {
          "id": "f1a1a8da-654e-44c6-b435-edce1b1137cc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "037c02bd-f08c-495c-85a8-a237ca88f359",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 977,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b3489-f094-4118-80e0-7f03cf8acedc",
        "cursor": {
          "ref": "dbce45ea-4de9-4a60-8d70-887e493052a8",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6b547281-3bb5-40e9-b2a6-c81b28e5d4ea"
        },
        "item": {
          "id": "3b0b3489-f094-4118-80e0-7f03cf8acedc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "56a83e30-33c7-4296-a916-2f306d54ac46",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 826,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "7c2f779f-066f-4cf1-9c73-e195e2c1e21d",
        "cursor": {
          "ref": "194f36b2-db55-48a0-a321-a5cd796da5ca",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ff988838-9bed-4800-b70a-ccd2bac90d93"
        },
        "item": {
          "id": "7c2f779f-066f-4cf1-9c73-e195e2c1e21d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2d29cca5-2ba6-42c5-b17b-856fbe8e0ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcda2cbf-7832-4a36-b206-8f61f88e163d",
        "cursor": {
          "ref": "0392df0e-1444-47f2-8a3f-a99d0731a53b",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "84598b3f-8b1d-4f18-8146-b514610fc696"
        },
        "item": {
          "id": "fcda2cbf-7832-4a36-b206-8f61f88e163d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "530cc9b4-c6ea-43d2-9b8b-a35847c39b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a02972a-5083-4f40-b28c-27ed42395a9e",
        "cursor": {
          "ref": "7f5c690f-d1be-432c-9b7f-35f5eab0fd40",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "62ea7755-4f72-4678-87a0-34eead10ba97"
        },
        "item": {
          "id": "1a02972a-5083-4f40-b28c-27ed42395a9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1ac494d2-3056-4157-98ad-9fb65915db94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9108ae66-9b77-4b30-a26a-6029ae425787",
        "cursor": {
          "ref": "f89d7dd1-221f-4f27-a47c-1f0c071c3537",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "03efe74a-28be-4c3f-afab-08b8386f2a5c"
        },
        "item": {
          "id": "9108ae66-9b77-4b30-a26a-6029ae425787",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "27234591-c399-435c-b84b-a6e28ef70914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a190f42b-54aa-4b6e-9165-c3cdfe3c69e0",
        "cursor": {
          "ref": "3ffb13fb-ddd7-4ee6-8466-4d5fef8a00b5",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "06e8029b-6d73-4419-9cdb-9447643f0881"
        },
        "item": {
          "id": "a190f42b-54aa-4b6e-9165-c3cdfe3c69e0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "53200d8c-a7ce-46fa-8e52-0e5164755e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ec7098-2036-477f-a08f-53b6ced2e20e",
        "cursor": {
          "ref": "ecc92230-0d3a-4a1c-b47c-ca24e18d05ba",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f7f6d99e-83ff-439b-9964-f531d68d143d"
        },
        "item": {
          "id": "47ec7098-2036-477f-a08f-53b6ced2e20e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bc7df00d-290b-4497-9da0-1356775f29b3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 652,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb0137d-8789-4ca8-9601-16c3aa5f62e4",
        "cursor": {
          "ref": "2304e6e1-ef54-4b4d-983f-f63d1482b57a",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "92e80cc8-f860-463e-9da0-966d6d4ed4eb"
        },
        "item": {
          "id": "8fb0137d-8789-4ca8-9601-16c3aa5f62e4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "6e1cf76a-35ce-409f-b6a6-a05e3e0bbca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4386c91a-7272-4822-9f31-f911094f62c0",
        "cursor": {
          "ref": "4df62df7-68dd-4eb2-b71a-ef02ce32f6b5",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "75100ce0-61f0-47be-abf6-de850b748e20"
        },
        "item": {
          "id": "4386c91a-7272-4822-9f31-f911094f62c0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4eaf8e34-8deb-44a6-9f5a-e58e3dc31199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ec6568-5b74-48a3-bb34-4a77f8ed8f00",
        "cursor": {
          "ref": "4f75cb84-0ca4-40e5-87f3-eddc9b684552",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2724a9d8-db87-4a2e-9820-32532b90f54c"
        },
        "item": {
          "id": "e2ec6568-5b74-48a3-bb34-4a77f8ed8f00",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2b5f3920-56e1-400c-9544-895b946a12eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0450bbb3-a891-457a-8cfc-87503e5f5816",
        "cursor": {
          "ref": "1e2d1d74-abdc-4f3a-bdb6-7e020098a44d",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a57e0d5e-b141-4cf2-bd22-3efa861e7fb8"
        },
        "item": {
          "id": "0450bbb3-a891-457a-8cfc-87503e5f5816",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7af0759-76e1-468c-8974-51eec1f1cd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840ee505-b441-4c50-9e02-6a2b97bba41c",
        "cursor": {
          "ref": "5babaa52-e2c0-4ed5-aa8c-b5ca0df5e0e1",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7578b811-137e-4f1d-9038-645c411753cc"
        },
        "item": {
          "id": "840ee505-b441-4c50-9e02-6a2b97bba41c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d618a3eb-548e-40c2-a8bc-e871a4c4502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef61b9f-e105-4004-821f-633b8654c8d9",
        "cursor": {
          "ref": "64f875b8-0e2b-419e-b9c2-794969a8782b",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1eff2d7b-1eb6-4b8d-a48e-091d260be046"
        },
        "item": {
          "id": "cef61b9f-e105-4004-821f-633b8654c8d9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7a4ced8-5929-4dad-aca8-37e675bf5e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f25a3b8-7a06-412d-8cc4-e8d6c4aec933",
        "cursor": {
          "ref": "df42946b-d4f4-4597-a315-547cd2815db7",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8cda5246-2101-4ff5-ae21-34b0cce31ae2"
        },
        "item": {
          "id": "9f25a3b8-7a06-412d-8cc4-e8d6c4aec933",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "af9248cb-cd90-4701-9923-383112acbbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1cef11-f130-4a0e-9f99-1cb0b80e3093",
        "cursor": {
          "ref": "f540385a-dd65-417d-8e58-683d7d59575e",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b7f3cb39-5185-493e-bcfb-64eaa8c3beb0"
        },
        "item": {
          "id": "7c1cef11-f130-4a0e-9f99-1cb0b80e3093",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "beb9a828-c4f8-4feb-990c-90bd7fdbac30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2a5f48-26db-41bd-85c2-b67f580e8092",
        "cursor": {
          "ref": "6469986d-8744-4037-a711-a9a519032dd1",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "93fdf2d9-ff63-49b2-adf6-a611cd86ab09"
        },
        "item": {
          "id": "ca2a5f48-26db-41bd-85c2-b67f580e8092",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "40ed3ff7-4f23-45ee-93a2-49ccd92e5e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd96e852-2448-4fe6-9233-9bafbe3dc48b",
        "cursor": {
          "ref": "8f49bf4c-4314-4e6f-978f-b687d486a808",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4d3ce9cd-4f28-4477-9d7a-4aebdc8b555d"
        },
        "item": {
          "id": "bd96e852-2448-4fe6-9233-9bafbe3dc48b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bac009b1-eb80-49b8-802e-553b4b6bd2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67309e8b-be10-46bc-a068-261184774147",
        "cursor": {
          "ref": "775c1351-2f6f-4e04-90a9-89d51e512b12",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fc79b1da-467e-4df8-bb89-f09bddbc7192"
        },
        "item": {
          "id": "67309e8b-be10-46bc-a068-261184774147",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "899e0f7d-f978-4463-95ba-29a049de1b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd927b5-7ff8-4d9a-97ca-f88293267e20",
        "cursor": {
          "ref": "9f6437ab-00ff-496e-af8f-7f29a317056c",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a7781c56-4073-4c80-8535-a11f987bc171"
        },
        "item": {
          "id": "5dd927b5-7ff8-4d9a-97ca-f88293267e20",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "60140108-c759-4f11-ae5b-93db48049914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379de586-e843-4098-958d-fadd8c3f0f03",
        "cursor": {
          "ref": "e98d98f5-2366-4a7d-a2e0-b74131e0b12c",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3d675ba6-31fc-426a-98c4-4d72b546a239"
        },
        "item": {
          "id": "379de586-e843-4098-958d-fadd8c3f0f03",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "acd17718-0fca-497f-9e45-6e880fb3c253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87102144-bf37-4193-bcfe-aaba5d61f803",
        "cursor": {
          "ref": "7f595893-d1ff-4734-8bb7-5bd660ffa664",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7debf763-c5f1-4f0e-a32a-ec686b3957e5"
        },
        "item": {
          "id": "87102144-bf37-4193-bcfe-aaba5d61f803",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2e3f97c9-d48a-4beb-a27f-ecd367318f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fb27d4-3654-4fa8-b952-ec45f063d173",
        "cursor": {
          "ref": "b9e4da45-abc6-41d5-ae0e-6ceb4239d5da",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "58249a2a-492b-4164-857b-1b379a116862"
        },
        "item": {
          "id": "b0fb27d4-3654-4fa8-b952-ec45f063d173",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9ce7886d-e24f-4f03-8258-daf8d08c6237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76708f3b-9894-4ad7-817a-59187a39d391",
        "cursor": {
          "ref": "5c042584-c911-4e6f-ac1b-1f5e8eaf5635",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5104b6b5-f20e-416c-9dc3-c050e4764eaa"
        },
        "item": {
          "id": "76708f3b-9894-4ad7-817a-59187a39d391",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a093f2b6-bac4-4093-8f88-ee5ec6ee98c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d276f85-1c80-404b-868a-a3f75ab2f7c4",
        "cursor": {
          "ref": "81853358-9e28-43a4-9ddb-6a69c74c0c49",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "31d65959-9376-40e3-8980-a14db5ca9746"
        },
        "item": {
          "id": "5d276f85-1c80-404b-868a-a3f75ab2f7c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "34987616-5e5c-4586-8318-1e0ca40ec1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f4f0e7-67db-4503-b1f8-4cc33a37c355",
        "cursor": {
          "ref": "3b6f6c58-3a37-4bbf-8b28-70f7a2921235",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5f754e5b-4c9b-4e50-a5fc-59bbbd39080b"
        },
        "item": {
          "id": "f6f4f0e7-67db-4503-b1f8-4cc33a37c355",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "54ed8b70-4ee1-4746-9804-a6e9500098ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab7e299-7172-4b83-9637-0d373620c412",
        "cursor": {
          "ref": "97e8008e-ae41-4d78-be70-413275e59cab",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "24f07a0b-08c9-4784-8ae3-f761a7bb993b"
        },
        "item": {
          "id": "7ab7e299-7172-4b83-9637-0d373620c412",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d9132875-7089-42ea-98a4-fed7b7ff5e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f068b6f-b1f6-41e5-b98c-47577d7e722a",
        "cursor": {
          "ref": "2eda4285-3a29-4026-ba20-b88e978ed8e6",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "11e9fef9-fd5d-41da-9b02-21839a23c3ff"
        },
        "item": {
          "id": "6f068b6f-b1f6-41e5-b98c-47577d7e722a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a8b24289-ee3f-416d-9e22-24885a38bc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfc5a8b-ffa8-4eb6-8cbe-b6369f27a04f",
        "cursor": {
          "ref": "ed082610-75ef-48be-ab74-9831cda04741",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8ed0487e-2b67-4382-b1b1-918d255ddaa7"
        },
        "item": {
          "id": "8cfc5a8b-ffa8-4eb6-8cbe-b6369f27a04f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "572dce38-e075-475f-abb0-d8777899790d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac2264b-448d-4f70-8b72-640069298cbf",
        "cursor": {
          "ref": "0cbde9d4-8b7b-4f82-989a-eaba05270cbe",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4b2555d7-0adb-4edc-9caf-7b90212ad899"
        },
        "item": {
          "id": "8ac2264b-448d-4f70-8b72-640069298cbf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4705312d-3bab-4eaf-8f93-553b9488696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1648,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1990676a-5720-4eae-be70-3bf8609ad291",
        "cursor": {
          "ref": "48e416fc-deff-467d-b23a-0827af102773",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9077a67f-aada-4bc4-95a2-865118cd1e54"
        },
        "item": {
          "id": "1990676a-5720-4eae-be70-3bf8609ad291",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0713a58c-ac3a-4df3-b22c-1b0b0766e7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1046,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b11953-5740-4320-bce9-b1a471ce626b",
        "cursor": {
          "ref": "ebed0772-23fc-44a7-b566-28a763f13d65",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a1f1520f-d509-478a-bc97-52c719444146"
        },
        "item": {
          "id": "d0b11953-5740-4320-bce9-b1a471ce626b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "222a1f80-b693-4230-a6d1-0f8da799f997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d67747e-7b34-4865-9111-1c37ce993549",
        "cursor": {
          "ref": "cdaa8e46-b416-4f5b-8055-ec6b89ea4ebc",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d8015103-79ea-4876-aa08-3ed17039cbfb"
        },
        "item": {
          "id": "9d67747e-7b34-4865-9111-1c37ce993549",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "659e1862-4d89-4ddc-b2b0-4e9fb343f7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa30dfe6-a4db-45a1-b898-02e89d867327",
        "cursor": {
          "ref": "a4bda1a3-880b-4656-a137-42778391d9fa",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "56b6c1b2-9bb5-465e-8dbc-c79406d8b3ac"
        },
        "item": {
          "id": "fa30dfe6-a4db-45a1-b898-02e89d867327",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "762c9e8f-cf99-4229-97f0-d8b1ff58e5cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe85962-acfb-4597-9e64-32ada35ae634",
        "cursor": {
          "ref": "38b7ce41-3f19-4ceb-a591-2c6134cf65d4",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2ed80e68-57b1-458f-b84d-065b71dc989e"
        },
        "item": {
          "id": "9fe85962-acfb-4597-9e64-32ada35ae634",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6f027787-1e0a-4c9a-a0c0-39fba4b2d4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b37aee-72de-4c4a-ad20-7d5e907f6147",
        "cursor": {
          "ref": "c53df44a-be81-4b88-b118-435633b36a35",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c26b8f1a-9d9d-4e54-a04f-e94b89ddaeaf"
        },
        "item": {
          "id": "31b37aee-72de-4c4a-ad20-7d5e907f6147",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bb337e0d-5164-46af-868a-a66fbe8114e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b45a15c-32e5-4767-a57f-abc82138ccc1",
        "cursor": {
          "ref": "816930ff-6ab3-4adf-9b4c-5cb617b24610",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ed9d3299-db91-460e-9231-99d12079ac0e"
        },
        "item": {
          "id": "0b45a15c-32e5-4767-a57f-abc82138ccc1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9a4ef518-c923-4110-8cd3-dfd833e5b63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4413f3f9-d94f-443e-ae95-c7759f0268cf",
        "cursor": {
          "ref": "852696d9-75a9-4092-8fa2-df23e0712eb2",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b1e3a45b-debf-4a45-b5b1-8f7c1dc25da9"
        },
        "item": {
          "id": "4413f3f9-d94f-443e-ae95-c7759f0268cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "78471e48-1cca-4ef6-a6de-7a7483ffb68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15d2b35-758c-4555-b8bc-3a2405d2ee42",
        "cursor": {
          "ref": "0c1de70a-4426-4236-b4b5-fdce3aed676a",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bafe9eea-1b60-4ebd-9304-7e48a3cd09d3"
        },
        "item": {
          "id": "e15d2b35-758c-4555-b8bc-3a2405d2ee42",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "92fe5f2e-789a-40b5-ae0d-e61af294eac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a964ad8-1f00-403f-9f80-49f06b90e711",
        "cursor": {
          "ref": "458b6ef7-2272-4aad-b847-20710db1f935",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5fe84b37-35b1-42ed-878e-998b21fafb80"
        },
        "item": {
          "id": "8a964ad8-1f00-403f-9f80-49f06b90e711",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4f1e2ff5-a01f-498f-855f-f753a191682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d6c8d6-636d-4dcd-bec8-cf179e85a42e",
        "cursor": {
          "ref": "340dfe3c-c8cf-4434-9b7f-68060a30dc06",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dbf3d58e-d42e-48a6-9092-6f38aed12739"
        },
        "item": {
          "id": "a3d6c8d6-636d-4dcd-bec8-cf179e85a42e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f4dcded3-f55c-4f06-91ae-9c2ed9dc73d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29f8759-78e3-407a-bca6-4f206fb4d0b9",
        "cursor": {
          "ref": "e2a02f91-9e78-4220-b573-8f527d6e938c",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bca875d9-9b79-4fcc-a46a-4f636c2bf024"
        },
        "item": {
          "id": "c29f8759-78e3-407a-bca6-4f206fb4d0b9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9462dcd9-7e5a-45e9-aa70-a910eebefa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca6ae1-0065-49a7-a9a4-39bbbb077886",
        "cursor": {
          "ref": "b60ba5fa-afb5-425a-bb55-0f10f8967083",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0c821a90-1e41-426c-8db4-f25e6d224735"
        },
        "item": {
          "id": "b0ca6ae1-0065-49a7-a9a4-39bbbb077886",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f9f4708c-dbd1-45a7-aa04-993a854222d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac3c7a0-bae9-44bf-bb5c-1921597142d2",
        "cursor": {
          "ref": "a97e6cd1-b6bc-46d1-af1d-eff986623c47",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "27ada4f7-0da5-4aaf-8bb6-f935db40d74c"
        },
        "item": {
          "id": "eac3c7a0-bae9-44bf-bb5c-1921597142d2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dcd1c77b-ce9e-4612-90e6-dbbaed89403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cddd777-b83f-4968-8f9d-6161566f4375",
        "cursor": {
          "ref": "e828e3d4-4130-4ac9-8297-8fe5e0ace62c",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "557b5564-5281-4564-a3e7-a1ca3408338f"
        },
        "item": {
          "id": "1cddd777-b83f-4968-8f9d-6161566f4375",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "977a70fc-935f-4873-bb70-d394d6bdb392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047fa3a5-451d-470b-99ed-44bccd49c0e5",
        "cursor": {
          "ref": "20871ded-04ef-411f-9533-34b905253274",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f0d2aed5-7cdb-46e9-9322-14a6d112d1c5"
        },
        "item": {
          "id": "047fa3a5-451d-470b-99ed-44bccd49c0e5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f8bac603-1fa8-484f-ab0e-40f7eb4fd097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308aa0bd-d0fe-42ad-a65a-1e317813690d",
        "cursor": {
          "ref": "e821edde-970e-4fa1-bcb4-c801ed6bb842",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4bfd96fe-c7aa-4200-b7fb-761ddcc7b6cd"
        },
        "item": {
          "id": "308aa0bd-d0fe-42ad-a65a-1e317813690d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "85a1375b-5c85-46ca-8751-366b2215ffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac3a5f-3b33-4046-9b4b-d1d68efca81d",
        "cursor": {
          "ref": "068094a4-806c-4ba3-b284-a956a47bfd3d",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e9e1cc92-ce43-4077-8d41-471122454e4e"
        },
        "item": {
          "id": "03ac3a5f-3b33-4046-9b4b-d1d68efca81d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ce9d80cc-9982-453b-aceb-28d16918df50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9de873-2424-413d-bc24-9824ef96ff11",
        "cursor": {
          "ref": "18842135-ef20-460b-8fde-06eb8bab5b88",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "538e80f3-ba3f-4d7b-9915-a5854f017375"
        },
        "item": {
          "id": "cf9de873-2424-413d-bc24-9824ef96ff11",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "07b93ecf-cb04-4d14-8553-6a2774971c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bdd54b-1abb-4447-b3fa-0aa7aaab144d",
        "cursor": {
          "ref": "3400eeb1-4477-43d2-b817-64b71aa6606b",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b274f35f-304f-4c67-b7bf-87ab6b92ab0e"
        },
        "item": {
          "id": "d2bdd54b-1abb-4447-b3fa-0aa7aaab144d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b5ad7cb6-4c4e-4d38-9368-304f8a12086b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec00b5f1-2396-469d-bf82-ff9bd77d7d64",
        "cursor": {
          "ref": "6583403a-943d-44a3-b734-123f2c824a60",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "047620fd-220d-481c-991c-c2576780b72c"
        },
        "item": {
          "id": "ec00b5f1-2396-469d-bf82-ff9bd77d7d64",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "303699dd-96db-47ea-86b3-210dd889c6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c730f3-b89a-4b16-aa9f-89f3d388965b",
        "cursor": {
          "ref": "a6262b05-4dd4-43c8-a494-8a6a110e688c",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d019f481-e01b-47ee-8899-8180ae27fb1b"
        },
        "item": {
          "id": "b9c730f3-b89a-4b16-aa9f-89f3d388965b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "86ba00ff-741b-4550-a428-e09a672dc857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931e917c-ccf7-4928-b119-75d88d1c71dc",
        "cursor": {
          "ref": "80ca16b3-cee6-477c-b076-d4eea38038c6",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b6b732e6-2a45-4be0-8b6e-b0046e5ade49"
        },
        "item": {
          "id": "931e917c-ccf7-4928-b119-75d88d1c71dc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e8bf6428-10e7-452f-8d32-4c165fbfc3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3bbb0c-0047-4d79-9eb2-a6e6f14b633b",
        "cursor": {
          "ref": "11dd62d1-aa2a-4a2a-a0b0-85a00ec616bb",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fe39f903-066c-45d5-9178-55530d8b2996"
        },
        "item": {
          "id": "1f3bbb0c-0047-4d79-9eb2-a6e6f14b633b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a943a193-0177-4714-b5d3-b2f484e257ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3edd98-a6f6-4766-abef-af5be9e730b6",
        "cursor": {
          "ref": "241d4c8e-5fcb-45ce-b8fb-2ee9aad999a6",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b7698eb-cd67-4cc2-9b8b-ad21442f07aa"
        },
        "item": {
          "id": "eb3edd98-a6f6-4766-abef-af5be9e730b6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "97b8c8da-254a-4866-b040-ba870c7c7eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e400ef9-41b7-40b3-81ec-99d41157edaf",
        "cursor": {
          "ref": "c462ae82-4cdc-46d5-bdab-af2c687a4b9b",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "209d1350-0c6b-420b-80b4-221505b28062"
        },
        "item": {
          "id": "3e400ef9-41b7-40b3-81ec-99d41157edaf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d3aaf7cc-2105-46d8-9d94-90980ce1b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0012d9-e6c8-46b6-8bd4-c978071a2787",
        "cursor": {
          "ref": "9afc5747-fbdf-460f-8d2a-4b7b2c93f78f",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "41e1e983-05f9-4093-91f9-1f2ef03076fd"
        },
        "item": {
          "id": "6d0012d9-e6c8-46b6-8bd4-c978071a2787",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "11507156-c2ba-4762-a0e3-83198cf2562e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d3f78-5c75-42f1-94bd-75901b3b1638",
        "cursor": {
          "ref": "67f62922-5044-4d9d-bd0e-5df25870b332",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e50ba007-a133-4313-8219-2ff6381bbc98"
        },
        "item": {
          "id": "042d3f78-5c75-42f1-94bd-75901b3b1638",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "69a387d0-0a70-4e67-bad2-88a52014a89e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8175d52-0d00-4bb9-afad-266d5077a47e",
        "cursor": {
          "ref": "ff19942f-11ef-47fa-8a2a-b4d8991be420",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a36c3cfa-3827-4384-a322-10ebeb5dc68a"
        },
        "item": {
          "id": "b8175d52-0d00-4bb9-afad-266d5077a47e",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5b9c71b0-a793-4655-a2a8-30313f1971e4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c0b445-31cd-4082-9c6e-bc8277da57be",
        "cursor": {
          "ref": "eb6b0256-f8dd-4f3d-841e-18cec8990e7f",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6fe578af-a8df-47d2-804e-8891cb636e69"
        },
        "item": {
          "id": "b2c0b445-31cd-4082-9c6e-bc8277da57be",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cde3055a-f03b-4e22-acf9-e063eb04309f",
          "status": "Created",
          "code": 201,
          "responseTime": 4087,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "5a2567cf-5aa6-4b14-a369-f01d33bdf442",
        "cursor": {
          "ref": "f6c9ec71-6e36-4bdc-bdba-9b60020dbc42",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a881da9e-d21c-46a4-b0b1-82d2596d6cad"
        },
        "item": {
          "id": "5a2567cf-5aa6-4b14-a369-f01d33bdf442",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "99f20c52-1c78-4b2e-9674-2cccb66a1835",
          "status": "Created",
          "code": 201,
          "responseTime": 4488,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "bda4779f-d2c9-40c9-9e43-3c0dee4b0a53",
        "cursor": {
          "ref": "d2b90463-319d-45d5-b1bb-3d9a7a0d170b",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d8c7ccdf-d45a-48c3-b495-a3666caae6ce"
        },
        "item": {
          "id": "bda4779f-d2c9-40c9-9e43-3c0dee4b0a53",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3f622103-f4ef-4c89-bbc5-9855d3267616",
          "status": "Created",
          "code": 201,
          "responseTime": 5757,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "0f1d31b2-385d-4e13-b8f1-f9829d56d9c2",
        "cursor": {
          "ref": "8a41744e-e6d5-4616-90d6-8e9a873931f3",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b82a2013-b924-4045-81bd-415d324a6d38"
        },
        "item": {
          "id": "0f1d31b2-385d-4e13-b8f1-f9829d56d9c2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "43a3222b-6733-4c20-831f-0875150cc48f",
          "status": "Created",
          "code": 201,
          "responseTime": 3986,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "1a8f6403-4cba-44a2-ac43-d129f36ac58a",
        "cursor": {
          "ref": "dc21c77d-73c1-4fe6-ba22-b4c5052467fd",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "08890f2b-a5f1-46e3-a767-d9c0f7f2d103"
        },
        "item": {
          "id": "1a8f6403-4cba-44a2-ac43-d129f36ac58a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ec638371-96b7-4fb2-82dc-3bc5cfd64eef",
          "status": "Created",
          "code": 201,
          "responseTime": 5652,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "588d00e9-967b-4f06-b351-b6b1248f9b3a",
        "cursor": {
          "ref": "5d0ea175-4be5-499c-aa37-ea97b473234a",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f8f4436c-fc20-42d6-b585-9078a54526fb"
        },
        "item": {
          "id": "588d00e9-967b-4f06-b351-b6b1248f9b3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "724c35c4-afb4-44d2-a796-a40fbb946de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588d00e9-967b-4f06-b351-b6b1248f9b3a",
        "cursor": {
          "ref": "5d0ea175-4be5-499c-aa37-ea97b473234a",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f8f4436c-fc20-42d6-b585-9078a54526fb"
        },
        "item": {
          "id": "588d00e9-967b-4f06-b351-b6b1248f9b3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "724c35c4-afb4-44d2-a796-a40fbb946de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1002,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27dc8f7b-6ac9-4dea-a9eb-dea5a02252fe",
        "cursor": {
          "ref": "f85149ce-cfdc-4457-8c39-d027318d74fb",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5f5bc319-c913-4580-93d7-4d2d7c0e6b05"
        },
        "item": {
          "id": "27dc8f7b-6ac9-4dea-a9eb-dea5a02252fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c585974a-63e5-4993-8f24-10bdf15b0214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e9f2f7-0cbf-4245-af28-3cc90377c41f",
        "cursor": {
          "ref": "26c131f1-1dda-485d-b262-7b354b96b0d2",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "47f78241-766d-4ecd-9463-8d183c1ed1cd"
        },
        "item": {
          "id": "42e9f2f7-0cbf-4245-af28-3cc90377c41f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "522664db-e335-4891-945f-5e67e6b2a0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afa2661-b584-4a19-9c8d-cc8235410119",
        "cursor": {
          "ref": "c517817f-a4ce-40fe-aa2e-9d491015e3d3",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "631bc7f6-100f-4657-b715-90592b837906"
        },
        "item": {
          "id": "9afa2661-b584-4a19-9c8d-cc8235410119",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d6993c06-6005-4221-8618-2ec119a5d6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2943162-0c4e-4a66-89f9-417969c83995",
        "cursor": {
          "ref": "a5b576a8-5fad-402e-9da3-f840ca649bec",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c40d844f-0a49-4ceb-9062-4b0232571997"
        },
        "item": {
          "id": "b2943162-0c4e-4a66-89f9-417969c83995",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c0dbf66a-c57e-49c3-a836-6b6662025e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dedb2a7-33cd-4fa0-a65b-9fe6bcd6e8b8",
        "cursor": {
          "ref": "5cf7c649-a509-4b69-a8d5-8d92a50d9322",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9bc94fe4-b39a-4806-8b22-1f8fe7440f0d"
        },
        "item": {
          "id": "9dedb2a7-33cd-4fa0-a65b-9fe6bcd6e8b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6008e4de-52e6-4858-aca7-d0ac400550fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d2b7dd-d5ad-45e9-8123-c676845f0b65",
        "cursor": {
          "ref": "2912d3b6-d609-4c77-a5ad-7b913814e59b",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "61a33fd1-6de7-4108-b888-9006ea85360d"
        },
        "item": {
          "id": "d3d2b7dd-d5ad-45e9-8123-c676845f0b65",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20521cb7-0e24-4e03-a670-71ac44042e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c228d8-b4ba-4381-93b8-c0ccd8ef0691",
        "cursor": {
          "ref": "2d43233e-6fbd-4e98-844d-404ad36173be",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a647bbb0-2cb6-4914-afd2-759d75b325cb"
        },
        "item": {
          "id": "30c228d8-b4ba-4381-93b8-c0ccd8ef0691",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "306ee120-d8d0-4b96-bd91-6b901bfda4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a6e553-aded-4d71-9146-1f3d32b307ab",
        "cursor": {
          "ref": "aad994cd-c7ff-4f79-942b-44806b88d59c",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0f4c99ee-6577-427b-aa9a-87fccd13a083"
        },
        "item": {
          "id": "86a6e553-aded-4d71-9146-1f3d32b307ab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a56db973-0934-4c3e-8cfb-dd553d5163ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72357ef2-7f4c-4e6a-9387-95340c5a06a8",
        "cursor": {
          "ref": "f78c4e36-09a9-423a-b363-4c68e5fe6d39",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f59e965c-2b8f-4f51-97d8-1efb41f61630"
        },
        "item": {
          "id": "72357ef2-7f4c-4e6a-9387-95340c5a06a8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2781dabe-7242-4843-8211-b46b0bc258d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba87db2-138c-4b2f-a79c-7b7844f802e8",
        "cursor": {
          "ref": "567b3e0b-ece1-4b3e-80cf-1ada59759c14",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d1401e7d-0341-4b62-8ba5-ae38f42b76af"
        },
        "item": {
          "id": "bba87db2-138c-4b2f-a79c-7b7844f802e8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed37035d-9f19-40c6-a6b7-fc54c688e047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ed6888-6e88-43f6-af57-accfbd8068a3",
        "cursor": {
          "ref": "e064f775-1b13-4b24-bb59-fed1a60090c7",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37bdc4d3-43f2-4393-aa43-5b8ba2eee1aa"
        },
        "item": {
          "id": "f3ed6888-6e88-43f6-af57-accfbd8068a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5f81f39a-5a8f-4e41-af14-8728602decf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd116e2-3121-4c8b-81dc-b27d87864f35",
        "cursor": {
          "ref": "24cbe076-d437-4707-b420-ef984eeb6405",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "76f338d5-e729-466a-83e2-419912bbe9b3"
        },
        "item": {
          "id": "0dd116e2-3121-4c8b-81dc-b27d87864f35",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9779978d-d92b-4ac1-8d1f-5cdebb3ce5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa46898-f80c-4e10-9ad2-4351426e0a66",
        "cursor": {
          "ref": "2edbde8f-300d-4ae1-afb3-1c3c0f922435",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "dd326185-a541-49ca-a811-59c3238ffd2a"
        },
        "item": {
          "id": "5fa46898-f80c-4e10-9ad2-4351426e0a66",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "66609632-3924-428b-97e5-116bbf485416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 828,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fc4495-ae99-4ca4-8094-e09dcbdfc016",
        "cursor": {
          "ref": "efbb5a61-5fbd-462c-b0ca-d42f77a596bb",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "775b6187-5d2b-415f-b6c1-8f695fda076a"
        },
        "item": {
          "id": "a0fc4495-ae99-4ca4-8094-e09dcbdfc016",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "23947e4b-4ff9-45e6-881e-556ebf3171a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef3d068-be7a-4d23-82d1-214a8649e5af",
        "cursor": {
          "ref": "13d066ff-982d-46ab-ade8-ffd0601d578e",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3875370e-1ec7-47c8-a8f7-c42a05cd6ae2"
        },
        "item": {
          "id": "9ef3d068-be7a-4d23-82d1-214a8649e5af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "425829a5-3b9f-4850-90ca-09f4c1c8f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1124,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99d3ed4-ebdf-43cc-ae5f-bfa992f2710c",
        "cursor": {
          "ref": "28665da8-b38a-487f-9e22-487731d4e5ed",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c33dc819-188b-4a84-ad09-4ab9b4845930"
        },
        "item": {
          "id": "e99d3ed4-ebdf-43cc-ae5f-bfa992f2710c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d31d554c-d213-4aa8-98d5-f0c7e3070aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e4c647-79ad-4023-9bf1-1c23c1cad9e4",
        "cursor": {
          "ref": "b7331431-4e88-4c99-ba0f-7a4c6b48f15f",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86d06add-fd73-460a-bdf6-58fbe1b9e726"
        },
        "item": {
          "id": "95e4c647-79ad-4023-9bf1-1c23c1cad9e4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5623ecf2-122f-4178-927d-b849f3f0c528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03380d6c-69d6-4d04-8be8-e7105bebdc4f",
        "cursor": {
          "ref": "2235fa5f-c1aa-452c-a557-7090afc13d28",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7c277022-e412-4a0b-8d13-e5cdd962a699"
        },
        "item": {
          "id": "03380d6c-69d6-4d04-8be8-e7105bebdc4f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4fb12a29-e049-4b3e-bde1-fdd8b954613c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65ed0c0-ae26-4d21-bde7-18eba64f0d90",
        "cursor": {
          "ref": "cfbec2fd-ab65-46ff-ac4a-46f21ad2daac",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "004225a1-9f45-4966-bedf-ff3b8f86bbdf"
        },
        "item": {
          "id": "a65ed0c0-ae26-4d21-bde7-18eba64f0d90",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d5667efc-35ee-4e3d-9681-eb6fc41e85f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d966f3a-0fd0-4249-921a-a5b8590a3691",
        "cursor": {
          "ref": "a781cc58-f8a6-47f7-a3a4-2bd92d2486a0",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6298a4c3-5ba4-48e3-8b31-8cae2a7c7660"
        },
        "item": {
          "id": "2d966f3a-0fd0-4249-921a-a5b8590a3691",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f4840768-a670-4c0e-83f0-373c2d1b95e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b39c2d-2bb5-4c62-86ef-c2e542cc4aef",
        "cursor": {
          "ref": "9282d933-d9d1-4efe-aee8-4dad92d71739",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3866e098-13c5-4ef7-9417-83370ea89610"
        },
        "item": {
          "id": "f9b39c2d-2bb5-4c62-86ef-c2e542cc4aef",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4a2b504-6b92-41c8-bd1f-27eb71711558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a661aa4f-d6a3-48a1-be57-04edec0afdd2",
        "cursor": {
          "ref": "31e1871a-bd8c-4e3d-8efa-cc85fa5cf75b",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "69249711-e086-4620-b981-b25456e2507a"
        },
        "item": {
          "id": "a661aa4f-d6a3-48a1-be57-04edec0afdd2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "acd1c570-406b-4b31-a3ef-d950f7157d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dd3839-35fb-4128-b469-a268048c54ee",
        "cursor": {
          "ref": "ef5245c9-afca-4136-91ec-480af80c797b",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f09925bc-5447-405f-991d-28ae673b485f"
        },
        "item": {
          "id": "62dd3839-35fb-4128-b469-a268048c54ee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "27636f0b-b15d-4e76-8a6b-69756ec4ec17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dc53a0-627a-4f64-bb96-8a2364cdf74a",
        "cursor": {
          "ref": "cc388e4f-cd2f-4670-b2e0-4a7972970dfb",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9e1165ff-74e9-4a51-af51-77af9f35475c"
        },
        "item": {
          "id": "39dc53a0-627a-4f64-bb96-8a2364cdf74a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "65b39d60-0f7f-444a-b035-8bc1a9c83c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab82b48-7dfb-427b-bb73-bced7cedb1a5",
        "cursor": {
          "ref": "e5628326-f162-4112-bc77-e088f4f0d7a2",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e45ee5bf-573e-43ae-99eb-2192fe4d6a3c"
        },
        "item": {
          "id": "aab82b48-7dfb-427b-bb73-bced7cedb1a5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cfa07539-0e2e-4bcd-98c9-798d5a782647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1172c4-706f-47c3-8e8b-726beea2848f",
        "cursor": {
          "ref": "cf52734f-92ef-4c70-9fe4-85d8410e14ec",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b1a2bd3-1f21-4a96-9de1-005c732778a4"
        },
        "item": {
          "id": "1e1172c4-706f-47c3-8e8b-726beea2848f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ee41d892-3334-4abc-89f1-ceda88f90d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cf1c5d-5f56-49a4-87ef-7776b1baccb0",
        "cursor": {
          "ref": "2e8704f6-c8c4-4601-8417-7724983c329a",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fa8a8bac-25a9-430c-b2a0-c861fcbe4adb"
        },
        "item": {
          "id": "13cf1c5d-5f56-49a4-87ef-7776b1baccb0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8fb44db3-486e-456a-bb4d-dba3434d1875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432028a8-ea08-4c23-a636-27e4bb205767",
        "cursor": {
          "ref": "5decd952-d694-450d-8bd6-ec04072ccca5",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "01af25e5-23b0-48bf-af77-3f0f200dddbb"
        },
        "item": {
          "id": "432028a8-ea08-4c23-a636-27e4bb205767",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "deae02b4-2408-4ad0-8609-4b641830544c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1211fe3-e076-41e1-8ea4-cd79655a6772",
        "cursor": {
          "ref": "184facdb-24e3-48fa-8f1d-67f333743369",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4d1feb45-bbd1-4037-b57f-0d2bbe1d2b5a"
        },
        "item": {
          "id": "b1211fe3-e076-41e1-8ea4-cd79655a6772",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "31ec430c-a00a-45fd-b49c-32bd46064929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4efc33-418a-4694-bf2c-cb21ab4a9425",
        "cursor": {
          "ref": "d21392f0-b038-472f-9ff7-b186109520fb",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a6467839-2723-4abe-a63a-bc3219c00641"
        },
        "item": {
          "id": "3d4efc33-418a-4694-bf2c-cb21ab4a9425",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25e48c13-f62f-44d5-ae22-5865d8344618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135c98e9-a8ab-4f78-8888-625c586e7d1b",
        "cursor": {
          "ref": "97b0078b-88d3-4cfc-982e-12d868df5e1d",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b98c607e-138d-433a-9392-497b1cf92d79"
        },
        "item": {
          "id": "135c98e9-a8ab-4f78-8888-625c586e7d1b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "00f06425-7fb7-480e-b373-a09aea73c3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc27d0f7-31aa-4b9f-9a21-97aea644240f",
        "cursor": {
          "ref": "e98c6c6d-7c53-4a3f-8736-c489e4a2679c",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "59cb0c8d-d315-4f5c-96d5-6dcd22e55c05"
        },
        "item": {
          "id": "cc27d0f7-31aa-4b9f-9a21-97aea644240f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "23b297a5-2363-4836-93ea-6b788c0df310",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af818f99-7e12-4e57-aa0d-8cc2744ecce8",
        "cursor": {
          "ref": "40e4c7b4-7be7-41bc-84c8-57ce5d10211c",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4cdb9008-3053-44bc-9ef1-6198417e0727"
        },
        "item": {
          "id": "af818f99-7e12-4e57-aa0d-8cc2744ecce8",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8a866894-6861-48ed-89e8-72b684ea7f2c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae24b8b6-98cf-486c-a424-dd794a1cf1b1",
        "cursor": {
          "ref": "2b05ff08-756b-48b8-bc77-d3ea6034fe0d",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2a4dba3c-d691-4aae-a21b-b8f875fdd48d"
        },
        "item": {
          "id": "ae24b8b6-98cf-486c-a424-dd794a1cf1b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba032af3-d39e-4869-8b8f-d78557c7295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae24b8b6-98cf-486c-a424-dd794a1cf1b1",
        "cursor": {
          "ref": "2b05ff08-756b-48b8-bc77-d3ea6034fe0d",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2a4dba3c-d691-4aae-a21b-b8f875fdd48d"
        },
        "item": {
          "id": "ae24b8b6-98cf-486c-a424-dd794a1cf1b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba032af3-d39e-4869-8b8f-d78557c7295a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e097f7db-d641-4141-af9b-a0f6ca6f78e1",
        "cursor": {
          "ref": "922b1b9d-869c-4d39-9617-00d9d4c34a1c",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "660d8292-377b-4cc7-98de-286d93dc0e14"
        },
        "item": {
          "id": "e097f7db-d641-4141-af9b-a0f6ca6f78e1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1e0e8842-665c-4d46-9065-b6bc151271f0",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "d1e6855d-ac52-4fbe-a3e9-447e35eaf552",
        "cursor": {
          "ref": "83a04bba-bffe-4ebe-8538-1f2fcb1e8ec9",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "026d75f5-39e7-400e-ab8f-91a20a86f3b2"
        },
        "item": {
          "id": "d1e6855d-ac52-4fbe-a3e9-447e35eaf552",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "841de629-079f-41e7-9f90-896def7cd473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b9c5db-c846-4a06-9181-2d62b466232c",
        "cursor": {
          "ref": "8df4a32d-6b63-4d78-abf9-3b2cef5a09c6",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "786b3699-4fc0-491c-862a-532b62ffa487"
        },
        "item": {
          "id": "84b9c5db-c846-4a06-9181-2d62b466232c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fcc8fbac-6b75-4eec-9de3-7683c3da08f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d56854-45e6-4a34-91e3-090c62173c19",
        "cursor": {
          "ref": "6f5f5098-ced3-4aa8-ac27-e19b0cf39592",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f74cc643-30f3-485b-9526-7df9df12a5c7"
        },
        "item": {
          "id": "d2d56854-45e6-4a34-91e3-090c62173c19",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2617a980-ea82-458c-898b-0129e2abd29d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbd591c-7201-4d46-ae3d-1f1c5ea7c028",
        "cursor": {
          "ref": "74e2b229-66f7-48a0-b764-064d92bfd112",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1e605438-5908-4771-b388-b0d6ecbcc305"
        },
        "item": {
          "id": "efbd591c-7201-4d46-ae3d-1f1c5ea7c028",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "bd3b98d5-fb30-4814-92ad-ce2940386d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14815d99-0baa-4d38-874b-56a2d8247e70",
        "cursor": {
          "ref": "76a3e22c-81c7-4ddd-a04d-a825feadb692",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dce65738-852d-465b-b9c7-9688c2f11f26"
        },
        "item": {
          "id": "14815d99-0baa-4d38-874b-56a2d8247e70",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c888009b-b690-4624-9ff1-bc3f71de4cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d79ba96-27e2-4d0e-8ffd-43224ed8ad68",
        "cursor": {
          "ref": "04f243bd-b7bc-409a-84b5-ef83f7b08aa2",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "27d490a7-cde1-4552-9d59-90a4692d2351"
        },
        "item": {
          "id": "8d79ba96-27e2-4d0e-8ffd-43224ed8ad68",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fe665804-b523-4ddd-a2e1-0589964f4186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82617b3-4c0c-4d0b-90a5-338ad660b3bd",
        "cursor": {
          "ref": "40b564d1-a819-4371-9880-2dff05ba37f2",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "2116f7e0-26b4-409e-8093-e637838b6cfd"
        },
        "item": {
          "id": "d82617b3-4c0c-4d0b-90a5-338ad660b3bd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eb97b462-71ac-44ac-8e64-2413b9fb786f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ecd0b4-3522-4209-8f81-8b6c8229b3e2",
        "cursor": {
          "ref": "3329c57a-1992-4ac1-9a3d-cfa64da5b243",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9cdc856c-365f-4bfe-ab08-10b477f0695e"
        },
        "item": {
          "id": "37ecd0b4-3522-4209-8f81-8b6c8229b3e2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1ae3c96c-a570-4b9e-82c7-ef128ff7d12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2de70b-bdd4-4914-aec6-d94626236961",
        "cursor": {
          "ref": "7da67ca1-3153-4c81-ab8f-2c529f63850f",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e10e19c7-8a04-48a7-a0f1-a86232561a3c"
        },
        "item": {
          "id": "fe2de70b-bdd4-4914-aec6-d94626236961",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "67e770fd-ad86-4bef-b9ea-b65cdbb9db84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10647caa-8ecc-4f2b-914c-677139299d9d",
        "cursor": {
          "ref": "727c2c54-5808-439e-af49-358f3772750d",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c1fd7b1f-1147-413a-a715-3690f4ac37da"
        },
        "item": {
          "id": "10647caa-8ecc-4f2b-914c-677139299d9d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "301da4e0-9108-4f4e-ae5c-1e5cb1bcb7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7c595-1602-49d9-8683-58be054775c8",
        "cursor": {
          "ref": "4b3b743e-83c4-45b7-ac30-efed211142fb",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c6d2053e-c9e0-4bf3-af71-b9a859eace73"
        },
        "item": {
          "id": "acc7c595-1602-49d9-8683-58be054775c8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c8b5ed41-1ac4-48e1-955a-c86a312585ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d7531f-5f08-4d31-853e-167235a00c65",
        "cursor": {
          "ref": "ccae1b80-a46d-4c62-a8be-83357268eba6",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3eebc9f2-5a08-4421-94f1-9e7fe10818a7"
        },
        "item": {
          "id": "15d7531f-5f08-4d31-853e-167235a00c65",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a6b44dea-1dfb-4d97-b5cb-91f0981050b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dd393e-6f43-4c3b-842e-ad63a66b983d",
        "cursor": {
          "ref": "9cabb6d8-b3b4-463b-90b5-5a16047861b3",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c09b0ce6-145a-40b6-a98e-a12ed7fffc3b"
        },
        "item": {
          "id": "74dd393e-6f43-4c3b-842e-ad63a66b983d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "03f676c1-f10b-4df1-8ca4-0ff502b8f4eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cded93-7597-4787-be75-ea261706f3c3",
        "cursor": {
          "ref": "84d33bac-4c65-4d98-bcc2-7cd13e9ce858",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9655b284-9f25-4223-b059-55f72b9f6a1d"
        },
        "item": {
          "id": "a6cded93-7597-4787-be75-ea261706f3c3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d437aa31-7298-42d7-8247-2c769dfd1c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2255d1d4-1063-442a-8d17-db9a1b38622b",
        "cursor": {
          "ref": "e4fab14b-2026-4633-bbf0-cddc9fc0e036",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ad4892c8-5947-4bb6-9da0-d7df0bbd68a3"
        },
        "item": {
          "id": "2255d1d4-1063-442a-8d17-db9a1b38622b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dad96189-913a-4334-a375-be85af3c8726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4ebbbf-0ef6-43f3-9f4f-e89ea3484f68",
        "cursor": {
          "ref": "d7a37a2f-eddb-4d05-bf38-8702bcf84c78",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "09ec8651-b06a-4da8-a913-9d6458943526"
        },
        "item": {
          "id": "8e4ebbbf-0ef6-43f3-9f4f-e89ea3484f68",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "4ed3ad4a-4f85-4e21-b600-cfb947c4ab30",
          "status": "OK",
          "code": 200,
          "responseTime": 2123,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "3bc336dc-aa78-4667-b895-f14d8ff77df5",
        "cursor": {
          "ref": "353752a4-0cc7-4423-acba-8cff19f7a559",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c4e547a6-c2c3-4640-870e-eaa44ceaf9e4"
        },
        "item": {
          "id": "3bc336dc-aa78-4667-b895-f14d8ff77df5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c9f696cf-77f1-4fe4-8b77-4b5e2aaf4674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963e8bcc-9744-4d5f-8db9-26790cf317ea",
        "cursor": {
          "ref": "2bdbf18e-95cf-4774-99da-27940f6b316f",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3284c161-be32-4543-b267-41246d41c00c"
        },
        "item": {
          "id": "963e8bcc-9744-4d5f-8db9-26790cf317ea",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "069e0b92-5ef8-42d2-9756-ccd8cd38835f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba63f70-4876-486d-a0a1-67d52fd3c9b1",
        "cursor": {
          "ref": "36d790f6-a367-467c-9bd0-d575b7f0d61f",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6e510f9e-b424-461a-b727-3bd7d2cfe357"
        },
        "item": {
          "id": "6ba63f70-4876-486d-a0a1-67d52fd3c9b1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "55881907-499f-4289-bd79-5fd6ad6163e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cee8e8-9346-446c-adcb-d0fc4c181473",
        "cursor": {
          "ref": "41fdeba0-6205-44bd-aa8d-bc3d5ccf2a9e",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cb96dfef-75a3-41ec-b2ef-97093403203f"
        },
        "item": {
          "id": "b5cee8e8-9346-446c-adcb-d0fc4c181473",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42d4786c-0b65-44cc-891f-f00457c2fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d4fe1d-01e3-42fb-bd6f-43963cea3912",
        "cursor": {
          "ref": "ee725f2e-575f-4c28-b944-7466663ed6b4",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ec27214-1995-41ab-8814-355a16820b34"
        },
        "item": {
          "id": "a0d4fe1d-01e3-42fb-bd6f-43963cea3912",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e509016f-f217-460d-91d6-a5efd50b2bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8f98ce-8bba-433d-bf06-384217f03d8f",
        "cursor": {
          "ref": "dd526dd4-0a16-4bb0-82e9-162501a04148",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "008e9cd6-1d92-4c9b-bfe1-5dc89d56d7ea"
        },
        "item": {
          "id": "4d8f98ce-8bba-433d-bf06-384217f03d8f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9b197437-c8e8-404c-ba16-5632653742f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f18abe-b2af-4294-a721-0afab145730d",
        "cursor": {
          "ref": "61cb9aa5-5518-4d82-a8ba-2f92675c1c6f",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "16ca58bd-47a8-4575-aa63-d60ab17062fb"
        },
        "item": {
          "id": "43f18abe-b2af-4294-a721-0afab145730d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "816ab860-c75a-45b1-877f-6a409a809a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeae5c5e-8a2b-4a0a-8004-dd1710f50847",
        "cursor": {
          "ref": "d69333f1-d5ba-47eb-9c75-9ff2231146c2",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "22d40634-82f0-40e2-a06e-343bb50dc0cd"
        },
        "item": {
          "id": "aeae5c5e-8a2b-4a0a-8004-dd1710f50847",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "72d044e0-9d53-4c73-8a2a-c9afcde703e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92db41b-3650-4c33-8ce4-436c272ec46d",
        "cursor": {
          "ref": "7ca13429-4383-4130-9c8b-bcfb644ba2f1",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48e606e6-9ed6-43aa-92bc-e1874f038496"
        },
        "item": {
          "id": "c92db41b-3650-4c33-8ce4-436c272ec46d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d4fe4aa7-c8a3-4995-a3f1-4a7062360c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbad454-1cda-4e5d-8e48-8db6eb83f74b",
        "cursor": {
          "ref": "5abcbded-ff3d-44dc-aa30-90e17d504a51",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "770334ff-7337-4dd4-80d9-11188e33e5c9"
        },
        "item": {
          "id": "0bbad454-1cda-4e5d-8e48-8db6eb83f74b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "687d0e1e-a110-4dce-b86e-d2d5485a4f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2c73ac-f6e7-422f-a1a1-869612256898",
        "cursor": {
          "ref": "8a9458b1-b853-4107-a788-4ecd6f247cfc",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4e26bc7b-957f-46f6-ad62-4e86595f7a63"
        },
        "item": {
          "id": "8b2c73ac-f6e7-422f-a1a1-869612256898",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f88ab51e-7380-408d-8106-8ea1b0cf0602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94561bee-913b-43f7-a65c-2c0439882c5c",
        "cursor": {
          "ref": "12c24f6c-b535-4a77-8c27-75bd840338c2",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0ad0a3a9-974e-4adf-aaf3-2d992710c43e"
        },
        "item": {
          "id": "94561bee-913b-43f7-a65c-2c0439882c5c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ef27c3ab-c0c1-441f-b72a-41981b01dc1a",
          "status": "OK",
          "code": 200,
          "responseTime": 344,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "12410648-efbb-4f4b-b4cd-3b1eb6df9393",
        "cursor": {
          "ref": "f4dc2145-984e-4377-9446-ee143642b5db",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e8b4c52b-9ae4-45f8-a603-8fdff3daa29a"
        },
        "item": {
          "id": "12410648-efbb-4f4b-b4cd-3b1eb6df9393",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f3d93236-6365-4a41-a875-edbd3b5780d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2174afc2-2470-4354-baa3-310930f4d613",
        "cursor": {
          "ref": "27450b8d-f445-4eb2-9709-f6c9761a0c2e",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0250e847-9a56-4879-b93b-a7dc7768d041"
        },
        "item": {
          "id": "2174afc2-2470-4354-baa3-310930f4d613",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6b675554-1512-474e-a5fa-0f6f7f3d048a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660d983f-1459-460c-aa7a-4e5512aec5f4",
        "cursor": {
          "ref": "8d401f13-2283-441c-b673-7a9b12540461",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b5d0f9d6-bbd2-4914-ac7e-93513c384cb5"
        },
        "item": {
          "id": "660d983f-1459-460c-aa7a-4e5512aec5f4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1e26ba3c-5702-4795-9ac2-0037c1874fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5914c3ac-b3ee-474b-b6a3-601437d3bb8c",
        "cursor": {
          "ref": "73db3ac3-853c-48ca-ac5e-ed92de4fd29e",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a3181f5e-1003-4fd8-8546-fb18db944861"
        },
        "item": {
          "id": "5914c3ac-b3ee-474b-b6a3-601437d3bb8c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5a0aa88b-bae8-44dd-b7fb-7baf29c37a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107f9d25-d5b8-4622-9d7c-8c411a1897d3",
        "cursor": {
          "ref": "0fdfadf4-ae12-4693-8ade-c05a66dd0a67",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5298f18a-3c79-46ae-a0b0-0050f4b0f433"
        },
        "item": {
          "id": "107f9d25-d5b8-4622-9d7c-8c411a1897d3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8a07b436-a55d-4fc8-85bf-ed93bb1746f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0aec492-6b00-4108-a502-649a80c48b84",
        "cursor": {
          "ref": "182f07fd-309d-4195-a760-93aaeacdcd94",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f71b80fc-9f50-49ec-81dc-d1437f973211"
        },
        "item": {
          "id": "d0aec492-6b00-4108-a502-649a80c48b84",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "5c93144b-6fc5-4fc7-82b7-6d92efc507ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b4e71e-9694-4107-94ee-8264521aea50",
        "cursor": {
          "ref": "e3bd55a2-62b0-402a-8ba9-f47c5cfe7133",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "db32cb1d-0277-498f-afc3-806561e81e9d"
        },
        "item": {
          "id": "83b4e71e-9694-4107-94ee-8264521aea50",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "90d2eb31-f35b-4516-a63b-1986d52413fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3142069a-407e-4c19-8616-a49946a0e33d",
        "cursor": {
          "ref": "038c9a23-7379-4eb4-bd47-bc9babf4104a",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30c13f98-56d1-40c7-933b-b264d50889c2"
        },
        "item": {
          "id": "3142069a-407e-4c19-8616-a49946a0e33d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9094f64d-9a4d-4d43-ac31-8f0e5723064d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd2edef-8897-4baa-9971-fb622de9e43f",
        "cursor": {
          "ref": "369ea384-d2ee-4c08-888d-fd6d72df4de5",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cd305975-4a2c-4771-9080-39f0017a07a1"
        },
        "item": {
          "id": "3cd2edef-8897-4baa-9971-fb622de9e43f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e10c1633-b86a-40d7-9184-bc8e684d5e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c7929f-e990-4f50-9ab1-080872511a66",
        "cursor": {
          "ref": "78f7fb51-718f-44e7-9851-da00a1a06b61",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3de3d4bc-092e-4f70-88ff-921347eaf0ce"
        },
        "item": {
          "id": "89c7929f-e990-4f50-9ab1-080872511a66",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a2528084-072a-4080-8b6d-ac409efeec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20df7944-35aa-4062-8608-c6fcff5bdf98",
        "cursor": {
          "ref": "01db2422-1882-4851-8564-707366c855b5",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3074663f-98e1-4642-9ae5-7639c99b8388"
        },
        "item": {
          "id": "20df7944-35aa-4062-8608-c6fcff5bdf98",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a59564ae-4b09-4bfa-be10-e8ee4aa6306f",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "d440a95f-27fa-4f8c-aa1f-a35f1f512966",
        "cursor": {
          "ref": "55327c26-6595-4b4d-ae55-f430e3e15f11",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b91f6a05-19f8-412b-a138-4f35b0352ec9"
        },
        "item": {
          "id": "d440a95f-27fa-4f8c-aa1f-a35f1f512966",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "912daba2-f88b-4314-8bcc-f61746e6fdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d45719-514f-42f1-a009-7136834b77b7",
        "cursor": {
          "ref": "6ead9864-6187-409c-aec5-79f9f6ed845c",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "371bed24-491c-4d85-86be-47f3f148a908"
        },
        "item": {
          "id": "d1d45719-514f-42f1-a009-7136834b77b7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a1db6474-3796-42b7-8b9d-7afcbf0e24bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034456ef-7167-4c24-b7a6-0589827caa0d",
        "cursor": {
          "ref": "8e58c70e-d2ab-423a-8b5e-254e021c0dde",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "93ba5e32-ea50-45f7-8ef9-4ab9a12b60f4"
        },
        "item": {
          "id": "034456ef-7167-4c24-b7a6-0589827caa0d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "dd87b494-035f-42aa-bda4-3b0f7e412ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4ee7b7-a984-4470-a01b-e27f1ee14c72",
        "cursor": {
          "ref": "d7d0b9bb-17fe-4d98-9d4a-ae6015d4d042",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d54e0d96-983e-44f3-9d15-c09c3c19a634"
        },
        "item": {
          "id": "ad4ee7b7-a984-4470-a01b-e27f1ee14c72",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "68874202-5663-4b5a-b847-8ddcfdc74f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d13be-3015-467c-b127-19fbb87fc119",
        "cursor": {
          "ref": "29dd105b-8f46-4c61-a3cf-3a9616eccd53",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3d1fd874-64ab-4a5d-b3c1-dbba65d327bd"
        },
        "item": {
          "id": "952d13be-3015-467c-b127-19fbb87fc119",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2f618a03-20a2-41c0-878b-c221ab7f12bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01db804c-5c4d-4577-92f7-393ad0ab130c",
        "cursor": {
          "ref": "ea530dc0-0003-40ac-a991-607d15b65816",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "26ee1062-c7de-435f-8b8b-7f3b65a869b0"
        },
        "item": {
          "id": "01db804c-5c4d-4577-92f7-393ad0ab130c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7e2e67eb-2ae6-46bb-9291-b1491ca3a819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e2f600-8318-41a5-a4a4-02bd4fd98ef1",
        "cursor": {
          "ref": "9328bbaa-897b-4c51-9b65-d7f10851d078",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ce891985-79c2-41dd-a806-02f30b264648"
        },
        "item": {
          "id": "22e2f600-8318-41a5-a4a4-02bd4fd98ef1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6523c851-77d1-49cc-b62e-921267345d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0e1786-9d07-462a-b9fe-83eaab88c276",
        "cursor": {
          "ref": "f3a4cd9d-2d2f-4f96-8edd-16226057b491",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5a4790b3-36aa-4073-9a0f-65a9dc81c0bc"
        },
        "item": {
          "id": "ad0e1786-9d07-462a-b9fe-83eaab88c276",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "20f97631-5a53-4f47-86aa-20551a646516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df3804d-cbee-4767-8f3c-78ddbb892f8d",
        "cursor": {
          "ref": "63a38ed9-f064-49f6-a685-5736c0b635e0",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9d3b1887-c528-4929-89e8-7482f395a9b3"
        },
        "item": {
          "id": "9df3804d-cbee-4767-8f3c-78ddbb892f8d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2cb2a028-41a3-44a2-ae96-d55477e0013a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e60703-5c5c-41e2-99e8-18f9e7d0b150",
        "cursor": {
          "ref": "5684f929-b92d-45fe-844f-a337615f9780",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "16df42c8-46e2-409f-8512-ce42c2fc98a6"
        },
        "item": {
          "id": "81e60703-5c5c-41e2-99e8-18f9e7d0b150",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc72e1cf-c443-420f-983c-524fecd6f3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd21a9e8-d77f-4430-9073-f6791fcecf23",
        "cursor": {
          "ref": "e1cea508-36ca-4b32-b0d3-8c46f273bd3b",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "01a6b832-3604-4441-bb2e-c14383c29705"
        },
        "item": {
          "id": "cd21a9e8-d77f-4430-9073-f6791fcecf23",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "521a260d-c1e2-42a5-9329-a26b58d57891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d374741e-53ac-420c-9979-ad13d193e140",
        "cursor": {
          "ref": "27a5b813-91e9-4474-8f2e-25a67215e461",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c0782ac6-24a0-45ce-bbc7-e3298ef70ffc"
        },
        "item": {
          "id": "d374741e-53ac-420c-9979-ad13d193e140",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f997db36-1065-4ba7-a0ec-12c40f266f53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65944a58-39e9-4b2c-b710-99b84eec8d29",
        "cursor": {
          "ref": "f895b478-d163-4c4f-a459-b2fe225b6c50",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "219993ef-b2a4-4321-95e3-0ffa108045fa"
        },
        "item": {
          "id": "65944a58-39e9-4b2c-b710-99b84eec8d29",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fa54c5e4-fffc-4188-a27f-7fcda77c0c78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55badc0-4491-4275-a981-7a3aa5a25afc",
        "cursor": {
          "ref": "d5c1e680-30fe-4baf-a7d0-28e52e77e0fc",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "740ffd75-86fd-4a94-b407-135d7cea2893"
        },
        "item": {
          "id": "b55badc0-4491-4275-a981-7a3aa5a25afc",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a552607-7c8e-4fbb-85ec-0f4fd744fbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e666bfb2-af79-452f-958f-38daf1dd4db4",
        "cursor": {
          "ref": "70715fba-ba6a-4e6f-9d31-c88f7a7275ab",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "36e64d87-3b75-44a7-aab7-074d1aaf8f22"
        },
        "item": {
          "id": "e666bfb2-af79-452f-958f-38daf1dd4db4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "39ebf44c-0b19-4340-8877-b6d566598b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659e0b9a-15d2-437b-a484-322739b86e7e",
        "cursor": {
          "ref": "08446ef5-67d6-4f9d-83e3-deb1d98f189f",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0fa698d5-a7aa-4a90-ba1c-1f9d4fd35550"
        },
        "item": {
          "id": "659e0b9a-15d2-437b-a484-322739b86e7e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f82e20e4-c78a-427d-a51f-c64797d119d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6199bff-0e54-4405-b10a-8ee1d4d99f71",
        "cursor": {
          "ref": "cacde4aa-4196-4860-9723-95bef2492b4e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3101ede6-6090-45fa-9eb6-3cb5c944d0ef"
        },
        "item": {
          "id": "e6199bff-0e54-4405-b10a-8ee1d4d99f71",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b3d131a9-ac3c-47d2-a3f2-e69d4d484379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdd17d2-0939-42f2-beaa-b399503ec372",
        "cursor": {
          "ref": "43d5b548-732f-4277-8a1a-a97c32f51bbe",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f8380150-961f-4720-8cbc-314d2094a50e"
        },
        "item": {
          "id": "5bdd17d2-0939-42f2-beaa-b399503ec372",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cb30af4b-813c-4740-8799-b31566ee5aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0895e3-2ed8-4484-91d6-38dbdcd2ec86",
        "cursor": {
          "ref": "47d433b0-972a-4638-818f-a21d7b5bae3a",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e8b36ecb-e3e7-413c-bff1-52659f704669"
        },
        "item": {
          "id": "cb0895e3-2ed8-4484-91d6-38dbdcd2ec86",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "75753c06-4fb7-4afc-9897-25da38a99ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597e81fa-5b30-4d96-9fd8-27264ce1a8ba",
        "cursor": {
          "ref": "274dea7d-c588-4e4c-8550-9991207caea6",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "841faec4-57aa-4bc8-87cf-3d943dbdd01f"
        },
        "item": {
          "id": "597e81fa-5b30-4d96-9fd8-27264ce1a8ba",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fe6c1dbb-502b-43d1-a66a-5baf1b8186f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85aeff1-0a64-4938-9806-82e79337bdcc",
        "cursor": {
          "ref": "0743914a-f646-4f91-ab07-9bdc4dc2cfbe",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0c66e823-84fe-4bec-996d-97983b1c5734"
        },
        "item": {
          "id": "e85aeff1-0a64-4938-9806-82e79337bdcc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c18d7475-2b1a-4a33-9e07-1ab0b1d36b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c930a987-aec0-4b0a-a734-fbcd6dadbec3",
        "cursor": {
          "ref": "3a99deda-5691-4f42-8970-35c503c80d3e",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2d442bcf-9243-423d-bcbb-645d33239186"
        },
        "item": {
          "id": "c930a987-aec0-4b0a-a734-fbcd6dadbec3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ba27bceb-469d-4c50-a8eb-38db3287bdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db8dac2-be99-46a7-9d80-f5ad06d34795",
        "cursor": {
          "ref": "a432624b-9eb8-4bd8-b213-38e02f95d311",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dac22e52-6484-44a3-9d77-cac347924f2b"
        },
        "item": {
          "id": "3db8dac2-be99-46a7-9d80-f5ad06d34795",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "07d12d01-7651-44c0-bbf9-9e00a9928436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad23794a-10ce-4e4d-8f4b-63345a8fc4a0",
        "cursor": {
          "ref": "0a2f9661-88a1-4a43-8ec6-d8d82a734b2c",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7d09033f-9103-4efc-9a68-69bfad9b33e6"
        },
        "item": {
          "id": "ad23794a-10ce-4e4d-8f4b-63345a8fc4a0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "011a3add-1e0e-4a93-bed3-fdc250abeef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266d91e2-d19e-48c9-b70f-99ba19fd392e",
        "cursor": {
          "ref": "7c147068-cf99-41cb-9171-e3524e82c806",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0670eaa5-0320-445f-ae48-9cdfb58a36a1"
        },
        "item": {
          "id": "266d91e2-d19e-48c9-b70f-99ba19fd392e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "93b7d0ba-4009-40bc-a3ef-73512dc72fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c3cf3d-74c5-448f-ab53-55efa2d3c613",
        "cursor": {
          "ref": "ba0f5572-cecc-47ab-8b4e-d0ccf8ac5a75",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a7f4671d-86d9-4f36-97ab-fbadd50aaa0b"
        },
        "item": {
          "id": "d5c3cf3d-74c5-448f-ab53-55efa2d3c613",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9c21ebed-8e6a-45c0-98c5-e4c3e38010ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4667ea-0b1d-4df0-b4ca-fd3a960ce094",
        "cursor": {
          "ref": "ae8f6202-c259-496a-9e4c-51fc1a211261",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "430a6c5a-1822-44ee-bd47-23bdfab6379f"
        },
        "item": {
          "id": "0d4667ea-0b1d-4df0-b4ca-fd3a960ce094",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5abd77f2-ad49-41f7-860b-bd4066c32b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206ff1ff-92bb-4fa9-add2-465189c98d6a",
        "cursor": {
          "ref": "d20ad0b9-3bb1-4c34-b8bd-aa7109d9bee8",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "25b1da13-bfb6-44bc-8680-6b54f44b7ab1"
        },
        "item": {
          "id": "206ff1ff-92bb-4fa9-add2-465189c98d6a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "54599b1b-7e06-4ef9-9dc9-0e2ae1e26e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c566f1-1b9e-4e35-b7d0-2a10c57c5f76",
        "cursor": {
          "ref": "709fd39a-5af1-4594-8ee2-7ed1297fce59",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a98bffb8-7aac-4d0f-a721-0b5c1cc78b0d"
        },
        "item": {
          "id": "b3c566f1-1b9e-4e35-b7d0-2a10c57c5f76",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dd52e77d-66fe-477a-afd9-1f734e9ff574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7833c4c3-aad1-460e-ad2a-dfa0320f21c6",
        "cursor": {
          "ref": "e9afb1b8-948e-4df5-99b7-688403e8743e",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6d7a9004-e57f-4048-9d71-c0e72788e2bc"
        },
        "item": {
          "id": "7833c4c3-aad1-460e-ad2a-dfa0320f21c6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "585435c9-db95-4af7-8a4c-f4b5d39cb808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2401ea-e709-4f7c-97d8-817e2e95bed1",
        "cursor": {
          "ref": "335c93f9-d5fb-4ac4-b795-c90f8d1222bc",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4ba8abb6-c93c-49ed-88d1-25936ef4ae1f"
        },
        "item": {
          "id": "5b2401ea-e709-4f7c-97d8-817e2e95bed1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5d38b459-e417-4d7c-94fb-aac16eaaee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5a3179-c35d-4fa0-b8b9-de6c86d97b60",
        "cursor": {
          "ref": "e00483c9-a66f-4765-9e9d-a1530b039021",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55cfd55e-db2b-4ea4-8991-957d426c4663"
        },
        "item": {
          "id": "af5a3179-c35d-4fa0-b8b9-de6c86d97b60",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "36f92b09-4bec-4f60-b134-764a1be10a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebba454e-b733-45a2-ad0e-444f39e31161",
        "cursor": {
          "ref": "29ee7c0b-4284-4699-89a6-6ac7b2465c29",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c915a33b-a8bf-4c5f-b57c-fd18be4c734a"
        },
        "item": {
          "id": "ebba454e-b733-45a2-ad0e-444f39e31161",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19530193-c865-4ac8-9d82-f26450ed7ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf200d1-db8c-4ede-a09e-abc6d796875b",
        "cursor": {
          "ref": "f11793c9-d14c-48d8-8d69-135d427f3e77",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "846d5bc1-64ab-4e12-b811-867e2795f168"
        },
        "item": {
          "id": "eaf200d1-db8c-4ede-a09e-abc6d796875b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "95e2363b-560b-4a4d-9225-459fac877392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd29c056-d10b-4099-87f2-aa70ad029830",
        "cursor": {
          "ref": "1410aaa6-f04e-4015-8a2a-6f42de63de3e",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7017fbb5-e5b7-4734-b7b4-463b58f63235"
        },
        "item": {
          "id": "dd29c056-d10b-4099-87f2-aa70ad029830",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "64d8c860-02aa-4f26-8924-a034a2b30bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fe1a18-9e21-4cc6-96cd-377869606f21",
        "cursor": {
          "ref": "a803d12e-a3b8-4555-9f02-0aca590dca6e",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2ebe754c-c7f0-487a-8905-d999da96955d"
        },
        "item": {
          "id": "39fe1a18-9e21-4cc6-96cd-377869606f21",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c862cb25-8569-475b-a0dd-a0f1a4bb2f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1cc039-da18-4390-aee3-cdb9e988e362",
        "cursor": {
          "ref": "3a53efc8-5788-42b4-9c89-e01c1007dd28",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d95bde8f-1a42-42ef-9d8e-7de4e79f500e"
        },
        "item": {
          "id": "1f1cc039-da18-4390-aee3-cdb9e988e362",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e23e9576-9b80-4fa6-886f-7987a15051d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cae40a8-2910-45b9-b7d0-3fc007c7f5f0",
        "cursor": {
          "ref": "adfc2080-7beb-4166-ba26-6841dc71984b",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d7fab02a-1581-4412-9950-d88e56a72698"
        },
        "item": {
          "id": "1cae40a8-2910-45b9-b7d0-3fc007c7f5f0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cf615c71-66d2-4af7-91e8-41506fb5e177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f7d35a-6666-4c22-934b-07497d49c2df",
        "cursor": {
          "ref": "f4cebc85-5336-4ced-ba08-a4ec538b2fac",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e3f30ea3-8d78-4531-b900-12c271e0cf2f"
        },
        "item": {
          "id": "73f7d35a-6666-4c22-934b-07497d49c2df",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0a728b5e-bfa5-42f4-b5d0-280dc8cdb56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fa8143-c923-4fbf-8ff1-70f7f9277fbb",
        "cursor": {
          "ref": "0c9e4c09-c56d-4bd2-865e-3a077d6ef464",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "182a7877-4ccf-47c3-b532-649923b69868"
        },
        "item": {
          "id": "d1fa8143-c923-4fbf-8ff1-70f7f9277fbb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "883d26d0-3b4e-4348-9767-76a6d0814c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014ef632-f127-4fa1-aadf-3c1c99e2ef3e",
        "cursor": {
          "ref": "bc7a7c4a-3408-46c7-864d-3fd74cd33d71",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01b9da3a-d6b2-4ad0-9be0-d4cb65693e1c"
        },
        "item": {
          "id": "014ef632-f127-4fa1-aadf-3c1c99e2ef3e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "20a8687c-d85c-4be7-a428-b84f8189bff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608ba9b6-1bc6-49c4-9284-cbff4705dc9e",
        "cursor": {
          "ref": "34fd4814-436b-47a3-8160-4f597517e791",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "789b7939-fe76-4fe9-b142-addb9178bde4"
        },
        "item": {
          "id": "608ba9b6-1bc6-49c4-9284-cbff4705dc9e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6f865332-2fcf-464f-82ff-290089b13fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8783baa5-d41d-4129-88ef-5e20eb094bca",
        "cursor": {
          "ref": "422958a0-9fc9-4a27-a0fd-aa402ca7699d",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "09972860-6547-46b3-b51c-c9cbe5616678"
        },
        "item": {
          "id": "8783baa5-d41d-4129-88ef-5e20eb094bca",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a44a9002-53d6-4013-8916-bb96db4e4643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41abef55-0e0b-46c6-a0e2-d75488dbcbb7",
        "cursor": {
          "ref": "4bb0e88c-e3ce-4621-8d14-40ea0d07908d",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "889b302e-c7c1-4732-8c2f-e6fb58105b42"
        },
        "item": {
          "id": "41abef55-0e0b-46c6-a0e2-d75488dbcbb7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "eef82c2b-d89f-45b7-8406-3c292ef2d150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71faaa2-0a85-4ce5-a806-b67923894d80",
        "cursor": {
          "ref": "e565b858-66b8-4bbb-9215-60c5d2529906",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "98dabb9c-8d40-4ff0-9908-c383fb8e734c"
        },
        "item": {
          "id": "d71faaa2-0a85-4ce5-a806-b67923894d80",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ff105da2-ef6a-4ea4-b18d-c5fcda30273d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2d1d46-e7f2-4196-875a-c2b0ec043b81",
        "cursor": {
          "ref": "0758e7ca-114e-417e-ae17-b408849e3ce3",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "25e123e4-2162-4420-af0d-3788ded3af9d"
        },
        "item": {
          "id": "3c2d1d46-e7f2-4196-875a-c2b0ec043b81",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "85cf591b-4d53-43b9-94da-41019b75520e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8070975-0831-40c4-a469-2f846b3d79cf",
        "cursor": {
          "ref": "e96c3d54-4f5d-48f3-a20a-7045f0a9c71a",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6a09fce1-4be5-4933-bea3-35085d64cedb"
        },
        "item": {
          "id": "f8070975-0831-40c4-a469-2f846b3d79cf",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "282e1a4c-58f0-4d59-91f4-29f7bb2c2c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3682e175-0ee7-496f-b012-b2355390a9d0",
        "cursor": {
          "ref": "8f72cc08-e8a1-4b02-ad6b-84acb692f16a",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "51d5f29d-b86f-4b74-9a77-353636059d92"
        },
        "item": {
          "id": "3682e175-0ee7-496f-b012-b2355390a9d0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "55c2bc9b-dfa1-48e5-947a-14cf471f55fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8ba558-a852-4dfa-b3e9-542b3c1b42d7",
        "cursor": {
          "ref": "55b25500-fac9-4773-9c0a-34601c0ae7fb",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9d4ff528-50ab-4dda-8f29-13408f58fd49"
        },
        "item": {
          "id": "bc8ba558-a852-4dfa-b3e9-542b3c1b42d7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "8b2bfe0d-9f3b-44b8-9198-e56eef700235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d849eb-47f7-4a5b-9547-98b2d6da06e7",
        "cursor": {
          "ref": "ff914e7f-a3b0-4022-91cb-7a4d3181f724",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e21b0f35-e0df-477c-b0d1-59ca40b2ea52"
        },
        "item": {
          "id": "e0d849eb-47f7-4a5b-9547-98b2d6da06e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d2dc50d8-a8de-45f8-b0a0-059b9a414c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d54012-bef0-49a3-b0a2-073e10d23cd2",
        "cursor": {
          "ref": "d86fc7a7-ccf5-46a2-bf92-b456bb007402",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8ab2ab25-64c3-43e7-bc4f-728491a36c6e"
        },
        "item": {
          "id": "c4d54012-bef0-49a3-b0a2-073e10d23cd2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "70b3fe66-6dc1-479c-b869-50b784769882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c51a5-392d-4325-bb67-ec0608ba5287",
        "cursor": {
          "ref": "21bfeebf-7feb-43de-b087-8844da3acc46",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "054a079e-bce1-493a-a932-5dbc0965c647"
        },
        "item": {
          "id": "075c51a5-392d-4325-bb67-ec0608ba5287",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f304757f-6376-4898-bc1c-fcd9102cec7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae753f1-9837-46d1-a830-5cbc3600fdb6",
        "cursor": {
          "ref": "208888d4-5b1e-4625-8b52-6e8dcd00553e",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d1d20c41-5949-4482-b0cb-0cb039791482"
        },
        "item": {
          "id": "eae753f1-9837-46d1-a830-5cbc3600fdb6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ced502b4-1ab2-476b-a751-694bfbe71e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1b658b-59f0-4874-a6bf-94c77fa35d13",
        "cursor": {
          "ref": "2480225e-718f-4e5b-85f6-9797fdf35c61",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "86fad952-b78f-4ab1-bd13-c310b947b65d"
        },
        "item": {
          "id": "eb1b658b-59f0-4874-a6bf-94c77fa35d13",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ef0e63ba-f980-467e-92fc-3d4f6dec818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09928a85-93e0-4d90-a771-713ebbac71a9",
        "cursor": {
          "ref": "904eb6e5-7279-4f38-8cea-9511c1e7e432",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "495b4d7a-5719-4efc-bbd1-aeeb1fd06741"
        },
        "item": {
          "id": "09928a85-93e0-4d90-a771-713ebbac71a9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e5738e7d-1462-4014-b87e-a52d7d659832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80074a97-715c-44e8-8730-0d2ebb131678",
        "cursor": {
          "ref": "93cd6ee0-6ca3-48ec-9e6e-d302d89e8d4a",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a253f2d2-cca5-4fa9-b469-149fbf908b45"
        },
        "item": {
          "id": "80074a97-715c-44e8-8730-0d2ebb131678",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "44f455e4-b34b-4fb2-af45-c990a3b30af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dff580-a433-4147-8a8d-8e2057bbf31a",
        "cursor": {
          "ref": "e7a84b1f-1de5-4c3a-a3aa-a3652fe4ca71",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "98a81100-0281-41d6-994b-6b4d8cae765d"
        },
        "item": {
          "id": "c1dff580-a433-4147-8a8d-8e2057bbf31a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f564b868-5e62-4388-b741-7e55978ef67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90840fa7-af18-4c95-ac58-7f6a6d9354bc",
        "cursor": {
          "ref": "41b69825-6c93-4900-98cd-ea81cea57521",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4dd8729a-5b7c-4a16-be93-95dfe9c47f15"
        },
        "item": {
          "id": "90840fa7-af18-4c95-ac58-7f6a6d9354bc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "95e422e5-6bef-4d39-b15f-a01cd7b163b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8f766b-cb36-41cf-b17e-b339355aaf9e",
        "cursor": {
          "ref": "4caefb30-3c22-454e-8594-fa4f82c0de44",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8ab37a5c-1869-469c-b444-7c2a881b1e33"
        },
        "item": {
          "id": "8f8f766b-cb36-41cf-b17e-b339355aaf9e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "da8a5351-6f17-43a6-8a59-4a06ccda7ad3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 339,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b19c02c-878f-42c5-becd-dbbb6f745f3d",
        "cursor": {
          "ref": "3f3f4d63-5167-435e-8803-b613e11e2be1",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "977b6052-1ce3-4eaf-a7d9-c0892b8289f5"
        },
        "item": {
          "id": "5b19c02c-878f-42c5-becd-dbbb6f745f3d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8597dbf9-6666-45a0-9df6-5b1adff7fc37",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "147b7a91-c7bd-48d4-8b93-7dde7a7c5ae4",
        "cursor": {
          "ref": "a7def94b-de62-482c-9be2-d91def0bb7a9",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d18746ea-90f9-42a8-a864-d1c9178e1b52"
        },
        "item": {
          "id": "147b7a91-c7bd-48d4-8b93-7dde7a7c5ae4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d152ae92-792e-43fb-92e6-db38cc4f860b",
          "status": "OK",
          "code": 200,
          "responseTime": 2147,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3817a281-a157-47a8-a93c-55398ac44f20",
        "cursor": {
          "ref": "c7816549-6ac7-4873-af9f-93876ad59dc4",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "0fa1e874-140b-4513-9e8d-c3e9f47e1b38"
        },
        "item": {
          "id": "3817a281-a157-47a8-a93c-55398ac44f20",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1ede1cc8-a249-4617-9caf-210ea06bcc6a",
          "status": "OK",
          "code": 200,
          "responseTime": 1873,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
        "cursor": {
          "ref": "9c756d54-7f1a-4fc0-9801-0d74c2e05a3d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70f20adb-92c0-4265-a714-083be4491658"
        },
        "item": {
          "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec0d6653-a185-4ae9-93bc-07ad59fddc38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
        "cursor": {
          "ref": "9c756d54-7f1a-4fc0-9801-0d74c2e05a3d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70f20adb-92c0-4265-a714-083be4491658"
        },
        "item": {
          "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec0d6653-a185-4ae9-93bc-07ad59fddc38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
        "cursor": {
          "ref": "9c756d54-7f1a-4fc0-9801-0d74c2e05a3d",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70f20adb-92c0-4265-a714-083be4491658"
        },
        "item": {
          "id": "7929d96b-fae4-4d12-bd33-ed9b92b2cbd3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ec0d6653-a185-4ae9-93bc-07ad59fddc38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c329c029-0777-42a8-b6ed-8942643171dd",
        "cursor": {
          "ref": "bda9da34-29af-4d64-b8b9-94c4dafd15fd",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "7f4437c4-6254-431e-97db-83fe688450ce"
        },
        "item": {
          "id": "c329c029-0777-42a8-b6ed-8942643171dd",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ee3b29d5-e112-4a31-9171-ba541e150f98",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 340,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1bbb1d-c51f-4f3b-85af-d47400e9663a",
        "cursor": {
          "ref": "0d2e93d6-bac8-4147-a5ae-2ec39b016547",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f60b5332-ba55-4b12-8d1e-724b8bd9e981"
        },
        "item": {
          "id": "4e1bbb1d-c51f-4f3b-85af-d47400e9663a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "327a953e-ddbd-4bc3-8a09-01130ab5c5ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1bbb1d-c51f-4f3b-85af-d47400e9663a",
        "cursor": {
          "ref": "0d2e93d6-bac8-4147-a5ae-2ec39b016547",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f60b5332-ba55-4b12-8d1e-724b8bd9e981"
        },
        "item": {
          "id": "4e1bbb1d-c51f-4f3b-85af-d47400e9663a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "327a953e-ddbd-4bc3-8a09-01130ab5c5ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d1bdcf-cbc2-4beb-a48f-5d0542939872",
        "cursor": {
          "ref": "7cdf1311-5d25-4724-80ce-c344d6704e55",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ada27c17-6b17-4c2e-abc5-8b277a07cd66"
        },
        "item": {
          "id": "d4d1bdcf-cbc2-4beb-a48f-5d0542939872",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9eb90d5a-7824-4402-8bd0-9bad385e8867",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 581,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90448873-3595-4956-a58f-124876d9113a",
        "cursor": {
          "ref": "0a8b33cc-2a7b-4be2-a6ee-531f1964bc41",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e465876d-af1f-43a6-8574-c0386401120a"
        },
        "item": {
          "id": "90448873-3595-4956-a58f-124876d9113a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4b393da1-a2e9-4f45-881f-4cb81b64b3eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90448873-3595-4956-a58f-124876d9113a",
        "cursor": {
          "ref": "0a8b33cc-2a7b-4be2-a6ee-531f1964bc41",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e465876d-af1f-43a6-8574-c0386401120a"
        },
        "item": {
          "id": "90448873-3595-4956-a58f-124876d9113a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4b393da1-a2e9-4f45-881f-4cb81b64b3eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c294ec-dd62-4f28-a895-82a37d66e05c",
        "cursor": {
          "ref": "6a91d553-60df-426f-92b4-091860105e6d",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4912eb61-90ca-450b-af61-0648d3102289"
        },
        "item": {
          "id": "e1c294ec-dd62-4f28-a895-82a37d66e05c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "149531e2-0f73-4301-b86c-c84c8ab41dda",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 619,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}