{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9c18cfd1-ff62-48d2-a04e-a21ab2d5f594",
        "name": "Clear Cache",
        "item": [
          {
            "id": "71dd607e-a26a-425b-ace4-e7a7b0e81bf9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21dce0d4-0326-4fc5-a0fc-410447630552",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "908690ba-30ed-477c-b4cd-8000880feb80"
                }
              }
            ]
          },
          {
            "id": "b5f4351c-689f-4fa2-ac22-db7875dc7998",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1cbb4848-9099-4945-97ba-d24a781cc76d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "959828d1-9639-4c63-ab77-2f9f3bef16dd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b664db1-f797-469a-852f-b7bd3afe5d8b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4fbd792a-70ef-4e45-b451-691fd2dfb8d4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c8fe8c59-33d3-4f17-8f08-0516a94823bd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6615c2e-94b6-4cba-bdc3-c914830f678f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "69dabf33-d5b9-4b93-9cac-507c6d8ed674"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1985e3e3-43bf-4959-bb45-80a3cff253a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54f57727-c16b-40c3-8707-8986174803e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd8f1b34-00ae-4134-838a-090d4df0bf7c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ee56426-3bf9-4f4b-9d6d-3ac744dff1ee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38900cb4-fa5c-4e0d-8521-189961014384",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f14df073-e329-43cd-9c62-d46db4edcdcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5454d5e3-2ee7-457f-b2cb-b24557eaf7ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "891d744f-00e4-4e4a-ad44-b4ffbc4a591e"
            }
          }
        ]
      },
      {
        "id": "3b3959ad-e091-4ad1-a7b6-c607ff4fc3cf",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ea8848c2-35c8-4ed6-90d1-605516e2efe3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e00df0e1-43d9-42be-89d9-f2ad26184148",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "290f1b72-6a18-47cb-8bba-9b83c4bed646",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9c2939-5a04-4e26-87a1-a01ca1bd9bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca39878c-048a-42bd-b69a-b48018b79a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6391c54-9a8e-42c3-b51e-180133cc5c6b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd5e4d7-ae6d-4b66-b078-3b7f99e90802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3f2242e-e0fb-4f15-9873-99f9a2b6dcb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a3982a-dd81-44bd-a2d9-5e1a144c867c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8720bf-0081-42e8-a9c4-ef4238b5ce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "644173b8-6d5f-47f0-84d5-01bee43f295e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8dcd70c-c8a9-41d3-974d-589e6ce4e49a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7008c19b-be85-4a4f-8b00-2cf96d33df96",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36af41-06ca-4fac-a112-26399a8bb10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a609882e-fe19-4f70-a4c0-88168a983272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df621ee-3028-4652-b2ba-7a4b418fb1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388bfe74-62f3-4227-9f4d-d4c4bbc3bbf9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d86c5064-15e3-4c01-99dc-978e2a50cf01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06863cef-12f5-41e6-9d24-c27cfa0362d3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94dcdf4b-29f8-4fdf-93cc-60cce160444a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f2d3d6e5-8422-4ce2-a81c-dc2ac66ffeea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a4ace0c-1ac5-46f6-9eb0-6e9041a3b0dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2f34b49f-ea4d-46fb-8018-1e7f8d952d0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a85c3470-198b-4ac0-b1e8-191c37becc09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fadcc8e3-30d8-46a3-9169-3c67bd3afcf8"
            }
          }
        ]
      },
      {
        "id": "0755f403-fac2-484d-923e-f582eb2d1f54",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e34ff97-57cc-42fd-9886-2f94c7da1f23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf849749-e3e4-477f-9d6f-54dd5fdad840",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a9c216b2-d7f1-4cca-af71-3a3519388385",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea79c4e-bf4b-4c31-9047-0da16d2623ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a5fc58-557e-44cc-8bc4-497be85cd1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb57f24-7a23-4de3-b7df-c4d84a831b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c2aed34-ab84-4307-a602-715a1add10ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a53943-f8a7-4b61-a54c-438e8139c1bb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a29712-7f15-4757-93ca-4a1d00d57130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1da667-e85a-46af-a179-4488fc7e4227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72448460-2269-4f7c-82a1-988b2b43e1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a4dc0f4-da1a-4d2d-9088-b9643ff5d552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4e7e05-a336-43c4-8ac6-78bcc654af89",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d03d34-8a5a-472f-ad08-d063d46c4d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4244154-05ae-41f4-8155-e3a7b6431659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e056e59d-727e-4484-8c24-6b18821a4a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ebb1f23-f1d1-4d83-8f7c-1f0f87f563fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4568eb-dfd3-4f4d-a3be-a938a67f9202",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75b25c6-13d4-476d-ab7b-b3fe470584ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69ddd67-089c-49f2-86c5-665c2170e0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16ba1be-9fde-4408-89c8-283f245aa06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50d7921a-2a9f-4c06-9a6a-70fd29081faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa7818-c7eb-418c-86ca-0268ee8d8c9c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f7494d-7f0c-4379-94c6-5fc88c7b77ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0617503f-5c87-4926-972d-fc3587776858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ab6ed6-0a02-47b6-b6b1-9406c93b0641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b22fbed5-cbfe-49a0-a354-0d2142871243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0251ccd1-607a-4efc-8530-b66ff958c543",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042cdff5-62cf-43b5-9bce-0b457ed4d35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd11cf1-85e7-4a06-b2de-db2cd2a0f610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc08d4ad-07c2-41ed-8cef-a835848233dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "935f4a98-5691-4e34-8689-e2f56c74a928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6894ff-bf5f-429e-b50c-3e81a427295f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88d915-4709-41a8-b1cd-c3acfdcc08cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ff0789-3bcc-4b79-a73c-97ed039fcb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f495b82-8e74-4840-924a-2da236bb7d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51189eb7-9bfa-4950-a1c7-cdc5b8249b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbc27a3-e220-4d8b-9c97-ec80d8562ee6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e08d9c-56e1-4917-b683-c7147d737d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124b4fdb-1c07-43c1-87e5-eb928c4e648a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff53708-7dd9-4ef2-b222-2175b25cf560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec8fe4ec-8ef8-4225-8c22-c2a01fbda3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e64f763-8eb3-4dff-9a8b-7efb4e8100f3",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63065ec-f519-422d-a835-cf7dbbe1741d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba935cab-0a32-488a-a811-14eb71b9c831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c090742c-038e-482c-8467-5f8e7239278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca71d572-70fd-42c9-a082-44302f025ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e61d2a9-4751-4bc8-b51c-505abaaa4ec4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944665ea-ad12-4479-b8c4-63186025e870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889c52ae-2494-4bc4-91a6-039dbd9aa85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d00403-55af-4263-9945-d3b4ee526812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb271f86-d588-4f63-9d6a-27feab57c293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b760e3-e1ae-425e-98d7-d8e1216d20f4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e2d150-b2ee-4113-9758-ff0cb76aacef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f26798-a1fa-4854-9e0d-13dd9c01659e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca94fed5-d159-4e3e-8057-549e7a4349d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0ef1667-2810-4c7e-bb23-cb42118b795e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6c5db5-2866-4673-a398-87e5e9b56f1f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "429aabb6-9a35-4ca7-abf5-1aa0527988bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81dbd7f9-8be6-4eec-a61a-9e040baf53ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be70b77-5375-4ed1-b3a6-beb53cb1f41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3a0c3f3-7f41-40dc-87df-5f352a9c9b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48557133-5e24-483d-a936-bce0e4af2fdb",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d1e3a1-addf-4c4b-8b40-924aa106f6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce1d430-189c-4cc2-8234-7d2df300bfba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221917ab-2196-4989-ad36-57fffa5f887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e78bfd97-49d3-43a1-9e7b-c13708465383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542a7540-f395-4b06-a1fd-c3b662886be0",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ba0970-c0ce-4015-a09d-1508f7c955ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda88066-0e65-4875-9a9b-65bba3ea7bd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cd74f9-35b4-4bfd-8f61-268baa1533d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac36d891-4891-4e08-945a-8fc4909786b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef886b68-62de-40c1-ae45-28ebd9993a50",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12522fba-19cf-41de-853e-1243a2ab9182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb446996-e863-48b9-82a0-ca1a90220867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2286f15-7144-427c-a895-769d5863d5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db9a831d-d3e3-4710-b654-fbd665b71a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2313f9-1f68-45c3-9bcc-27edd9aae689",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae52d089-0679-427a-91c7-dca12a9cb62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48f9350-8786-48d5-ba87-25cbf3607255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d20cc8-342d-4f37-8091-eb18190c71f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6071450-d9bf-4d07-9242-c9331a89378a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94f19b6-9f5d-4fc9-b369-d8daa8a66adb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26538a65-0435-4117-be1b-371e40975897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09cc5c3d-8af3-434c-93e7-a03142dbf8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a7578f-3286-4c65-a6db-b1216feeaa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdb8f5a5-ee9d-4f54-8f15-466816645498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fbe93e-dfdc-4eeb-a3fc-ddaa61301af3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f891cd76-95d1-4a85-9c8a-58eecca67431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b7327-db7d-43e3-9747-d0b8ae077211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c791c1-0b11-48f7-bed4-39f7e53692c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec031fc-b6c6-4112-8c6b-44bbccb6d54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62dfaa7-46e9-46ab-b823-2a424f526413",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67af876-a8dd-446c-89e4-2b6404d8781f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1aa601-1023-4196-a08e-8324d516c0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad30e1b-e8c7-4359-a794-311b27a55cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e082c96d-7767-49e7-bf14-501839b16a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd48659-7b65-4cbe-bc6d-47f28626869f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73039835-5fa1-43f9-a5ee-1e7c2a102cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5a63c0-2dbf-49ca-bb7e-314b924a276e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a1482-ea60-4d0c-a355-157dc38c6e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ff8597-785d-43ff-8aa0-5e4c55ac5337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88c4e85-4f73-4fec-91bf-e2455b6aeed5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd488261-99bb-4551-b35e-470ba1b150b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee91645-0e1f-4bab-856e-01dc76a77604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb88426-c6af-4282-8059-ecd30b1408d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8261693b-408c-4b75-bac5-b2ac9326fbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aca1f76-8fc4-4b76-83ac-6e5aa671dc63",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3797342e-db00-47dc-af75-57308c86e6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625b2b0e-77f4-43a3-a586-163b08cf8d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca849c78-0ec5-42cd-8f3a-dbdafc90e188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e4d1b1-7e35-4ad4-94d0-e01a6ddfbbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ec9b21-3b01-4829-bc23-1e4a9cb9871c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3224b8-21ce-4b65-bc50-b2ed6c17df92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204c1471-4cf8-481a-b390-0d112964f8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c933022a-6247-4169-8f37-7b3f348f392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d84a25ee-551a-477e-82f1-a98cf041dfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89309e7-0e90-4787-89fa-72b3c8e11e6b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1004d27a-1683-4665-b63b-f099591789ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc754b02-c4f7-48b9-a63a-203e19b26f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b0f914-0ccf-4385-acbe-f2fc1b94b9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6d4413-8e84-48d7-838f-16c9d3a85f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb61985-b4b6-4f78-91ff-00049b77a192",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3f4227-62a8-4b0d-83d3-b17e6cd82450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f558e20-f965-43aa-9fb1-3212b1274722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea32832-b7f7-4602-af65-89f6a1f77b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f611b07-bdd6-4511-ba8d-6276159b04ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946fe25b-dbea-41e7-b5c0-62d753afbb40",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7739a8a3-8774-4023-bf98-ce768a2cecdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e707a17-620c-4a98-aaaf-004e61e5bf94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8011658-f361-4229-88b2-c92c9efb9205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2f793ed-e8a4-4de5-8c0a-154438c136e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe17b6a9-6219-4853-9382-f14dd1db5d7d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f167497-f82b-446d-a2de-242fe5ef88dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6654c7e1-02a6-4523-bb2d-32a1228f90f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d4a5c-75d4-42d7-8bb4-61e51fac709b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf73c432-ac2b-4e33-b7bd-7cbba78a2683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c80846-5a29-4537-8166-b66465c44ffd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd65740f-a5cd-48b8-be1f-78ea38789b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6857a69-04cd-48ad-9bc2-5788fbf063fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557d76b0-b948-4857-b5c9-484f51c5d46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53315046-66b0-4aca-907c-299579d63988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c7e473-bcc8-415f-a84a-9417a5111e94",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb332fb3-53d7-4c79-bdc0-1b1ed3ff2551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f2e0a8-edf7-492c-96b9-8a76a64d3458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4012e8-2c88-4114-9eb4-46eeda1fd113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2db690-3951-4ec3-af58-bb89988126a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bcfc75-fa32-4d9b-b68d-fd127311ba3c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d984b92-207c-494e-b128-9e7eb21c8e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7c147b-c240-4b5b-9f74-2658a20aaef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdeb301-82cf-4f5c-aadb-13893d0883cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a82429-13bc-4399-a2cb-4929250aa1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420ba948-e78b-4a5c-9d9e-e1a7cf6d3599",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901903c6-8dcc-47c7-9ef8-131a47d74648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2809697-9205-4638-aa2e-9cf5aa1d021e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57ee74d-cca7-4b03-b1db-ffa3c6fe6577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "55b8fe47-e03a-43e2-8414-ec5c8a886759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c96bae7-000a-4bf3-a590-60ca6a451239",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163e3143-b033-4ea4-a374-fe838f3c9b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f048422d-ea49-4167-956f-c06918ffc0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b874680f-2fca-4c57-a3e6-335dbf5d0e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02cbf2e4-26ea-4569-a854-598279aa764d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f46516-0c4e-412e-8595-281c38ac7de7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7225f557-0dd4-4404-82cb-8c41e618b2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea38f9bf-6515-4afc-8a8a-5df32e51a47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f03e65-2b93-45c5-86ac-6a6bc4631493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "905cfaf9-2b2f-48a7-a729-a28450743fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e689120-cce9-4a8f-b827-3819737542b2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946e03a5-8cf8-4cd5-89ad-2b3052716a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee9edc9-3fc1-40ca-8130-0c506e903d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bf30e2-30b8-4b36-b8dc-4272c8dae554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03bb9df-39ae-4dad-854c-5f3e808f1b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec2c631-f91c-4943-a562-332b275fe77b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27716872-c7eb-41a3-aa49-1a27d6345fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a9cc28-c010-4a87-b7aa-777a4f883aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cdff17-1210-4cce-8d4b-0fac13299e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7245ab77-fedd-4713-8438-3b8f26b5d66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45c1cda9-ec5f-4a41-a150-768f15218abf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7c9c6b-08a8-4ea0-a63e-1a75a1fd3360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3494169-a7be-4718-a90a-131172ce0342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0229f514-60a1-4942-91a8-053340cfb7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e571e52f-e440-4e48-be07-c27642627163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d045358-6214-4aa9-8224-d8893635312b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e49721e-1cf1-42d4-8958-4a60eede875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791381e4-5949-4eb2-a1c3-48822c9e3f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac117fb3-530a-4045-8940-c00926ea51c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a1c382-9521-4a1b-b6b9-807e3c44d81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4066a3e0-d532-44e1-9e3c-54634f4af9ec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a86b95f-f0f5-4fbb-bd6f-734e5f1f4962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f263e548-ad33-4f1b-a0f9-8a53f90bc34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaecd37-e417-47a9-bc91-cbde2a5b3427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd9c800-99d5-49ab-ac41-dd665dd6cac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd08cf8-95b2-478b-ab12-c762f1d6f38d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87256d42-ef95-4270-8a79-00c56543289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a20a328b-ae29-40b3-bae6-52f29f7f6ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61f84ce-27f1-4deb-a851-ca3c6446978c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e7008e-f16a-4295-bdd9-dc5a4c34eec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352ee035-58b4-4ef0-b89d-ba880fa8e3b2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce50717-ecc6-4c0f-ab30-67a0d659931d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e69693-1129-4ddd-8e53-5e3b5a30417a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0b935e-00d4-4d72-825b-4498a03efa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05b73cd6-896a-465e-8fa8-34cb392491d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d3d615-2a09-43a5-b505-535e76e32339",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f15def-b719-4f8e-a90d-38dbccaf3a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9b9536-7a8f-4c49-88d0-7981f0fde53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30936f10-e87d-470f-b206-1623d8834392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f85efea-9fd6-4369-9878-58532607087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d20224-4ef5-4209-9567-9694c7077080",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e591e46-9ecb-4297-a0a0-04b8df25df4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235bc057-2d89-4c9c-a4a6-061e2b7a38ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c079c6a0-965f-471b-a8fd-e6952a444632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32b59f13-0b7a-48e9-ab00-acfa452f4cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2466a845-c4b3-44fb-80c9-9e918d8ee3c4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdf0603-e906-4a99-b0a8-9b103511c416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a649df85-e900-4b84-84d5-e7c6e1e6804f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613aec70-9192-4be4-9871-bd84292ba7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc570f41-37f7-4658-b1d8-d0e563e04233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c857c2b0-3cd2-4f68-bfae-8ea22e872651",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3511040-be7d-4564-b2ae-24ea41058f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d766f60-e232-4fbb-9a31-b8291d6e0e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dd8e8b-35c9-40c7-aa80-ca91a8f33220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "04775d84-cd57-44a7-8e2d-677dd7d2e9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8696d806-7e6a-4de2-9c18-53ff80d12ff5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3699f22a-a91e-413a-80c4-400fb8de8c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e648ae-6eff-4d54-8941-e2314b6613c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc66bf06-6b7e-4945-84e3-1e8b93095db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "423fe3b0-29e4-4cb0-bc63-acdc6ebadbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bb66ae-269c-41d4-a5e3-4d2c72aa0489",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73846c6e-6cf6-4ffd-818d-55a29d2da7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279833aa-98c7-4ebb-b8dd-d83333b4dfe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c0ebe1-fcf9-428e-adc5-059eb68ccb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94db39a7-a4aa-46d8-ba01-956c17519a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162f2f5f-54e2-4efb-b888-6a447b5aae1c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b512b33-c343-458d-a08e-a27db06f800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfda359-0692-4770-a6e3-764399d83683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710cfc41-9b75-4ee5-9807-8cdde72aaefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b862dd78-fa6b-4bf0-9f30-600cc37017b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81afa28d-8dfb-4aa3-8689-4b74de12ec29",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e383c597-c7e8-4a17-a3bf-13b4ee2ca1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6571ffb1-c9ba-4706-b1a7-854bd8a7ed06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea1df4-c01d-464c-bd08-5942ec9204a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f520e4cc-9407-4120-ac5f-a53b12598ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d223789-983d-4fd5-a199-a969b574ad6e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85afd3aa-7cba-49cb-ac7f-b62d1bff8cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e32a0a2-e1bf-4d1f-af45-4d0c13367fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bad598-89d9-4587-917f-8f373ff2e68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ae5d96-ee94-4497-84e9-27cf075065f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a07dfe-7561-4e8b-a884-bc3e2b033a3f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a5e4d8-7e1a-4c9b-aaad-6bf6aae5e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333f26a8-4716-4a22-9f4d-6ab94dcb1eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf92ef54-4c48-48ed-be7f-1556b493413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff6cf02b-6c8a-48e0-aaee-b9e7644a7f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69de2ee8-0dea-47c9-bacb-52dd8b1609c6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525ea952-6457-40df-b6a5-35d98bf63a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c645838-428e-4ec8-b871-629cff0e7b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0851bbe2-5b13-4bee-b2ec-0aad4006dc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8141951e-0fab-460c-9308-c2bcd7ece40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb051a34-c4db-49b8-98b7-4207d1c8c9e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab56c3f1-0114-41f6-a25f-dc831e4d1704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77f4176-955f-4806-8006-bda72dadd0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f89067-9f4a-4579-82b0-619edfb0cd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d4d25ba-3d76-4975-a7a1-545ff7c93415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1202cca2-6df4-4c1e-bfe8-3e7537b697d8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94835f1-0138-44aa-8ddb-a0acaba2a41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce548544-7cbc-43a7-b8af-12ac5f823b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369314c2-2778-44c1-92d6-cd5e3f32b5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a80ee6f-61f5-442e-9973-dc17bf542f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d5aaa1-7f9d-48d1-b833-d55d2f71da80",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a05a848-0123-46cc-b9a8-0fd56eba9124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2625ebdd-62b1-4169-9be6-57ee2a8f31ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6af424-776b-484d-ad14-0196ddb0f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "78388219-c227-4f42-8d33-20a2fdc6f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5dd32b-c940-4c00-aea5-710e8cfa83c1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99803b95-8752-4a62-8428-86bfa64cfad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6156bcf0-e04f-4688-b1e8-3da230180c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cc3846-75de-4eaf-b963-f810828f5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c5ba50-24e0-4f88-90db-1d40cc89ebe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe83154-8776-4fc2-82eb-4ba4fd11c366",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0d91f6-e8ca-49c3-af7e-e4c6b6feba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0e843f-1c3e-4d89-92d6-2daf4e75cc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2f0a64-6492-4329-93d2-25080fdcfd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8b833746-9e1c-4633-aaae-dbdf3129024b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caf116e-8604-467a-9693-b5ac4c689d19",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b62f3d-fd8d-4b15-86a9-2cb6b4bb7c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f74d5b9-f6de-46f9-a677-c71ec1fbb8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aaa594-7fcf-475e-b7d7-6578d2827311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "715c24a4-3320-4182-9b16-82c19991bd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e90a93-3912-44f2-963f-1e0c3911eb9e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a690106-1b44-4958-a214-f0b030e491e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8eb09e-3c17-49bc-af2c-019f305b6c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9ec54f-ae35-4639-9eee-e95bab70f20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ca744a8-17fe-4636-ae82-96173a350aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e01e3a-eaad-4e3c-8523-d9bdf1620f9c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54aac4a3-7929-4bf8-b024-0fa076775529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0789e8c-149a-4997-b409-04b4bab3af4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0d6b52-fb2e-4fee-9ad8-6cc20cb724ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfc4749-32a7-4fa4-956e-d6500dc5989f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98b78dc-41b7-47aa-8def-6d299d2e4e2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff8556f-78a6-405e-8131-d9d6ab806f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30654bdb-990e-4e04-9701-363346f835bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb6b2ee-1f70-48e0-8812-e529046f6e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e292bc-9ed2-4614-92a1-8f9e3b5cc482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fe5679-3c04-45bf-be2a-99228c5b8754",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609b0206-7379-452c-871e-d446a1a99ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdc2479-b4e4-4db9-bb05-582f21f4d326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3166da18-9c2e-4e40-b5e5-76afca58b8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc798ef-7702-4428-9fde-87ed4e9f2447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23703056-04cb-40a3-8a94-3286036c6083",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fc7301-192c-4e41-973b-ce8b99dc28b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921e2ac9-6a17-4629-8127-704b691a5c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd25a92-5c9f-4f86-9a5c-961a087e0532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d3a1b6-039f-4b4b-b1d5-a1bdc894fb88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ed70d7-9a07-4de1-a560-8fd08044031e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad5a739-cf16-40b9-97a5-c7869747eac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97da886-870d-4836-8594-6cd9c18b7c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4e36a2-e8a1-4ca9-95de-f998d9f13d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6034b8cd-01ee-4918-9f39-d86a182e654b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad993c3-3f14-4187-8766-816ed081e83f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c56a78-c58e-44a7-bb49-3096849b464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231b02db-cec2-471a-8536-97b638d7e474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83deec7-481e-4041-898e-1d9a4064a023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1dc210-737a-4090-9b34-027f1e26303d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef35afb-b20a-4195-812c-166cdc226cd7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb35165-7355-47b7-b758-78afaa1c23ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2261119-aaed-4fbf-84c5-55ab42c8098b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe98fbe-be2b-4542-b693-251317774e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "905cb25d-26c5-4485-b670-5fe9420a6b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25620e75-4b8b-4756-a94b-c9752a4bb099",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32253e32-a3dc-4b81-96c7-0a5382d173be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c392ebe-9908-4b6f-b858-928a2d00eb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5dde46-822b-4f68-a3de-1385e9d15704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "332ca4eb-e4eb-49ac-bec7-67853955386d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c60c15f-4653-474c-a996-8e0b30ddbd1f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632aa716-8008-4a25-90e6-b9798c0e2b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae23a43-bbe6-42b9-b736-f4e0ff49a936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13599f19-4714-4258-a42c-f79d207d0d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa3c8267-3924-4483-befe-b7ecf4fc0088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e117e3-dd2f-4290-986c-29f851b13a97",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f70820c-b4fa-40c6-8538-78084e9e2614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f2c078-fd71-4af9-92e9-fd49d4c38895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d051e725-1cc7-4aee-888d-13ed96c28249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ae9558-b439-4430-874e-ffdb0b3b65c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23562265-00cf-4cf6-8793-7a9adeaee6e9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1c9535-a3c4-46bf-abd8-f49adbc6aa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41227f94-f82c-47ac-99c2-8ccb9f2ed6f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d241ba36-d0ac-497b-b629-b96fafe29a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5c0f08-6846-410b-9f65-66878f1179ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478a322c-79d8-4426-baf7-57720844b010",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fde537e-b434-4a43-9dd7-c74bc9b73cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c21b0a5-94db-49cb-9264-9db9c71d3dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cbbd00-f71c-4c64-a004-09010b1a7e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "654bfca8-af9a-42d3-afc3-af45b1138e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c29562-574a-450b-a9e0-89b001996acd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b12e16-07a4-4664-b2a4-9d31fe7f6210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a2be61-c5f1-4eb0-af30-d58202edbd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cae4d7-35f0-4568-92e1-4208bac78ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57caf113-399f-49f9-8997-4d6dce463e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbcc2b4-c75e-492d-89ed-09e99f7fce39",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c5c4f1-4730-48a0-809e-931ce639d2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2687f4-d7b5-4ea0-b42a-eda53c3299dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5051302d-2055-483b-8c15-5ed6c3fc8240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf05326-df12-4178-b2f3-1bd3103482c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6c4b1f-3012-455e-bd6a-bbe5d87ad581",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "196bb0e5-9b07-4bdb-b651-7d354465155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392351d8-4a8f-47f0-8c09-07bb612b46e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc569a-adba-40fc-b61b-48ba0fd14478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a58c5be-e409-4dbe-8d34-3b86c1d209a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4b754e-fe28-41e0-8885-dde2e0259730",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c14267-ba12-4653-b595-dec89c0ac1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7c444c-d9cb-4ab8-94d4-fbb758c77bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5e2e8c-0e98-4a29-a3de-baa247496653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9fc998-8d46-4e02-9403-0356074719e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac73b8f-3a62-4106-aff0-3ce225fd789a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381af5aa-523e-4ff5-ab7a-1def9b614554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c5adb2-4fec-48d4-bd8b-f6c7104787ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b47123b-fcea-4a61-aeea-c1750521f2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a0464ea-1509-475f-92d9-0207264e20fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c546879-5805-425a-b499-b8c84aa553b3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99742dc6-efe7-4334-a52c-eba7d28fa586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1268e1-bc00-4329-8fff-f85fbf746e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3ed9ba-6b50-474d-a738-691429b75e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c64bf4a-d9c7-4f42-a2b5-c09d30dd866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a9392e-3698-4073-b041-210f0bb2d5c2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d90516-179d-48c4-99e4-7d2cedc179de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4a6487-6265-4c46-ac86-e3ad21816747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54556ffd-0ca7-47ed-b466-1962e671b52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bda1e5b8-101f-4094-bff5-be8aa350a13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da245b39-2bb0-454e-befc-f50133431a46",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458ba83c-0d1a-4856-b61a-e7297d8b75e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cedbd68-5c69-4994-a1d4-94e83ce13ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ed2bc8-af4c-4275-a150-004af8b957d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef5a211-6204-40f7-9d12-907e50a5a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2357ab4c-613c-4ee5-b8b8-6309089d5bfd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ced24b-b6ab-42e1-97bb-d7e7896e0279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d08dd26-10e9-4f5c-9146-71fbb509c1e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5488fd-a901-4b80-a23b-d97776fcfbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ea2e1b-fc3e-46d5-b120-76f41a0fb5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6aa1633-937c-43d0-a9ed-4fcf72933514",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6f6eb6-a4a7-4598-a5ea-16e8e1ac7a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a6ac892-f219-4aa5-b3dc-85177be515e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03e3159-de1c-4f79-8134-0abe16574fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b7fd5b5-08b8-4e78-bd93-7251cf0c799a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357014bc-5ffd-4be3-b7c5-c5e2974b9b52",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd722ca-2dda-455f-8d3c-4b6a6ff90c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3351ee56-4717-403a-9003-9ceee9d3db4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400ae783-47d1-40d5-92fc-cacbce56f5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7086dc28-7d90-444f-91ad-73144c63dfa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3236b997-abb5-4b23-8cf6-f8c8bf493ff5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7086720-4944-4fd0-8437-4b22433f95cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fbb783-0ccd-4902-983a-d0176995c3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd4e293-a9d9-4b23-aef0-a0a2623c2b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd405c43-89ec-4e3f-8c39-6d7176a2ca80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51162eb2-416c-4881-9ad0-3f9d1206e9de",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86d04b9-c784-407f-81b7-307a87162e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4b390a-12db-49b2-a5b6-2f185fc0d234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ccfac2-9522-4616-9125-64478d30e95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e4f024-8b64-4ede-8820-916e53bbc443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb3d592-ac06-496e-a4fc-2e5f4358c0de",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8a341f-7c82-4351-8c85-dde9d7e34200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fc65e7-cc2d-417e-866c-d3c2e2603b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f0e7eb-1b94-4528-92be-5189c0a4e8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff24dd8-9c2d-420f-84da-391acbe4c50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e07877-57bd-4504-993d-b138f1a5daa4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb5028f-d0df-4a57-9e65-694fa7731a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2285ba26-d7e2-498b-abf0-7998ccd5d267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986f9275-c240-4b87-a995-3c0e05f84932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6517525c-26a2-4ba1-8b36-47f2e811b3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa0e39e-8c93-4f24-8621-2b25413a2529",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6762c8-7017-4cc8-be83-579a635805d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d04829c8-a6f5-4d11-9497-8e7b8c555470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e06c89e-6d26-44d3-807f-3a45cff262b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3edcb083-9779-4bc2-ae71-76e07694d71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e91ef92c-6a3f-4aee-9df0-49585096be8e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "664b88f7-7ff7-468f-81b9-a38930875adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d02540-28fc-44eb-9009-4ef9d5d4f4cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b6c827-9c7b-491f-a95c-5cdf6947d4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f47d87e9-ed44-4afb-9572-fb9a8a9774ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800f7f54-4899-434b-92dd-9438da58a407",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8379fd97-ee90-42e3-af63-70d8f2091f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9075d167-72b3-43e1-a6fd-e92f991129c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0752fc7e-a578-4909-9ddf-9802ebb0f193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "15978e18-6546-45a5-aae9-838efda70a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7762e79e-540d-4d94-abfe-3585c94e9a6a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e5242c-4a53-49fb-b2e0-37afa0fa0ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72bf1e5b-db95-4983-9ce1-41777bcaf18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67bb7ca-5b70-4981-91ea-8e92e8a2b75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06a87544-2cad-47de-947b-65a17dbc8799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1866ee31-fea3-4e64-834c-28aa6ad4a445",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1323a937-691a-412f-b165-b53f4496dc8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9575e7b0-0f14-41d5-979c-68557c9f9a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26280209-3b3f-4654-8661-bf7c1042cd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c46f1e93-a091-48e1-bbc8-2ec96e7854ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd242623-35b5-4d77-8d21-d995aef31082",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae021919-4994-47fb-b7ea-7eba895a18ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c931449d-afc6-4700-be5c-803ce1d3c9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1683a27-1ed4-47b9-9bd1-59ef8e29bb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4af49374-8ab9-4407-8c05-cb2ec99076a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5dee25-e4c1-46e2-bf40-fe88da4d161b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ad935-53b8-440e-af6b-0204608002b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "62f88041-67cf-415b-9fd4-2a6b0e1cb6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574d1d89-35ad-4d2e-8b68-a2f4c0eab6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e91650-e4f5-4331-a555-196f4f675903"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60744a61-b681-4776-95c8-efb873c3393a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc150665-be0b-4d4d-92cc-12fb5b1d1238",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87afc2-d785-4999-ac5c-ba49f90a4f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "339a0a08-e817-42db-8b7b-acfc54ed47d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2c1741-3e6f-40c4-9482-e249b18c404b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35f07a61-8f50-4ed9-8ff2-78ac9134f392"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd3a1a0e-7109-47e1-bf6d-7e7a824e225d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95ff3cdf-a030-4fd1-904a-f36696025f7c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e763379-15b1-4397-bf83-31ae3341d247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "126c3743-ac63-4c11-a3ed-956d54b57e3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "be24edbb-e260-4d60-baef-96c63466136c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2e68ac7f-d398-423f-b632-7c1f52651fc6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "109b059f-ab9d-4c9c-8759-ef32cfb6100d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b3d4e2c4-8feb-4652-97e9-a9bfc9642566"
                }
              }
            ]
          },
          {
            "id": "fd317a73-ed11-40b3-9a05-98b98fbf83e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a45ae55e-ee5e-4f0d-afb5-7030f0a6292c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c1fb607f-1e9d-487c-b46e-4321424ad825",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4be29ee-8635-40eb-bced-4f64de89b4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "322131f7-bdf5-4b91-80a5-c6d18409a33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f31fbfe-b378-4eee-bbaf-d9336774b417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb227f6-4ee7-43a5-b01a-eb86e4ecb4b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "896c85ef-aef7-46c3-868c-502b540f4cea",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "407116a1-68de-4e25-b901-487b79c4b96d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21262619-caa6-4b81-a01c-45949f77d4fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88a2c519-c5dd-4d1d-b7c9-f4a2059a4845",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2400bf8f-ca88-4a4d-a6fa-eb210ec4a7de"
                    }
                  }
                ]
              },
              {
                "id": "ec4eae61-2185-4f7b-adf8-2abc42c4abb8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45e5af6b-0560-4108-a9e3-8c7f43d78db4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df52cad9-4ba6-4ef0-9f02-8dfc7d2cfb5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0337748b-9801-4ea0-bd17-79544642641e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d0bc397-58b9-4276-adac-e3d71fc61991"
                    }
                  }
                ]
              },
              {
                "id": "0c96c092-54c3-4817-9228-b974ab3de524",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d42ed0c-1bfe-4955-b19c-ec0ff4300515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d697b892-ee3c-423e-9b3a-30ad91fa473b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f93d6e50-10e5-468d-be0a-a34bbf4b2846",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab9a5194-08ed-48c6-97a1-499e8f78023c"
                    }
                  }
                ]
              },
              {
                "id": "150f04ec-c89c-4855-b49a-ad43619bfcf5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f0dfb40-8ce0-463a-9bf4-c12f00fa7399",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7963689c-22a8-4428-b7f5-28eb18c6c756"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f38ba194-6d8b-4315-928b-0f0b2eff8293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a238235b-8fbd-4ced-9a2b-696062a322a7"
                    }
                  }
                ]
              },
              {
                "id": "163dc24f-b076-4e53-a4cf-72e6f652dc48",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b438833a-0e9f-49fc-b935-59264f578307",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01904d47-ac01-41a0-b845-3a879ec10d75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "465231bb-335f-4ef5-a852-909027730e2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "269a9c14-57dd-4a5e-9270-2b0c41154aa0"
                    }
                  }
                ]
              },
              {
                "id": "6816ad1a-efc0-4834-8155-867091058df8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a9b91a8-4e4a-49ca-a985-20930bda9af2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7497e62-f481-46e3-a72a-8b88c352dd6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f401e98-3999-4931-b706-a1c768818b95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "698f47c2-47f0-4572-9972-64176e652d40"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c668ab0-f5ae-444b-a401-f6f995ed130e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1ddd8bc3-e426-47ab-aa0d-766cb6f5d538"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1228f1d9-5c8e-4f9c-9be2-fd027860133d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "680114ac-ba45-488c-a431-6a815f269090"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f1cea024-c85a-4aef-9036-b7671ffc1135",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01e37b80-f090-4bb9-aea5-8b61645533c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61e0cf79-e7f8-46ba-bf17-b87c031b7d1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a4e18fd-f4bd-413b-ae80-8bb854b9946b"
            }
          }
        ]
      },
      {
        "id": "04d6535c-78e1-4edb-9249-3f316028e734",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f2fb64f7-ded9-49b5-9009-7b2c58214ca4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4abf91c5-4bd7-4071-ac3b-0bd4887b6682",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb144304-93ea-4778-98a9-671fad1c2930",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347ed37d-1e4b-4c0e-82fd-242e495a8f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b5a37a-1ac0-4857-91aa-ffb8ff9d5fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bdead7-1051-45b1-9170-2ad7bb191b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1405c2f-6935-4b3a-a165-dffab33c855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e1633e-619c-4947-8a36-0ba16a39bddf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bcac34-5dcd-40fa-aff0-d3aefd54afb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef70421-597f-44eb-82fe-23d5501602ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a311b43f-e005-46ee-8574-3e9cc0bbee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b52c94d-c61d-4a2a-a219-2f9bbd9466ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9b5de9-87bd-4cbc-a7f4-36ff799c1874",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6256e110-9a63-4739-97a1-9ae9bf05be4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdabbb09-ad1f-4647-ae46-bc24c206f90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee75170a-b6bf-4096-884f-fd7fe36023ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22ae430f-e04f-4b94-805c-c6cba59eaac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b61fd0-22fd-434a-977b-58f664364ea2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5363ec4-e214-446c-b1cd-67d717c583fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70108102-d200-4936-8329-653f6891bb71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85447ae9-db8a-4589-8a65-56671ae37eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c32c5ae-93a7-49f3-87a3-98af92fef282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a6f610-a6f3-43d1-9f1e-6297904d310e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a73da5-3214-483f-abcc-8d806046577a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a4cf30-309b-457f-9556-81c3997284ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa7ddda-f127-48ab-a38e-b0549b95261d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2032e6-475c-460d-a153-de14a67dc45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52446eaa-0c03-4efc-8729-aca8ab6b734d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d68053-1982-410b-b56c-b64d3e91bf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca27b4e-e0f1-4054-8518-0ea8e384dd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7adfe84-8815-4acf-90d7-65c8f4601407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be04604a-b9d3-41f6-acb3-50a1f3aaa515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c31a9c-231d-4109-8e8c-0acff7805200",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb893691-8ba2-4bbf-81c3-978a23bae599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9ca92d-91fc-4c31-ade9-13c372cbaa61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f9acbd-899c-48e2-af7e-29295c685df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f783d6c-b8bb-4973-a320-48e44efdfb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c84d40-4297-4ebb-8d4b-a190c651c958",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454304b5-ed4e-44ab-be49-8ef9f714b04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c00cb950-e4de-4b4f-98f1-8a53b503d7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a86704-674d-453a-b0ca-2b0b4aa8d233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0718b0-6b09-4493-a807-0e82aa46becb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c77fac-0e9f-4ed5-a78a-d07f3cb2acfb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c98af0-d336-4c0b-ac5d-05172151b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b8058d-a70c-4b5b-88d4-83aa6ef80589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd62323-3283-4aee-b3a9-65e8d43f7054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5977d19-5c39-4fb9-99d3-50df025c7957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54d1bcb-3b96-42f5-8858-61e00883bdb6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed3857d-5044-493d-94aa-667d453df3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c0f60b-73c3-48bb-9420-3c7e4f2258a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa624abc-a1c8-43f2-bf2d-639ac139c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88ba5be-1803-411e-8fcd-85b810e2bb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f8aa47-a83a-4b5a-89ff-0cdf13acea4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f43fe59-7c82-43cd-979e-393272efc6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388c8e0b-97f7-4065-9eff-733030c054b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0986ac-52a1-4aaa-a0e9-f61c0cc30477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e47b61ec-ea17-4ddc-bf2d-3cc071fbbbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee32298b-e5f4-4794-a13c-c8cd496463d4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1419b90-85b3-4936-832e-f9a674fc7be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c03ee3-d3dc-4e8f-aa62-36649395b797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a47bbeb-9151-4c99-bc5f-656a5d86f7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b82718c2-ef2e-474b-86bb-f17e7650cf6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80baf9fb-e73f-4075-89e8-602c5ae1e6b1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1215647-16a6-4d35-abde-40b019d093d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02d320f-4ed6-473d-ac6d-c0991f933a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191768ef-1f3d-4d25-a8a8-d33424ade321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1a66bf-775f-4ff6-ad91-9d145ddc86c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fb6db4-5e02-4d76-a935-fc3218198b28",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817d2c4b-43ed-4991-a44a-7da2093747d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4ea3be-a4e1-4dc4-8f88-72427cfe799c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5bd20c-8bdc-4502-aa8e-5a9285eb86ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf00456-8ac6-49f8-b5b6-3b464e1b7617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d56357-fa90-4adf-a785-8b192f81bf10",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669bfec5-8d77-4bb7-b9b3-f2799c64dda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "063453b1-1602-470a-9c8b-76a651c44a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af4f71-e2f4-477b-91e9-88ab5f52594e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac6c290-7ea1-485c-9459-b5843853a5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8000276-dcd8-4df6-803e-5eab79b92bc5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c129fedc-d767-4700-8b0d-f61aa30b6bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdf1c6a-0d1c-4427-b833-ddb2f8107783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7976c3c-2af2-40d5-86d8-000d4775df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06369ec-50fa-4a3a-95e1-5815e4f226fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986c15a2-9ac6-4f96-99b3-24d17865b0f4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9062ea5c-b5b0-41bf-8ea4-2c3d44b96c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6931c871-42ca-4f4c-b3cc-d7f851f055a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4250b6-4ca6-46dd-9382-97c102ac11b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4042c967-9221-4bdf-be12-bb91169f79f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9a1008-e0e8-4479-91a6-1b614821ad35",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fe690e-d4f5-4e7a-a860-98b34ec00598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f86aba5-93fd-40e3-8d3d-60dc54723a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2567f304-0dfd-4a69-871d-a4700b9a87d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "07558c34-a899-4cce-a41a-444339c9c1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40682b06-e01a-4165-8f15-dace74614b91",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb80c663-b694-4eb6-876b-37e89c9bd87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fa5af1-8802-4797-9d68-9711953ebc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e517def-9b66-4868-9111-72e3661a64e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47f99b19-9652-40ab-93a3-52807599a0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b313a-d467-41ac-9418-646a07f8a37f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064b22c9-5513-4d3e-84e7-1817d1a37ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a15bd0-8853-4424-a733-b61bd105b21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36ff914-db47-460d-949a-3e1270876919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b5e85b-afc5-40a1-ab68-e04cf53762ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1a31dc8-d153-41b8-8b9b-fa67aeae1a87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f59776-cebf-4730-bd0c-ca147a2abd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640784ad-761c-422f-b232-e12edc6ddccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5665a930-bd8a-49b5-9857-5d2d84e6395e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f554e35d-4c55-46c0-9617-80a511b7afb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a66cb9-52a3-450a-9d83-01bcc8ad62ff",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b712e8-bfc4-4d55-9f44-31931244fa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546426fe-8fe6-4f0b-b69d-2769aaf5e098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ee061c-b5d5-487e-987b-07db2f26a949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8024bbd9-71b4-45ec-881d-70aee3ae4387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4431c5aa-a603-4868-ab22-ceb03f2b3f5e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c23ef3c-af40-4c56-a97e-da68515a3e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4894865b-f8a2-4485-b6a5-357fdde35898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb549dd-7e54-4477-87a1-8400e000b5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "175c7903-0412-4883-ba6d-b9852c604434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedb0bbd-24cd-4f41-afe8-698369e5a0fe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457b239c-bdf7-4369-8eaf-ae7db85197f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb983b1-2024-4dc2-8762-04c776604f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f6a0f1-4c0d-41df-b674-78ad30db7777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec221082-0149-4880-a6d2-f68a5ee3774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4facfba-5e52-4f76-af09-6caf64b1207d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ab8ef3-f053-4a4b-aef7-6997d9963f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f262975b-fb0e-4047-b018-2fbee7c301b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a1091a-afb4-44c0-a631-27149863c7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c382cde-00ca-457a-92bd-0f5428d30792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc9a1e-ab21-457f-971b-5da88b5c3461",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f23a22b-f41b-4a8e-840c-a01f540f7344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9830e3-b233-4059-85e3-b92a32f542c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e20c63-c2c0-4c0b-b8b2-a1ab76bd3d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e72774d-6727-4dab-8334-e979d42dacf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690da6de-bce7-465b-968b-d9213a92443b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a970562e-07c3-41bb-83da-2ba96ca2f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6f490a-90e2-4972-b3f8-91a07933b325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add33984-a5d2-4fc0-9921-1b9883b3fa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeecb1f-cbc8-4f54-a6d1-120c60722b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff96d03-9c5a-460e-a105-2b8116516108",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d84f0f-04c3-4894-a67a-72ced1ee6c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a691766d-4709-485e-bb49-8ae327854f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09fa456-4863-47a9-8ef9-61a3c31c69eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39a31919-72ab-4d10-b439-f9d4d7be2ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a63c5a-6fbc-4247-b196-98e11ca18bda",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f0a38b-758e-4132-8aca-1cb100711f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c95d9ab-f70b-452f-90c5-f59659095b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0380943f-bd7f-46e0-9795-8ebe7f0c8e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41bc623a-ac97-4d1d-a6a0-57c9d805fba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafb7de2-0998-4194-8735-84d2ce0683a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1469effd-bc63-45f1-9210-271f2e9f01c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbe680f-65e2-4699-924b-49bf41d985b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28123d7-dd87-4f65-b366-ee3194d4c73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95e6e595-b058-4662-899c-5344e54d10e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6c7099-09d9-486b-9540-e5cd7724497d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2583df85-223e-44d7-8f77-9f2c04617eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963ecb26-61cd-4969-8674-531ff0cb9d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063dff76-bce5-48f9-a558-4cef638c49b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47372f14-2023-431b-b5f2-a5d3706a8029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616b1a03-5761-4ff4-8bf8-c39d222a4903",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a9c753-9ba5-4bdb-935a-2c75587a96ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04072ffe-02de-4f7a-8943-4073b6a7287f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137817a1-6b1c-41bf-bb27-a8bfb2a6ea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e976a83-33cd-45e6-a46d-0d3564875fee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e7723bd-02e8-41a2-bd2d-3e93c30780f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef133de8-a3f5-4bc8-ab43-0696ce4253d0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39709743-dc3c-4eef-86c9-bd4152b1498b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1b3bc5bf-af9a-4625-8e73-a44d03e6de25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ca9c09-7a7e-46cd-97d3-4069cdf92042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddaf6e1a-7d15-4d09-b3f2-80559571d616"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "548466b1-56d9-4c3f-b094-3141be6d71ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a08bbf4-ee36-4d69-9f64-5788bb1fe991"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7064523c-e7f9-4b9b-a773-1822fb041f9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8979416-5142-467d-bf56-506a914f5c40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ac7c301-9c65-496f-8261-67a36ee008fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "daa5cdd4-3534-49f9-8cfb-476a27b38cf8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24a2db67-11c0-4a08-b077-33b8f3d6c612",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1ef575e-66b7-4ead-8367-d418e82794b8"
            }
          }
        ]
      },
      {
        "id": "6b105974-9ace-4edb-af7a-c101ef6bb482",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e73c8114-894c-488e-8d78-851912fda0e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f06acceb-48bc-4fc7-b7d8-58247937c2af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16f835ae-327c-40d4-a2ad-8f344aadb3f4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82231c9d-0a69-4442-9ee6-e0c43c70c116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d1e13d-7738-4224-ba94-e0709dee78e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d56cb4-c618-494b-a207-fc160a968468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7313b06b-bfe2-419b-9788-4d4df0b66be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e07b53b-a86c-476b-a995-5ae695b9fac2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df9afa6-6501-4554-aaab-fc396736c4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f6e05e-a7d0-460e-a817-7bf400917faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0052b4e7-7562-40e0-94b7-2bb063911210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e03b944c-c34b-45a7-aeea-5f9cda6dc709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6b72b6-6b34-431e-a5e4-f2d0d6c0868a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112cf1a1-45d0-4e37-9d35-8ab65d357ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7888e50e-1b1d-4f6e-b6dc-23559aa0cf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca4b24b-4ec3-4e4b-8eee-9a708c23d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d524b6-7969-4f54-846d-961131a39136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa16a2c-e6f6-4f5f-992c-f603e96c79d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c682c252-42d6-4383-9fb4-3345700c30dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a84415-8080-42e9-a5b9-20062575c079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df46f472-d808-4449-81ed-fd8201cc411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6da6a3a-3206-47d7-8397-02af6fb12e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd273f31-8509-4817-b500-61097fe9a2df",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1d2c3c-a9d0-43b9-958b-53e9eb713dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0426b630-7e86-48db-aad5-3eb3b77c1c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f90749-a330-41ba-bf67-ba6f10ec2fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e679d2-b902-4676-9cec-d33e512256e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f5a16e-b098-4c2d-adbb-5d4f77f73381",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f74823-5db7-46c3-880b-f72d18cbf857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ffe4a8-683d-43ce-89d9-87f6f3c7a3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bed97a-f2ed-41d9-bd71-58554e15b8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59f761bd-8d62-48d1-8ba9-5f7969388ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb2ac01-9352-48b1-b00c-0999c8ec3edb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbc30b7-4072-4670-9cac-da2ec4d36733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cfcd5f8-d986-497a-be77-6de7b1ba35ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f34c628-2508-4285-ad89-4e02741a1e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be191f0-27f4-4216-820f-2b2c09e2a115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5e1caa-9c00-433a-847e-dbb23e347c6d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3e4baa-16c8-4fef-a621-f5e0793f53f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a4075d-d925-447f-b56e-326a8756369c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb9323e-9ee2-4dfe-a2d6-815ebf70f6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a109cf-7ffe-402f-b878-354140bcc4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901e491c-8eae-4bdd-98ab-a242bee5297c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cb9b74-0ad7-44c7-8999-4b43d932bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30220323-d4a8-4073-9e69-014a165b10fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed417e1e-e949-42b0-bad2-3bbf7ca79ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f32b71f7-9685-404e-bafa-6f344e243e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85d5d10-58c0-41bc-95b9-ca10555f9a77",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5523a0ef-9473-472c-babf-602b1f2d853a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0993f7d-aef1-4cab-a1ab-18730f4f55d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c7a88c-a664-4b24-b85c-415ff95284b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ff538f-0b2c-4ffb-8ee0-0fdbf4c20449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cafa32c-bf55-4fbb-9f64-38f377ebd848",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65b505a-5c6a-4c23-89fe-e7c78494ce39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc7dcda-6912-412d-8288-31e2ec6524bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ed02ac-3dc1-4624-b806-635a6d0fffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7a94475a-0a84-4bc4-a390-c5b39872a0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161c1d05-7e0c-43d5-b2c0-d52d3f7e9274",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8f79c9-1c2f-418d-9a51-663330976277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5f9d29-96b8-44d3-9b30-d3c1f2d4a7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfd95c9-e0c9-4e99-92d4-7b68391ad2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b87dc4-f3a9-45d5-8077-af5fffbab92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa4b0d1-afec-4d55-a431-2f651046e43b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a97736-cb6c-4c8e-a187-ac0a90d3ec18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9e8acb-b205-476b-b64a-209e836a43ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd85835-0a5c-4553-9d52-74581b7eb921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71754538-be87-4ce7-9770-422e0bf610a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f42108c-9640-46eb-9992-d91863d46923",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7a352f-1be8-444c-967d-9e824984a3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f89dae0-6d6f-461c-a95c-0841486f7a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e639d2b2-783f-482a-bf64-632a63376412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "37a35829-e18d-4818-86d2-6519a62c9544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2fcb02-e2f7-4509-969c-af0f7bc76681",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faad2ce8-089c-48b5-9e74-f38241aaa1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1ed1ac-b216-4d49-8d19-021a77e90a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a1eaf2-f40e-4d9e-90ee-4588a8018fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "719b06a4-071c-4567-89a7-dacdfce6e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a868fe-b15e-4083-87eb-880547e3b731",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1189c2e4-3ed5-4bdc-9e3d-10d253ab6041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b542108-31d1-4d2f-b0b8-aa57c82bf80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf0c3b9-0e6c-4663-89f2-263b28e46b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f27f4ca-a7c9-4d8b-a98d-180c8d0aa7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b91d769-dea7-45f1-824a-0264ed7590a2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d8a7de-3481-43b8-90f8-2e88b553dd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9ce030-efa6-4d39-b805-4f6f1fa6ab9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa7a105-b903-4daa-bb1e-7163424966f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "95a3fcbb-a507-455d-a9f6-97742fb772d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb8f08-308a-4eb7-96b3-e83138117eb7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65fabe6-ca18-48c2-8cf0-2af6fb90b195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de6a19e-44e4-45f6-97ea-0b39a82bda1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d068253-3e30-4d6b-9ec6-ac7fed456c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ccd9a8-e881-4e88-844c-8d78b3a94f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f42eef7-8b91-498f-a7df-97c9410b3a02",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99b54df-d5fe-43b5-9e2c-f6a89edde580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8645f99b-b624-42fb-8a8d-786a5c081fc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bd5085-b4fa-41c7-905b-83be18806e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26702e30-4b41-4632-b058-73271cd857c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0bafb4-0041-4035-9972-c8508e3b3109",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7b89cf-e1c1-4fcf-8463-b011e868d277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8e4a0c-1203-470f-b82e-3a5dd6284e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab81954-84f2-40dd-a248-7d520d0558a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fc8bc59-1df6-4772-9826-5d17bcf5d82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb2970-e5ab-459c-af5e-508a9f72e0d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48357e4f-d536-4a75-9f83-a11e721ba28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99666ec2-dc4a-48d8-8e1e-3fecfabebc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cfc62e-ef17-4a14-b1f0-49fe5a978d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72cb753e-d8c6-4c75-a878-770ca7a8d268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffcc1a9-4bf9-49af-98f2-37af4ec9fc91",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39dc19e-2597-4437-b6fd-a94bde9a4ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e43090d-61da-4f0b-8ffd-7388b16968a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e346ab4-eb63-429c-b8bf-1cbf11c2f78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a675f880-6f14-4141-af7c-229ae4518289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7b34e8-9328-4374-b6fb-b70a7ce11263",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77253824-2fd4-4443-ab99-3c23628fa749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc904794-bb60-49ed-b086-0675b3ff7092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d63e060-289e-437b-8b26-9c6f8e8355a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a85944-0781-4a1f-85f9-41b78e427043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11ba9d-7d38-493e-9934-fde6daa497ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52295be-e041-450d-b007-23702a610387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade8e043-24e1-41ff-8887-8909923e99c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767ed59d-89d6-43d0-aeff-fee0f476c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2efff36e-097d-48bd-b13f-6e4441ce3384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53b209-e448-4854-85fa-70797256da75",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6acd24-704b-4ed0-82bb-d1bf0d9bb5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b10cf3-d21b-44f0-aad0-49a92affdfb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477d565c-29b4-45fe-b446-6c4f911db3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9377b0b-e732-40b9-a654-11507269f900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a0518e-b5bd-4e64-9af3-3d78bbb22383",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe0188d-22b9-41dc-a217-2faf84917df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16230cd-f68d-4a39-9432-35466fb37a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482d1ad9-d07f-41ad-813e-69986fc25c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cc614d-9569-4464-b124-980b3e1acf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e8ca68-57d5-4bae-840e-42bc41684f9f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cff48c-f715-4645-bbd7-0e6d564c1266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437ec700-096d-4375-87f3-32dd2f2fbf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea467d3-21d7-46ce-b8c4-124d8d9f2962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4c6f4d-2a15-47bc-96e5-732f0d47e258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9440967-ea25-466c-9cbe-c356a3b6d426",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79381acb-6d13-4704-833d-4a2f833bc7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054db694-d7b6-4a58-a6b2-35421fd113c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa52598-6caf-474a-8696-9cdef155e2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54be427f-97c2-4997-aa0d-4afdb2ccde62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ea139-ddcd-46b0-86d1-30611b0df3df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee17a03-6e20-4dd0-90b4-db51746b396f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3172746c-602a-4b8e-a150-6f0afadffa38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a4c9ac-9827-476c-a948-66df90b63fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1ea603-6649-477a-8588-da60d66be69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52fd82e-d7e6-4238-be4d-b87c6a9f3c24",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8a08c9-34f1-4b87-9462-a7c3991f6f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f813a34-2eb8-41e7-9956-064753068c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef0b0ab-c54d-4607-b86d-9fe3db2e7f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff347d3f-3967-4af4-9602-45996c5594b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397535da-4719-4644-88bb-507125606c52",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2c2a01-a8a3-49be-82c9-ed99995c19df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2c30a4-975e-4765-bb0c-4c494b717f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4971a1-c901-4017-8c31-7325270ea733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44b89a18-5018-4d32-ac89-e752cbf9537f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937cf2ad-e325-4a80-89a3-49067844a2c8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f90c024-c07a-48be-8600-0ebb8759bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d717a40a-be58-425e-9069-fe21a1076cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6950ad9-90f9-47dd-bfbc-138645dc6c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a699cb3-d994-42b4-966d-40e36e007f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e228cf-be02-4ef2-8e1c-901a58619c33",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424deff1-ad9b-49bb-bca9-a8947d441875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a655bc3a-95f1-463a-9858-691473b14b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7530195d-24a6-4815-8559-81941282b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3602d853-cd6e-42bb-82bd-54ce7ad89f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff1c71b-07e4-42b2-9787-cc71cb328ec2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7dcab6-48a3-4331-a4ac-d6a574db89de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd744c2e-b6b5-431f-8c6b-249556e477f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b3d3c7-eb14-47bc-9933-f76423eb3a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d784724-e52d-48ff-907d-bde092de270e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67fc213-f879-41fc-bd3d-07b8a3f3cbc4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cddcf0-24d9-4a49-a3a2-c1f2b34e9b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e62372-6951-46b7-af8d-2b71e09be0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd76aa1-b3e8-47f7-9d32-a3aa04b096eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5720bf-fa54-477d-90ff-0ae68f84039e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666b3d46-1e82-4b22-b934-c253a90a1c4c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1b4e42-ed35-4927-957a-d4d7efb92ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d80c720-a02e-4385-9a6e-04dc20c1b89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f684b30-3169-4541-8c24-2d5cedb797df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e278f54-fa43-4c80-a3db-e518b870f349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893c8ee6-41b5-4784-a2b4-1ddd872d32b0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a39f84-d339-433f-97b9-02363ed3a480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad6fb96-232c-4239-bcd9-1824e6e71f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60213988-e940-4281-871c-4871968d3c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d7768a-606a-43b9-afdd-c01d439f1af5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1051694-0f4c-40c9-932d-1323bc48b23d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "98914139-5047-4a58-a3c6-0e85a8b6c68e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac5bfde-0752-4abc-9af0-25a8d304360b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce11a65c-b8cf-4793-b7e1-2acdc568f551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ec75d3-663c-402e-8bd9-0dd53b069921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1416da8d-ba2a-47f5-bc4b-1b06c5c6b84d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "051a3e27-d08c-4e3f-af6f-5d7d18321794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45eb6032-37f4-462b-956b-67a079d86ecf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f07e83d8-4ff3-40b3-89ea-f6f92ac8888a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1edb3e5-38c8-456b-8761-1bb02502fcfc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44ce313e-9efb-4f21-924b-c100c7193635",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b67f227-4edf-4a2d-ae4b-f118b92d4a22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80d77ba9-cbaa-44c3-9f60-b3530cb4fbfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1389f40f-481e-4d3b-91a2-22133fdd4dab"
            }
          }
        ]
      },
      {
        "id": "533e3a48-3cd5-4256-b425-489da547e630",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8f40e570-480f-4d7c-8be7-c71e20c0fb45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56eb5e2b-13c4-4b44-9226-6221b9de6bfe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "598c2750-2cfe-4097-9ae8-4bab0d7daff1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b3ab2e-d4ef-4c8e-9247-bd2436900a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3665adc9-c44e-4077-88ad-f1b78f54ae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e28eed83-7274-4163-88ee-f9305debdd75",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447c7e7b-964d-4cde-a72e-387cfa0c52a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad29a1a6-fb73-4817-b893-31535afd9756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10d69af-c3b7-4aae-935e-3ff13dbd01f2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3233b50c-9d54-47dc-8df1-8c119adccdbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6fe05c-4a03-4833-9e2d-020bbe814ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdda198-27d2-438d-8aa5-143b921d086b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a114068-ceb8-434e-93a6-0a1d8a7941ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826eb2a7-1e18-434d-9ed6-04062389ef70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4b0fbd-9ff3-4971-b84d-5dfdd0f5a9e6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6c48cb-6fc6-493c-a8fa-89e7d2d1e47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd15767-4f05-4b04-9e54-b343d5166745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048af10c-39c9-4be3-830d-faf81b372509",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f88b238-dc1c-43c5-858b-92a21b4755b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bd3813-90c2-431d-b0d0-f9a774576a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c81912-13cd-490c-82b5-5ca76ede8f5c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed9df45-5ced-4838-a2d5-d5bcd671af97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2d7157-4987-45f3-8cc4-c4a1609d6683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359bd08b-f099-478e-a28d-48552f7c756f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3851916d-10d5-4ebe-9084-d3bfb6c10d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbc6fc3-8c0b-45ca-9c20-2b612d5b1798",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f80f66e-98d4-41cc-97e9-a8876caf2d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d16e92-02f2-4b36-974e-3e9a7317af3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef06c330-f148-4095-8bc2-64f4e79791bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25fa46e7-8faa-4f20-b1fe-37cc96c88831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b825067-10c6-4239-97a3-30d9943895c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8b71a8-cb7f-491d-866b-001e6b06dce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36cd6a52-bc8e-4cca-9f87-67d0a0456a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fa6955-0341-4e54-bab9-9812e02b47e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7d4896-9c49-48a0-bb3f-a9a5553cc4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2da1dc-c60c-4623-b184-3c17ec8dbd6c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e86432b-49e8-4dd7-86af-67ea51ba47c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71394bad-1d9f-4d05-8ac4-28fc81105b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beecf154-1419-4e1c-bdc8-c1bc6df5509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837ca6b1-59a7-44fb-97b1-0a38a3ff613d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad52731-4776-473f-b515-ccd3d6a2625f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6687e0c-53c1-4d15-88ee-337c6dbeb0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0cc3b9-2df2-447c-8676-7863937570b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd603a5-7fbd-4906-b8a9-4ffc085d3e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fa9c60-0367-4850-bf9e-f1fd1dee1831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cccf67-2d92-4663-9b77-663d750291e0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b564618e-316f-4e9f-a68a-5a35cf49856e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08cdf32e-0a07-4c3f-814a-1ab9bf62ece4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3729370-6de6-4696-8bc9-b8d6038094a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb56ae8-b5fa-4bd2-ba60-e24a7cf9b430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01b0ca3-ad4e-4a70-b873-583e244d6e0e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25077944-4117-4fe3-8561-c64b67640b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d564188d-ed84-4414-869b-9f2e4a1a78f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91236d4-2e9a-4a1b-bc5e-bd895783e5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cc1243-c6d6-44b1-a96a-82dc6264616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085ae6d5-0fd7-4797-9234-cd32dff350b6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be601f07-d27f-45e0-bd89-f5d9bcc68230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83bc4c6e-389b-47f7-954b-16b021c11bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa97686-4e8a-4998-b1b9-dab3225fa4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d157f644-c929-46eb-8964-297728a285c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faee2c4e-fb6b-495b-a016-7fd085bb7ca0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59744cfa-d95f-4987-9380-96dfc411647b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a373691-72f2-49a6-94a6-2702a5b484bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8b5547-3019-4765-976f-d8dc5fed6bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a57db34-9177-4f2f-bf31-100e3bb070d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3491df1f-16d7-44c0-9769-e4eb359d30ba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dbe13f-84b3-489a-a517-4a81dfcf01b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c53d7fd-654a-4cee-ac1d-c827de7b2ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d67d980-dae7-4875-ba2f-502f9f92aae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d01ea9-6e45-4ae7-8991-45c315b62c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b203a6-8848-4c85-a7ef-aa4aca4045bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f49174a-a49b-46c7-96af-1cb34ca2caf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6c3764-3f41-4c81-b044-31fef2c5e537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78216421-b1ac-418c-9a40-16333c9750c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31fefed5-6196-49dd-8749-18bf8369397f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa39d48-8df7-4c93-ad89-040108b12d55",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e85a63f-84e1-452b-bde0-5e05b994ef09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ad57e-d968-45f5-acf7-668647517dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224058b2-5ae1-44d8-9eb3-fe5a7443ae3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69918b5-0579-4863-b514-21a92b3a4483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6501da8-485b-4188-bef1-67800366dc29",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5d11db-40a1-40f8-a5a5-b31a5d497541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a165ae79-1f56-42ed-8b0e-49375cec17fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4076d-4548-47fa-9c08-9b8fc089c93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d80e947-40b8-49eb-909b-c900dab6375c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1733b2f-ef4c-44ea-bcfb-af448222bc7c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4c4929-1a5d-495f-a469-f993cb478e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29075099-73a6-479a-956e-f0d5fa7cef0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5103b2a-d16d-43ff-b672-a28c14bf05d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110ccee2-eb89-4d43-ad77-28617751b23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615da5f7-df39-472a-a626-7064a56ac7a3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c263f55-c7e8-4e3c-a489-1c6c4d298567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d2c227-fe05-4fe8-be17-daa90f450304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06658e25-b531-4b78-8041-b33b6b6e8700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060ab11a-91c8-4ce9-ae20-19da08e43d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01273f18-b9f1-4082-89a7-a11704e35cf4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b8bf94-4ad2-46e4-8e1d-f137bd0e4611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae248ea-27ae-49a0-a2c9-6cd2ce16f7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c2f007-c286-4421-88c9-4303e634bdc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959ed809-ab54-4ecb-b883-32e7cd0f48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d683d2af-f0f7-4efe-ab64-f09083c8865c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ef3aa3-7503-41dc-90c1-21ffcc61b029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a84760-4dde-4071-8a37-c48154115026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89513951-188c-4405-a673-aca8f06128de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903dab8e-0b08-4b71-9c2d-5bdeeb4a00d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6116f010-0ad2-4f0b-b713-2c593c9a593b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f034d215-c27e-4776-a58a-eb0ed1878357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e3248c1-bb41-43a7-8acb-a1e2c4cdb4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0889bb-86fa-48f8-911f-2ed69ac8cac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6d3271-81b4-4111-bcd3-292b134596fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6833feb-dc72-456c-b745-4427c7d4aaad",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eb36f6-371f-4daf-8bee-9d19007a0c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7952166f-f25b-42cc-b3af-2f8f51c0fd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344a5554-7e49-4eb9-87bd-73b97134d322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb088d7b-36e6-48ab-adb4-c8b652aee20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34412420-71b1-4253-9dea-000439df4e02",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d6c82f-c0e3-4e68-9532-59b2c73ba2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bcd915-e21a-4284-9a81-f1214a7b4b34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ef403d-616a-436a-9a6f-82e98ae29d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "553eb7e4-3d81-457a-ad04-a3512869d228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786d7978-73f1-4e3e-9924-e3ddabf4a220",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b546f3-c08a-4544-bebd-8ff1f78ab6c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12bba019-49f5-47ef-8b49-51c427489ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e346a59-2631-4194-917d-2b89d0d5bd4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c63ee81-aff3-40ed-b097-69c17ad76e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfdcd08-9385-46b0-a372-150107147cfd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c427690-f40b-406c-946a-88f08eac24f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382a9e00-5747-4dfd-b752-e3e4c59eee59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afedada-ac9b-4418-b9dd-528ec91dc6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ace7255-2729-437e-8b70-6da43a9e873a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1119994-27ac-4adc-b283-5e251c8980b4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9fa62c-6361-4cfe-b6b9-61254df5acfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c9b493c-54e6-4282-8251-186b1abdbefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d9d225-7e84-460f-9a24-4077e4d6b89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dc8650-90c7-4a32-9f20-dbade06ca5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd532bc-d647-48df-a3a3-4b9025ab1e42",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9587f1bb-4a41-4186-aaa5-e9a08d152f0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0ad845-0693-47b6-8a26-4627072376a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c47488e-8273-448d-adec-096c46815f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d5b4c4-a88d-4897-b4c9-d82ee4da1232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556bd974-e2da-494f-b504-4ae996f94c95",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb18d6d-f37f-4724-90b0-d5332a72a576",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "360a346a-2348-43b9-bffa-3195dd7f9362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb0b479-4ce2-469e-ba76-957bac7954b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efd0b64-3bc4-48ff-b871-5fa048e45373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4992ecf7-5e2f-49f2-843b-a9562c756e03",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2401cab5-58d7-4522-b70c-148a4bc9ad7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f5c21c-3c1c-4106-8a9b-2e23b493ee0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9b582e-ad94-42ca-91c3-39b0376514b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7a3227-bc0f-4e8d-8120-66a7d3021fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b29659-2c2e-46e2-834d-859e389a3e25",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3175f61c-b445-426c-8afc-3b9327a66886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7446263-dd2c-4e80-80fc-6f142b0874cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9eecc9-6f43-40a0-b8e3-b1976bbb5399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2753d24f-5d7a-4059-8bb7-a854a0fca6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b35156c-9670-4148-86da-8c377bb39969",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643bc310-585d-4076-a5b4-a82b828e7c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b4ccb99-af28-4e62-9d66-500f418655d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd118d5e-c683-4f1f-a69e-721f0db6e1a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56f1181-9a72-45d3-b443-cd14a783a3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde271ed-c851-4e1f-9b75-f429da7dc42e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac42cf2-fccf-4247-b623-332d62c1e7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3cbaab-3cee-42cb-9130-b8657020b036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c832717-faed-48f8-9673-8229a1128297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a546dba5-62e9-4aae-ab1b-793abe893cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ec9967-3ff9-4ab3-90eb-f49eb683dba4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d336b9e-ccd3-4b57-b781-7d6029713fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e2e0142-4f25-44c3-8448-45d8e3dcd2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096aaecb-f28d-42d3-8add-fa93b5bbaead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39f18b5-0102-4452-a8f0-cb939375f182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cecdaf4-ef20-43bf-bdbb-9b351a1fd7bf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc3e6a3-806f-443e-9478-43f8f3a7a90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87909cd5-8d86-424a-8481-68ba98545806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c544abc-028d-47a2-9f96-52b0d58c2597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82f7068-9bd0-48a4-8596-775924fd6585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f40499d-c10a-4979-be2e-b1f3ed89a0b3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60a7f1b-9b47-4b74-8c36-8629c204911a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e899ebe-90f0-4052-b8fb-7e90a7486a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06d61ad-ec82-479a-88d5-45ac5178e0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386db6d1-3ab5-4759-bc6b-6e6532f228d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf4f9f7-c94a-4a30-a4ad-ffd28c9c6e51",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cf388c-1220-48d0-b026-c8066182950a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d3177e-4760-45bc-ba7d-7f40cee8993c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1428ae-98f5-4a29-8eed-94745935026c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065371ca-c240-422e-b4e5-6ceaf12d98e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a96adcd-6599-4b25-a18e-fe3738a8b570",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20177c1c-4a02-4edf-bccb-c59db477885d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a2560a-9a95-4d2b-87c8-f20f0b67d094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865a093b-b978-4266-853f-0277b06b9b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662f84f7-809e-4dd1-8cc2-3b68d403b505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7c5c12-2690-4e0b-9467-462f58471bb2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8d7687-cea5-4ccb-9941-142888c10e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2200eda-b871-43d4-8fb1-00d0cb6d8650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976f3df3-cef6-4583-86ff-40f8b20c3be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3234af-745e-48d4-bb83-01ccf8355a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ee2bfa-26d1-4ba1-ab71-51b535c821a6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d744ddb-328c-45e6-8abc-722f42b9fa1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0770f13-1790-482b-b556-58bc6d2f8e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1ce584-e2a9-4c11-a1a5-268b8f2c6f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594454f1-acd1-4de3-bd4b-236cae8e4e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af866d80-2d49-4956-88b0-77149682b845",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7165bacd-5639-49ab-b61c-c728da23ce2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bc6315-c298-40c4-b0d9-7c045918d09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34e82cf-7cb5-43b9-86b1-d7219c4fe8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adf1ec7-751e-4319-8258-7b7ecff280cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587eef78-85bd-41d8-b084-085eb4146b2b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03467398-3790-4aef-92b4-ad0db8b746de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d0c1e6-1b2f-4a41-a783-103eed3bd6b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96b56ed-1762-49fb-9f26-6e7b1c928892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85446c5-9f33-4c04-9de6-d85cc17f271b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b2fc88-d9f5-4be4-be13-22cbe4b83009",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ad3561-2026-4a96-a6e5-972a9295a7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcdc4ca3-9445-4d30-8116-02f8107b67dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df197858-2447-4901-b96f-07587e3ecf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285f3b25-dc6d-4e80-b39d-b358c3124a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca182a8-c476-4717-9fcf-0b7a3e3a3252",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76394093-0c3f-403f-9354-d466a1b4d3bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca54e6e9-8f30-43fc-9358-1f6f1aebda89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b8fb62-0d00-4e69-a385-a702d683aa59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59aa2957-79ec-46af-b540-4dc64715487e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9f76a5-4265-4a0a-bcc5-c4b607af2fe2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7db5c2-d342-4d8d-b14e-13f0b5364165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e42be5-1e9f-450a-b71a-cc47d9764275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50a9207-ee63-4386-9407-40fbfebf4aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f9b6a3-a9a8-4852-b9aa-abb9bbcac92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7839075c-efc2-4933-8407-b6fc49c6ff56",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7498b700-0d59-4cde-a91d-9e80b2177947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e646e2-f01f-4ce1-a6d3-cb856534fd71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4722d730-e328-4e72-b23b-4c9d4d7d02a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f140efa-f308-4425-a7cc-d5613ea37a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4cb79d-2802-401c-b9ca-a40c517e9869",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8aa2e9-dae2-4971-9088-380fdce6c981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d840e30-2fe2-4100-af8a-ceb549ad224f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b34d2-d519-4506-b7fa-ea037e01c6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe082846-3733-43be-bbc1-9471a7f76972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf2ca6-41ae-4768-baaa-456479690840",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de1ca76-23e6-4f7d-a711-1c3d0782a7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e8c3902-c41e-45ab-b16c-d45619a4a6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311a9d8a-e131-4d8d-bd82-ce5baa508e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1768d62d-c381-4b8a-82e2-342ab233a3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b79fae7-fb0a-4d4a-bba9-ff54ed0d1e31",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d487f4-64de-4c4a-888c-04644230b1b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82bdd8ea-97ea-41f8-9372-5dd479d108c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0979d36c-2ad9-4a0a-8604-58637ba5c4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364cb114-8d0b-49d4-b000-552976b4932f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda1c086-6c63-4d8f-b49f-a99f48c17295",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43cd6d8-e640-4484-9272-9a8ac4a8b1b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec433d3-623c-41de-ab68-f88c5811cc87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe8a9d8-7283-4244-90e7-a5a1aaf088e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d89a4b6-9058-4796-8b33-c649c936e7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5083a4fe-0553-4c11-8c6d-a552cf09461e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79b3f54-f2ea-4c03-ba1b-3e86adfeb9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4627c9e9-3c8c-42bf-b203-a1002005ea8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263cdc2b-3012-4ac3-a7a5-2235e8c93fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf312475-088a-41ce-b5c9-2f957577b172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1af041-16c8-4a60-87c4-ac072054f776",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa216b13-0021-4e02-a4a5-9b74a289828d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60aa4d56-b87b-443a-acbc-b6f53a6964bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925aed78-37fe-4734-af7b-6e853e2da3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bd7935-0b9a-4bb9-a7cd-8a87db7a4c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62df368a-68a6-4bec-b713-ef7308183144",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50af20f-319a-4bd6-aefa-74f3dd88670a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b325c755-c1bb-46e7-8fdd-b2dabbdfe264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6aa8c3-df94-4853-bd4b-5ee9dd9af364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ae6099-2b73-44d0-9cd8-94de04539693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e793b44d-8e65-49e7-83e8-892b2023cc47",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0c33c0-9148-419d-86cb-7ac0c2aa4387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "647fe394-981c-48ec-8c84-290859599b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6573a789-86b4-4a26-8d55-dfb84ae4fe88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad51a04-992d-4d89-8e1a-a55683d84443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9455e1aa-ed5b-4d9f-9225-6dc26c117eb5",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864aac85-2304-4fef-ac0f-f335f7132399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9766383f-3c8e-4733-ab92-e1d11568cda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454b95e9-0b7e-446a-815d-8801d6d1a461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcad8ea-2213-4a62-9368-326c427f11dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bc39b0-866b-4fd4-8eef-cb22e6d1f19f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9e12a7-d94e-4342-88a3-9a08786c12c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a5d844-0ec6-49f4-95ec-fc455c5e95ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7741a9f0-f010-41bc-a8f0-829e2acf8aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e00f0d1-a6c3-4a5e-938e-32c6be64986b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f50461c-36b4-42c1-a627-2979be839eda",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b27aef2-55ba-42af-ad24-693aed4f085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d224532a-2a6a-44b7-bd0f-d1e656004e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd08303-913d-49d7-9491-26bb30ad15a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd23bda1-c678-44f2-902a-5819df7408b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f54d07d-1f43-492e-9817-9acbd235eb59",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d16a88-5e15-4444-886f-78c0e24bdc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a13b1b8c-e084-4def-bc26-065ecaec1cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573995b4-cca4-4b14-a0ae-a8877e9886d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15d45f52-b4ad-4a6d-b65b-138b158827d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5373811-2f19-48ea-a3f8-85f245f1868f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea4de1f-cb1a-4ba8-b127-23344921f476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927c375e-6dbd-4c6e-a9de-5461c42f5e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd80e23c-3711-4b8a-94ac-be7465ca99c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860949c3-795d-40d2-ae0e-6dc8a6e74f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc50066-7882-4eb9-959b-fa18e7158309",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81de2d34-424c-4078-8700-5e01d49aa45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b8e233-7f70-4676-af85-1238852ce44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e385a967-1fa6-4c78-addf-dfd39a510ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8076d9e2-7dcc-4de7-9c95-b2e823f7f5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae00aa90-6489-497c-ae39-cbb55bcb130f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263d49b2-bacd-40bf-b22b-56918f37660c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e76fba5-5ff4-4ce0-b394-18a8cb2289a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11618ea6-cda3-4880-bb10-3a4856ce534b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da6ffd6-79db-495a-a0c3-e3102c643e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a9268-8e9e-4c48-8fbd-02733b5e1048",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb8fa34-d17f-440c-8a76-bbb5c736542c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5fb90c4-6b39-4734-993e-6d305151e484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e989f-ae0c-43a1-aade-a0121a7fadfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46561e22-802a-4410-a95b-1f626d1d01f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b22c8df-ccf7-4e7d-8ec1-66fa05f6b3fe",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964dc345-8630-40e0-95bc-f58ed00aba31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ad516f5-fd17-495a-9ca4-135d1638f57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9cb2c0-1cfe-443b-b534-2f272f20b58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21a6214-ce46-45ba-a9c6-4b0b0c8e9a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b4c457-b969-4662-9521-0f704718b711",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbc8909-723d-4a15-8e8c-2587743993ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d083aa1b-be94-42ec-b2e8-76dabf19b79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5787115b-3156-4c47-ba5b-7d4414db11cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f1ab8b9-d459-404c-a36b-491c686b9ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d11d4-760d-43b0-b655-e1089eaed944",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a35be4-3b74-4c86-8050-3ff4c27d19e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2068fb-0042-4670-8dcc-622ac5cec734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47af49ab-ab1a-4986-9fbb-500f544eac99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a0ceb3-cc49-4188-b524-4b7bae192e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b118b1c0-7eca-47dd-af68-bb93a6f21f25",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7244a8c9-995b-4a3b-bb1e-1e37c9e0005c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64b7ccb6-7131-4051-8765-cc72df53890e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97ff315-7bc0-4f0b-953c-40d8abee1313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d05103b-7ae4-4178-964f-a443acd462c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0a3877-285a-48ce-8413-a86feb84d2ee",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8e5942-e348-4290-9b1c-0a95bea6c917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ce97e59-483c-46d6-8793-850a8b3893c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a40913-f44f-4e3e-a030-8e9edf06486a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0735f3-5b5e-4a58-8c0f-7ac5441c5609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b987611-1944-4ffc-89fe-212a2417f64c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573252a8-6068-4df8-81e3-818071c60181",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d356fa7d-21c9-4bfe-9cde-4c2b9a42d09e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2ad983-294b-4634-8915-6312011193db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d242850-5cfd-4ad1-9131-ef96a722b36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e828eba0-5271-4b1b-9305-3607aad1c167",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a3672c-4f7c-4017-9362-5cf3eab226b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e48fb4bb-4e22-4f0e-a9a9-ba00c9d60c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7d1d06-3790-470b-92e4-bc89b5715232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c24163f-af65-49b9-9ce6-e7b4a43f3b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e42f8d4-c1f2-4665-a7e5-073a95375306",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827ae5b3-bcd2-48be-8508-cad2e2b123d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6a3f04-41cb-49be-bd36-14874412b7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dc6762-0ccb-448e-8f93-b6985579ecfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0117b440-530d-4cb3-bb29-0d1aa6d5361d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485ee9c3-689d-4339-9047-cafedc00fe4b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaeaac1-591a-4d91-8819-f930a2bc6eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701b44cb-0c8d-4c51-9a1d-26484eda1407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c90a7-c05f-43e1-9fa5-16299c691625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2a8973-6aca-4743-ae86-7d28f2385cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9595186-43c2-49a7-a8e4-1211d25a26bb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62506d5a-be90-4bf0-82ce-e750b6fa5392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "951bde3b-ab08-4693-8519-22e87e15c096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ca9a98-613e-4c04-969a-1039bc8299d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ce2f63-c194-4354-b688-ada1186553da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7ec22d-5e2b-4e56-a0fc-f46eb405410c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8604e73-b0b2-41a5-80af-6da0f2713a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ca7b813-ea26-48d6-9769-0140f87ab555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb90f35f-bc52-4a27-895f-7cdc0f96141d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b744fb-ead9-46ea-928e-3fb631d4598f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e3561b-ea5d-4669-aed8-a8170972616b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfe7259-f781-4d8e-9ed4-de02d8aa0ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655a9c77-4630-4ce4-a7d1-61fb45302f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72350ad-5414-4f39-9600-860f9fd30849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76705aca-7f36-4fce-ae42-1aebd0d33cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5580f9-737d-4271-8022-d664d4252814",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547fda5c-b3b7-4424-b86c-d75436cff660",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2aec730-e2b7-4514-a1fe-38decb6c6d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a658853b-6ce0-4378-88b7-2cd7d65412e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26997ba7-5f45-452a-9ff5-31aec88b3f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202f5c7b-13af-44ef-aed6-10afdabfb8e0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477e694d-ae36-45a7-b6d3-265e579beb6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9fde40-7285-4561-9f81-1103a57633b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a0e4de-e7dd-45cd-8da5-f5b837fb1762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2002b1bf-7222-4947-98c6-c86a5c0cff12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32467e84-ee6c-4a69-803a-e47e32fa0b3c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24f8c32-895f-4ded-8fdd-9a75058a8e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39935fc4-fd7c-4850-b2f5-cdb4371e40a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66865ed9-d1c1-4bdb-90a0-efc276ecad2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c6fe31-d868-46d0-9780-6c40358da863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac034bf-051f-4ec6-9414-1f294f08a8ee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bfc3e5-376a-4d2e-bfe7-07d59e9401b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ef8b11-f8f6-4aec-9e47-31291e941da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d021dd8c-13d0-4244-930c-1519dc927926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9f1648-d38e-44bd-ba7a-9c9fec791428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a6acd8-308d-44ed-a71f-a8b537f91093",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bfd062-df98-4abc-8f2b-ca5c71a4bcf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9842d668-20da-4d3e-bc6f-555f405cdf90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8153154e-6fc5-4443-b412-242fe9c6ab36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67007b22-5f8b-4dcb-b9b7-e3e956fd150f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f57f022-772d-4ec7-a589-3bfa477d5cf8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaf9158-a572-450c-98d5-05e78d4b5afd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "833617a1-3246-4a9a-a56d-423fa383a888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e75315-b762-453f-9a36-0f1a30ab39b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aac8c7b-4af9-4462-9bd7-6eb1b8745f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d789ff-7d1a-42d5-8461-8d72bb792548",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1e6d13-4e04-43ae-be4d-943b40f9a161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24b6990-2dde-420b-8a48-58a13ad44fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77cfc5c5-c985-42f3-bcc0-22041502dd12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc46368d-6806-4af7-b178-6fb4cf91560d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9496d476-af08-4f43-bf1f-2d7381753cba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa6162f-3cdb-4ee3-b2cf-a1f2ffab2668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02a8cd48-a621-473b-98f4-5338d1fd78a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d27698d-b88a-4c49-81ef-fe9de8c125bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98498be-94d2-4f0d-9cd4-aa1a6615ce3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574ee544-b75b-4a51-8fbd-b17b15f6a9ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a15624c-1506-4472-8146-0b3575abc5c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70949ffa-4e2b-4ecf-bead-5d70ff8cf5da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dc4559-22fb-405f-a1a5-e12fcf39f763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab43a338-e530-4cde-9ed1-a4009b07f905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881f2635-79b2-4c36-a865-f63645c8cae9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4a5c3c-faf7-48fe-8249-20825b7ba3d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "670725ec-0e6a-4daf-bc0f-8ebdfe694e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28305e36-93bc-40a6-9bc2-f6d0ef3cacde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d1af89-eda9-43c4-aaad-38a5456f9259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeeca02-a728-4592-a3cf-f302f496d1ec",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9b0f75-16bd-4581-8965-4815f85fd389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b750d0-22b5-4cdc-af8b-8c77036cee51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4b91ff-d43c-4133-80b9-2ff8f73b1482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8202036-94b9-4dd2-8ffc-7eee56842417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3fea69-008e-4c0b-83ff-e365baa74641",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ad1c27-12ce-48e0-90a4-72eb6e30e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce3ec5d-d68d-4c53-8986-7b8c04f8cf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8591281-a4de-4167-8387-a5a2bebacb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13152d53-3a1e-47e7-94a6-fe55196109cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02830a5d-f4ab-4f02-b925-ecbd4840eb46",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbd9219-cb58-499a-a936-45229a452b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed68c75-8f19-491d-ae29-dbdce0c2a359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1342382-78d4-48df-b488-36f83370962f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f55392-3b96-4682-a1f5-ad6ca0cb2e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3b062a-fdad-4b12-af04-4a41c6322604",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072ee30b-0e61-4127-ba94-4522af2426f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee360af-f116-4e80-b432-30c8c1665354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b8828a-19c6-4298-a802-378a90915031",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d043ab9-1748-4032-9232-136a7578c4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1c17d-9253-4148-8526-f8d25145a611",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed35b3f5-b0a6-444c-a980-c70318769588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff181558-772a-40f8-84f0-9b262812a3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b830da4-1e84-43ae-9831-262b9a9083ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae2ebc1-3700-46fd-89db-1241fa967327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e88135-c132-446d-8928-40c429040ea8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e9f27e-03e9-4e5a-823b-11e17f9bc4a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91123211-63c6-478e-b546-5484f6d74764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e27a1a9-b740-468c-8088-8f4513c5ab17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0f7009-5e13-456c-9ddd-05170d1c5610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee75acef-b392-4539-b4fe-5f4f1eb731e0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42611a7d-96af-42d6-8886-ba386fbb752e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485490bc-3bb1-4f9d-b1d3-f63c956e1530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e41c148-8e54-4200-a4d9-4b7fbd52e0dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167eda55-265f-40c8-96a5-c728e6080b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea25a5c-ac92-4bb9-b568-5bf0079ccd05",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c973196e-bf6d-472a-aa08-c29b297c74fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cf07b8-05d3-4e8f-aa3c-309ab0113569"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc665f-d381-4dcf-9e88-b7f44e5408ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ea541c-843a-48ab-b6a9-8b31bf605041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b51fbf-9dc0-4308-a487-cf50c6e267c8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9c8b03-29aa-4ee5-a5c0-fbb749431c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6be05cf-77a4-474c-aac8-cbeeff23361b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08253c2-64c1-4626-873e-57f7252ce1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0028566f-9715-49e6-9a82-aca55ae2c57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d398695-6f98-47b9-9f74-1f6df1c2239c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0aca59-5296-4439-a99a-4cf01702f7d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d791da1-e689-4f1f-b531-cc1b7cf46c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b25034-9007-4b7d-ab25-5e6dd6c40539",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8823285b-d2f1-46b6-b1be-f5583f9abc25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016d5daa-e4cc-4430-9e4d-4d6beec355b3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bd6384-0dac-49dc-bee5-0c8826b6ede1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6a3c75c-17ba-4160-a0a7-890cb39b5ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49976c60-bbd7-4760-a4ce-ca6aba9fbb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaf2658-4552-4c4c-9b55-ee551d8be470"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f856ca4d-089d-4812-a40e-37704abd97dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5c481cd-e21b-4bb9-afd1-a097aeeeb215"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3db63bc6-6535-442d-8be8-c0a68d280eb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e371f643-d7e6-40a9-b620-64fc29e14006"
                    }
                  }
                ]
              },
              {
                "id": "08b4d21a-86a9-4d32-aabc-ffd365f37983",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52b7e90b-4329-4197-afce-b8951ee9148b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8582c7-9739-4e34-a5a8-6c25075a6a40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7e0bb483-6cca-49a9-ad64-7e4d54f7dfea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26519d4c-886b-44ab-8a4e-6153969cdf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d38fe9fd-538d-4e12-b1eb-417b6af55679"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ddc6fa2-f903-4bf1-9d21-f96577b5464a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee56e7fb-94ef-40e9-931f-ef3422798995"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfd3815d-ebf0-4013-960f-3dabbdd1bf2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e1d92e-f10c-461b-a2e3-f15f8a6ca1b2"
                    }
                  }
                ]
              },
              {
                "id": "65262aac-1007-42d7-b231-5a80b2e683c3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a4a09b37-0b1d-4c6e-a85b-ec20b74dce91",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdeec61-56fe-4ad5-ab7d-532dd1540546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "df48b63b-aef4-48ee-8987-2cd5ea110ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d2ce8b-7ab1-4f48-bae6-8d932c5bc4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b592ad-016c-4fb4-b1f7-a75f2d609164"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e4e12c41-b9c3-4eda-a80c-f447302e9859",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b81ca573-a714-4792-b2c1-e700c53e679e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d97429e1-7f9c-41be-ae8c-9358c55b7465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0bb8edab-dfb1-4bf0-bfe1-cc334e3affa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "230ac55e-2792-45fc-a147-a132a9b70bd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d5b7328-1446-4ad7-aaa7-5e9d6fc2e386"
                    }
                  }
                ]
              },
              {
                "id": "86de6a11-b9c8-4699-96ce-a0b4389ae073",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10709f37-afee-497e-bdb3-46be94801443",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "010f8770-ab03-4f91-b596-61632838896a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f529125-71b7-4b92-85a8-08546e547f28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ddf215a-cf4d-4812-870b-65ba404065f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ad5f701-f4c9-48a9-9fab-fddf65822de0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5e2e3820-08fb-4d3c-876d-27d963545d60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "657ef855-db34-4522-aa40-53aa14b7ffb3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13c8cc75-1c43-4eab-a500-2bcd578d4cb6"
            }
          }
        ]
      },
      {
        "id": "00d26318-6b85-4dc4-bed4-b8ba13a01d47",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "13116257-a6a5-4b4d-928c-70e15a106d4b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9b65439e-1a41-4ee4-935f-ff52e28b2e8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c08126ef-3148-454a-8794-434ebbf7a8b2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2312d27d-e215-4a2b-8d47-1ca0d7e7e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0290e81-2b61-437d-8047-4348d766fd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8ac447-d118-4539-b14e-6b9d839ba854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa6c977a-c733-406e-a4ec-021a2c95c855"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e079953c-6846-4b16-b092-284c2fbfd2e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f23e6d04-3f7b-4c1a-9515-b70ea054dfa2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a7bcf3b-ce39-4ec4-8724-098d2577e0b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea5a749-9afc-41dc-85a1-8767e873670c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c92b80f6-1cd9-4956-a0ff-652807893c24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6de6533b-64a4-4f98-8e51-6c84a088e633"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8f1b782-7932-4e64-9729-5317e762c68d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f3f05ea-8bfa-4593-bb31-ab5d437bca72"
            }
          }
        ]
      },
      {
        "id": "2b5117bd-26fb-474a-8ca0-05c9ec108ada",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c89272c7-4695-4026-b469-2de701a7db7d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6189ffd6-6d8c-40ce-a4a2-a98f97704918",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79e73a82-8e84-44dc-ae40-28189c330232",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6088dac6-d723-448a-a58f-015d50efd6b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78c3fa5b-37e7-40ee-8adc-67c63710ba68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab17744-41c5-44ed-bc5d-60366b4e213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b404d138-b676-4608-a305-e4b67f33d9a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bb093d5-c78a-4cab-9f2e-823d34e9c437",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93739a29-35c2-45f8-887f-191181a6f792"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71f84ee9-40c3-4d22-869b-1929fe5b0266",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e127ef9c-0103-43b1-975b-cbcceb64c8a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ed99d21-48b6-49f8-a7c1-1c98d53926fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed25ab6a-b743-4872-ba51-4b6401e6afc0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f200d785-697f-4a06-8c0c-dbe4b8069741",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "058fe530-c38d-4729-880c-3f952801193c"
            }
          }
        ]
      },
      {
        "id": "ebe76b14-f6e9-41d6-be12-b43bdce78453",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0539f6ce-f9ce-48fd-a47d-c6641d592617",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c03c8589-c617-4ce5-bbb9-5fc672c57236",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d6806b8-4006-40ce-a51a-7c3f760265df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e31fd-693a-4a8f-aff6-b034bc7dbbbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed230e06-e550-4c03-9dbb-51abd327143d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a74612c-f648-4b67-9004-2102e77223d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bb8ac93-ed90-4b6d-bbb1-8869c89a21b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c887df5-dfc0-4c2c-b5dd-88312b8c56dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b34deab-80bc-4f7e-91b5-5fa58ecf7f27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3edde971-a66f-46c9-867d-26201a787178",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e951c88-9940-44d8-b44c-9130abaec893"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54c843dc-4635-43b1-b144-cb260ea00978",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7bfc1b94-329e-4b13-87cf-7637acd80b2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e9bd106-74da-4ab1-9319-c680f030efcd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6ed3a84-b0e2-4667-bd65-77b415dcfa3d"
            }
          }
        ]
      },
      {
        "id": "12ab306a-36ef-4ae7-9816-7b44b256bba2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "004d2367-8c2f-41c4-9762-408fbe1b6528",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4be56bb-c691-404c-95b8-a1b50cb2875a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "42f44866-4419-4827-b52b-ea64735f79c5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93a828eb-1cbc-4675-a15d-cdaa1949a809",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36204eb1-aecb-4a2f-9bf0-61884a1f5ba8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.88421052631578,
      "responseMin": 11,
      "responseMax": 2853,
      "responseSd": 336.5083309046544,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1703983099091,
      "completed": 1703983140961
    },
    "executions": [
      {
        "id": "71dd607e-a26a-425b-ace4-e7a7b0e81bf9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8e2fe189-cd9a-490c-9b2f-44aed3615311",
          "httpRequestId": "62fbf604-b167-467c-9b3a-4fc83392536e"
        },
        "item": {
          "id": "71dd607e-a26a-425b-ace4-e7a7b0e81bf9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f2452d89-5aff-4de1-963d-966afeb7c3a6",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "b5f4351c-689f-4fa2-ac22-db7875dc7998",
        "cursor": {
          "ref": "f56a4c22-a204-465b-800c-ad34375198da",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0c434a49-f1ff-484b-bb36-60095d123ac0"
        },
        "item": {
          "id": "b5f4351c-689f-4fa2-ac22-db7875dc7998",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8fe187b0-6929-489e-96d5-27eec05f30e6",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "c8fe8c59-33d3-4f17-8f08-0516a94823bd",
        "cursor": {
          "ref": "95c19b6a-18fa-4b37-9ea6-4f56d332cb2a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55d58aea-b498-4d15-b788-9dc51d188f2c"
        },
        "item": {
          "id": "c8fe8c59-33d3-4f17-8f08-0516a94823bd",
          "name": "did_json"
        },
        "response": {
          "id": "5681d915-5d98-4e0d-9234-1d12ffe0681e",
          "status": "OK",
          "code": 200,
          "responseTime": 720,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290f1b72-6a18-47cb-8bba-9b83c4bed646",
        "cursor": {
          "ref": "3fcfd403-a141-478c-8946-72e501bfed96",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3320dbaa-bf9d-4cc6-9b58-4c42c773364a"
        },
        "item": {
          "id": "290f1b72-6a18-47cb-8bba-9b83c4bed646",
          "name": "did:invalid"
        },
        "response": {
          "id": "f41abbe7-c48b-4786-ac8c-60d8fff86d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290f1b72-6a18-47cb-8bba-9b83c4bed646",
        "cursor": {
          "ref": "3fcfd403-a141-478c-8946-72e501bfed96",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3320dbaa-bf9d-4cc6-9b58-4c42c773364a"
        },
        "item": {
          "id": "290f1b72-6a18-47cb-8bba-9b83c4bed646",
          "name": "did:invalid"
        },
        "response": {
          "id": "f41abbe7-c48b-4786-ac8c-60d8fff86d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6391c54-9a8e-42c3-b51e-180133cc5c6b",
        "cursor": {
          "ref": "00ceffd4-1f36-4b49-8b68-d10869386e56",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ff25697f-fc14-45c1-a771-e6ff482211dd"
        },
        "item": {
          "id": "e6391c54-9a8e-42c3-b51e-180133cc5c6b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "53737b1b-aebf-45fc-81b6-2c528246c4d9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 123,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a3982a-dd81-44bd-a2d9-5e1a144c867c",
        "cursor": {
          "ref": "ba8055e5-a845-47b8-a395-1197e2ff0ed8",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "82f3c8b0-b6fb-4817-8831-53c52cfb50a6"
        },
        "item": {
          "id": "50a3982a-dd81-44bd-a2d9-5e1a144c867c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d52da772-8484-48e8-8690-2e617e959be0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7008c19b-be85-4a4f-8b00-2cf96d33df96",
        "cursor": {
          "ref": "7446f467-4b71-4098-98f1-d0f507dfef78",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "638f1882-f361-4b19-b25d-8a7cf80b2e03"
        },
        "item": {
          "id": "7008c19b-be85-4a4f-8b00-2cf96d33df96",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e9b0b741-c5da-4d0c-b0b5-4e31fadddc5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06863cef-12f5-41e6-9d24-c27cfa0362d3",
        "cursor": {
          "ref": "39885057-1475-4151-b352-9277893b4336",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a0f0007e-4cb8-4f8d-90aa-4c2b4b907ca7"
        },
        "item": {
          "id": "06863cef-12f5-41e6-9d24-c27cfa0362d3",
          "name": "identifiers"
        },
        "response": {
          "id": "57dc2fbe-2942-49aa-a974-b374a831467f",
          "status": "OK",
          "code": 200,
          "responseTime": 300,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c216b2-d7f1-4cca-af71-3a3519388385",
        "cursor": {
          "ref": "898204b8-b726-4999-b611-e68e28bd7aec",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6cbb0a9c-7aff-47c4-b56d-dd0e2dec0672"
        },
        "item": {
          "id": "a9c216b2-d7f1-4cca-af71-3a3519388385",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8b1d62e2-c0d0-4637-9e31-41f250ccb717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a53943-f8a7-4b61-a54c-438e8139c1bb",
        "cursor": {
          "ref": "dc709f8e-263f-41aa-b446-e8dbe5eb402c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "66830b1f-a7e9-405e-9713-488ad67486a1"
        },
        "item": {
          "id": "00a53943-f8a7-4b61-a54c-438e8139c1bb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8d8412f0-3c8a-4ad1-bf97-6a3cbb8c844a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4e7e05-a336-43c4-8ac6-78bcc654af89",
        "cursor": {
          "ref": "c8f3816a-3cea-4af7-b66a-3b162c22ff27",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e5a3b400-d306-41bd-aa4c-55edb34290cb"
        },
        "item": {
          "id": "2f4e7e05-a336-43c4-8ac6-78bcc654af89",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "080bf1ce-f5fb-401f-b31b-29c01447ba56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4568eb-dfd3-4f4d-a3be-a938a67f9202",
        "cursor": {
          "ref": "1f9c5069-5435-4dc9-8b86-f57b056137a2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3e004cde-e044-4572-abf0-2454cd143d98"
        },
        "item": {
          "id": "8b4568eb-dfd3-4f4d-a3be-a938a67f9202",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "55b7852f-d533-4894-b23f-a9efc99f1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa7818-c7eb-418c-86ca-0268ee8d8c9c",
        "cursor": {
          "ref": "41127c7a-c1a3-4087-969c-275337b6bc1e",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "32fc14ea-995b-4315-9f89-91e3e8e48525"
        },
        "item": {
          "id": "73fa7818-c7eb-418c-86ca-0268ee8d8c9c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "477cef66-6d76-4a9e-b2ed-e01f141e6551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0251ccd1-607a-4efc-8530-b66ff958c543",
        "cursor": {
          "ref": "53556b63-80d7-4507-876d-787a9f6d4a41",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1112d92b-5185-4a24-ab1e-f0489b15bec5"
        },
        "item": {
          "id": "0251ccd1-607a-4efc-8530-b66ff958c543",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "89389d55-56c6-499e-9a72-ea2916370ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6894ff-bf5f-429e-b50c-3e81a427295f",
        "cursor": {
          "ref": "5dbe3209-4a7c-4760-a217-0651e6143741",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "49bd0f2e-68fe-4ffd-b1bf-edb0bcad037f"
        },
        "item": {
          "id": "cc6894ff-bf5f-429e-b50c-3e81a427295f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2e9d7d7e-3ac6-4161-98e8-b3230cd87e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbc27a3-e220-4d8b-9c97-ec80d8562ee6",
        "cursor": {
          "ref": "f7c9dca1-3837-40eb-8124-35e167c19b48",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "97b29dd1-3fe1-4125-a57e-3d75b23831b4"
        },
        "item": {
          "id": "ffbc27a3-e220-4d8b-9c97-ec80d8562ee6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "861220ce-e93b-4cfd-aa1b-f7d6e56ba798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e64f763-8eb3-4dff-9a8b-7efb4e8100f3",
        "cursor": {
          "ref": "19a9b198-c079-4b00-8059-1e30b6a2580a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "00b26cd1-0e65-4ff8-b45f-c14a94f7d1fc"
        },
        "item": {
          "id": "0e64f763-8eb3-4dff-9a8b-7efb4e8100f3",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "75396c9e-e4a1-4099-8af1-5cf051630cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e61d2a9-4751-4bc8-b51c-505abaaa4ec4",
        "cursor": {
          "ref": "6d49d035-d637-42d5-b52f-033c12353f16",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dba4885b-36d6-42aa-bdec-6c2893a315b7"
        },
        "item": {
          "id": "0e61d2a9-4751-4bc8-b51c-505abaaa4ec4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d18d1e3e-1c4c-44d4-a149-c82a68c3e24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b760e3-e1ae-425e-98d7-d8e1216d20f4",
        "cursor": {
          "ref": "4e1e6a88-52e3-421f-9b95-63708707d940",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3719df22-1612-4fee-901e-4ef9a1d5350e"
        },
        "item": {
          "id": "66b760e3-e1ae-425e-98d7-d8e1216d20f4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "127196b5-1358-4af1-ba12-a77682a58523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6c5db5-2866-4673-a398-87e5e9b56f1f",
        "cursor": {
          "ref": "8b509b1d-e8db-4cc6-af94-1a725d520f1c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b2c5ae7f-5a2e-4552-976d-01f560d98691"
        },
        "item": {
          "id": "eb6c5db5-2866-4673-a398-87e5e9b56f1f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "223dba98-fb52-4a20-b6c8-0d7dea09e86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48557133-5e24-483d-a936-bce0e4af2fdb",
        "cursor": {
          "ref": "af7e996c-58c1-4088-a2f8-5f432eab5a5d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e35afdb3-c2f5-4356-bf1f-7c385dfb4445"
        },
        "item": {
          "id": "48557133-5e24-483d-a936-bce0e4af2fdb",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "df8a2348-f4b2-4c3a-81f1-0a32557a5400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542a7540-f395-4b06-a1fd-c3b662886be0",
        "cursor": {
          "ref": "7754340f-6e54-45ff-8279-fdc11f6bf8bc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aeb578a0-44f6-4382-9855-0175a6eef56e"
        },
        "item": {
          "id": "542a7540-f395-4b06-a1fd-c3b662886be0",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ecaca3dd-0673-45e1-a06c-32ade13b756c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef886b68-62de-40c1-ae45-28ebd9993a50",
        "cursor": {
          "ref": "d6922b2b-b68c-47ba-9519-11099e7eb70d",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "628177fc-8eef-4d6f-990d-1485708454da"
        },
        "item": {
          "id": "ef886b68-62de-40c1-ae45-28ebd9993a50",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "377a93bd-948f-4c01-b460-bcadf8d03d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2313f9-1f68-45c3-9bcc-27edd9aae689",
        "cursor": {
          "ref": "868e8923-21d3-4f4c-8c33-2b3006b46d30",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5b12c3a8-73a4-46d8-a3a1-e78125404a26"
        },
        "item": {
          "id": "db2313f9-1f68-45c3-9bcc-27edd9aae689",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c525a895-f65e-41df-9e92-b51f9ba8eca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94f19b6-9f5d-4fc9-b369-d8daa8a66adb",
        "cursor": {
          "ref": "febf7976-6f6f-4187-bb21-0a6930becb92",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "135c16dc-8092-49a6-b976-5f477e862549"
        },
        "item": {
          "id": "a94f19b6-9f5d-4fc9-b369-d8daa8a66adb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2019fb04-0492-42ce-bd16-8883440ee3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fbe93e-dfdc-4eeb-a3fc-ddaa61301af3",
        "cursor": {
          "ref": "03e528ce-b0d3-40e4-b600-e168afb12d2f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8c5e89fc-5cb0-44b9-a0bb-d844c618e0dc"
        },
        "item": {
          "id": "72fbe93e-dfdc-4eeb-a3fc-ddaa61301af3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "378c07d2-7bc4-45b5-bce7-89825a3c788b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62dfaa7-46e9-46ab-b823-2a424f526413",
        "cursor": {
          "ref": "816e2c65-c1a5-47c6-8655-5effe67c5d80",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "345c7069-1ebf-4ab7-9eea-f657ce0e8462"
        },
        "item": {
          "id": "d62dfaa7-46e9-46ab-b823-2a424f526413",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "055bcc6b-3220-4e1b-93c1-524ad2ddd1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd48659-7b65-4cbe-bc6d-47f28626869f",
        "cursor": {
          "ref": "2ee911a3-2402-4e83-95f6-a349ea9c5a23",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "08457dff-7a4f-4524-845a-bee793c6d7d1"
        },
        "item": {
          "id": "ccd48659-7b65-4cbe-bc6d-47f28626869f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9619faf-977c-40b2-8215-be02c8614629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88c4e85-4f73-4fec-91bf-e2455b6aeed5",
        "cursor": {
          "ref": "eb4117a4-cd01-413c-adeb-d0a570907b37",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "dc2796ee-cb4a-42bd-b8df-83129b2610fb"
        },
        "item": {
          "id": "b88c4e85-4f73-4fec-91bf-e2455b6aeed5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "18057f36-e784-454f-9287-5be3da355e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aca1f76-8fc4-4b76-83ac-6e5aa671dc63",
        "cursor": {
          "ref": "aff17b5c-6834-41ea-a8a0-cade01a75961",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89340143-2c64-4533-a3a3-ee2af51282f8"
        },
        "item": {
          "id": "9aca1f76-8fc4-4b76-83ac-6e5aa671dc63",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "761a3905-5608-44dc-ae25-1b19eb3bccc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ec9b21-3b01-4829-bc23-1e4a9cb9871c",
        "cursor": {
          "ref": "d69e10ce-e773-490b-99fc-95069d04d176",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b452eb1f-90a0-4903-a8f9-25e55334d608"
        },
        "item": {
          "id": "80ec9b21-3b01-4829-bc23-1e4a9cb9871c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5143c220-fa5f-48be-a5e0-a79a3563d6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89309e7-0e90-4787-89fa-72b3c8e11e6b",
        "cursor": {
          "ref": "18781960-fe47-4fc7-a45f-0ed28a98b062",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "694719a7-2944-45fb-8384-bdac5388d561"
        },
        "item": {
          "id": "d89309e7-0e90-4787-89fa-72b3c8e11e6b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9017f5d8-7ecb-44f9-b593-5cc5c7363149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb61985-b4b6-4f78-91ff-00049b77a192",
        "cursor": {
          "ref": "a2748a2b-2d95-4e4a-9f07-be0d0a4d6203",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "fb458899-1dc2-49c8-932c-daf4f4dc15d1"
        },
        "item": {
          "id": "ffb61985-b4b6-4f78-91ff-00049b77a192",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7ccea5eb-2eb9-4548-b5d9-c7f0a1f679de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946fe25b-dbea-41e7-b5c0-62d753afbb40",
        "cursor": {
          "ref": "8b3abce9-2e10-483f-be6e-92761d202773",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e65e7d16-9cd2-4b3e-b102-52123e0ffe25"
        },
        "item": {
          "id": "946fe25b-dbea-41e7-b5c0-62d753afbb40",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "43a063f3-4a49-4a85-a0c7-6bae58fd4de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe17b6a9-6219-4853-9382-f14dd1db5d7d",
        "cursor": {
          "ref": "4113e502-8923-4a14-899a-2480a32c25e5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "024a6a9d-55e1-42fc-be2a-6ff9f8986510"
        },
        "item": {
          "id": "fe17b6a9-6219-4853-9382-f14dd1db5d7d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1912abc2-bce8-486a-944b-afa26a49d254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c80846-5a29-4537-8166-b66465c44ffd",
        "cursor": {
          "ref": "2b5410c8-3223-4d38-b847-a4d1bc6044a7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ac4a74e1-e073-4d56-9cf2-1bba59eda233"
        },
        "item": {
          "id": "e2c80846-5a29-4537-8166-b66465c44ffd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8a4afe4a-8be4-44e3-858e-c64967990256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c7e473-bcc8-415f-a84a-9417a5111e94",
        "cursor": {
          "ref": "9c9e6560-23ba-4b12-8935-73645f244959",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8676e16d-e6d8-495b-8326-e66f957c4748"
        },
        "item": {
          "id": "83c7e473-bcc8-415f-a84a-9417a5111e94",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4f6a6dec-cd90-455f-922f-bde50c168726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bcfc75-fa32-4d9b-b68d-fd127311ba3c",
        "cursor": {
          "ref": "74f97e90-72fc-424a-9d8a-7e68fd931b7f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4c1239d6-afe0-414e-aff3-c878592b90d0"
        },
        "item": {
          "id": "19bcfc75-fa32-4d9b-b68d-fd127311ba3c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c4659e85-c0cd-40fd-84c6-c995929fb3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420ba948-e78b-4a5c-9d9e-e1a7cf6d3599",
        "cursor": {
          "ref": "ff281031-62f8-45a6-be4e-ad67f498ec18",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d56092ad-58a4-4ce8-a6ff-6f674b4a8ea4"
        },
        "item": {
          "id": "420ba948-e78b-4a5c-9d9e-e1a7cf6d3599",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c74b0ae5-f368-4e26-b93c-c62d3ce9cfb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c96bae7-000a-4bf3-a590-60ca6a451239",
        "cursor": {
          "ref": "b40c1ceb-25e1-462d-9ba1-d52b3cf9cf1d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6630d3b1-1783-4333-a86a-d5831df01fa5"
        },
        "item": {
          "id": "7c96bae7-000a-4bf3-a590-60ca6a451239",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "16d69974-1584-4958-b418-e7f9368f78b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f46516-0c4e-412e-8595-281c38ac7de7",
        "cursor": {
          "ref": "0ea2e2ca-1dc6-4086-a4dd-720b2ffb2d3f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "47221664-37ca-4c62-802a-757a617168bc"
        },
        "item": {
          "id": "16f46516-0c4e-412e-8595-281c38ac7de7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eb09e3d7-cec0-44f4-97d2-d272bf480c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e689120-cce9-4a8f-b827-3819737542b2",
        "cursor": {
          "ref": "a77ec932-3a78-4b52-bc51-edd6d717f523",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "24890928-6814-43dd-a44f-ec85b906a920"
        },
        "item": {
          "id": "7e689120-cce9-4a8f-b827-3819737542b2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "86a30106-7b3c-471a-9248-446e05ac5953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec2c631-f91c-4943-a562-332b275fe77b",
        "cursor": {
          "ref": "6dbe6544-7cde-4bf7-9173-ff19380266ef",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9ff47ba3-e9db-4e0d-a74e-b8ad1cb45bea"
        },
        "item": {
          "id": "dec2c631-f91c-4943-a562-332b275fe77b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dbde2943-f596-450d-8a5a-818b46978def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45c1cda9-ec5f-4a41-a150-768f15218abf",
        "cursor": {
          "ref": "13047002-f21e-470b-8832-eb34d838d8d5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "038f4c17-3806-4b99-9d14-d43b1212ae62"
        },
        "item": {
          "id": "45c1cda9-ec5f-4a41-a150-768f15218abf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1eb5c80d-f5ee-4afb-9e65-04d4939640f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 323,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d045358-6214-4aa9-8224-d8893635312b",
        "cursor": {
          "ref": "de3ac0c8-4046-45a0-bc3f-e02aa2fe1fc6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ec8edbe0-f504-4693-af3f-e1c00f7f4f0b"
        },
        "item": {
          "id": "0d045358-6214-4aa9-8224-d8893635312b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "472cdcf5-c047-413b-b010-5c005de7b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4066a3e0-d532-44e1-9e3c-54634f4af9ec",
        "cursor": {
          "ref": "9ac85f11-b795-4204-a5bb-09bee9debea2",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c4b1ac34-6378-418b-8c04-a4ebb3a3908c"
        },
        "item": {
          "id": "4066a3e0-d532-44e1-9e3c-54634f4af9ec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11dcbc97-d325-4eb4-94c5-08306846e7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd08cf8-95b2-478b-ab12-c762f1d6f38d",
        "cursor": {
          "ref": "12343a32-43a9-4d46-994b-e4f4168d80f6",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ec842bfe-cb28-45e6-93d8-27d7b9cd3eb6"
        },
        "item": {
          "id": "4dd08cf8-95b2-478b-ab12-c762f1d6f38d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4984d986-7540-4b86-8303-839d9a5cf63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352ee035-58b4-4ef0-b89d-ba880fa8e3b2",
        "cursor": {
          "ref": "65513f09-e1d5-4c0d-8673-58ce315ec8d0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "30626470-0c97-4bea-a872-e7d6f32db4a0"
        },
        "item": {
          "id": "352ee035-58b4-4ef0-b89d-ba880fa8e3b2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2a8dfd19-6f15-4548-ad25-d1c2c733257e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d3d615-2a09-43a5-b505-535e76e32339",
        "cursor": {
          "ref": "2181c688-73ad-4d38-bf32-64f19a78ed1a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "52b54f2e-d76b-4f7a-b0af-8e026f356abe"
        },
        "item": {
          "id": "f2d3d615-2a09-43a5-b505-535e76e32339",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "57b4ab5a-ed24-4fa1-bf39-f34833c7fa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d20224-4ef5-4209-9567-9694c7077080",
        "cursor": {
          "ref": "460d3896-0c62-4efb-862b-54ce564ef005",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "881a96d7-92b4-4343-ab78-d4a718d4fa1d"
        },
        "item": {
          "id": "51d20224-4ef5-4209-9567-9694c7077080",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f894534f-f6e5-49a5-9d79-03c192ab2811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2466a845-c4b3-44fb-80c9-9e918d8ee3c4",
        "cursor": {
          "ref": "c7e66ff0-093a-42d4-ab4f-1777d74d17ef",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "643b5a76-82b3-42b8-8a80-00f4e08099d5"
        },
        "item": {
          "id": "2466a845-c4b3-44fb-80c9-9e918d8ee3c4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f19bf137-eda2-4529-8c10-c0b70030371e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 323,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c857c2b0-3cd2-4f68-bfae-8ea22e872651",
        "cursor": {
          "ref": "d27d84c7-2696-4037-8a6e-a37cd8a63b61",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b9013546-8c02-45d7-a612-72b1b68a7613"
        },
        "item": {
          "id": "c857c2b0-3cd2-4f68-bfae-8ea22e872651",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d860844d-e4ce-4f90-9839-83c622dabf5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8696d806-7e6a-4de2-9c18-53ff80d12ff5",
        "cursor": {
          "ref": "991bae12-c586-4f19-a6bf-b528b290ccf2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "934c2f40-e989-4e92-a017-cfc753efb913"
        },
        "item": {
          "id": "8696d806-7e6a-4de2-9c18-53ff80d12ff5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5e5ded50-ee5e-4420-9193-8c91b13a0104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bb66ae-269c-41d4-a5e3-4d2c72aa0489",
        "cursor": {
          "ref": "cdf11cc8-4341-45af-a25c-4ee4c3069173",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4be76cb6-4630-4629-8d26-e761d8904c57"
        },
        "item": {
          "id": "44bb66ae-269c-41d4-a5e3-4d2c72aa0489",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bfed50db-bc34-4448-ad47-e2b9cd08be9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162f2f5f-54e2-4efb-b888-6a447b5aae1c",
        "cursor": {
          "ref": "dc1e6140-e346-448e-9862-12bef649e162",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a7add4ae-b7f9-4883-8ab1-fdd72d75daab"
        },
        "item": {
          "id": "162f2f5f-54e2-4efb-b888-6a447b5aae1c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f703beb8-b9a3-43d2-93b4-a49a4a089562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81afa28d-8dfb-4aa3-8689-4b74de12ec29",
        "cursor": {
          "ref": "ad7c4ac6-d7b7-4945-a42d-a4dcf35c6a14",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "16faed68-3c99-40ac-902b-39ee36e691df"
        },
        "item": {
          "id": "81afa28d-8dfb-4aa3-8689-4b74de12ec29",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1f656081-52e7-4cf7-841e-b3457da0c299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d223789-983d-4fd5-a199-a969b574ad6e",
        "cursor": {
          "ref": "d4510c32-4bc1-4eae-af24-91e19455c6b5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "00d210b4-6449-4a17-8177-e72e375f874a"
        },
        "item": {
          "id": "9d223789-983d-4fd5-a199-a969b574ad6e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "af6d5760-8a7b-46a9-aad9-e7495d3aa514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a07dfe-7561-4e8b-a884-bc3e2b033a3f",
        "cursor": {
          "ref": "e03c74d0-3425-4938-a800-fb636ec2a201",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "92b00bce-f94b-47da-a1e0-74be1a95dec0"
        },
        "item": {
          "id": "d4a07dfe-7561-4e8b-a884-bc3e2b033a3f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "74e1d22d-0d16-422a-84fa-d508bb74ed77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69de2ee8-0dea-47c9-bacb-52dd8b1609c6",
        "cursor": {
          "ref": "c7aadeea-0a54-4aa2-94db-40cd7cad744c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d67171a1-32a3-492e-af65-00fcd3747995"
        },
        "item": {
          "id": "69de2ee8-0dea-47c9-bacb-52dd8b1609c6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "59529c2e-80a0-44c7-b629-8413efe8498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb051a34-c4db-49b8-98b7-4207d1c8c9e9",
        "cursor": {
          "ref": "3e36ba65-204c-454f-bb04-d998f69686d3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9931318b-6199-406d-99b0-8aac4d64df34"
        },
        "item": {
          "id": "fb051a34-c4db-49b8-98b7-4207d1c8c9e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "110adffd-2cb3-42e2-88ae-6ba60eec7c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1202cca2-6df4-4c1e-bfe8-3e7537b697d8",
        "cursor": {
          "ref": "f88eb6ba-acf0-4cdb-b4ff-7eba2a9ec19d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ee6081db-2c2c-4ff3-9afd-71d5e8e8376e"
        },
        "item": {
          "id": "1202cca2-6df4-4c1e-bfe8-3e7537b697d8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f664b3af-51cf-4c5c-901e-76e86eeb7e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d5aaa1-7f9d-48d1-b833-d55d2f71da80",
        "cursor": {
          "ref": "be5a683d-0ce2-4204-84af-e243038a294f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8bc42c7a-2762-4404-8229-b42c8f6bc514"
        },
        "item": {
          "id": "a9d5aaa1-7f9d-48d1-b833-d55d2f71da80",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "70c09392-571c-40d5-8540-182c086d5d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5dd32b-c940-4c00-aea5-710e8cfa83c1",
        "cursor": {
          "ref": "36021344-c190-4dff-953f-cd4829908e56",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5b4d8425-3b84-483d-b51a-0579b727b997"
        },
        "item": {
          "id": "3c5dd32b-c940-4c00-aea5-710e8cfa83c1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e7e459d4-242f-488f-a192-6acb8f55ecc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe83154-8776-4fc2-82eb-4ba4fd11c366",
        "cursor": {
          "ref": "f6d8e329-e1a0-40a1-8270-5e27bf3dfdcc",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "21fba51a-958c-4bbb-bb79-ab6d2ec4c3d4"
        },
        "item": {
          "id": "4fe83154-8776-4fc2-82eb-4ba4fd11c366",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "64a60794-df9a-40e3-981f-ac602c63b3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caf116e-8604-467a-9693-b5ac4c689d19",
        "cursor": {
          "ref": "4c94c722-af97-49b5-a920-fa40709c044b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "56e3b589-c4d5-460e-b07b-e261552b7bf1"
        },
        "item": {
          "id": "4caf116e-8604-467a-9693-b5ac4c689d19",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b210f515-2b0b-4a47-a164-ab73400e4911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e90a93-3912-44f2-963f-1e0c3911eb9e",
        "cursor": {
          "ref": "842b0383-ffa5-48a7-a324-dc53296bb6b1",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ef4241ea-dfd5-4452-b3fb-68cb8515ea7f"
        },
        "item": {
          "id": "a2e90a93-3912-44f2-963f-1e0c3911eb9e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "af61ea88-1112-4c92-a658-35ae77b037c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e01e3a-eaad-4e3c-8523-d9bdf1620f9c",
        "cursor": {
          "ref": "3033dc08-ea24-45ac-9666-01fe1d274e49",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5bb99ab9-867f-49d6-8845-937c59a0cc32"
        },
        "item": {
          "id": "a8e01e3a-eaad-4e3c-8523-d9bdf1620f9c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6e6af357-286f-420b-8961-546d634f8f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98b78dc-41b7-47aa-8def-6d299d2e4e2d",
        "cursor": {
          "ref": "00609285-fcb9-4b8d-8a2e-5367dfb631da",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "41eaf383-e499-4050-a4b6-87149ad28394"
        },
        "item": {
          "id": "b98b78dc-41b7-47aa-8def-6d299d2e4e2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "00f108a3-e7bf-4798-8f5a-28e31573fe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fe5679-3c04-45bf-be2a-99228c5b8754",
        "cursor": {
          "ref": "74b3c914-e638-48b3-b26e-54a23eef2aab",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "92e725fd-096c-42dc-9b0b-a87a3f2d4c32"
        },
        "item": {
          "id": "30fe5679-3c04-45bf-be2a-99228c5b8754",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1034d408-948f-4655-b89e-e8aa836f1a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23703056-04cb-40a3-8a94-3286036c6083",
        "cursor": {
          "ref": "01bba133-9b1c-4afa-8578-55162d931612",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b626a084-d28f-47ca-a93f-b71dcf5e2340"
        },
        "item": {
          "id": "23703056-04cb-40a3-8a94-3286036c6083",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a2095ff2-f117-4a4c-9e25-8e799ac386c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ed70d7-9a07-4de1-a560-8fd08044031e",
        "cursor": {
          "ref": "f007a060-ed8e-4b39-b523-823cbd2d4d66",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "995e2cf1-374c-4b81-90c3-1f7fcd3b3389"
        },
        "item": {
          "id": "f9ed70d7-9a07-4de1-a560-8fd08044031e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "30faae15-194f-4f62-8361-67a69a66f42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad993c3-3f14-4187-8766-816ed081e83f",
        "cursor": {
          "ref": "44d6b33b-4821-46b4-a401-7ead2e952f7c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "58bd7bc7-0ab1-4c1a-8474-d9f7c999afad"
        },
        "item": {
          "id": "2ad993c3-3f14-4187-8766-816ed081e83f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "744f4f08-ed53-4f74-9e1c-81c116c2dc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef35afb-b20a-4195-812c-166cdc226cd7",
        "cursor": {
          "ref": "9be7d958-ad3e-4b07-8c6c-548da22a4235",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1e0d7b32-dd51-4b71-8662-7449c1f5a1f6"
        },
        "item": {
          "id": "8ef35afb-b20a-4195-812c-166cdc226cd7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fd65ef2f-1b86-423f-855f-e4f2b927fccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25620e75-4b8b-4756-a94b-c9752a4bb099",
        "cursor": {
          "ref": "b94743d5-3136-499f-809d-9ee5c1010087",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f9a20e3e-3147-43ec-afa9-1a449031f6dd"
        },
        "item": {
          "id": "25620e75-4b8b-4756-a94b-c9752a4bb099",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a936ead1-b08b-4a09-bd23-dfb6f1c38b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c60c15f-4653-474c-a996-8e0b30ddbd1f",
        "cursor": {
          "ref": "1a763429-416e-4cb8-8217-708f7ab9febd",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "91926e18-0bc3-4e6c-a15d-5470f8a5ad4c"
        },
        "item": {
          "id": "5c60c15f-4653-474c-a996-8e0b30ddbd1f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "67cb33ed-157a-46cf-a021-07d05031461b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e117e3-dd2f-4290-986c-29f851b13a97",
        "cursor": {
          "ref": "d351437d-c1fa-462c-befe-ff070f476be0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f620d8e8-b36d-4079-bbd2-7ab450d993f3"
        },
        "item": {
          "id": "e7e117e3-dd2f-4290-986c-29f851b13a97",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "91255919-d0f2-4262-9ee8-9ba9c581df26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23562265-00cf-4cf6-8793-7a9adeaee6e9",
        "cursor": {
          "ref": "ad0eb4a2-4d1c-4e93-8427-0678c8ecdfcf",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0d36f42f-a67e-4ed1-9a06-b2bff60ea41e"
        },
        "item": {
          "id": "23562265-00cf-4cf6-8793-7a9adeaee6e9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1135266e-b3d6-4f23-a4cf-771aaf7e6e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478a322c-79d8-4426-baf7-57720844b010",
        "cursor": {
          "ref": "375c88ab-66f1-4012-b216-2985fd36924e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ae174890-a7eb-46e6-8dbd-2ef34162a0ab"
        },
        "item": {
          "id": "478a322c-79d8-4426-baf7-57720844b010",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "85b52017-0a55-44f7-9029-ffbd7ebb46ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c29562-574a-450b-a9e0-89b001996acd",
        "cursor": {
          "ref": "7e3dea15-36cc-421c-a3c7-7aa6ed938d38",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "306defe3-6c0b-48f8-b922-bbb1fd3bffef"
        },
        "item": {
          "id": "32c29562-574a-450b-a9e0-89b001996acd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d71cd847-f49e-4085-964c-25688d198d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbcc2b4-c75e-492d-89ed-09e99f7fce39",
        "cursor": {
          "ref": "d0df1481-cbe6-4a78-b886-ced2a4ab66f9",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bb9f537f-92d7-4124-b306-8639108e3d12"
        },
        "item": {
          "id": "adbcc2b4-c75e-492d-89ed-09e99f7fce39",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "401930dc-2f83-4e00-b31f-1314955c158c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6c4b1f-3012-455e-bd6a-bbe5d87ad581",
        "cursor": {
          "ref": "1931ad80-dd1e-413d-9c0c-0156b565ce6c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "589034db-2cde-4c8e-82bc-93dcc246284b"
        },
        "item": {
          "id": "4f6c4b1f-3012-455e-bd6a-bbe5d87ad581",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1db47165-9930-429c-b537-dc3ba08faae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4b754e-fe28-41e0-8885-dde2e0259730",
        "cursor": {
          "ref": "a89d86c8-f859-436c-88fe-653672e3634a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9fbf21d1-76c8-4ad8-93b9-53246ba64671"
        },
        "item": {
          "id": "5c4b754e-fe28-41e0-8885-dde2e0259730",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b9dc24e1-1052-4067-a5f1-70a664a2b00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac73b8f-3a62-4106-aff0-3ce225fd789a",
        "cursor": {
          "ref": "8185eeff-b1b4-40fb-bc78-a9306dae145b",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3b211029-8eed-45b4-affc-ca8bc09d20f7"
        },
        "item": {
          "id": "dac73b8f-3a62-4106-aff0-3ce225fd789a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0ec17034-d294-4690-8740-76964c8a3733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c546879-5805-425a-b499-b8c84aa553b3",
        "cursor": {
          "ref": "05dcc199-ab1a-4d37-890f-674ffa10d83f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b2f0ae83-6627-4166-8b37-f4ed8900cb1b"
        },
        "item": {
          "id": "1c546879-5805-425a-b499-b8c84aa553b3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c9f30616-45f5-4627-ac28-7a81e8f88614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a9392e-3698-4073-b041-210f0bb2d5c2",
        "cursor": {
          "ref": "f9369cb2-7dbd-4264-a58e-10da8e7065df",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "36763d40-65c9-4a9d-8302-852c0caece3e"
        },
        "item": {
          "id": "36a9392e-3698-4073-b041-210f0bb2d5c2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "eed959ea-6ba0-4464-9c8c-0f27ed5a9d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da245b39-2bb0-454e-befc-f50133431a46",
        "cursor": {
          "ref": "914a290d-64eb-4541-b1ea-817b92c727c8",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a6d83815-3b8d-4b84-bba1-4ea5a9ad0610"
        },
        "item": {
          "id": "da245b39-2bb0-454e-befc-f50133431a46",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a23e54dd-4933-4703-ab47-633ba4ceb398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2357ab4c-613c-4ee5-b8b8-6309089d5bfd",
        "cursor": {
          "ref": "b7214b38-c9bc-4dd2-9c08-8e40eda5c291",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bfc600d9-a255-408b-a186-9c73d9637cfb"
        },
        "item": {
          "id": "2357ab4c-613c-4ee5-b8b8-6309089d5bfd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "07740369-aeb8-470c-9c43-ed2f5af20cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6aa1633-937c-43d0-a9ed-4fcf72933514",
        "cursor": {
          "ref": "ff031d86-196b-481f-a515-ffb3ce1645cd",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a02df37a-8011-4a47-80c2-3957d1a09eab"
        },
        "item": {
          "id": "b6aa1633-937c-43d0-a9ed-4fcf72933514",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fa238e51-dcd6-4bfb-9929-58d8ccb08eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357014bc-5ffd-4be3-b7c5-c5e2974b9b52",
        "cursor": {
          "ref": "b901f111-0b59-41c8-b973-1c5636de8815",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "25cc306e-c245-4651-93ed-7c82515b1cee"
        },
        "item": {
          "id": "357014bc-5ffd-4be3-b7c5-c5e2974b9b52",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "117ecaa0-15e2-4276-bb9b-8bc1fa596f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3236b997-abb5-4b23-8cf6-f8c8bf493ff5",
        "cursor": {
          "ref": "a0aecb44-e5de-4855-9b51-bc3e074b18ab",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e1f2c0b2-3225-41fc-afdd-a5a2604da3ce"
        },
        "item": {
          "id": "3236b997-abb5-4b23-8cf6-f8c8bf493ff5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bf6ce455-5564-4bec-b8a9-06352d404726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51162eb2-416c-4881-9ad0-3f9d1206e9de",
        "cursor": {
          "ref": "4e60e8c4-103a-4fb1-b755-28afdec580b0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "edae1b72-8820-4d95-8d19-85c6a3bd251a"
        },
        "item": {
          "id": "51162eb2-416c-4881-9ad0-3f9d1206e9de",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1b9b7eaf-9960-4b6e-aede-70e7a04b34f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb3d592-ac06-496e-a4fc-2e5f4358c0de",
        "cursor": {
          "ref": "b69808ba-cf1f-4ae4-a850-4fa22021132e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bfec0b38-42d2-49da-9746-fb3ac1567a04"
        },
        "item": {
          "id": "dbb3d592-ac06-496e-a4fc-2e5f4358c0de",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b4b051cf-43b9-45be-8d73-59b432a2bea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e07877-57bd-4504-993d-b138f1a5daa4",
        "cursor": {
          "ref": "8487b6cc-b7b9-4043-83e1-d3fc71916ff0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8cc60d8e-aed6-4964-be55-8df3eb62d1fa"
        },
        "item": {
          "id": "61e07877-57bd-4504-993d-b138f1a5daa4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d2e222e1-1a18-4d79-a75b-9eeafe54b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa0e39e-8c93-4f24-8621-2b25413a2529",
        "cursor": {
          "ref": "c025e1d5-bec2-4ea7-99c0-0a38b31f9a69",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "194b8d7f-6eaa-4aba-b363-be94f3d5ce87"
        },
        "item": {
          "id": "caa0e39e-8c93-4f24-8621-2b25413a2529",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f954f02b-e43f-4b88-bd54-b687d0e9e9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e91ef92c-6a3f-4aee-9df0-49585096be8e",
        "cursor": {
          "ref": "dadb6995-f90f-443e-b7ca-8cf6df36d06e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "adf96401-466f-407c-8360-7dbedd87bbcd"
        },
        "item": {
          "id": "e91ef92c-6a3f-4aee-9df0-49585096be8e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cf50e956-4a2c-468b-8e7a-4097d7b3805c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800f7f54-4899-434b-92dd-9438da58a407",
        "cursor": {
          "ref": "cab34d96-71cf-42a5-afa8-e1fcfc96e433",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2159108b-1596-42f2-bab3-26d6d0ac87e0"
        },
        "item": {
          "id": "800f7f54-4899-434b-92dd-9438da58a407",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7ff72484-34f4-4b9a-8978-3cf1155709ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7762e79e-540d-4d94-abfe-3585c94e9a6a",
        "cursor": {
          "ref": "02c02381-a1ab-415b-ad6b-c8f5a1268112",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3879a546-c770-4413-b50d-0bd3dcc9375c"
        },
        "item": {
          "id": "7762e79e-540d-4d94-abfe-3585c94e9a6a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "89d28f3f-306b-4f8f-8a8c-b5a2c2ffcecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1866ee31-fea3-4e64-834c-28aa6ad4a445",
        "cursor": {
          "ref": "222b787b-7f48-4201-b0a2-f9241187c639",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5f925358-c387-48db-aa2b-702b7fdefdb2"
        },
        "item": {
          "id": "1866ee31-fea3-4e64-834c-28aa6ad4a445",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "295b014e-730f-471b-8b3a-9bd9307bc7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd242623-35b5-4d77-8d21-d995aef31082",
        "cursor": {
          "ref": "6c107c4a-a569-4ead-a15d-74cfb4b6e0d2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7e486663-452d-4895-96cf-6f6a82464c2d"
        },
        "item": {
          "id": "fd242623-35b5-4d77-8d21-d995aef31082",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3b2dfa48-5c09-4496-ac26-32f7d99f60df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5dee25-e4c1-46e2-bf40-fe88da4d161b",
        "cursor": {
          "ref": "6c2db6fd-2d04-4c34-8acc-c00d6dbf8f69",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "32cb97e4-f04c-47ba-ade1-f9f9052081c8"
        },
        "item": {
          "id": "4b5dee25-e4c1-46e2-bf40-fe88da4d161b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "615faea1-ffaf-4c1e-8c49-284e409e1969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc150665-be0b-4d4d-92cc-12fb5b1d1238",
        "cursor": {
          "ref": "7814b3ca-b918-4b28-9103-b065542e5e15",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b40c5896-949b-457a-b9f2-85ef86e6dbcf"
        },
        "item": {
          "id": "dc150665-be0b-4d4d-92cc-12fb5b1d1238",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5736745d-1631-4788-b41b-4f26818ce1ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1fb607f-1e9d-487c-b46e-4321424ad825",
        "cursor": {
          "ref": "3a1f7e8f-4571-434f-8a77-9733a6aee837",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8def93b0-b155-411f-82f6-91d82f7315c6"
        },
        "item": {
          "id": "c1fb607f-1e9d-487c-b46e-4321424ad825",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "cb90fc64-2c7e-4c0d-8855-064faf335c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "896c85ef-aef7-46c3-868c-502b540f4cea",
        "cursor": {
          "ref": "41596b0a-31c3-4ee9-944a-2c15630f3667",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6be9da6c-73f3-4cf4-b87c-6a0e635db1ba"
        },
        "item": {
          "id": "896c85ef-aef7-46c3-868c-502b540f4cea",
          "name": "credentials_issue"
        },
        "response": {
          "id": "25ce9f4c-da60-4bf5-b30d-f81da19527b6",
          "status": "Created",
          "code": 201,
          "responseTime": 2748,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4eae61-2185-4f7b-adf8-2abc42c4abb8",
        "cursor": {
          "ref": "1952ec65-53ae-4fb8-a30d-82291ba14554",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8a5f9a35-1e70-4082-a74b-ae1d2b3eb503"
        },
        "item": {
          "id": "ec4eae61-2185-4f7b-adf8-2abc42c4abb8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0209007f-df54-4ed4-8635-fd0d16d09d6c",
          "status": "Created",
          "code": 201,
          "responseTime": 2241,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c96c092-54c3-4817-9228-b974ab3de524",
        "cursor": {
          "ref": "6cae14a8-7485-4795-a950-4838f71860f0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2fe5a9e7-027b-413b-aced-71f158fc2672"
        },
        "item": {
          "id": "0c96c092-54c3-4817-9228-b974ab3de524",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d4e52059-1bbd-4198-bbcc-5fbf3ffe1591",
          "status": "Created",
          "code": 201,
          "responseTime": 2853,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "150f04ec-c89c-4855-b49a-ad43619bfcf5",
        "cursor": {
          "ref": "c6c95290-3f5a-4a76-aa36-d19d97d5a7eb",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "57f751f3-a6ce-4c3a-88ca-2696f6f13737"
        },
        "item": {
          "id": "150f04ec-c89c-4855-b49a-ad43619bfcf5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "34c3af29-0cfe-4719-bc63-a12b8250d858",
          "status": "Created",
          "code": 201,
          "responseTime": 2185,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "163dc24f-b076-4e53-a4cf-72e6f652dc48",
        "cursor": {
          "ref": "686e63a7-5807-4056-be0d-66f4f631a340",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5bba03c0-ad68-4d41-a506-744d96e369a6"
        },
        "item": {
          "id": "163dc24f-b076-4e53-a4cf-72e6f652dc48",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c75a78fd-ecdc-4848-9f7b-5b34046f7e1d",
          "status": "Created",
          "code": 201,
          "responseTime": 2134,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "6816ad1a-efc0-4834-8155-867091058df8",
        "cursor": {
          "ref": "c0c0b0a4-fdc5-46f3-b95a-da1dd9e6692f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b99a9de2-90e3-4c31-8da1-c6bc9e6ac187"
        },
        "item": {
          "id": "6816ad1a-efc0-4834-8155-867091058df8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e8204017-466c-4491-8ad1-c0123715a57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "bb144304-93ea-4778-98a9-671fad1c2930",
        "cursor": {
          "ref": "0ff5eccf-886d-47c2-8cb8-fe4fe133d57e",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c9a10b4e-8597-48d4-83cc-81ff36d02298"
        },
        "item": {
          "id": "bb144304-93ea-4778-98a9-671fad1c2930",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "efb2f898-2deb-497b-a9cc-33696a142123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e1633e-619c-4947-8a36-0ba16a39bddf",
        "cursor": {
          "ref": "46fe7e15-21b6-4204-8808-5c387123b7aa",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "de5106af-ed09-444b-a79b-3d055fe1df3e"
        },
        "item": {
          "id": "f9e1633e-619c-4947-8a36-0ba16a39bddf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f51546e5-92ec-4943-b9a2-e8ed4ea20167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9b5de9-87bd-4cbc-a7f4-36ff799c1874",
        "cursor": {
          "ref": "3a69e9a0-ec4b-4dfa-a38a-cc0f33559d70",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a0b9c1f6-200f-4577-9c57-416febbcaa54"
        },
        "item": {
          "id": "3f9b5de9-87bd-4cbc-a7f4-36ff799c1874",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0d3cd3f-2966-44af-8619-4eab29c03bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b61fd0-22fd-434a-977b-58f664364ea2",
        "cursor": {
          "ref": "8e483ecf-e821-489d-a502-13b1448bff56",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53d571cc-3788-4cfb-a1a6-0bece9299bc2"
        },
        "item": {
          "id": "70b61fd0-22fd-434a-977b-58f664364ea2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d7fb0620-f351-4958-8d4c-73424dc36471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a6f610-a6f3-43d1-9f1e-6297904d310e",
        "cursor": {
          "ref": "ba03ecd2-4986-414f-9369-34a55770498a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3a0c7880-6e6a-4b5c-8aa8-8c57df9658d6"
        },
        "item": {
          "id": "39a6f610-a6f3-43d1-9f1e-6297904d310e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1c084702-8517-42f9-9056-72398a60632e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52446eaa-0c03-4efc-8729-aca8ab6b734d",
        "cursor": {
          "ref": "a48ef5b1-509c-441f-bc10-554893633088",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "218e2ad4-8883-454f-a412-f4e1839df409"
        },
        "item": {
          "id": "52446eaa-0c03-4efc-8729-aca8ab6b734d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fc4703a8-a4ce-47ab-ba19-956189f2aaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c31a9c-231d-4109-8e8c-0acff7805200",
        "cursor": {
          "ref": "c9951cc1-c0de-4808-a6f4-4beac48e3ae5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "16f3d46e-60f7-4efe-afa9-3f30a26d1d31"
        },
        "item": {
          "id": "89c31a9c-231d-4109-8e8c-0acff7805200",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "600c49b8-afdf-41c2-87e0-beb54428ac09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c84d40-4297-4ebb-8d4b-a190c651c958",
        "cursor": {
          "ref": "70c4e38a-ea99-43ab-aed4-1f483c5edf59",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f8c96f3a-6311-4446-8aee-ee80bea898c6"
        },
        "item": {
          "id": "51c84d40-4297-4ebb-8d4b-a190c651c958",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "825773f2-cfeb-466c-ba41-9dc964aa100f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c77fac-0e9f-4ed5-a78a-d07f3cb2acfb",
        "cursor": {
          "ref": "f8c9151f-ceaa-44c5-89d0-c0f13d208e42",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fd74210a-ef7d-4466-896c-327233b4746a"
        },
        "item": {
          "id": "00c77fac-0e9f-4ed5-a78a-d07f3cb2acfb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb9ce834-12ca-4297-8952-7af9aa8d7dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54d1bcb-3b96-42f5-8858-61e00883bdb6",
        "cursor": {
          "ref": "bff57b7f-bdf9-48e4-943a-e18527862c1d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "981d57b1-4e9e-4291-8a06-6bce9176719f"
        },
        "item": {
          "id": "c54d1bcb-3b96-42f5-8858-61e00883bdb6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "45c0c349-5f24-4c75-b703-0855cdb95e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f8aa47-a83a-4b5a-89ff-0cdf13acea4e",
        "cursor": {
          "ref": "6f3fada4-c60e-4436-b7e1-368f44cd64bc",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f49de1c5-e47f-421b-a1cc-3a1ebc2b5214"
        },
        "item": {
          "id": "13f8aa47-a83a-4b5a-89ff-0cdf13acea4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cbc9b57a-f307-4bb7-b5a8-30874b194161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee32298b-e5f4-4794-a13c-c8cd496463d4",
        "cursor": {
          "ref": "64d2b3a7-c559-45fe-b5e7-57cef11d79e1",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ed4f02d1-ae0a-4677-b000-8986e01d8d80"
        },
        "item": {
          "id": "ee32298b-e5f4-4794-a13c-c8cd496463d4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eb583467-07ea-4b46-855c-caf081ac64db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80baf9fb-e73f-4075-89e8-602c5ae1e6b1",
        "cursor": {
          "ref": "9bdd88c9-847e-40fa-a6e1-45035973ef70",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3619dd6b-d319-49df-bca0-8e25e73ab35c"
        },
        "item": {
          "id": "80baf9fb-e73f-4075-89e8-602c5ae1e6b1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ef165d89-17a8-4b64-a4e1-2153c09af7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fb6db4-5e02-4d76-a935-fc3218198b28",
        "cursor": {
          "ref": "af49435f-04c0-421c-97f2-306da0a97190",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5ccc37a4-f38d-4989-8245-e3048f424dc0"
        },
        "item": {
          "id": "e0fb6db4-5e02-4d76-a935-fc3218198b28",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28c9451d-632d-46df-8b85-2a81006d09ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d56357-fa90-4adf-a785-8b192f81bf10",
        "cursor": {
          "ref": "9654b7b4-e967-4dbf-9b31-fd1ddcb28718",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "702b5f11-cff3-48d4-8d1c-b0990efba0fd"
        },
        "item": {
          "id": "e8d56357-fa90-4adf-a785-8b192f81bf10",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a8fa6a85-47ec-42d5-9450-dbd6efc38560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8000276-dcd8-4df6-803e-5eab79b92bc5",
        "cursor": {
          "ref": "0caee7c0-7daa-4ba1-81d5-74e6dfef1c8e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6c26c61c-f725-4e45-bd8d-f45c1cf1ed40"
        },
        "item": {
          "id": "f8000276-dcd8-4df6-803e-5eab79b92bc5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "25b47af0-7e56-4b69-8912-f917effe1773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986c15a2-9ac6-4f96-99b3-24d17865b0f4",
        "cursor": {
          "ref": "7b14411d-5fa8-49ac-bde0-17f00fc90b09",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "987d7b72-9ac1-457b-904a-79dc02b03629"
        },
        "item": {
          "id": "986c15a2-9ac6-4f96-99b3-24d17865b0f4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "06b17356-2112-45f4-91d3-b397cb6a31a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9a1008-e0e8-4479-91a6-1b614821ad35",
        "cursor": {
          "ref": "a76b190b-205c-496f-abbe-732c124754fa",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4987c212-7e68-4b12-bd83-e73a45ca7a97"
        },
        "item": {
          "id": "dd9a1008-e0e8-4479-91a6-1b614821ad35",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99a339e1-83e9-4628-a2dc-806513504927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40682b06-e01a-4165-8f15-dace74614b91",
        "cursor": {
          "ref": "07a5833b-cf60-4402-84e5-bfd3ef99a5c1",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0700ed01-69b1-4bb2-b79c-6562afbc5616"
        },
        "item": {
          "id": "40682b06-e01a-4165-8f15-dace74614b91",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9805faa5-8c62-494d-a3bc-d26a9a95bd53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b313a-d467-41ac-9418-646a07f8a37f",
        "cursor": {
          "ref": "a5c6fc1f-a6ba-4d7d-bd27-048b06528330",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "913f1df1-ab41-4ec2-b5a7-3c000417c877"
        },
        "item": {
          "id": "9c1b313a-d467-41ac-9418-646a07f8a37f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "171006e9-48ae-416e-9e61-ca6f41cd034e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1a31dc8-d153-41b8-8b9b-fa67aeae1a87",
        "cursor": {
          "ref": "b34b4a65-267f-4570-8dfc-273577f1f1d1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93361d58-f32e-4046-b418-0ef5f9bb749f"
        },
        "item": {
          "id": "c1a31dc8-d153-41b8-8b9b-fa67aeae1a87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ad285cbb-2b54-4eba-9f0c-ef7c7241859d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a66cb9-52a3-450a-9d83-01bcc8ad62ff",
        "cursor": {
          "ref": "dde5f5ad-986c-4382-836b-a91a7e04647a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4ff042fe-1f9c-4bd3-9254-fecf31a05cd0"
        },
        "item": {
          "id": "13a66cb9-52a3-450a-9d83-01bcc8ad62ff",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ebc2bb96-c5ab-42c9-9398-5cf80c7dfb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4431c5aa-a603-4868-ab22-ceb03f2b3f5e",
        "cursor": {
          "ref": "b0efa606-9bb9-4f91-bf8e-b4a769b8b25c",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f70ddde4-b4a1-4331-b8aa-bf4f665dc6ac"
        },
        "item": {
          "id": "4431c5aa-a603-4868-ab22-ceb03f2b3f5e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "44af4bdb-c95c-42fe-8508-3da7cafac291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedb0bbd-24cd-4f41-afe8-698369e5a0fe",
        "cursor": {
          "ref": "4d87fe48-3eac-4564-b012-9c84b891a640",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "747b1868-9e53-4587-b5c5-60daba2d8c46"
        },
        "item": {
          "id": "bedb0bbd-24cd-4f41-afe8-698369e5a0fe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3785dd30-c090-4a74-842b-440bfb2510e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4facfba-5e52-4f76-af09-6caf64b1207d",
        "cursor": {
          "ref": "b6596ddd-9a05-482e-9eba-3123c2169101",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bab55be6-c6a1-4e8d-8d5d-e20f27be4d58"
        },
        "item": {
          "id": "e4facfba-5e52-4f76-af09-6caf64b1207d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6510b0ae-caae-4d2a-8599-7d764e793479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc9a1e-ab21-457f-971b-5da88b5c3461",
        "cursor": {
          "ref": "75b49d00-91a9-4913-b931-187b4da58c7d",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "485cb94c-d999-4c9e-a56d-1b6969713194"
        },
        "item": {
          "id": "10cc9a1e-ab21-457f-971b-5da88b5c3461",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d3c183c3-0787-4ac8-a327-07daf01acdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690da6de-bce7-465b-968b-d9213a92443b",
        "cursor": {
          "ref": "2b1918db-548f-41c1-8770-79f769c1052a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2bb77636-27ca-4905-b9c3-01e5cda70494"
        },
        "item": {
          "id": "690da6de-bce7-465b-968b-d9213a92443b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2c2f169b-f7ec-4924-ab1d-3fd4a50da59e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff96d03-9c5a-460e-a105-2b8116516108",
        "cursor": {
          "ref": "efb4857d-7b3e-4d31-bfc4-0197d2d45467",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e675e84b-a453-482d-aa68-26369a6d13a8"
        },
        "item": {
          "id": "2ff96d03-9c5a-460e-a105-2b8116516108",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2fc52b5c-52ea-404a-81eb-59c355432667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a63c5a-6fbc-4247-b196-98e11ca18bda",
        "cursor": {
          "ref": "db872ccf-282d-443f-abd6-bde1aaa27021",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9699aac4-ae4c-49ca-bb43-b812e973600c"
        },
        "item": {
          "id": "c3a63c5a-6fbc-4247-b196-98e11ca18bda",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66efd6b2-cd5d-4430-b18b-5884bf8ee341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafb7de2-0998-4194-8735-84d2ce0683a2",
        "cursor": {
          "ref": "e2167128-dc77-477d-a9d0-2c803eff8ac8",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "241b2a67-978f-435f-a966-635bf99cc681"
        },
        "item": {
          "id": "cafb7de2-0998-4194-8735-84d2ce0683a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "50646518-7059-4c18-a18f-7c17fb14530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6c7099-09d9-486b-9540-e5cd7724497d",
        "cursor": {
          "ref": "4e2ad4ec-a6f5-4386-901c-3668397af373",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2998edfe-d5d4-4687-81bd-f37dc0102610"
        },
        "item": {
          "id": "be6c7099-09d9-486b-9540-e5cd7724497d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "52504e4a-2653-470e-9d7d-eb293c4824ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616b1a03-5761-4ff4-8bf8-c39d222a4903",
        "cursor": {
          "ref": "e27330b7-737c-4020-88f7-b7179234c3c0",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4a12c3fd-8553-4ad4-9eb1-6a9f382d9d26"
        },
        "item": {
          "id": "616b1a03-5761-4ff4-8bf8-c39d222a4903",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1ae6d0e7-d937-479c-96dc-d5c99918378d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef133de8-a3f5-4bc8-ab43-0696ce4253d0",
        "cursor": {
          "ref": "4a6aeb97-89b4-4226-b692-e8ee1d5ba115",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6d538828-7019-4973-9f39-47855175cab5"
        },
        "item": {
          "id": "ef133de8-a3f5-4bc8-ab43-0696ce4253d0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e74f7f55-30b5-426f-bee2-d570cc7b9991",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f835ae-327c-40d4-a2ad-8f344aadb3f4",
        "cursor": {
          "ref": "0143bfaa-48ee-43f4-a29e-8def64b343b0",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ac0d7991-5894-4d05-925f-3410fc796300"
        },
        "item": {
          "id": "16f835ae-327c-40d4-a2ad-8f344aadb3f4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ba76c268-4584-4453-aad5-6e8c006962a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e07b53b-a86c-476b-a995-5ae695b9fac2",
        "cursor": {
          "ref": "7b442f04-7882-4e94-a191-93033681f231",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9981da9e-2292-45b0-89e1-5c758444c9d3"
        },
        "item": {
          "id": "2e07b53b-a86c-476b-a995-5ae695b9fac2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "de78dd47-6077-4168-9cf9-d76688b873ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6b72b6-6b34-431e-a5e4-f2d0d6c0868a",
        "cursor": {
          "ref": "0cba0e5a-d54d-49ba-b183-fbf8319235eb",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "06971744-67f9-4342-a4ae-743e17a4e7ec"
        },
        "item": {
          "id": "6b6b72b6-6b34-431e-a5e4-f2d0d6c0868a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "37a7f931-801c-4c34-823d-d1695447321f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa16a2c-e6f6-4f5f-992c-f603e96c79d4",
        "cursor": {
          "ref": "5a9f0a13-aa5a-4cb8-9a9b-c745d362e741",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5d1b0688-96ae-494b-94f3-68f506749873"
        },
        "item": {
          "id": "faa16a2c-e6f6-4f5f-992c-f603e96c79d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8540af47-98b9-4e24-92a4-7312f8c6896f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd273f31-8509-4817-b500-61097fe9a2df",
        "cursor": {
          "ref": "4d37ec92-88b0-44a7-b31d-1f229a131760",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "79b42c56-6445-4baf-a28c-dca84650c109"
        },
        "item": {
          "id": "fd273f31-8509-4817-b500-61097fe9a2df",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "af15cee8-2971-4b40-8265-f40b81f41b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f5a16e-b098-4c2d-adbb-5d4f77f73381",
        "cursor": {
          "ref": "e721a7d8-b1fc-4fdf-96eb-b2f025a478d2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8f66402f-3221-477b-8ecb-6c5558513c93"
        },
        "item": {
          "id": "b7f5a16e-b098-4c2d-adbb-5d4f77f73381",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "222c4171-1ded-4196-8612-cb7cc60ee556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb2ac01-9352-48b1-b00c-0999c8ec3edb",
        "cursor": {
          "ref": "7d2a4c8b-54d5-4897-840e-5b5c24383b82",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e480695b-c862-402c-ba85-cad38a829847"
        },
        "item": {
          "id": "abb2ac01-9352-48b1-b00c-0999c8ec3edb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c9c5165-0717-4716-9964-cb7088898c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5e1caa-9c00-433a-847e-dbb23e347c6d",
        "cursor": {
          "ref": "3027e435-a9f4-41c2-8115-1ef5bb25795b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1d9df8db-4401-4451-bf26-14a89586ff42"
        },
        "item": {
          "id": "ec5e1caa-9c00-433a-847e-dbb23e347c6d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d68c8134-6181-480f-a4cc-d38cb92b7d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901e491c-8eae-4bdd-98ab-a242bee5297c",
        "cursor": {
          "ref": "945bbeff-c8b4-4a27-bb82-83e6adfcc879",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c7b0e93a-1387-4751-8feb-adcbc2b4534c"
        },
        "item": {
          "id": "901e491c-8eae-4bdd-98ab-a242bee5297c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "107bff58-2132-4b90-8477-a734ef091a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85d5d10-58c0-41bc-95b9-ca10555f9a77",
        "cursor": {
          "ref": "e30c1e9b-4035-4136-acfe-fac894fce30c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5c6fee84-5184-4833-9147-6f4e783ebac6"
        },
        "item": {
          "id": "a85d5d10-58c0-41bc-95b9-ca10555f9a77",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1ed6918b-c59e-4bde-a0bc-e9ee4bfb424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cafa32c-bf55-4fbb-9f64-38f377ebd848",
        "cursor": {
          "ref": "e0d07e72-c7ee-42ee-8294-7733b18cc451",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aa6b39e6-3ce4-4442-b63e-1d43bbbf613d"
        },
        "item": {
          "id": "6cafa32c-bf55-4fbb-9f64-38f377ebd848",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "014bc879-4729-42bf-a655-c45c5f7d3ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161c1d05-7e0c-43d5-b2c0-d52d3f7e9274",
        "cursor": {
          "ref": "c222f125-b7a6-4d2a-bac1-4b61e0b419f9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ea035e6c-b598-4f0c-b7b0-594251d3e02a"
        },
        "item": {
          "id": "161c1d05-7e0c-43d5-b2c0-d52d3f7e9274",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9cc60645-af3b-4e6a-9e59-d105be42dbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa4b0d1-afec-4d55-a431-2f651046e43b",
        "cursor": {
          "ref": "37394bef-d646-4153-bc50-fc919dbb7064",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "847e3629-a663-4036-aa6d-d930277cc052"
        },
        "item": {
          "id": "2fa4b0d1-afec-4d55-a431-2f651046e43b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dd24ba1b-ed9e-43e6-bbb7-d0600bd36224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f42108c-9640-46eb-9992-d91863d46923",
        "cursor": {
          "ref": "a1631ff2-0976-44f1-953d-9ac7cea4847a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "429c7998-96e1-4181-bd29-f8f5d2e0bfc4"
        },
        "item": {
          "id": "6f42108c-9640-46eb-9992-d91863d46923",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5faf3c98-bc13-4a0a-9b87-3c0c7b9aa4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2fcb02-e2f7-4509-969c-af0f7bc76681",
        "cursor": {
          "ref": "bba2eeec-1bfb-4ca1-a737-4a15f71d49cf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b7af677b-2eff-486e-b944-74673ce775b1"
        },
        "item": {
          "id": "1e2fcb02-e2f7-4509-969c-af0f7bc76681",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "692f5820-dd6b-4d6c-b7e4-a9a51ec68d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a868fe-b15e-4083-87eb-880547e3b731",
        "cursor": {
          "ref": "34cd10b6-41ba-41ed-a8d3-6eb2f76f552a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7f365ee1-2207-4d21-aad6-61394e6a87eb"
        },
        "item": {
          "id": "f8a868fe-b15e-4083-87eb-880547e3b731",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "db1dc65e-df88-4439-83d2-85aefa97f462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b91d769-dea7-45f1-824a-0264ed7590a2",
        "cursor": {
          "ref": "772e2a37-975d-4b15-ab4d-b61a2264b81e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ff930ca6-3e11-4232-a815-fb08fc2b3ae7"
        },
        "item": {
          "id": "0b91d769-dea7-45f1-824a-0264ed7590a2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a31bc347-a704-4e07-87c1-9ca82d008398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb8f08-308a-4eb7-96b3-e83138117eb7",
        "cursor": {
          "ref": "6b03d74a-7bac-446f-a2e3-dc5f68c5f0c1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "608546e6-cc66-4c5b-862e-155596b26017"
        },
        "item": {
          "id": "55cb8f08-308a-4eb7-96b3-e83138117eb7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "91b38b12-7359-49bc-86a7-727fe7f85715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f42eef7-8b91-498f-a7df-97c9410b3a02",
        "cursor": {
          "ref": "32f714ae-94e0-40dc-947b-61d5872e8be0",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "006f4175-090d-4ab3-8dd8-5b200fc1cc17"
        },
        "item": {
          "id": "4f42eef7-8b91-498f-a7df-97c9410b3a02",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b5a81da3-b4bc-4b93-8ec7-986b96b0114b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0bafb4-0041-4035-9972-c8508e3b3109",
        "cursor": {
          "ref": "f960df1b-ea18-4bfd-b93e-20ae19b399e1",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "51561644-4581-488e-8983-d864282bbc70"
        },
        "item": {
          "id": "cc0bafb4-0041-4035-9972-c8508e3b3109",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3ce4ba69-2f1e-4868-89bd-04f8b8ec8b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb2970-e5ab-459c-af5e-508a9f72e0d8",
        "cursor": {
          "ref": "ea0f7bb9-d1c0-41c7-9557-bff634f9eaf6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b47f9d6e-5657-4d22-8355-9ed433e7d3e4"
        },
        "item": {
          "id": "d8fb2970-e5ab-459c-af5e-508a9f72e0d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6b4eb0cf-37ff-41c2-a15f-da44ab6eaa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffcc1a9-4bf9-49af-98f2-37af4ec9fc91",
        "cursor": {
          "ref": "df2416ec-4777-4fe7-b1b3-890177fc8765",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01ae66bc-5404-4370-8fc9-886f1afcb620"
        },
        "item": {
          "id": "8ffcc1a9-4bf9-49af-98f2-37af4ec9fc91",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a410d130-0478-4c52-b14e-deb0f72dcdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7b34e8-9328-4374-b6fb-b70a7ce11263",
        "cursor": {
          "ref": "e14621e5-f608-4140-8172-aeaa5ee1c96d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0b19d825-8490-4c6c-a1d9-b8dc30196f96"
        },
        "item": {
          "id": "0b7b34e8-9328-4374-b6fb-b70a7ce11263",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b2960335-dcb4-41be-a3db-6b8f882ebf7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11ba9d-7d38-493e-9934-fde6daa497ac",
        "cursor": {
          "ref": "47635dc1-cc0d-4d5c-867f-1bc12022b76a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d4bab6ae-8562-4c11-b284-fb49c1d6e843"
        },
        "item": {
          "id": "aa11ba9d-7d38-493e-9934-fde6daa497ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fc35c709-ab1b-43e7-99c6-d68339b86e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c53b209-e448-4854-85fa-70797256da75",
        "cursor": {
          "ref": "2f3f1861-7944-4a61-824a-01d20c4a50bc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "df029d90-4359-4256-9589-fff7aa43534b"
        },
        "item": {
          "id": "6c53b209-e448-4854-85fa-70797256da75",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "225c88c5-6056-4efd-bafc-03bb0de03856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a0518e-b5bd-4e64-9af3-3d78bbb22383",
        "cursor": {
          "ref": "a3c61a75-5d9d-478f-9ba0-395153826aff",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a974b746-70d0-4a27-ac6b-a6011a8a4cd0"
        },
        "item": {
          "id": "25a0518e-b5bd-4e64-9af3-3d78bbb22383",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "dbdb6eb5-cb77-41d0-9376-7a6a84c97976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e8ca68-57d5-4bae-840e-42bc41684f9f",
        "cursor": {
          "ref": "8231aef8-e593-4ba6-8b5d-75407c155582",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8411ecbe-e464-47c3-8d88-83453a356f1f"
        },
        "item": {
          "id": "96e8ca68-57d5-4bae-840e-42bc41684f9f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8514afe0-b3c6-4cd7-9da8-2cbc4375da4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9440967-ea25-466c-9cbe-c356a3b6d426",
        "cursor": {
          "ref": "7f3ef915-ac84-46d5-af84-4477c9b535c3",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "733ffc32-f5f0-4243-a88b-07216d140918"
        },
        "item": {
          "id": "b9440967-ea25-466c-9cbe-c356a3b6d426",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7d18370d-cd52-404e-8fcf-236b82f5ac94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ea139-ddcd-46b0-86d1-30611b0df3df",
        "cursor": {
          "ref": "772ed8e2-5519-4c24-894f-c422e715f08f",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9eac976b-2f82-4e11-9823-9ae92100817e"
        },
        "item": {
          "id": "2c2ea139-ddcd-46b0-86d1-30611b0df3df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "45341fca-2e05-4546-962c-6bcffe79f172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52fd82e-d7e6-4238-be4d-b87c6a9f3c24",
        "cursor": {
          "ref": "d33c0db1-c8a3-427e-b262-3d8ffa3ff974",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d8b93d52-4a25-44d3-8687-a9a67d5f4af1"
        },
        "item": {
          "id": "a52fd82e-d7e6-4238-be4d-b87c6a9f3c24",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "52e41c35-3c09-495f-aa7f-dade034e2ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397535da-4719-4644-88bb-507125606c52",
        "cursor": {
          "ref": "6fd42904-5f39-47b2-bad3-d9d3ae540023",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "77f11596-d75f-41a9-a184-0f5e003f2df4"
        },
        "item": {
          "id": "397535da-4719-4644-88bb-507125606c52",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "47675777-7717-4e12-87c7-9ac438c5f9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937cf2ad-e325-4a80-89a3-49067844a2c8",
        "cursor": {
          "ref": "249680ae-7c7c-4eb9-a742-c6de734529ba",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2770c48f-8d55-469c-b044-8790bd158a63"
        },
        "item": {
          "id": "937cf2ad-e325-4a80-89a3-49067844a2c8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "afa534d1-6296-4e99-b5eb-8f6d6cfe1186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e228cf-be02-4ef2-8e1c-901a58619c33",
        "cursor": {
          "ref": "6f7cd8ca-fd87-4da9-a521-6db33a46cd02",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dd6b1a27-1316-4e16-9d94-95f5ede6a56d"
        },
        "item": {
          "id": "38e228cf-be02-4ef2-8e1c-901a58619c33",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "910f03ad-54e7-442e-9c24-265acb21e26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff1c71b-07e4-42b2-9787-cc71cb328ec2",
        "cursor": {
          "ref": "d17a011c-dcf0-4ef3-9463-cb81747e8c48",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5cb51ce1-11a7-47d4-b6e7-b7ab8c2f2df9"
        },
        "item": {
          "id": "bff1c71b-07e4-42b2-9787-cc71cb328ec2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b6f5317d-3443-4d05-a3f5-316af2cd35dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67fc213-f879-41fc-bd3d-07b8a3f3cbc4",
        "cursor": {
          "ref": "c4ca6d49-1071-4fa0-81ef-aad4bb150f34",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "23e6e823-8e79-46d0-aa40-7ca190b04e21"
        },
        "item": {
          "id": "c67fc213-f879-41fc-bd3d-07b8a3f3cbc4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "26f970ad-0722-407e-a659-341ce50fd3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666b3d46-1e82-4b22-b934-c253a90a1c4c",
        "cursor": {
          "ref": "2fe75dc4-e341-42f0-b32d-a0d377d85223",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0a2ef205-733d-453d-8a75-d2cea2880fc5"
        },
        "item": {
          "id": "666b3d46-1e82-4b22-b934-c253a90a1c4c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "509608bb-3d48-4707-a67b-243b50f3f1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893c8ee6-41b5-4784-a2b4-1ddd872d32b0",
        "cursor": {
          "ref": "a288da38-5520-4394-ad00-1cdbcb8cfc5a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bbfc3033-6c9a-4ea5-b1fc-c11e19d33db3"
        },
        "item": {
          "id": "893c8ee6-41b5-4784-a2b4-1ddd872d32b0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "91e87ee3-6347-4d8d-b5a2-be372eee3a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98914139-5047-4a58-a3c6-0e85a8b6c68e",
        "cursor": {
          "ref": "857a0322-9358-43f2-98c2-8b2d5241eaca",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "263a4a5c-260d-41cb-8a13-2999f7034315"
        },
        "item": {
          "id": "98914139-5047-4a58-a3c6-0e85a8b6c68e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5e94c5eb-1c2d-49cf-b14c-b051faa0fe10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598c2750-2cfe-4097-9ae8-4bab0d7daff1",
        "cursor": {
          "ref": "d7f1f857-066c-4e08-8c30-4217c039ac9b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "776e78af-d785-4d15-9097-24ae8c623577"
        },
        "item": {
          "id": "598c2750-2cfe-4097-9ae8-4bab0d7daff1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "da0e38cc-b16a-4cde-bc82-ca90330b0828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e28eed83-7274-4163-88ee-f9305debdd75",
        "cursor": {
          "ref": "dc75c836-875d-4718-ae1b-5e47ba04c4f5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4e1b15cf-db0d-48e4-9467-6f7f03a698d6"
        },
        "item": {
          "id": "e28eed83-7274-4163-88ee-f9305debdd75",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5216b3b4-440e-4a38-ab76-74f60e3bf517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10d69af-c3b7-4aae-935e-3ff13dbd01f2",
        "cursor": {
          "ref": "7fa4c799-112c-40f8-8077-5bc5d209b78f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "13f90d1a-3023-4db5-a6f8-9762a943f5ed"
        },
        "item": {
          "id": "d10d69af-c3b7-4aae-935e-3ff13dbd01f2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9ca1b420-d6e8-4951-a00a-32880566feaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdda198-27d2-438d-8aa5-143b921d086b",
        "cursor": {
          "ref": "eccc47d4-828d-45e1-9b63-445159dc4274",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "281943eb-875c-4b5f-b11e-71da0b9a6e1c"
        },
        "item": {
          "id": "9cdda198-27d2-438d-8aa5-143b921d086b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3aa5bbd7-58ff-4412-8ea4-6029ec92e12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4b0fbd-9ff3-4971-b84d-5dfdd0f5a9e6",
        "cursor": {
          "ref": "ee0f6670-2fc9-46e3-a87b-1d544eec38bc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "78636f8a-96d4-4bf4-8fd1-9d50a312e6d9"
        },
        "item": {
          "id": "0a4b0fbd-9ff3-4971-b84d-5dfdd0f5a9e6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "37dd4f7d-bc11-4fc9-9212-1102db86969d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048af10c-39c9-4be3-830d-faf81b372509",
        "cursor": {
          "ref": "f5901ddc-ff9a-437b-b0ef-21f7cae73467",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cc1615df-3e98-40e9-a289-97b155d433b9"
        },
        "item": {
          "id": "048af10c-39c9-4be3-830d-faf81b372509",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "10266e9e-cbd2-4e55-9a88-727449a981b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c81912-13cd-490c-82b5-5ca76ede8f5c",
        "cursor": {
          "ref": "8c3fb4e8-4bac-4752-954f-8e88f3848841",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9f535ea1-f546-49e4-b505-1e84bf5afc38"
        },
        "item": {
          "id": "04c81912-13cd-490c-82b5-5ca76ede8f5c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c3fe3332-1ca1-42cb-a3a3-4ff4372f075b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbc6fc3-8c0b-45ca-9c20-2b612d5b1798",
        "cursor": {
          "ref": "c040df3b-e03e-4332-8d54-93248b54a897",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7d9b4f23-c690-4400-86f0-05c70639609a"
        },
        "item": {
          "id": "4bbc6fc3-8c0b-45ca-9c20-2b612d5b1798",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9c061ae-c953-48ca-928d-11c7169c529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b825067-10c6-4239-97a3-30d9943895c6",
        "cursor": {
          "ref": "237329de-220c-4006-81f1-40bc2ba3d3d2",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "65872fe2-3d42-46c2-87cd-358c35918913"
        },
        "item": {
          "id": "2b825067-10c6-4239-97a3-30d9943895c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2d2a44b6-7065-4a8b-805d-cc142cd062fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2da1dc-c60c-4623-b184-3c17ec8dbd6c",
        "cursor": {
          "ref": "5381d138-64bf-4eaf-bbc2-5b893175d832",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9ca3c27d-ab63-4bbf-ba0e-8b4067a5042f"
        },
        "item": {
          "id": "3e2da1dc-c60c-4623-b184-3c17ec8dbd6c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "22064869-dd6d-43e4-a1c5-fe762fc6d3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad52731-4776-473f-b515-ccd3d6a2625f",
        "cursor": {
          "ref": "605dec02-e8a0-4e22-88d5-ede55d597655",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "065a6da1-e15e-446b-89c7-8be4109d1f54"
        },
        "item": {
          "id": "cad52731-4776-473f-b515-ccd3d6a2625f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9b683f78-96d0-42fa-93fc-acc92036c0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cccf67-2d92-4663-9b77-663d750291e0",
        "cursor": {
          "ref": "d911bd51-f0f4-4587-81a3-9a7093644609",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2401156d-0c43-4fc2-ab2a-5368f476b7a6"
        },
        "item": {
          "id": "24cccf67-2d92-4663-9b77-663d750291e0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "85785026-f0eb-4fc4-8e7c-632456473634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01b0ca3-ad4e-4a70-b873-583e244d6e0e",
        "cursor": {
          "ref": "689c7abb-d7c1-416c-b695-9d703984208c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6c699ecf-ffff-462e-8451-85447268bbec"
        },
        "item": {
          "id": "a01b0ca3-ad4e-4a70-b873-583e244d6e0e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "809baa1c-50a2-4839-a50d-6eb2b0f35637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085ae6d5-0fd7-4797-9234-cd32dff350b6",
        "cursor": {
          "ref": "11629726-d5e0-4757-87d2-2f9923bc4b8d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "616651b9-7b94-472b-b6cc-94535c992e2d"
        },
        "item": {
          "id": "085ae6d5-0fd7-4797-9234-cd32dff350b6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "049f1798-87df-453c-ad66-df3cc232a741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faee2c4e-fb6b-495b-a016-7fd085bb7ca0",
        "cursor": {
          "ref": "72458f22-fbc0-48a9-95dc-1f38d4a9d3fe",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aa55676b-982b-4998-94b6-559948ed07bd"
        },
        "item": {
          "id": "faee2c4e-fb6b-495b-a016-7fd085bb7ca0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b98bec4c-064a-4108-a3d3-62d73a6f1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3491df1f-16d7-44c0-9769-e4eb359d30ba",
        "cursor": {
          "ref": "a025f9c3-e4a2-4725-8457-610b3baf0650",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "505d0b21-e5fd-40b8-9bc1-75e94b25ff9f"
        },
        "item": {
          "id": "3491df1f-16d7-44c0-9769-e4eb359d30ba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c3063d1b-bea5-4532-aa40-1a544645ba4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b203a6-8848-4c85-a7ef-aa4aca4045bf",
        "cursor": {
          "ref": "486e6579-4b56-406a-9987-d95d729aff08",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1792844-bcaa-4252-8e8b-441af5016831"
        },
        "item": {
          "id": "b9b203a6-8848-4c85-a7ef-aa4aca4045bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "19fb2cfb-03ec-4f48-826e-5384b22c43a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa39d48-8df7-4c93-ad89-040108b12d55",
        "cursor": {
          "ref": "09d2ce4c-7baa-4d2a-8b34-13b29b348328",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "604d1f80-d267-4833-8343-489e2c8a7b60"
        },
        "item": {
          "id": "baa39d48-8df7-4c93-ad89-040108b12d55",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9baf7d6d-2dfb-4a55-b7ac-3a6af6369ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6501da8-485b-4188-bef1-67800366dc29",
        "cursor": {
          "ref": "ddc9ce28-11ef-4a0f-ae36-cdb4520ae5ba",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "92a43919-417c-4430-887f-0bf04b08e372"
        },
        "item": {
          "id": "a6501da8-485b-4188-bef1-67800366dc29",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "19363ffe-b6ce-48c4-be30-6b00bb8ea474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1733b2f-ef4c-44ea-bcfb-af448222bc7c",
        "cursor": {
          "ref": "85973582-7e60-4f3d-b675-b45f748abed0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "62bbdc56-d214-4dba-8a6d-2fce09839a4f"
        },
        "item": {
          "id": "b1733b2f-ef4c-44ea-bcfb-af448222bc7c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "114df87d-d51e-4636-9cb6-49251f39ace8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615da5f7-df39-472a-a626-7064a56ac7a3",
        "cursor": {
          "ref": "4fb5a5ae-2d2c-4fd5-878e-387bb5390285",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "223063e5-5275-4722-a191-95462c5a921b"
        },
        "item": {
          "id": "615da5f7-df39-472a-a626-7064a56ac7a3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d79ca686-08e7-4515-b58b-bc893e79d98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01273f18-b9f1-4082-89a7-a11704e35cf4",
        "cursor": {
          "ref": "52dd96fd-85cb-4a48-a9ce-386b529f181c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1860ef05-1071-47f9-826d-ade46bd79b7f"
        },
        "item": {
          "id": "01273f18-b9f1-4082-89a7-a11704e35cf4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5478d48f-113d-49f2-a5a2-de98898aa116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d683d2af-f0f7-4efe-ab64-f09083c8865c",
        "cursor": {
          "ref": "e2073542-0960-4a8c-9b4f-e5afdac43a48",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "09bbbc32-563a-4bd7-a6f4-1571cc074a7b"
        },
        "item": {
          "id": "d683d2af-f0f7-4efe-ab64-f09083c8865c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "205cd911-fb29-4f16-9b5c-92f7289113d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6116f010-0ad2-4f0b-b713-2c593c9a593b",
        "cursor": {
          "ref": "0f906abb-3424-4cba-8185-f3e093e2995a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ad3f88d4-81fa-44b4-9979-b818252ea807"
        },
        "item": {
          "id": "6116f010-0ad2-4f0b-b713-2c593c9a593b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "acf5c135-4968-4fcb-a1af-c5c3ff900c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6833feb-dc72-456c-b745-4427c7d4aaad",
        "cursor": {
          "ref": "63b5cd2e-8ed0-42b3-b00b-bfc97586fd60",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "60132ae0-03a0-457f-ad91-a57cf1ee7381"
        },
        "item": {
          "id": "e6833feb-dc72-456c-b745-4427c7d4aaad",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5edb5fe5-aa9d-4b5a-bbf2-bd65ec8c69f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34412420-71b1-4253-9dea-000439df4e02",
        "cursor": {
          "ref": "245e4ac0-7b6d-4721-ae3a-3e7303ffca7c",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dba3a055-2fe4-425a-a236-e0d2f1ae56d3"
        },
        "item": {
          "id": "34412420-71b1-4253-9dea-000439df4e02",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ed424760-35cc-49aa-87e9-eead3c21dd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786d7978-73f1-4e3e-9924-e3ddabf4a220",
        "cursor": {
          "ref": "7e66075e-e55a-44a5-ae57-268d1711eb98",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2d0d8b16-81e6-4d65-973f-227fcaf7cf9c"
        },
        "item": {
          "id": "786d7978-73f1-4e3e-9924-e3ddabf4a220",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fe0cdd7d-56ec-4b19-acfc-0b4dc4f50edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfdcd08-9385-46b0-a372-150107147cfd",
        "cursor": {
          "ref": "b7e2b599-58b7-48d8-9b3e-e6f8f51aba3a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cba6e67f-3da8-4c7a-a5d7-5121af7c28c4"
        },
        "item": {
          "id": "9bfdcd08-9385-46b0-a372-150107147cfd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7113cd98-5cb3-4cde-9f0c-6c1de2d4187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1119994-27ac-4adc-b283-5e251c8980b4",
        "cursor": {
          "ref": "dd6fbd96-1de0-4ce8-904b-1f401a1a18d5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "667c55b9-1cba-40fc-a32a-36faec4bba4b"
        },
        "item": {
          "id": "f1119994-27ac-4adc-b283-5e251c8980b4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bb85c004-c21f-49a3-b951-42ac60989e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd532bc-d647-48df-a3a3-4b9025ab1e42",
        "cursor": {
          "ref": "61574b8c-2576-48b9-93e7-7d5a37b87fb7",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "53af71c6-2318-46e3-a20f-5b86f247b08e"
        },
        "item": {
          "id": "0fd532bc-d647-48df-a3a3-4b9025ab1e42",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7702f94a-9aa7-4b08-b539-11b9346e111f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556bd974-e2da-494f-b504-4ae996f94c95",
        "cursor": {
          "ref": "7a2f52b1-5bfe-4660-b39a-98fdc5c43f8b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c08bc1f5-a1d8-493a-b154-da60cc3399d6"
        },
        "item": {
          "id": "556bd974-e2da-494f-b504-4ae996f94c95",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "edf494cc-c0dc-405a-8c13-969864fb0db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4992ecf7-5e2f-49f2-843b-a9562c756e03",
        "cursor": {
          "ref": "888ef3a9-0367-464e-be0e-6a3f2f9e8e60",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "89f8d3fd-a24e-427f-91ea-18f6b9572c43"
        },
        "item": {
          "id": "4992ecf7-5e2f-49f2-843b-a9562c756e03",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d7f27a36-d2cf-415c-bb62-c79cb903edc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b29659-2c2e-46e2-834d-859e389a3e25",
        "cursor": {
          "ref": "294e6b17-6665-435f-8f00-a3dd488775b6",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5e0f9a4a-0a08-4979-9c37-84f946de3b24"
        },
        "item": {
          "id": "60b29659-2c2e-46e2-834d-859e389a3e25",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "18e6fb1a-260a-454a-a9e2-888a1aed4688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b35156c-9670-4148-86da-8c377bb39969",
        "cursor": {
          "ref": "6ae80c35-0b12-479b-ad49-661d2c2b0dbc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ea5accc-aaf0-4627-9360-3bf7406d8e8b"
        },
        "item": {
          "id": "7b35156c-9670-4148-86da-8c377bb39969",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8035aba8-8549-4c55-859b-02923e990291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde271ed-c851-4e1f-9b75-f429da7dc42e",
        "cursor": {
          "ref": "459f3b4c-8dc2-4827-8ac2-db8e9bef0a6f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "37852e3f-5376-40e5-b95e-7b5c10404d5e"
        },
        "item": {
          "id": "cde271ed-c851-4e1f-9b75-f429da7dc42e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "92273fab-9219-4092-99e9-44c588ed487e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ec9967-3ff9-4ab3-90eb-f49eb683dba4",
        "cursor": {
          "ref": "d7db2b95-c145-43a5-9c2d-78c4ec272ff8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "be95643d-c061-4e8c-8714-38c74c0c35fb"
        },
        "item": {
          "id": "e6ec9967-3ff9-4ab3-90eb-f49eb683dba4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "82474a3e-e2af-43e3-9d89-7608f8877574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cecdaf4-ef20-43bf-bdbb-9b351a1fd7bf",
        "cursor": {
          "ref": "d6c5a1d9-0db9-4254-9313-f457b0746220",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4f4d35cc-6760-4318-9dcf-b6a075b99d69"
        },
        "item": {
          "id": "3cecdaf4-ef20-43bf-bdbb-9b351a1fd7bf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "ffb0cdd8-95e8-46a3-bb9f-5fe158cf3450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f40499d-c10a-4979-be2e-b1f3ed89a0b3",
        "cursor": {
          "ref": "9d1a09f8-353f-47fa-a3af-acfbd3b46a19",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "98fb0109-b357-4d44-9550-bc2c6d04aae9"
        },
        "item": {
          "id": "9f40499d-c10a-4979-be2e-b1f3ed89a0b3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0e1db63f-92c4-448a-a485-5a3b256cdf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf4f9f7-c94a-4a30-a4ad-ffd28c9c6e51",
        "cursor": {
          "ref": "95ae2dae-8d50-478d-ba23-449c3415ffd3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a16b9040-97c0-46a9-8b1e-8fc23fcb9144"
        },
        "item": {
          "id": "faf4f9f7-c94a-4a30-a4ad-ffd28c9c6e51",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "717b3ffe-6f34-429c-be5b-fda3ca789fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a96adcd-6599-4b25-a18e-fe3738a8b570",
        "cursor": {
          "ref": "30da11ec-529c-4531-b47a-f8f65d249159",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "89dbebf1-20a7-4a83-8583-8320420a721e"
        },
        "item": {
          "id": "1a96adcd-6599-4b25-a18e-fe3738a8b570",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "27abceaa-36ab-4ed7-bfe5-ed6b68f80eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7c5c12-2690-4e0b-9467-462f58471bb2",
        "cursor": {
          "ref": "ef33f089-21de-40ac-99de-871b56dbe638",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "30dee0cc-80fe-44ee-9200-b6cc80a8b93e"
        },
        "item": {
          "id": "1c7c5c12-2690-4e0b-9467-462f58471bb2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bee72e06-5171-4e7e-94a5-fdb9d5fec75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ee2bfa-26d1-4ba1-ab71-51b535c821a6",
        "cursor": {
          "ref": "310a29c5-773d-4e1a-9e73-ab5d5244112d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d6a9f8b9-f78e-4c35-a133-ecc56e2d1553"
        },
        "item": {
          "id": "d8ee2bfa-26d1-4ba1-ab71-51b535c821a6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c826f427-fde3-4103-a7a5-356c82838cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af866d80-2d49-4956-88b0-77149682b845",
        "cursor": {
          "ref": "b1420251-ad9e-4297-92e9-2932e08e15f6",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1dd68617-915b-405c-81bf-63b72de2de71"
        },
        "item": {
          "id": "af866d80-2d49-4956-88b0-77149682b845",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7c48f465-07c1-4668-b6b1-3d2a1bbbd971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587eef78-85bd-41d8-b084-085eb4146b2b",
        "cursor": {
          "ref": "dadedd9a-a9e2-45c5-aa5e-002d7f20c5da",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "50898d20-89d2-4fb5-b02e-820399771a08"
        },
        "item": {
          "id": "587eef78-85bd-41d8-b084-085eb4146b2b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "af772966-ec35-4bc7-a522-b37b6a4040b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b2fc88-d9f5-4be4-be13-22cbe4b83009",
        "cursor": {
          "ref": "a614f1b7-2a85-4a98-b91d-72aea3bf3c54",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "40369bff-f492-4582-97f0-dea7d25bc1b8"
        },
        "item": {
          "id": "87b2fc88-d9f5-4be4-be13-22cbe4b83009",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8a1f445a-2661-4e18-b8bd-6c6df6f8a8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca182a8-c476-4717-9fcf-0b7a3e3a3252",
        "cursor": {
          "ref": "7a70bde1-932e-4aaf-abc0-4502031eea03",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "74a9b47c-a0fc-4f00-a9e6-29f9fb7f1cfd"
        },
        "item": {
          "id": "4ca182a8-c476-4717-9fcf-0b7a3e3a3252",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "24e10022-ee3c-4cfc-aa08-c6ca985a1c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9f76a5-4265-4a0a-bcc5-c4b607af2fe2",
        "cursor": {
          "ref": "6c44154a-f412-420b-af4d-7f0a8168ee6a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5e0cac90-12af-4b6a-b960-0d3d2761b378"
        },
        "item": {
          "id": "7e9f76a5-4265-4a0a-bcc5-c4b607af2fe2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d5e790dd-5bce-4138-889d-a1c38039d326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7839075c-efc2-4933-8407-b6fc49c6ff56",
        "cursor": {
          "ref": "be2cf370-6174-4003-87fe-20c70136f1a1",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c879bf97-9405-49e3-9e80-0ff774b51feb"
        },
        "item": {
          "id": "7839075c-efc2-4933-8407-b6fc49c6ff56",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "12b0e3f7-7ca0-4110-b264-6f257988fccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4cb79d-2802-401c-b9ca-a40c517e9869",
        "cursor": {
          "ref": "811b67cf-982c-4df7-9635-a72cc2fb2aa1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "215533a8-536a-4429-acf9-0cdd4c77f07e"
        },
        "item": {
          "id": "1b4cb79d-2802-401c-b9ca-a40c517e9869",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "604d3dd8-4d3b-49d8-a801-712442e6966f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf2ca6-41ae-4768-baaa-456479690840",
        "cursor": {
          "ref": "94687bc2-9e64-4a29-9ad7-ce96001f2cd3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7a8b5e55-32ce-470d-910e-54043bdfa4a4"
        },
        "item": {
          "id": "5cbf2ca6-41ae-4768-baaa-456479690840",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d46d6cd0-5adf-4378-89c9-7fbf0a9aa6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b79fae7-fb0a-4d4a-bba9-ff54ed0d1e31",
        "cursor": {
          "ref": "5205336e-7661-4073-ade7-3adc6ae87b0e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "02ec1cce-bb0c-4abe-951e-40b45c1cba78"
        },
        "item": {
          "id": "5b79fae7-fb0a-4d4a-bba9-ff54ed0d1e31",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bdf2727d-0c2b-4f9d-bbfe-0c4b8b6a50a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda1c086-6c63-4d8f-b49f-a99f48c17295",
        "cursor": {
          "ref": "b47b77cb-c52d-407e-8c84-973077889acb",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ea0de7e1-8018-4ad2-9bc0-5e7d0c35b80f"
        },
        "item": {
          "id": "eda1c086-6c63-4d8f-b49f-a99f48c17295",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "104dbcf4-227f-4810-b5fa-38ff7c2a9a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5083a4fe-0553-4c11-8c6d-a552cf09461e",
        "cursor": {
          "ref": "c7c015ac-cb87-4ca4-bf3c-379b98fbb7ca",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8d53585c-0ccf-43c2-9753-f26e67ef8bd7"
        },
        "item": {
          "id": "5083a4fe-0553-4c11-8c6d-a552cf09461e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "08a15cbe-8bdf-4096-ac83-19bf73519c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1af041-16c8-4a60-87c4-ac072054f776",
        "cursor": {
          "ref": "0d217dba-c516-457a-ae41-c29154052fa1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1ce312ec-192c-4d74-8975-3581e611314f"
        },
        "item": {
          "id": "0a1af041-16c8-4a60-87c4-ac072054f776",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "054aa51a-e795-4487-a857-d39f2f4d78f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62df368a-68a6-4bec-b713-ef7308183144",
        "cursor": {
          "ref": "26974550-917b-476c-99fc-b61c38ba57fc",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "69fc2fd6-37b2-4f4b-8f0c-78850d1f0f71"
        },
        "item": {
          "id": "62df368a-68a6-4bec-b713-ef7308183144",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d0de8cfd-a9a2-4325-b750-93ecb6514fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e793b44d-8e65-49e7-83e8-892b2023cc47",
        "cursor": {
          "ref": "f15560ff-8220-47a9-9606-e1e39080eb65",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b9336012-6b92-4acc-82fc-dcc9160f2623"
        },
        "item": {
          "id": "e793b44d-8e65-49e7-83e8-892b2023cc47",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "df2201a4-fa15-4e99-97ae-8662b8519728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9455e1aa-ed5b-4d9f-9225-6dc26c117eb5",
        "cursor": {
          "ref": "20eb08c4-4a56-4635-a9fe-c20276997d81",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8232451d-35de-4646-9c0d-180237512bcb"
        },
        "item": {
          "id": "9455e1aa-ed5b-4d9f-9225-6dc26c117eb5",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8f0375c9-430c-4ed8-a7dd-ae17192d8a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bc39b0-866b-4fd4-8eef-cb22e6d1f19f",
        "cursor": {
          "ref": "1ccffc30-555a-447a-aba3-aeace3cff736",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fb42e89e-f002-419b-83f8-17bf9ae53a9c"
        },
        "item": {
          "id": "a8bc39b0-866b-4fd4-8eef-cb22e6d1f19f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e8aecc9d-7b75-4ce6-8ea9-190c3ed617d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f50461c-36b4-42c1-a627-2979be839eda",
        "cursor": {
          "ref": "2843e760-0a0e-4a3b-a64c-9a5337cf8559",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2eda13f6-112c-433d-add9-2233d80064a4"
        },
        "item": {
          "id": "6f50461c-36b4-42c1-a627-2979be839eda",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "23f43563-7ab3-4713-ba9e-e76baf83ae12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f54d07d-1f43-492e-9817-9acbd235eb59",
        "cursor": {
          "ref": "8f8d67aa-6792-4610-90d4-e028f1372bb4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f2a253bc-f5b5-4b0f-ac6b-779b89192581"
        },
        "item": {
          "id": "2f54d07d-1f43-492e-9817-9acbd235eb59",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c791f59d-6bd2-4b65-848d-50cb250a03e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5373811-2f19-48ea-a3f8-85f245f1868f",
        "cursor": {
          "ref": "3509f4a3-9f99-4f97-a62c-02279258763c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5850f3e2-352f-4d7a-9bf2-e2a88091e65c"
        },
        "item": {
          "id": "e5373811-2f19-48ea-a3f8-85f245f1868f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5849bea6-f3d3-4972-ad6b-a1d2eca69774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc50066-7882-4eb9-959b-fa18e7158309",
        "cursor": {
          "ref": "478242c7-be78-4f7d-8970-be80b3891365",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "31a85ed0-2517-4623-a373-7c71f07e476a"
        },
        "item": {
          "id": "6dc50066-7882-4eb9-959b-fa18e7158309",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7701be19-b9be-4253-9f44-05ac1ded74b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae00aa90-6489-497c-ae39-cbb55bcb130f",
        "cursor": {
          "ref": "aaa58709-369c-40ba-b0bb-32fca53203f2",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "25c2914f-aa2a-4429-ae6b-3460c545ec15"
        },
        "item": {
          "id": "ae00aa90-6489-497c-ae39-cbb55bcb130f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "41ac8a02-d34c-46ed-9070-7f1887648f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a9268-8e9e-4c48-8fbd-02733b5e1048",
        "cursor": {
          "ref": "e404a252-cb2e-432b-8769-072028208538",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "337fbba0-88c7-403c-bcc7-c42bb730edf4"
        },
        "item": {
          "id": "373a9268-8e9e-4c48-8fbd-02733b5e1048",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2a0ac876-48ee-4109-a840-7fecd8fad802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b22c8df-ccf7-4e7d-8ec1-66fa05f6b3fe",
        "cursor": {
          "ref": "5261dc61-221b-4f01-90fa-30029e6dc13b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "480dba94-4ecf-4aeb-aa21-b003684d0ef1"
        },
        "item": {
          "id": "0b22c8df-ccf7-4e7d-8ec1-66fa05f6b3fe",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89efe32e-f53e-4799-a1c7-aa413fb77cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b4c457-b969-4662-9521-0f704718b711",
        "cursor": {
          "ref": "f0039c12-9f19-44ad-8f13-34d5f01ee01b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a9a08d5e-9840-4b39-873d-d288f49eb633"
        },
        "item": {
          "id": "47b4c457-b969-4662-9521-0f704718b711",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "645b4359-89f0-4f3b-a887-18e4c0d01d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d11d4-760d-43b0-b655-e1089eaed944",
        "cursor": {
          "ref": "9797a02d-aae3-4136-8999-64ccb7dbf321",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6fbebaf2-8509-4115-8cc2-89205b3368ca"
        },
        "item": {
          "id": "ed0d11d4-760d-43b0-b655-e1089eaed944",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3f659a66-c620-43c0-bd6b-b69238f4e243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b118b1c0-7eca-47dd-af68-bb93a6f21f25",
        "cursor": {
          "ref": "235c1a35-c1cb-42a5-bdba-007ff7dffadb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "4fa1e909-d179-4330-91dc-454fa1bfed32"
        },
        "item": {
          "id": "b118b1c0-7eca-47dd-af68-bb93a6f21f25",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7fdd4196-4439-449a-978a-b16775b91502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0a3877-285a-48ce-8413-a86feb84d2ee",
        "cursor": {
          "ref": "ee79dc75-fad2-49e6-baf8-052f4ac431c3",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "661b84a7-ea09-4e48-9d42-89d6f47da2b6"
        },
        "item": {
          "id": "0d0a3877-285a-48ce-8413-a86feb84d2ee",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "919fa77a-3f57-4b50-810e-708ddb95f062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b987611-1944-4ffc-89fe-212a2417f64c",
        "cursor": {
          "ref": "2393482f-2419-45e9-b045-fc2e14926bfa",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fa9dc26e-5144-4490-ae10-0c975dd81813"
        },
        "item": {
          "id": "5b987611-1944-4ffc-89fe-212a2417f64c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f1ecfd0d-8af3-4aef-9c64-05e5ddd10752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e828eba0-5271-4b1b-9305-3607aad1c167",
        "cursor": {
          "ref": "5ce9d87b-8253-456e-8c65-a8e9215cf9fa",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8ac1300f-d538-41b2-9110-e3d7bf037388"
        },
        "item": {
          "id": "e828eba0-5271-4b1b-9305-3607aad1c167",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dad342d6-7e1b-4771-a5f5-7e939aae5fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e42f8d4-c1f2-4665-a7e5-073a95375306",
        "cursor": {
          "ref": "b6efb402-b96c-48fd-a36c-390dd1681c37",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "accb820c-0c07-4bbf-b9d3-be62c96cebdf"
        },
        "item": {
          "id": "9e42f8d4-c1f2-4665-a7e5-073a95375306",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "85e0fd72-9a31-4fe4-9157-9e3fb97fb9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485ee9c3-689d-4339-9047-cafedc00fe4b",
        "cursor": {
          "ref": "bbae0261-0ccd-45d3-938e-42e7eceb359b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ba77ceb3-3545-4fc6-bf07-46d8d7a53e78"
        },
        "item": {
          "id": "485ee9c3-689d-4339-9047-cafedc00fe4b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f72941d1-1934-41fb-ab8a-e1842f899795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9595186-43c2-49a7-a8e4-1211d25a26bb",
        "cursor": {
          "ref": "4cf1f694-be1c-417e-983a-0be9d760b314",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6b9da0d0-aac0-442b-b805-36cd26e8f0a0"
        },
        "item": {
          "id": "a9595186-43c2-49a7-a8e4-1211d25a26bb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a74f418c-c7a2-4db4-88a8-e79ced8027fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7ec22d-5e2b-4e56-a0fc-f46eb405410c",
        "cursor": {
          "ref": "b28aa365-0eb3-4a2f-b58b-58c73b54e1b2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b8d6a160-bd68-47e8-8671-2e61166a8539"
        },
        "item": {
          "id": "fc7ec22d-5e2b-4e56-a0fc-f46eb405410c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "63c940a9-429c-42d3-b702-34dedc0d5be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e3561b-ea5d-4669-aed8-a8170972616b",
        "cursor": {
          "ref": "643c3816-b063-43bb-b0d3-19c644411873",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c57bced1-e152-4bb5-805a-41f2ac8a8ee7"
        },
        "item": {
          "id": "45e3561b-ea5d-4669-aed8-a8170972616b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "69a57fa2-fd59-4090-b7c1-6c9417e26f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5580f9-737d-4271-8022-d664d4252814",
        "cursor": {
          "ref": "10ac3015-1f80-46e9-b806-4062e37ba1fa",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "25fd2355-ce67-4671-b241-1a19c3d4b172"
        },
        "item": {
          "id": "ae5580f9-737d-4271-8022-d664d4252814",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3191c1d6-9d75-4e2a-9ea7-ac5ccf964d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202f5c7b-13af-44ef-aed6-10afdabfb8e0",
        "cursor": {
          "ref": "8a4b6ec1-e2e2-4bc1-a7e3-7c4cc3f59dad",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "183e537b-0c07-49b8-bd05-f80de9cbf4a8"
        },
        "item": {
          "id": "202f5c7b-13af-44ef-aed6-10afdabfb8e0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4de015ad-d80e-4e8f-95f2-6e2fa8a43647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32467e84-ee6c-4a69-803a-e47e32fa0b3c",
        "cursor": {
          "ref": "e79ac0f5-40d1-492c-845b-9677a616df83",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "20a798a4-0423-4526-a6df-16d701b48d0e"
        },
        "item": {
          "id": "32467e84-ee6c-4a69-803a-e47e32fa0b3c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7ce4d3cf-b1a7-48b5-856e-232b279fecaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac034bf-051f-4ec6-9414-1f294f08a8ee",
        "cursor": {
          "ref": "93d030b3-f4bd-4318-9961-9b87c5b9a6df",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "975052e4-167b-450c-a1a6-e679853c9e55"
        },
        "item": {
          "id": "fac034bf-051f-4ec6-9414-1f294f08a8ee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c2e0f700-b075-4169-8302-5962c1d595b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a6acd8-308d-44ed-a71f-a8b537f91093",
        "cursor": {
          "ref": "07a9c7f3-e6c5-4d41-83a9-f618cd0beb52",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "61eb1551-5944-4ab2-8466-de5321933ef0"
        },
        "item": {
          "id": "f1a6acd8-308d-44ed-a71f-a8b537f91093",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57cf3005-d318-4418-8cc1-131331df8bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f57f022-772d-4ec7-a589-3bfa477d5cf8",
        "cursor": {
          "ref": "9ea38444-0cb9-40d5-bc6b-273dd707ce37",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "749b78ec-7a70-4057-a0f4-8622beb08d18"
        },
        "item": {
          "id": "0f57f022-772d-4ec7-a589-3bfa477d5cf8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3e54c13a-00b8-4eaa-9777-f932e2692eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d789ff-7d1a-42d5-8461-8d72bb792548",
        "cursor": {
          "ref": "d45b3c0e-6faf-4986-8680-c85236423034",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "25512ff0-132e-4153-ba19-5cfa8e0fca4f"
        },
        "item": {
          "id": "60d789ff-7d1a-42d5-8461-8d72bb792548",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ad83888a-0292-4803-83d5-425610285152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9496d476-af08-4f43-bf1f-2d7381753cba",
        "cursor": {
          "ref": "a1a59659-b82a-4398-b318-43f383dd9227",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c353edda-4735-443c-9048-26dc23bd6f8d"
        },
        "item": {
          "id": "9496d476-af08-4f43-bf1f-2d7381753cba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9fa2ca2a-c725-4889-bf05-7f5d9f12bcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574ee544-b75b-4a51-8fbd-b17b15f6a9ec",
        "cursor": {
          "ref": "1a44eb17-fb98-42ec-98d5-8e8aea048ccc",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e7b2a0d5-0471-4b45-a78d-75039313a4e1"
        },
        "item": {
          "id": "574ee544-b75b-4a51-8fbd-b17b15f6a9ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "496d0d3a-368a-4d32-9361-a823145afe0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881f2635-79b2-4c36-a865-f63645c8cae9",
        "cursor": {
          "ref": "ea00019f-d906-4097-8c84-5f7e04b374ec",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "375a7af7-bdc6-48c7-b26f-88aa0b6ce8d7"
        },
        "item": {
          "id": "881f2635-79b2-4c36-a865-f63645c8cae9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d4196f8d-03a5-4f7d-bc97-19b033320254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeeca02-a728-4592-a3cf-f302f496d1ec",
        "cursor": {
          "ref": "c6705645-d019-4a1d-8ea6-b6804cea2e7f",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bef82355-7276-41eb-a381-f78f1226460e"
        },
        "item": {
          "id": "abeeca02-a728-4592-a3cf-f302f496d1ec",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d5599a00-48a8-4d60-817f-f0bd9c96ba25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3fea69-008e-4c0b-83ff-e365baa74641",
        "cursor": {
          "ref": "611d48ed-b341-4559-be4f-e6c0ee8ff1ec",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c98c5c42-7d36-40db-89e0-9c272461f08c"
        },
        "item": {
          "id": "af3fea69-008e-4c0b-83ff-e365baa74641",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "70f94cc7-f7a1-4c04-87b2-263b23121354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02830a5d-f4ab-4f02-b925-ecbd4840eb46",
        "cursor": {
          "ref": "5011a739-2bfd-455d-972c-8437ea1ad1ff",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1918dcb2-605c-4d42-8fd0-1dccb88efcf2"
        },
        "item": {
          "id": "02830a5d-f4ab-4f02-b925-ecbd4840eb46",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e8c907db-bf99-4cbd-849d-98925e52d3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3b062a-fdad-4b12-af04-4a41c6322604",
        "cursor": {
          "ref": "c17695cf-59b9-4779-8171-f5b45f6fb238",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bf6138ec-bdb2-4443-bef0-30bc5f6b03eb"
        },
        "item": {
          "id": "3e3b062a-fdad-4b12-af04-4a41c6322604",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b4c9c21d-a330-482a-af3f-680ca93d4fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d1c17d-9253-4148-8526-f8d25145a611",
        "cursor": {
          "ref": "b357eb4c-a8d7-4de9-9bfb-2ba0c33c153d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ea7eeb0a-25f4-4ea2-8f3c-e41460444850"
        },
        "item": {
          "id": "d8d1c17d-9253-4148-8526-f8d25145a611",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fddd1603-65f0-46fe-a393-c3c2e0206452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e88135-c132-446d-8928-40c429040ea8",
        "cursor": {
          "ref": "46393c3d-b6f9-431c-8f5a-8ab9f3ce02ac",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c5c64ba3-3e41-4f8d-86e5-44fa8add9ba7"
        },
        "item": {
          "id": "59e88135-c132-446d-8928-40c429040ea8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "48a0022c-401d-429f-8b93-0df9d7bb24a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee75acef-b392-4539-b4fe-5f4f1eb731e0",
        "cursor": {
          "ref": "db6f29f4-f183-4c18-a249-038385445780",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "14ca9e46-b2d3-40c2-ac62-2231a3e8596d"
        },
        "item": {
          "id": "ee75acef-b392-4539-b4fe-5f4f1eb731e0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b34633f3-35de-4874-a821-feb1177aec8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea25a5c-ac92-4bb9-b568-5bf0079ccd05",
        "cursor": {
          "ref": "8a559aad-6a13-420c-9bad-c83a836d514d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4003c758-50f4-4c65-a0e7-3316cc748ac1"
        },
        "item": {
          "id": "dea25a5c-ac92-4bb9-b568-5bf0079ccd05",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "51b47d25-37fa-44d5-894f-bc87da3a61f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b51fbf-9dc0-4308-a487-cf50c6e267c8",
        "cursor": {
          "ref": "485abf98-3a1f-41b1-b7d0-f028bf8e531c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7ab8b435-4b68-4a5a-b89b-d989881c85e1"
        },
        "item": {
          "id": "17b51fbf-9dc0-4308-a487-cf50c6e267c8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8233745d-c4f6-4a8a-94dd-ac99218f1734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d398695-6f98-47b9-9f74-1f6df1c2239c",
        "cursor": {
          "ref": "cf0f5353-3ae1-40d5-a23e-a3cb1b2b3ed1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1190cfd7-fef7-49a9-95e4-c6c094e04c22"
        },
        "item": {
          "id": "7d398695-6f98-47b9-9f74-1f6df1c2239c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c584e6bb-a372-46fe-b3cd-184fe104c477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016d5daa-e4cc-4430-9e4d-4d6beec355b3",
        "cursor": {
          "ref": "0648547f-27c3-4c5c-a403-2be971723adb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f9effb3e-b3aa-4305-b2ff-1a0b6b1f6726"
        },
        "item": {
          "id": "016d5daa-e4cc-4430-9e4d-4d6beec355b3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3fd7c394-fe70-42b0-800f-a48366ca1cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b7e90b-4329-4197-afce-b8951ee9148b",
        "cursor": {
          "ref": "7a9576c0-b637-4961-b6e9-165f7e9476ed",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "63eae517-b8b6-4d9e-bd10-d984e9a7e2ab"
        },
        "item": {
          "id": "52b7e90b-4329-4197-afce-b8951ee9148b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "af74228c-b715-43e3-ac65-ee3a28f2768e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a09b37-0b1d-4c6e-a85b-ec20b74dce91",
        "cursor": {
          "ref": "5ed9e93f-a80d-4d69-919d-49ec5f5dd14e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "28a0a9e9-51b8-4719-8481-d455d45bae74"
        },
        "item": {
          "id": "a4a09b37-0b1d-4c6e-a85b-ec20b74dce91",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4fb6ad86-2886-4358-a286-935bffc73378",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81ca573-a714-4792-b2c1-e700c53e679e",
        "cursor": {
          "ref": "6e62545d-f6c0-46c0-9ca6-080270723a02",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "853b2fa2-c805-465c-a2e5-59f8a10aa142"
        },
        "item": {
          "id": "b81ca573-a714-4792-b2c1-e700c53e679e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "864f3ae1-22df-4553-ac2d-b9538e85eac3",
          "status": "OK",
          "code": 200,
          "responseTime": 1517,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de6a11-b9c8-4699-96ce-a0b4389ae073",
        "cursor": {
          "ref": "5f137bac-18fd-472e-b69c-fe9d48c74d7f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f8cf2991-fde5-4893-89e9-b9b7c934117d"
        },
        "item": {
          "id": "86de6a11-b9c8-4699-96ce-a0b4389ae073",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "534e8725-0b67-4155-b627-36ae9c7e1916",
          "status": "OK",
          "code": 200,
          "responseTime": 1292,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08126ef-3148-454a-8794-434ebbf7a8b2",
        "cursor": {
          "ref": "f1ee6f5f-7cbf-40fe-b8dd-fd8e2e819ab8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e469fa86-aeda-48a0-ab6d-dc9eb0a04125"
        },
        "item": {
          "id": "c08126ef-3148-454a-8794-434ebbf7a8b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e02c5c4-e5ca-4cc2-b469-5c7650b7aaa0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08126ef-3148-454a-8794-434ebbf7a8b2",
        "cursor": {
          "ref": "f1ee6f5f-7cbf-40fe-b8dd-fd8e2e819ab8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e469fa86-aeda-48a0-ab6d-dc9eb0a04125"
        },
        "item": {
          "id": "c08126ef-3148-454a-8794-434ebbf7a8b2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e02c5c4-e5ca-4cc2-b469-5c7650b7aaa0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e73a82-8e84-44dc-ae40-28189c330232",
        "cursor": {
          "ref": "d62706a1-b316-4ae8-8660-a722cbcd30f3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d94371da-2d62-4837-8617-578abbf2f826"
        },
        "item": {
          "id": "79e73a82-8e84-44dc-ae40-28189c330232",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "936f9412-5231-4313-87f4-c4d82d65607c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6806b8-4006-40ce-a51a-7c3f760265df",
        "cursor": {
          "ref": "9434d10d-83a1-4b06-90dd-df181534d5a1",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "184071f9-4d19-4c5b-b08e-9cdebeb0aa80"
        },
        "item": {
          "id": "9d6806b8-4006-40ce-a51a-7c3f760265df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "275ffe24-438d-45c6-ac43-e16e014a154b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}