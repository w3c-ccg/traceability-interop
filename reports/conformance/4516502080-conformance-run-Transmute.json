{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5d4bb67b-e4ff-4273-891f-9871693e75aa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3b64d150-4549-473e-89fc-cb98d6d4eab7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e53eebe0-0be9-4088-8fee-6b3ac0009d26",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bff9ed21-763e-4cc9-9d83-d3a3307dec17"
                }
              }
            ]
          },
          {
            "id": "a075f4b0-88c1-41a7-b0a6-733991d9faac",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9be29787-f395-4b43-800f-9c797c8f9443",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "98d071ae-6107-4012-a1c1-046d53b3afe0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a769ed03-29c7-4898-8613-f063fe2d4986",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d7b86371-f825-4e85-9774-6dff7f09199b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60c5dd5d-fa96-4bea-bed4-d33d40e480c1",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "366e9bee-c70a-4cfa-b9fe-6ca942c09b78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc7eb420-af3b-479d-9cd2-328f11a7c06c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2b2f36af-6017-4536-b225-cbf86fdb6955",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3060a0e-ddaf-4fde-85b3-b53baaea27ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f138219-5090-464d-b668-1460630e5caa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9de7e3a3-a990-4baa-a8ba-06e7c71b8665"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1c5a7b5-9f6b-49f6-bc78-040eaec0772a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "83b0c176-fb01-45df-b542-6c82e0341eb4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "736abc7b-b7e0-4f1f-a1f9-aed7f55e4678",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b86d6e47-2365-48c0-a1c7-75d04a539494"
            }
          }
        ]
      },
      {
        "id": "9aceb224-9af9-4598-b8e9-a552e005416a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "dd33561f-9d1d-4754-8fef-98907741f7b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5edf2051-ad1f-4349-bfe9-6563f437eeff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1fe10f69-d929-4e41-99db-d6f1145c74d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2050a3e6-2a71-40a8-839c-94beb327b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2076f2c5-229b-45d4-9cac-28ed64a90fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8918e4-3cb7-4568-8277-342aa5f80002",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd550f1-5f65-457f-9b78-3288184ea73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c31dc88-99d8-4b41-8d33-4afb8856ce02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6db2a4-6989-42ac-abe8-8c26a27a3c8d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5cfb56-bcc2-4cbe-9e22-da57c20b1527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4714eb4-253b-4ef7-ab02-b81cf90b5a92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d2b8f97-3707-4e41-9a95-44e3df3a3a77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c357526a-c86b-446d-9929-5844db6558ea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f21d4b-8a1d-4c12-a559-0df4f31e7d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc637e9d-41dd-4f4d-9158-e59fd4a7445e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8af2be-72df-4ee5-babb-0dadd83f8e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d02224-ef7e-429b-ae94-cff9360fcc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd89b4c6-18c0-4030-8191-8c66a7ba558d",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89695801-709f-44c1-a69e-29e3f9306086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14a61057-51a1-4b3c-8180-15eab5bba181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483b15e3-5297-442b-8956-3c9436a25a26",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "da282057-2ba9-4cac-92eb-fb657bac4d75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42c83d10-c9e4-4acd-b818-524abfd9c65d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72fcd84c-2601-40c6-9d9d-e29223c8c8ba",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3d221f8-dd70-4507-ad16-feabd888476f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "44484758-b000-460f-8db5-105e700c1fc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c044dbc2-678f-4543-914a-0fba3696c532",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "acefee07-b9c5-4c65-a099-1e21d1a0d700"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0c3dcf3-a6e1-4234-a40c-2d27438eab0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef7ed1d1-b021-4b3a-a547-165f8236b330"
            }
          }
        ]
      },
      {
        "id": "bd2e567e-4ad5-4e29-8e53-f8a34d20a768",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8e9da9e6-81f3-4412-be6d-0a93ba9e8dab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11306219-4bc6-4d00-be46-8ddfb44795f3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "63a87622-1a50-4910-8bf3-6d13af010e4a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b93d33-e1b3-4003-a06a-05f0b09563e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e6d8f6-76a6-49c4-9828-d4ac492bdb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f3b5ac-aad5-45f9-a55f-d886a6272218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d7cc68d-55a8-4dfa-ac80-67a92f6b3b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfe1fb4-478c-437f-80ad-fa716463e757",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93f5e98-58fb-4d34-a772-ca6c94a98757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c624f43-8229-4885-8d12-0d5728b8789f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d869b17d-da4f-40c4-aa60-60768a82d6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b696c157-7639-4ef2-a87c-82ba72daf803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b824c5-56e0-4db6-ab20-31d87fff14fc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a43cd-c514-46d4-ae14-94191a5daa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23411ecc-24b9-40c4-8371-517311999537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17ab572-587d-4c14-a783-46e66904b1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4fb2030-55d5-447f-bc6c-838d226feaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ebb957-7650-445e-8256-6732ac31e375",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1ddf93-686e-49d6-8fe3-fe9a6df8e9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1235170d-f50c-4fe7-9513-4e88dba76978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d11138-611b-492e-932c-1197ee5d2f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa197d6e-be3f-4cab-9f00-4c135fbdc685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc38275-16c4-49bd-8d6d-13b2cea24fc5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3683caa-b302-4cff-8e81-616920d4c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a17bed-f3f2-4044-bc34-1e2e1c557183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f53ade8-7b66-4917-96a8-7f2574ef8a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3eac97a-4e46-4962-b26f-3fd608f83e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae3e88d-3018-483b-afdb-aee9798e76c8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29198481-dc83-43ae-a8d8-b3f5b0d8ffc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1baa8c-6fc2-45ff-a340-1c47e122d01c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6563eac9-564c-470a-8155-e1437d4f72df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dec8609d-d97e-496b-b083-21a52775f059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f2c99a-f447-43e9-a739-7b78025d6547",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed164fef-14e2-47d7-a031-5b4056551f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8f3802-b3ee-4c19-8bf7-e6dc7652ad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69fc245-ae23-49d0-9264-52136c9946dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a552bde-2042-4deb-8d87-578320172193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8ba340-ba37-4b06-a0d9-28e4ee235d61",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc53faa-0b05-49fb-bf12-860967011e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868987d1-e854-40f3-9feb-fde516b3dbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800fd28a-1791-44f0-b3b4-964e6c64dc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "340ea2c9-085e-4c3d-b16f-191d74bc5829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5a572c-507d-4407-9705-cddf3bf8e1e4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb3e4b5-bfde-4006-873e-f7f2220dbf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3bb6740-7420-4345-88b9-c512d86a7717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055c8284-8627-4c76-b174-9d603647fbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb890217-da4d-42f0-ba6e-2e5a29b4cc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b07112-b5e5-4167-8e75-36e9d24389f9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5bcd68-ee31-4070-bd37-048b23ae8666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6b2132-1e6e-4150-8d17-712be577eb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca8aafb-64d2-471f-99c3-974c3ad66e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcb9075a-e619-4855-a32c-1f7879064124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d40edf2-f9e8-41ea-bda9-e0aac3f7ff28",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84d8e79-8e8b-4385-b828-bc71265d6a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71232cd5-be35-40ef-9840-ad9bca88ec39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbd2bd2-d585-46d7-b958-98438a04b880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2b3cc41-4ca7-4aac-bb65-096515b01347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be640908-f7b6-42f5-bf7d-118a4bc2bdc6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b5ab1a-5b59-4de8-b7b2-854099e5e946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abbd72d-a1aa-4953-a9af-6dae8762c497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290fb3bd-f477-4b8d-a80b-1f0d402d28b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "816cb2d6-857f-4a4e-a6db-23ed52a36bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905142d-39ed-4471-bfe5-78a8d0c9c822",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f284e03-6dbe-4ec2-9513-8968f01361b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cd45a5-05e8-4a38-848d-c7b5f53ab27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c732b-51e4-49fa-a014-43fdbef61837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de21a7fd-7341-4d43-9993-6e151b52d44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17632c4b-fa29-4a27-bf29-8849735ca589",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565a8eac-2c01-4661-a6d3-38b507ab3968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb49cf9-8405-42d8-8aee-d214989dc050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93aeeff-f214-403b-939f-6be0c2d9129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b6f2208-ee5e-41ac-81af-bdf9d26a4988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64b4a30-9db9-4152-b8e5-a7d022a89f9f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a40d5-d4bb-4bd7-917c-d7fe7d5628d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35347440-d9e9-4f3f-beaa-150026400b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7494bebf-a1e6-45a8-8fa2-3ca63b31cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b48e7e19-5e86-460a-b6c5-2e4cfe504a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd6efd5-b93c-4f45-8b3c-071fc0fa7ea4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbf3a51-59aa-472d-9b57-370a67d1d587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1de1e2-1f3b-42b0-967d-6cacfd94b31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eed438b-5273-4227-8e52-0d617e72be84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db4d0618-96f0-4af6-83a2-19d8dd2a4f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a0e6bc-b547-482d-811e-338e32e03fc0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2a508f-ce1c-41fd-b85b-00ced085357c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c637762c-c6be-4a39-8f25-c772f1d57c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c04d5ae-583f-432a-ad62-8f37ffbd5c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c234efd-680d-4fcb-bafe-d6eac548baf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a73382-8234-4512-b3c5-f2ec397556f8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d53390-0b1c-4953-a38d-2c0f10262c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acbedb4-1cc6-465c-9712-fc97986e91fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426051e9-4945-45d1-8266-ff9a26a34ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8160187a-cba2-489d-98d9-3900e0ed4c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccdd9e2-6505-49bd-bfd0-83c182e30125",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e724160-0fb0-4202-84ce-e1d99d6500de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c4db6b-8fd3-47be-8c95-a89dd5536663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e4e53b-28dc-40a3-b558-5615ac4dc4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa729732-1444-45f4-b076-c7aa9004b80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3257728-3c62-4059-bb8b-c640b8d94350",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98890be5-1760-4e9b-a974-e7c4f22a97b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5358aec0-1a32-4a54-a25b-c2778f2a84cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629d070f-5a2a-4d42-bd25-f0c18aead9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74ece6d7-6853-43cd-8a1d-cd66ba5cb341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "900743d5-48ef-4b71-b016-3fa29929d044",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff94e86-9a8b-487d-aab5-c3cf8156e5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16aec9db-c4be-4dee-b1ac-b8301907d930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d65b0bc-0a3e-4e08-ba75-c5e2050ea991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c2e425-b8a9-43e5-936f-cd317ca14b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234be829-18fb-4336-9a6a-0ca8d389a414",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b906a9b-c236-4997-8bec-06cda104eb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a7dc991-e616-4656-8c3c-4ea22aa39694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f20b6f-da30-4802-b84e-f6641cd9457f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "171a0c90-f3a3-4ef1-9437-d6dec8d564cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c511775d-6be6-401d-a480-9226127209cc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fcd4cc-3efd-4064-83ab-27a65cfed88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45353aa6-951d-49e1-9655-f0237b9f8024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0881fbec-a338-4a2a-9103-d9c923db2d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3182188d-f34e-4789-bbd3-a2a48c1f446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d43a234-1264-4b12-8131-4724f79c7b1f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dadc8d7-f77f-48fc-9c83-0c20e430f2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1ea1ad-1393-404b-995b-e915bb31e0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96adc8be-1203-40bb-b3f5-91e38ea6e7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "816efba3-0a5c-49e2-b95d-a0c4cd10972e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4336c4b-70a7-4637-8011-15fe7786af3d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7b7e56-185b-4cf9-8f3c-6abcc2ecbeb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76bd1372-0c31-4433-9a6e-a0e41892ff9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ed560a-7230-4f7a-80f4-b61ba087b75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b1a422-9bb8-4e05-a40b-a604a6b5a19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b230d-839b-4539-ab8a-0c96c6c0ec25",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2171684a-cbe7-41e9-a000-cc97c427eca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edfe3ce-681d-45c2-bfb7-9e19cf383299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7d48f1-5509-492e-8718-682726abb5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1adb91-1611-4eb0-bc67-7165d4a7c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b3db8-2953-4863-9c04-eb291ca29fa2",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03781a8d-e481-4928-93dc-51f80fba1b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b06e44-ce1f-4c84-95f0-1f5e2eae3afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990d4109-f539-4b94-ab98-45044719fb3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf89d25-06c3-4b2d-8eae-315eb81b8f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58ca58a-4a3a-4730-bd43-61e3b39c5918",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506cc778-ed20-4a7b-ac72-71341d873e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75990a9-8c74-428e-9261-015a8c007974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca86ee3-6063-4f34-ac55-8f047fe79fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96286a54-9804-40d7-bdf7-07af99b5081a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcda240-9d1b-4e38-9130-cd5596d6bb85",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655c53dd-81b2-4b0c-835b-df996887041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2780bf20-5c58-4807-a2a5-65a4c8198d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb25b6b3-07c6-4525-9072-207169161ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8f6de3-96ec-4a9c-be29-90059ae0a1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1746eea-3893-4fa6-bc5e-5e38cfabd5d9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdab2cd-0342-4acb-917d-8eb111ba855f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d46c3b-c488-454a-bb6a-beb9d7385ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d158d1-0e92-4686-bb9a-bb6f40efc5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b7ff69-89d4-4d0b-9711-f54e50da427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1ca68a-92b0-4925-90a7-9dc938a3217d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb6202-d23c-41ab-805f-2dc48b04695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab0ce25-fae4-4ac7-86ba-1cefb834ae1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0e0bf8-0724-42ee-a1a3-ee69fe45b838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0088e8c6-c1c4-4e28-922f-eb4d63b43494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b7ffb6-56ff-4427-88db-41c21bf5c378",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3119beb2-6afe-4ad5-9672-3d1ee60b15a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "251b25ee-a24e-40f2-b9c0-e73390228270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd88edb-ef4a-48ab-b0c0-473d37a5d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b16aaa06-b40e-4939-b6a2-04926fb6fb4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3d6d09-44ca-4df0-ad32-78a2f3c12801",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e983ca7-6105-4228-9fa8-29f901b8a001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01052f90-62cd-4c93-8123-671a78b17525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901ece8d-750f-4666-9d66-e6131a8fbf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f804b0cb-d569-49c2-b353-84fd675604f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ff785-ec07-42fb-b15e-4137f812f7ef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed27ef8e-c60d-4499-b921-43ac0856dcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a8adae-c033-4527-b1b0-c77717e86cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76907384-d5de-4318-89e0-5a4f8124e61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "579324ce-06b4-4d7a-805f-77e143607f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cd4e38-0137-4d6f-a04d-64a82a283958",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04812dc6-9a03-42f1-921b-511d51a7fd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff918912-60d0-4d50-96dc-7fe7c048bbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c086dde-7b17-4e99-b219-af12f6303bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6fbfede2-6d84-4d04-b616-8e2baa0baa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852f45b2-e06e-40b7-8496-9174bd480515",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766e42df-a1f9-4fa1-8d78-a2b038d5a84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1636ecb6-a6df-4d57-8328-df367969898f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1880faed-edcd-4b43-b490-c3aadc5af97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c851e58-bfda-4e12-901f-dbfc6bb8a5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67dda9da-eacf-4c6e-9dd1-5b22cf020cdd",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccc29aa-bd9f-4370-8b0f-5407a86650a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8d5e63-9176-41db-992f-596e296eda53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92473573-e4d4-4ffe-8afc-487651c1ea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd888e9-2a8e-43e5-9ff1-272698f85479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540c7caf-4759-4a28-b1ce-808e815602ec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8460521-5057-4a47-86b0-58b3298744e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcb8486-d1de-49ca-9548-2a14e84f1962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbc5bdd-27dd-406e-a177-d5fab4d0af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97e84142-753e-4895-a59a-e384ebd13c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf4b7e8-1965-4cc5-98fe-b1dab676690f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff398afc-0ade-4065-bf9b-b477bb14415d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c9a27c-cc8d-4485-ac52-0ebe67fcb4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7028d00a-3327-457d-80d7-b2d9de93c495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f287392-6f31-4d88-801e-16eaf63f421b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55d1283-b273-49ae-acbc-83234bf2c08f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6a8d74-882e-47cd-a0ff-25b06c1552ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6469ef9-f174-4b87-ade1-3f1c1e2327ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4ec99e-7f61-4e6e-8126-d08f3805c424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7533e526-d518-49d8-b615-8f3c4bafb4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092fa512-303d-44f4-863a-718b2f7809fe",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2832e5b-f948-4800-abc5-a6cbd60a66ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "085ae6c1-a1b6-4bf3-8a0b-dc0cef145aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c7620b-32b6-465c-a8c4-e3de5323ffdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aac83d8-3610-42be-aaf9-2863a6e169e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a13666-53cd-4279-8867-a8ffc4dae2ad",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d4bd897-eec4-435c-a326-6a70c7ee8145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef353f4-350d-49f1-8ccc-8fead20ea520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e0b031-9473-4a60-9978-73159fcb5cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ca043df6-6058-4842-bea5-bc2e4af6056d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f792a3c8-8bdd-49c4-aa83-3d9443943341",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34123ba7-a9cb-4a08-a9d1-fa1e6d9e283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3399b33-ce53-429e-8615-e02a342aa0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e9e52-8b81-4cfb-a14f-32fa2845a847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eec0057-e0de-4812-a1b1-82d5bb0a7617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83ac1721-d028-4a0c-b7e3-de939b4b02ed",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31162ea-3f96-4032-85c9-4e24d3fb6e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd5a7d-1fe7-41b4-a360-d7d31a7aa564"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b89fd0-d1b5-4e63-98dc-8dd626ce932f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4de35006-8b59-42c8-ba1e-98409622589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c980026b-7b71-4853-a943-375a220d0c5c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbeb6d32-c55e-47e8-8174-9087c9c5354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a471547c-50ef-4684-af81-52187551f889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8795fa6f-ca02-4b34-84b7-50544500fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc27f52-902e-44e5-b7c7-82d1956f73dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe821a64-d3e1-4c60-bf0a-9a96eeb067ed",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5ec26e-176f-45f1-87d8-a44aab8630bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a6d752-829f-4068-827a-3e935421c398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac76822-1c11-4c24-9c45-0dfcf023f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf93ae5b-5e36-4ff8-8516-35d227195a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3136ac69-0171-4a5c-8e50-7ec6f5b108ab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf567313-7302-4316-9945-fae398d55663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde935af-afe9-4777-9580-eb9ac6eda38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf0e42-b697-4dc4-a7ee-69ff957d80fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4293c39-e95e-4b07-b833-e12ef1d58fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641e657d-4e09-4c9d-b12d-c2c8dbc1cb3a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b94f84-1d7d-4c82-b265-8d1435741bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad454b6-3376-4bae-a1f8-d0d8a739a431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9361ac76-e842-46e9-a294-7dcfaeddaf1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f095c3f6-380b-4f86-887c-d1a5abdef041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43bbb46-b819-45ca-a44c-44b2cf2b6355",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d72e39-30a4-4479-a497-20c9815f772b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15a2140-1676-45ce-be46-6562825d7a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8bbcc8-6b08-4ce2-a5ae-bf1c932211e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2672127-27ae-4960-8945-30b05d8a2b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e593ecdf-8a60-40f1-b627-f08a575d7f79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2ffc12a-4ad6-4609-827b-8b5e40e551d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca87390-ba2d-43ee-8a81-999ecaef858b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7393bc-c4d0-45fe-882b-ee7a43341c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1679fa-1366-46b9-bfe4-8f1aec713236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b73fa9e-84e9-413c-a6a7-12b7b5c8f3a2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f164a243-abfc-42f7-b487-a2a7ca432451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174a8ddf-b831-4560-a60f-cee6449c5cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b097009-c943-400e-b7d1-f556c352eb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbd4d0a-9de4-4594-86d4-e08d9d4b6d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da42171-c7c1-4f2c-9460-56ce36bf2d76",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edce0454-1783-46fc-8398-c04838c5d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4c9a53-2960-4780-a133-0f581681fd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a71f90c-40a8-40f5-b77b-414cda4ec32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb39384-00de-4c09-9f05-e87d93cda7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8c5bc2-5599-4745-a635-b17508583b30",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f857b9-60c4-4ade-8cc7-563a936b4510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318a3dc8-f1a2-4901-98f5-c3b63c04c9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2866fe2d-269f-4435-bf95-d068f4890764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f93f09b-05ff-4f71-b2aa-eff1880bafce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4819ffb1-7d94-488f-81ee-eb35ce8a9fa8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d7d114-41ab-4af5-93de-6923f57eb4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e54326d-586e-49be-a243-3c844689fcc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898eb6c9-8bac-4541-80d1-c150b7d0d2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5094da-39fc-47f3-a0f8-e9cd13c8772b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b695f4-31a7-4a74-be38-f7c68b899f21",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0171dbec-0a50-4ddc-81e4-22549f4d7c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bf5711-a337-47e2-adee-af6eb41d4127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495bab66-d5af-493a-af2f-077d189b0a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e3ad80-687e-41c9-9753-ac7066eee524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cc03ae-741a-48fe-956a-d4486ff9b4e7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4a0412-0caa-4681-b47d-0344e5b09fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01fa56f-8e15-4980-becb-9669cc4b9eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8eb4f4-8c14-49fc-aaac-931d6b87311d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1ed0bc-501d-4074-99e5-0770b6b0bd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e606945-6da5-4acc-81e4-85708f337849",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f925c3c1-1f80-49f2-99e1-91320df83d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1e7ab4-dfed-43ab-a242-6ff0a5d5c898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ce14fb-4a30-4305-a422-6603d44702b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37b7123-37e8-4bcf-a679-e215cff68299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13730649-8062-4722-a939-fb78430153ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521604d1-03e4-419e-8839-675a71f33ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5af092a-35ba-4e5d-be45-d1b89adcbffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a60839-27f2-4ea8-9a12-06666d0faefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba59680c-a89e-4ee6-920e-9e9ec280f0cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e261493-3108-453a-9cfb-019cb080574f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6622ede-876a-4ccf-87eb-4928a0c3d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbb4bdb-d9f6-4093-aceb-6823a432ff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f86f584-2561-44e4-a690-d3e24632fc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbb05e3-a9b4-4e72-95da-9c092567710f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6affa3-81f7-4a3d-937f-16851b0094d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b82ba92-1789-422a-84a6-0c5b065aa65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1161118-2d11-4a23-92bd-17c2a98179e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995fdca-dc8f-48d7-b4c8-8ca2f0bf27cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4af6f0e-49d1-4614-b173-4958d74acb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a22b3e3-10e1-48d8-993b-24b87e0a6fac",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8a062a-299f-4a95-8bff-3ba2e6dc9bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68c4b35-8af4-4a63-8d33-822ece245f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1898c375-e202-4cdf-808f-b3914f944f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d20d9c0-992c-4875-bb97-108b6d051caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe86f97-5cda-4fba-907d-799aa5894218",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ef9804-43b7-46e7-8c64-e55e233e64d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8ef36e-96f9-49d3-a53d-2e462ca5f4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4414e7-8731-457e-b685-deead5edc6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d97795a-80d8-4963-9b75-650fde950236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02dca28-e9c2-4c18-9db8-92860ceb0cde",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ad2f42-d966-4ea8-89ae-9e4e3be2a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024c4155-93d1-4de3-b13e-52650b1a78c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d0ee0f-7d2b-4eea-8ef4-210cb70bc31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dc6502-daa7-4412-a89f-634c6a12f1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443fcf1b-5578-4991-9545-0821905e47a7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca10de1-98a9-43a7-845a-802f52411081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45954721-ae48-4185-a547-c942508e94eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b901ed-59fd-4cbd-a620-f800903502db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03113e33-6f00-451c-a678-0b1f47bcac13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3372418-1a11-4b88-a142-ba6aaba25913",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73106c8-d255-458c-a359-bf7a13ab53ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e86909-9ef7-44f6-8467-65c08b74f7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be4ebfd-8f3e-498b-a847-e8216ef8e4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b28a515-0402-4368-bf69-258952563846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5507ad09-5cd6-4b63-b56b-a3b63d3bd6c6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00778d74-092d-407d-81de-9a75d5edc347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52568760-1639-438f-aa2c-3d13d99100f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1369d32a-869a-4ed0-85ff-2a6c446ec7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b35fb51-b11d-4aef-8571-1357139df220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb097c1-ec56-415e-a76c-e6992e4da21f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658ef651-b14f-4c16-bd54-c99ffc41699d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951e5905-5a20-48ae-ba03-231a349d7d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f290f9d-761d-4ce5-8694-33f7983c7574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1d5158-cedf-4469-a946-1abece8700ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef87b5e-528a-45c9-a4f7-79b61c2eae79",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d57b265-0a71-4108-a641-41bdd9593773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabd85ac-8c6e-47bf-a195-0e071796264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25fbd16-4dd4-413b-9371-a0f61b6d370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3213b3c-76ad-4f7d-8662-fbd57a00e324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86c58f9-6e9b-40f9-8962-ebdd7e335ecc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5798e1-64fa-4b97-966b-aede51fef2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "821276c3-68da-4c92-9aa6-9528ea9a3703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440bbf82-3d54-47c1-8b7d-b415facbec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "730a18f4-cbbe-4a9f-9792-ad57af3de20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5444725-f018-42fc-afa5-6ee85ff76320",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a2a23c-8ebb-47ea-a6be-a6048575d606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d0b6170-abd6-4203-badc-af12c020bd97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872fbf95-3884-481e-94e2-181d305241fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe427f5e-10eb-4327-a565-37d98ff4a7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fd09e5-e628-4f1e-80f8-af7969f7abfc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a4afa5-52a2-489f-8041-5a41420b8861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de33ff4-2ad1-407e-93fc-8dea6e44ea0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1640fb-13c4-4b32-8c78-d85128b36d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5120310a-34f6-4dae-8c59-662dc8460d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aed479c-32a7-412b-a3a1-5ac6984c2ec4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f14ee40-1424-41ed-9faa-e0d71f7da32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1ce232-32ef-4e8e-b5de-dfbaf07a51d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98553305-d66f-4f08-8337-1076732d0f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "870dd433-0615-40a6-9312-4757215951ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dacc363-1b9f-4d1d-a361-b9bcfbd46a37",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dd858d-ad52-4045-aa54-7736a7c271f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24cae8ab-092d-43cc-bf80-dad97d018bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d66731-b763-40e8-b2b5-bda2dd21c4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e0752b-c4c7-4c3f-9cef-492d2061014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4054be-365e-40e0-bfc0-a97970025b03",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418344fc-e17e-4e3c-8349-e7590b923277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca54a658-814b-4722-bbbd-d62563b8559b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c14b7e-b9ee-44fa-862c-9b2dd9cf8e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f934e34-6c86-481a-bf41-4fc21b1913d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb8cac6-9d54-4841-a026-ab2f09f4390a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81ec8cc-7803-4eb7-a03d-474132d1d440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1386f9-bcc7-4bbf-b7c7-2348cc04e1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de03bf71-b52a-4266-963f-bd18dcb8deb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "258d65ea-5c17-4ddf-af8d-5c461542f78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606a2e55-53ea-4b57-a9ba-eb7c59dd90b6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac33c58-8192-4fee-bdf6-85c0278485fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f979f1e-2784-4c61-a4b7-96e8f57a486c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f37bf70-a95e-4165-867a-231275f719db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c47ceec-ab1a-46f8-9d2d-06c996603283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb13e29-1523-4de6-890d-0fb1d780ba0a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2905330d-a4ed-4461-9934-4b9940d1f318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3babc644-e992-43a3-ab19-ac8cf1e45b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8cd98f-94a7-4980-8164-c29552009655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a12051d-83de-4566-82d3-9909b1149a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4977ca-c93a-4c58-8b19-64c7fdd51637",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826c83b8-3ccd-471a-9f48-f6287330168c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9e49fd-24f6-45dc-babf-40851baf8433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f9f244-3649-42e3-816d-3b81410687ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7420ad-068c-4c8c-8eb4-ead79670a93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4e97e-41ba-4778-971f-053cf080495a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6176f61b-1ba8-422b-aba1-a5470814bd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f3819c-f266-44c2-8fbe-d56ebe179297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3365afee-0d45-4f36-91e0-afaf9ae4dcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99583dae-2a93-4c24-a69a-e9630c097df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de791ab-b5ad-43d5-90b6-9332d0454e70",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66390006-8c4b-4217-984c-16dc8cb50d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ceac59-c96d-4850-beec-c7556f35f3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be47e1b-74af-4e6e-9fa6-3f2f6f9e3a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7671af-7f0b-4ff9-859a-6c3584db7236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec8f260-9a5f-4742-a56e-192fc7862f1f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8729f938-6082-4b02-8b58-dc1067e9dbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7ac93a-82ff-4b30-899c-317611f39453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e2841e-e352-4f44-bc37-7d7376d47e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6c7032-c463-459e-9487-255991ad5e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920809e0-cb93-47d4-b047-6b3c3c98ad94",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b7d6a2-b245-4ee8-8f2a-979505cef5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78697195-b6dd-4b37-9f7d-4c09571789d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca834b-6747-4046-bdbd-510a09474804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abbf2717-080c-49e8-9588-67dcd4a42eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc85ab7-8802-42bd-8e38-c938a219fcaf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18050225-16ab-4a0c-b53b-4aca74c747fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e9871b-a9ef-4b0d-9aee-321cd0bdced8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f629ba-8d3b-4af4-8027-35c19a386367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7baa5c61-26de-4062-8748-c29be27d0101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731a7bd9-9bdf-4d60-8dc4-7aae97d35bcc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5206eda2-dbf2-4c71-a477-09ff0a68a0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149a0926-3fa3-4858-872f-a7dd387afca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5c604d-a4a1-4d60-a108-9159da9b3b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "983b907a-bb2f-4027-a60e-eae53d5cc1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35588561-4332-4d58-bb82-7c43e7749d08",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb31293d-79f0-42fd-846f-21a08139bea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3bb8a5f-4a8d-4387-bdc8-2c96f87cb8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9470215-0ca9-4805-ad97-18000946c51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b9ecac7-ff5d-43ee-ad4e-8e2408eb9dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3078979b-9740-4e1e-89a2-f10ddb773e40",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b04888-2e23-41b0-85ee-31b95edca3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a93a745-57e4-4157-8557-72b4b246fd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6667a1c6-f309-454b-8f77-8eb70c0cfdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8926a3f-24cc-4b37-83ca-e643a958b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d9693c-33b7-4264-a0b4-a4255e9fe288",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c62a4-217d-452c-b67c-5145c2c15703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c5e05e-2e5c-4053-982b-c8a6c1051ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a607c6c-b1eb-4994-82c2-2be2d1d1233d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13402c57-f4df-48c0-b099-7e0fd20fe254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e5f372-4924-480a-9c86-49ddd4b21f72",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "713e540f-56dd-4a2a-be6a-5c628e645feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b11c350-26d4-42a4-9897-5eadbc04f6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c224442-8632-4e0f-a3c3-43002fc5dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "53d6e0bc-535a-4d0a-a4c9-8a5f030603ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c83889-c366-410f-99b2-fce469d5f1e3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9398d94c-1369-441b-9c81-ab0b2fe09b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96cd3b8b-e989-4b6b-91be-2789279f1add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057130e0-d6bf-4607-a463-965187c31835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5350d7b-812c-41d7-beca-5db711a55eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f478f67-5df5-450b-a882-30718fa02e44",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122b6b0e-d700-4b66-9eff-661c6ff8eed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb7bffa-7dcc-406c-bc84-78cb4f94bd85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a320e691-ac59-4785-b603-9eccc04e820a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbc27a0-3e02-4a90-a05d-25dc5eedeae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7c632d-00b0-4431-9ba3-289b000e39e6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989ab208-0bf5-48cd-91c0-40587e9422db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed56b930-077d-4a6a-9127-cf4d61293375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b0941a-7711-4b7f-b1fd-35d152ae8d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f6fb2f-91c8-43ea-972c-e1ea903bc51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2867e7-4cce-488d-82f5-2c66215cac72",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5595635a-9350-4e21-95d3-a571700db5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a2662a7-32ce-456e-9357-82c492eaabc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32b7ef8-8709-4c75-869a-a490443bea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e7b78c-812b-412c-b948-47a35ae38d1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71fa9180-f947-4417-892b-154317d08831",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2462c45-dc99-4195-bf46-569168290bc4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74283afd-cbcd-4dda-8235-d535bd9074da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d85f643b-0ce5-4f1a-afa5-10cf6981c1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1b660a-9bf0-46a0-8d6c-57a360828ca9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09c72c8f-0b49-471b-977b-5afae379e1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2384a15-7aee-4437-a21f-4382caed4b46",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dbd2ab-0049-4acd-b3de-b3a4adcaf634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d1823d2-4c6d-44ea-9169-797e033c81af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be40bb40-8030-48c0-bad9-dac175cf90ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1e6314d-8c42-4012-b984-9b028779d8ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64ebab19-6db2-4991-9aac-53671747bb0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb8bb799-e720-4767-a7bb-699c0f5fa673"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50276401-7fa4-476b-8acb-cca8944e6392",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e9349db-eb6d-472b-85fd-a21098a01ae2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4aff7b1a-0efb-4bff-96bd-34d6f5faa474",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "390fc908-3784-4756-bd04-8a7b9bc929d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cbc754b8-8048-4174-b906-b6073ed33cf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8446f4b0-844f-412c-b202-fef99a3bfc87"
                }
              }
            ]
          },
          {
            "id": "7e544350-5187-480d-b7c0-91ed37e846a1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "60fd958e-8128-465a-9660-67d7b97b90f3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e022f7b1-c90b-4deb-9ff1-34eb3b8d67ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20a8cad7-002e-4688-9f6f-d103e2faf2ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deb1133f-51bd-4e79-aa9b-54d86aac84bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e90f4ba4-5d53-4d16-9fad-1d24fe0478cd"
                    }
                  }
                ]
              },
              {
                "id": "c9f98192-fa99-45c7-9156-447cdb7854ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19737602-4df6-4d50-97ff-cb6fa64196f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "636f29ea-0e3f-49fd-ab5c-6aea3c0b2b68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037fed2b-8693-4435-878d-658e9bf6da79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90ab7e17-7113-4c26-940d-3c0233132a71"
                    }
                  }
                ]
              },
              {
                "id": "6ed275d6-48d1-43ec-a9c4-4a1420f977b2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10dbdf99-87b0-4a34-9945-c4af17307d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "042d01eb-c98c-447f-b1cb-c80c3f7ec682"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c39cef6e-765b-42a1-a27c-980b0b7b6bdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ecfb5af9-2ac6-42df-91a0-2b0ef9bfc444"
                    }
                  }
                ]
              },
              {
                "id": "f4a60da9-8676-40ac-be11-7125936a34c8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a3ff13e-94e6-4a7a-8177-56f7eb56d68c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "73ce0cf6-7568-4e6b-87d0-d6b8d21db732"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ddfa631-9c27-4268-9843-5cc3fc1d0c21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "372ee251-9715-4926-9c5b-770845ed7e25"
                    }
                  }
                ]
              },
              {
                "id": "4793568a-72c8-46f4-9ed0-2da3947eb9f1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6e64c5b-9ce1-4423-8969-90d10d3d73cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67dd9eb5-4c3e-4c6b-86d2-c44616ab56e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "804eb917-bbd9-4b07-827b-b8dce67f0be8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cfc00a93-5bde-474f-810e-2c24c07261ef"
                    }
                  }
                ]
              },
              {
                "id": "da768082-812b-4401-9203-a73081a439f4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0bba486-0c80-4b0b-9a75-2b7152d081a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e774a45f-fe8c-46f4-97a8-d0fe7dc32a94"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9d7fdb1-d935-434e-9a17-23cd126debad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f37391b2-804f-466c-9401-671383bf9bf8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9997dfd-64de-432e-82c6-d2290627b5a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a104ae57-1262-48be-8ef9-bdcc89535e1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ede1a8f-7993-4184-acd3-a4b197a7ee49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "342dca42-aed5-4050-abf4-b48dde5fccaa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd739eba-7188-4c1d-922d-dcd66b95fdaa",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5e8b58d0-b300-4804-b419-703b7f5f7bc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fc5281d-b05e-4679-992e-6337c831e629",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f640595-330c-4b94-b5eb-2d8ac5b849e8"
            }
          }
        ]
      },
      {
        "id": "624a9ba0-faae-4aef-9547-1fc202ece405",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6ac200fa-eca9-4913-bee4-4f27564e05dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7374c275-adf5-4700-b60f-9a1855bcdcfa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0fa7b783-bdf1-47ba-87f1-b352838f6fcb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeda32c-2bd4-48de-9ecd-1dd53c9795d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381563a2-61b7-4a13-8168-e4f5836f18f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93064f73-04aa-4440-9d4c-7fcd1eb19afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "addccebc-1c0d-4a6f-85ce-f71fb7c6aa52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a015bc90-d34f-429b-a5ea-cfe2fe3f4aa3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bc6f34-179c-433f-8b6c-8e51e4346fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "225d9f7e-5d6c-44a0-827f-cfbd6735ea92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dec6c4-ea16-4625-9609-39ce94df090e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "04471d15-c1d9-4f20-8b14-45443cde6d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9236e18-3216-4cb5-a83d-e7b34c8a19a8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026d243c-6aaa-46e4-83bf-99ad655b3638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8a342c-5581-46c6-a80f-4bfd6aabd39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae625cb7-63c9-4736-ab9e-9fd62d1ab295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7780707f-1c95-4507-a9f7-4e52b4bca202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf435e-78fd-4cd0-9da6-59cc740d407c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88820a0c-ee52-4ce4-b71c-6eb67de67a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eb73f2-eab2-4441-933e-4b8bb5223418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e43816-e488-47a6-ad03-d2b25a7995e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c23edfc-e7cc-4c0e-91d6-29d6ec204d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56a354f-de2a-4b0d-8447-a660099ee290",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1afc5b-840a-4e1c-aee7-7cac6b831103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ec298f-8794-4541-94de-ef9ca6774fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55f1a27-7936-45cc-99a3-026f4a2dcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18610200-684f-4a23-b9cf-99cf86b91c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6658fa48-4133-48dd-9a79-74929fcf259b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8227629e-f1ce-49e0-836c-38d6703b75bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2727d6-84bb-48ee-b773-ebdaf234d31d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1039c947-f8d7-49d4-8262-5b116a6cf2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4744b71-a151-4d01-b20b-3c41fdfe1c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1721aec-79b6-4536-b775-7c78abb4545e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057865c9-09c1-4600-88b7-b449a9a95049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d881bc31-95d9-4436-84da-f67186ab9ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd71cd0-3d78-4707-8383-8eaf6da5262b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "05530314-7916-4c65-a8df-d97819d8c99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5681a48-c0ec-4ef1-a6ca-534b1e050147",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b304fda9-2041-428c-866d-4102d2980e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b848fbf-52e3-4331-97a9-81a1bc2feae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82b6e37-5cfc-43d9-a83e-e6a0e9436e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "80fc80b9-55e2-4b3f-874d-1c5d9cd4e21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee1652f-1cb7-43c9-8145-bcb69efcf4e5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf3a48d-2d56-4bf8-965c-3c711f221f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f898a4-edb4-4bd8-b149-d1c7e4c8a13e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ac6a02-93d4-432d-af08-42215c0ad7ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2aea1d91-1af8-40b6-9bbb-b8d635d52794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a1e025-5ad1-4621-8724-692eb6ca2898",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a55e530-bd25-4feb-9ed3-1589aa215400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec02e6c4-ffc6-451e-a2b5-11591839c41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6199e0-e52a-4569-a095-54c8cb9241f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1079595c-8abc-4f5b-9c08-cbfd6ad720aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec737c0-ae31-49c1-a76c-65133f222ae2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06af6221-554d-4314-a1df-13316d3a21f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b490ac-5194-406b-9c2a-301b1eeb20cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2fc8b8-51c6-4d44-b0ac-4781d1885758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "19700597-5a6b-4cf2-a2bc-7f1587b334e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8bc09c-4eca-43ab-bf6f-abbbbfba018a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c5b092-f8f9-4777-aac2-1b10c3ef1e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac83a271-3489-44fb-a26d-faa9d3ce6cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fb1009-20d4-4aa3-8e71-591ac1412303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04e68355-c423-4031-8af4-a64e053ad7f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce1e3ee-bd90-46ce-ac80-66bc6f825f9f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd89f91-083e-4c3e-8591-097d1c32dcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5286dda4-151f-4d32-b2ec-f48e1f61b3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3497ace-1e14-4967-b217-e845824fe337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbc77a6-2272-4d3f-9337-d9579cbb70bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e979a6a-bd97-4580-8bff-56a0eaaea413",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "858d0bee-afd9-4cd9-aea8-3f041a46e35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c19931-ee24-433b-9909-8f4e29daa7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62b8abb-cecc-405e-8a24-b24d927003e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5823599d-ff37-4b69-b517-89e156e83ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454a4576-409a-4373-baba-6e026ea514ab",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6a5d9a-3afd-48ed-a150-5a01f25c3842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6753e336-3f00-4ebf-942a-df768ee02588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00808f7a-409d-4ad0-9296-08ed366d4e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "83c301f8-05cb-49f0-b8a1-5e0aadef138f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c8c8ab-f7cd-4598-8ab5-aa5f6c6a8d28",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967777ae-b7f3-491a-80a7-bfe1921a00d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac82906a-7e95-44ef-a714-a15a65cb7054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0c14ea-65e0-4ead-b000-7a4013484e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bc912e3-6e46-45ab-9971-b6054f7c637d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f18f057-8aa1-47ee-bf86-6088e22e809b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00dc1a4-6954-41f5-bac5-8af93cfb8dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7785ea66-7fcb-4b1f-a2b0-a88213aa1fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de456e7-e49b-4188-8a1c-03ae5ee2a827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "672a23f3-857e-49bc-9efc-eeec348e5ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac56af1-6b03-4c30-a001-fd672f6cc338",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11fc0a39-c7ea-4b2a-8185-00be6ad7be4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0a6f2d-757c-4267-82d8-1dfd96a8d61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814bf324-1eb3-45e4-b932-201f3c9dd844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f5678c9-0034-4048-b743-2ffb4efafc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99887b08-5c83-40bb-ad17-13c58ddadc09",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f99f1e-e616-49e0-9c12-b078470d4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd82bf8-f52e-441f-9df4-1df6baff4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cac77f2-be18-4a31-96d7-35615befa675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4de416-56b7-4e27-b972-57b3ba1d2ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02973910-442a-448e-8196-950706245898",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f9cd0b-4f2b-4e76-9fc6-5b2a643fddd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd73791-693b-456b-99d5-07337b4d5fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992c1fd5-5eaa-449d-ab74-b05e37d3a88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6c3567-a758-47b8-beb1-5eb33d9520fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdfbd4f-50b9-4b96-8a1e-4d69dd3e3de4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d8147f-70de-4f5f-b0b7-ccaa2643250a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0b70bb-2dd7-4c20-afd2-7a311e951bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208715bf-f63e-458a-8fb3-b2ae8c5274b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c0bf601-c8d0-4263-b97f-4d511c156b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec1b6c3-d909-4399-8348-c79deabc2ab1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ad17a3-5711-41fa-a8c5-e4b29ec9e369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea88f36-1999-460e-8788-1ac45a1c1fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa765fa2-5e5e-4f16-b602-00f6d143cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfcadd3-90cb-4331-bd09-e84772f3fab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cfba7b-697e-4910-9603-0b09515719ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22aaf439-bf5d-4644-8986-10b1f4dfc699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af037909-4fdf-4170-8721-770c41314a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fcf9b-4903-4dc6-aa64-04d83250148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0654749d-6821-4762-a382-cde727493130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adc9e97-d83c-4e50-9a96-bda2bd0c4569",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1fa178-8bfc-42de-8794-9ee0409ce681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f63b633-8e40-4073-9e98-264adba3652d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b686cbb3-44d7-41db-8f59-4159a44b4030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b5917e-345d-4709-ac47-8ce6b8de15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27400f55-b058-49b6-a7f9-6739150c8cc4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81873f26-7c8e-48d1-8a21-327ae7ecc088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc8beef-e99a-4b20-ad32-1dd8a920e7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a634d9-9fbc-4f5b-a420-af3c7f16d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aabdaed-5f94-4bf2-9881-74726c4e510b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71863ec-3a23-4f54-ad83-a2c014b72e72",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d5c948-9678-4ee3-a021-f38f6e5a8733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f2261a-83f7-4d6e-9b47-d56037fab7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0cc02f-ae6d-4ef9-b334-b25995ed7e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9acc250c-b0e0-4a3a-a8d6-7bad50ba0327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d830a3-0e42-4b20-9eb2-0c269cbe45fe",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3ca47f-f4b7-4323-a6f6-a2696ad9e0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9885be8-1935-487c-8263-31765a4402db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39f9d84-076b-4b64-9e97-c19efb40fc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1991a50-803d-42cc-8546-b43c194bbaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d210e537-c8cb-41cf-b734-82bf10c42c72",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9188a686-f83e-4fdb-8561-47d1c3639f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a387f59e-0e6a-4675-a584-53ee9ac0190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6305e9a-96ff-47d1-8a03-680b6d07abcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9b98da-a420-4798-8605-a10bb480e5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e0cfaf-3397-4f47-b172-33872357840a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b109ade8-0c13-4706-a6f2-992d09273bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5f4855-f2df-4d02-8093-09ddfd368a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b53f51c-a9d7-44a6-83e0-498835f3b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f29e149e-b378-4a11-99ab-2f12c130ce7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b97558b-a601-41dc-b069-1fbcabc326ef",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fb897a-dee0-4499-a5c0-d572274df734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4436f7f2-41af-4142-b3f2-40a51264696c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb515d8-2efa-4be0-81e9-0795a31b51a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd2de27-9958-44f3-b6ef-50aaf2e5b5f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d5cd4b-342c-4c6f-a341-10acf4bae06d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2335161c-8710-40b0-8b63-d8b56808f207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9986461-60d4-43fd-bd09-e82d13531bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2d58b-ed44-490d-90e2-c81b6350b02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f338b51-38cb-4eaf-ac14-ccdf3a2487b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a7a611-11aa-4552-9d46-ac4908d09c02",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f990791f-5217-484c-9211-5fce3d47dcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991762bc-3da8-4e02-ad0a-5babb37b7427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48f78f9-98bf-4610-a063-2d2066e4460c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "775ef204-d87b-4798-9376-8143c2dca0f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e1dbed52-6634-4cf2-be76-1b08780c66cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0bc6a27-4038-4f92-9cf1-440c9a375406",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421e180b-6576-4056-be4b-a3a04247b886",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "90f38c69-e756-4664-92fd-d118fd3ff060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db81487-45da-496e-9443-60373006695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50cbbc09-9f6f-4add-b4d4-1b263262f447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414e958d-f69d-46c7-8db5-3b278e467740",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c809b2-28b4-4a27-9b64-f57f0ce7cd8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "44781cd0-5c07-487e-ae3e-4af204f7cc1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d030873-620a-4825-801d-46a00453e36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "152c9aa3-904f-416e-a652-e09798252e7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ae9a82-c7b2-4ab5-a620-8525fc6be55f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "084a2093-afca-4c17-9d0d-caa30817fce8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "004a21eb-17bb-4b35-a6d5-a1b0217768ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8ea77b3-1381-4c36-bcbe-dc8312e2f5b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c8c458d-9a04-4ed2-97b6-5d2abdfa7d9d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5cbd80e-1bfc-4321-aa6e-15c9f4caa03c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67a54297-41b5-44c2-8241-9dd1e8a2af8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c445dd8-6342-420f-92ed-b1ba5fbd4b40"
            }
          }
        ]
      },
      {
        "id": "1686345f-dd04-4b65-8da2-9a47be7e1445",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2bca0f1f-bb2d-4126-8a74-5e9506ff4a81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bec527f7-f319-4141-8144-eeb061f455eb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2c83db06-6f47-483b-84e6-f7f573af77fe",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7188ee9-3425-4179-9d42-6077cc72faab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cafc2df-8e3c-4e2f-b54f-8480e7527373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dd744c-200f-4c1d-addb-1cb6d8d615aa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de862aee-c60c-4822-a3dc-a3c98fabbcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9807a650-a055-44e4-8d0c-8ba81d4a6342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "322aab57-2f70-4cac-a853-af2bdf795aa5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3267857-f6d7-49e3-a3ca-3cb37459410d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe3a463-f6ff-427a-9db0-12f101a16e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78391361-3fd8-44ad-ab66-c6734a8a1e87",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9a9469-ebcd-4eb3-9f28-ef43c5e78fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3abdb9-f485-4929-b3c0-3d1b37fae534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45936f8a-e401-4f05-b778-b9030f31dc7c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa34faf-c474-4a82-ac34-441fc540cab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c753ac8b-b02e-4643-b41f-2c494b2a0eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb2bb2a-dafe-4d88-8a7c-7a513b3f389e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85288fb8-bd32-4103-b4d3-8ea86c967b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d538cba4-ddad-4f5e-8d9d-a63466fa0d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed412bd-e8ac-40f0-afbf-ef1e6b59132d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3f803c-4f9f-41a1-85b1-a0614692050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4bf8579-851c-4607-a1e3-0cd6c2351471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a040da7-4184-40e7-979c-94002557fec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab96e13-7d7a-4f85-8309-3f52d62c203d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbeff9e-a827-461a-9be0-aad96e2c1388",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27b6f5d-814b-404c-bbc5-d685017a576e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a6b302-e1af-4922-8b98-ae415885c805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6564d7-3023-4695-9674-a8d5829fdf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0721e48f-3279-4e71-a514-d7a1c9c1d7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4321be0d-2b3b-42ce-bfa7-a464c41d13f2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6585aaf-ec8b-4ce4-9bd0-c2408d6c2e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3059db2c-eeeb-47e5-989b-e8ad895a93df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef4db68-fd87-48f2-8469-5628eec87243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c1d439-f3f6-40a0-9c62-d2ad89030a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65d2134-bdc0-4725-817c-69fefc351488",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3432ffbe-4884-4537-96ed-a72c96b5c24e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85fc1924-00f0-45a1-8e9c-84c2f497216b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3888e2-a26e-46ad-847c-b18119ce3ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3775f4d0-9901-404f-99b2-66c4b7462322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd49c0c8-23ec-4b7d-85de-31aa1b34f3c7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50854738-2b50-4b53-812e-5eafa55b9a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7551929-4813-43d9-a056-09e463360e63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd9b5b1-416d-4eef-b111-e175c47d4dcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2303ec0b-54bb-40bc-8973-028e81826ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba11b00-9c38-4800-8014-8cac8953cf06",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423d8e8b-1ae5-4af7-9ea5-a13e66570605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06864bcf-8a34-477c-b29d-5e2349d8244c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522b48d6-c394-4032-b6cd-e4fc94689885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4f7913-6765-4fa7-9c33-ef995d72dff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa43e2d-b69b-446f-9975-35aff91285d3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ad537d-941f-4dc5-b904-287df88d88cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12de0140-b3cb-4360-8ce5-1f0b0876fd0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff8772-c14a-4dad-bf06-3d4140225bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bdb3100-7500-4e69-8098-3b1ef3cfb024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f707e1f-4fa6-4b4f-92d4-7deaecf8950a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294c7d00-6f63-43b2-bdc7-ea2dac3754d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d148d48-dd19-49bf-a49a-5535a90e6433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f9126d-f2e9-41f5-8c75-1d73a6ae9a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38960602-b391-43e8-b2f3-56076043cc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ee73a0-533b-4f99-84f9-a4e02c7f2460",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f063e005-4a07-4255-925f-8e4e620a282c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98ff479f-1730-47ea-9076-7ddda86c4919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1458ca8a-0044-4121-ae4c-5bbb0bfd9a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675df537-8518-4ec5-8c61-323330a93610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3865854b-0695-4af3-9e75-00365e9d3aea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1892d96b-1cd7-4bf2-88fe-3d209bc0b3e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fd424e-4a9a-4928-bff8-7147de3fe086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42b1384-d649-4a28-ab27-0f870c66aa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad099650-7578-4bea-a4e5-df46915ea3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbc4b9a-cf3e-4dd6-aa9a-ddf5b2fc6ed8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06dd12a0-8830-4259-96c8-562b59a607f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b695814-9cd0-46ba-8401-556035b04f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8b6371-72be-4f4e-b8f7-d665618ca7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cba0b41-0f09-4084-9fa0-7e3d1ab57b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ba5269-eb6d-4437-a032-b3d11dd66f6c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b2d95a-4ae3-4885-bdc2-146f6a013b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0cad0f-273d-4496-a1c5-e41a994ac3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3edf85-9d18-4b4d-bfab-420f135393f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9fbdda-7e83-43f8-b397-39c673d14e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a847812-4976-4450-9866-92fecf1f675e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a70ba6-bf68-4a77-9042-b88078092051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f7b6a2-7d13-4fae-a9d2-87b758624d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f01b90a-2628-4390-b6d4-493b9900436e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddaaa20-c152-4b57-aca2-6a3b499b5a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e7f2c2-4a66-4690-be04-41016ed41ffb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc55034d-36b9-461e-b341-52a4b65eedbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1ec18e-06fe-4721-8d4f-b9b097e18043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eed7c8f-af39-4d12-83e3-6b6526eb378b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91d878c-1b14-4964-837d-4cb7f89d9269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cbc723-80b2-4924-8c98-b05d71ccdabe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b4ec32-aad1-4b1c-92d1-60d3e21a1481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c340b1ee-1adb-4d1c-b5e2-c820cbdfd0b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f046e0c9-d690-4fb0-90a4-fc95729b1928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aeec81e-0227-493e-887d-e82d441e4231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cf66ae-d1b7-432b-b616-f6cb56e40774",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa525cc-79cf-460b-acf2-5ce4b8cb6753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9886452-5b84-4763-87c5-89f8606e2bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b033b24-c508-4141-8281-31aaf5328fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137753ba-22ec-4e54-b70f-affbe6cf3197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7ccf61-9b4f-4e19-bca9-2e87a8a5affa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f51360-e7b3-4330-98aa-11eb2eeee2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c01987-d47b-457d-8bfb-b824343e553d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae9b414-fbe0-4bb8-ae43-fd4ca8bc8b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1cabcb4-f2ac-4a00-9f52-5c80b6c694eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2692172c-a99c-4a1a-905f-8372534d2910",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e45d3e-9c0c-418d-8e1d-d409cae5aadf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a331a2b-98a7-4b44-8781-fcec43945a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de495f12-ddd8-456d-90c4-9383c6ea94a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "801e71da-4b3f-4d79-9df8-da5f91f10a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a7a96-b65b-4a86-b2d7-c724d7ae683d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605d2028-7e85-421e-b92f-219ead5042ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2af01557-eb16-413d-b32e-eec871a4a8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514b168e-3517-4375-93c1-97ee1a767794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6e9a54-b63e-4181-bfc2-24ea3c5a4775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f63960-2caf-4816-848e-d4ae2206e807",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c034cf51-8a52-400b-9601-81392d99a614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4bf99de-af2a-4b4c-8f2f-ab172caa1cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd494da9-1c6d-458e-9ec3-f5e64b2c2b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5a532e-ba2c-494d-946f-70efcaf27692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4058412e-e5c6-4da1-848d-4719637f4754",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef043f00-855e-4de8-b156-ee08a1d65c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3877a1cf-5160-4bea-815b-f928413c7e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77519d9b-2d6c-4e8c-a844-22f580c9da6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc30cab7-3375-43d5-b179-0924a50975bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3bd183-55f7-42b8-8300-2cedc49d2ac8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d2749d-4fa7-450a-beda-21fab9e59c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a190fb80-55ae-4b2d-a0a2-8360b6f23393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e335d71-d706-444b-8731-eacdff4a1a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54425680-a458-4c3d-9417-777533c931e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8faa933e-bd47-47ce-834d-1d94ca4e0c7b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf403ba-cd40-43f6-96f9-93bcd37ae19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4034a839-bc7f-4377-bf55-0a210e977d1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e4d228-f490-4743-a400-3f09200c8007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf58c53-f8e0-4dfb-93a0-59ec995540e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a662c2a2-f773-49a7-88a3-bf0bb4c0670c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab0e18d-b23b-4d4f-9130-1cb204b6dab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc573638-0127-4d94-a00a-c8afb6797eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e77406-cf26-4cf3-a7c7-318b04ad443b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38afca1c-dd9a-45d3-9888-0b78b8e559b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256b3d61-2ee4-435c-9b81-bd2bb3a5e7c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc30381-0103-4f69-b7c5-e13a76cf59e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7827760-a9a0-47ef-a762-e5a722b569d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1fa15bf-d55d-40ab-b995-76c65c273a70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21db47f0-a4ac-4a00-a24d-40f2b759fbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d0a43e-ef33-4502-ad4a-87fbf65b527e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171f3fa9-2f97-4643-a2d3-df42cdc36a6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67492c8f-e3cc-4c12-b387-a2bbfbeaa5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37af459e-04d9-42eb-a1f6-61db4f268947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e0dfab-7c7c-476d-8960-b66ae54599c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01306fa6-c60f-4b20-93de-1a35648617bb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a230cf2-b45b-486e-8ff2-fd53bc20bef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3052f157-a75c-4eea-833d-92ffd49dc8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba282e3-eba1-4a11-8430-b3f7f05d2ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92a7b74-0003-4a6c-a754-300f26040023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d2b729-6bd4-4669-ac8d-9fa48367a804",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bb97f9-536a-4c67-a165-523950f0231a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ccef405-3a62-4c50-9ea0-12ce242c304f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fac4e6-f930-4f55-9256-df404ecd6fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0a4669-564c-45a0-9278-12762b5d9849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536c7ccb-4961-4507-89d3-83c6154f5022",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1304e8dc-de1d-4289-b6db-c6dba870569d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d8750d-85ae-43c4-98f0-60f41a30e63a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aa3587-6af3-4222-93f8-4c0bdd4a822a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7611c1-0128-4a4a-9713-7ab98b8dd584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7299d7-ec75-4842-8973-6dce0cc294ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac383e4-e740-4846-8975-3059b9628a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cda08f-fa72-453b-8dcb-ec00b29948c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c567f4c6-8e72-4c5c-8edf-3ac9c8add028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ec648d-ef0c-4384-af9a-03ae75f11985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3879426c-02e1-4a5a-80c6-588659411621",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0539c4-3690-4c3d-a20a-3ac6e3801b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0337d5cd-4579-4867-a421-afad4967b2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ead74e-863c-4df7-82c5-dcb48104c802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2fbeb3-64bf-4898-841d-e594583c08f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88f653a-6e20-4c8e-b4cc-61899f187a60",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfad59d-72fd-40e6-81e0-d61d82d25ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bfde4b-3506-4243-b386-dec7904e5061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5573bc62-f9e3-4f97-aaed-4cbbc2c31e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c47fb0-4faf-4a9e-a2ce-0575b9f75580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a649a7-855a-4da1-b0b1-495337f1397c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98413e3f-1b4e-43de-ab81-eb53a89020ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa661b8a-9626-4c75-8e8d-bc5d2560e7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf6e556-40f3-45f2-9688-162644c81af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d881e9-5d8b-4f12-a5f0-ff2a7cda8330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc56b709-93f4-497c-8b03-e5ffaf1a160e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2774d1b8-abbc-4052-a4a3-600e3e2b9747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2109cccd-ad53-43b8-9467-79d2e8e0a825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cda478f-75a2-4567-95e7-28feda1c06f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1662881e-2b19-4ba3-add6-b19c72eb9f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d956cf55-4aaa-475a-bb63-1c0d4f0cc0b3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb61651-63a6-422e-a417-3c4b051aaeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3341ef02-1bc9-492f-a3d5-fb31077e02c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0aa228-74a4-43e9-b843-ccba82a2c3c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159d0017-0e41-4376-aefd-143295318a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35d09a7-a3f6-4ba1-9d2b-d82cc1193267",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd996c6-3659-4d03-8593-938de71d7399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eed6ed7-185d-4a22-8bcf-bb7f3b6f1cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e3c75a-e2dc-4d1b-8f14-001586cdac17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c4b8c0-e069-47af-a828-ea4133fcfd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca80172d-1bda-4113-aba7-ab6a7b2bd1aa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e32cba-5575-45fd-bf10-39a603cdcd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f40f1bb-088d-4d10-88e8-185a84d12094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3cb8d4-ae5a-48ff-959e-1555ce601f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7295be18-83ae-44c5-94e7-65c2c9b48b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504f99b6-9e68-4186-b258-292cc5132ba5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c7f82a-c5f2-44c2-89d2-3f0cc55e606b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94875e77-053f-4823-a559-c37d9bd839de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221ddbfb-00af-41da-a8c4-2e0679d581ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2ace24-5c0e-46da-8de7-ca746f4e270e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0596bf-4d6b-4619-9967-56a303bfc845",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f987454-1299-4962-8bc2-1d12d6809784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dcd0fc-d124-4dc3-8e96-46368f030070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb0f002-ce64-4216-bf99-3ae057cda417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbf184c-0302-4c87-86c8-3dd4c25cc5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9007b39d-ef2e-497a-a8c3-7e405675b592",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d2fa7e-822f-4430-b48a-4ee825848c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93bbe50-25b6-4139-be5d-2fe73ac42250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c93f6b0-3704-4284-bef4-730d68549c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09aa4df4-e77e-4d69-b200-f5845149369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f156e9-0b55-4e31-bccf-71cff4777512",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b118fa-8e97-4789-95ef-63b85ba98e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee6a507-92e9-4104-9eca-33d43a14ef80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31271ba3-8921-4d7f-b5b6-39885066fb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d91a34-33d5-488f-847b-5761d30811f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fac529-1b2e-47d5-af3a-a8999bf17a5b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de39746-8da0-47ea-8bfd-590946624757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cc2fdd-63e2-4c14-9b9e-248d2987bac2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ec196a-e423-4741-bbd9-6cb6450131ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415448b1-feea-4c6f-91f6-cd5a01844afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc643d0f-47b8-4e87-84ca-e54593ee6853",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a9ea86-4ba3-4f57-9bd6-336c58a4e1b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871da17c-b263-4fbf-9804-0ed67aa187d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "465001eb-9462-4360-a103-300622deeede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ecd40e-9661-4bb1-be46-74076fc2779e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc74034-d2c8-42b4-8ce9-bb0b4eab2854",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9936e7d7-302a-4db0-9d48-67efaaad304b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b364306e-cde2-4c4a-b71c-bd51d3c46ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2939fc-753d-40e9-8458-2b6bba0012b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09af25e1-3023-40b5-80ac-2091f2f7db99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bc731f-8229-4a44-907b-d330d463d05e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30837563-1759-4ea1-bde5-2f15612d2952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b3299d-baae-4e77-9ea3-bda4c7f3485b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfe6588-b7cd-4b54-b4b4-0f71a2295ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507447cf-5093-4a0b-9ed1-6b073fc70290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e370d188-6b3c-42e1-a6e1-283aba59b011",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc1af9-2806-4747-a8e3-83aa1890b14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46387313-8c91-42f6-bef6-0096a91e4678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "528a3940-e08c-49de-b8a6-d844c08eb7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cac8ce0-5aed-42ca-84b3-fe56a184bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d119a1d-c957-46fe-8728-c567547db591",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733a9eef-1ebd-4af5-be09-314ddf7a167c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a90be631-2118-4c8a-b173-530aa013ed25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280b6b75-8620-4abe-b0c2-76057605c81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9945e7a3-079d-4f35-9fa1-57ffcc1c6656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9400ac7-3133-42ea-9153-0bf0ec51c6d0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8baa4fd-11a3-481c-824f-52fe6e44f579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9353b4ee-1e3f-4984-8d9c-4735a6b137b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "187fe674-34c9-4410-a569-7648fce30e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a75bed6-9cb2-4b87-8e5d-221de630765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff33152c-41f7-48c8-9712-df2089706c1a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04d542d-0eb8-4757-8fb0-45f1b5f52076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fc9d94-e6a7-4afd-9033-63cb2ed3fe87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97911a7-bb18-4ce0-9931-feb0b075c080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76b7b5d-fb94-4ef4-81b8-b9a8313d9a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6e175b-dc85-4fba-876a-71cf1f1a8d83",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83da356-67f5-49e4-a3d4-e11c0feb9911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe5cff2-ec0e-44d3-86ed-4d6c3338afd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9e473b-0f0d-4fe1-bfc9-ddef27119f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628e0d03-f103-4bec-8eee-60df68a0c188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff71af5-7279-4447-ab1b-7a4cf884ef8d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514fec4a-6168-41e8-8aca-ec311494a7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e900253-0256-4b0b-b92c-6270f3302fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0758fe2-f0c8-441f-9ffa-b0d94fa4ac29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839d8974-4795-40ed-9107-cebf0144ad61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8a1e2c-04f8-499d-a3ea-006d9faec420",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567ad6f8-e981-46b8-8834-a731ee7d3c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76737489-aa2e-4e45-a556-bb595766d3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18988f3-1e16-4e36-b0b2-bb686733b5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "493f27f2-b950-4294-938e-3b2437b4aff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85ec211-2c34-4751-be50-29f86f3e35db",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff4cfcb-11f6-4cb7-ac4d-e877d74ca428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc342a2-3203-463c-9eee-447cad52592a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7289adc2-4f7f-4c05-a86a-0546fcc96bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5c8eb1-1f27-481a-8634-532418f8c8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d786bf8-ed99-41dd-bdde-4082b7ae079c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a6775b-67ab-478a-80cc-027255c34a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e94b38-e745-400d-8d4e-f1b553786491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2601e1-edc6-4590-94be-a02c6ef727f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f81c91-8c93-4e90-8aa5-c2bb9b3b0814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f976a612-aa4a-4ce4-9983-cfa19446fbc6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3062b8-bc62-4d80-8169-8721c433d146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e97ec8d-e34c-4a67-8886-90bb4bdb2379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e77075f-862c-4a58-b8f1-d37189c749fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9094e40-6351-4e16-bfe8-d48fe516910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24486bab-d1fe-4bc3-92ad-38cd23d382a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4bf050-f5b4-4806-83cd-cb7fa29ff2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f784df36-f644-4db6-a032-bbcd067ad5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f0089-90dc-4980-bcfe-02cfe8ff528f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd54e7a9-dcce-4ac7-bddf-740c54d8ad1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec3ba62-0eba-48b6-8732-3efb5fd84bda",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c7cfa4-ca82-4e78-97e3-03e175b27a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a5911d-f868-45b1-8896-b4956dc71238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5850b809-bf11-44f6-8289-26c47e1ee575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad8dc3a-dd95-4e86-bfc4-c91961d02ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131c754a-cbda-4881-be17-7dc551e823ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67ac456-ae36-4c24-b6cc-0306e6277821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718b25cb-f812-434a-a625-db4766f9d28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f765d4-a0aa-434e-ba71-6f82624a82ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e66e345-bb19-49de-a1a7-a1528dd6ec6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3b7aea-93a2-4336-847a-881aaad62134",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc58a560-d145-4c39-b685-17eb771764e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bd1ab1c-08bb-4f69-8d9d-2822d38aa5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d18cc3a-1963-488e-b891-63fa03b04fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53fc0be-0395-4680-a328-35be0f40cc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb45d4-5f95-4100-ade5-98d35ba84bb7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683854a1-bc84-4ff0-9b9c-4db2bb91f060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ff7c12b-b41a-42fa-a746-2d579c8354f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa7c509-1aa8-4253-a548-377f36e97324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165b0cb4-e448-4e10-a6fd-0f2fb1e9e9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8484499-243b-4844-924c-10610d868245",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "181dc0e0-8d79-48d5-a1c0-2edbab6aa032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a8ae0fa-0a79-455f-8d84-94ec1caf3d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd6c458-1d34-472c-b980-9ad301300e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b20fa1a-0382-4df2-9b0d-1ca05d77cb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d790292-a02a-47c3-9ecb-50356d73cdc8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bffadc-0fc6-48ed-901f-557de08735a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4531cc0b-3bca-4318-be11-a8dd648793c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678902b7-0c5c-4b22-b38b-94a9f2bb355f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b069ba02-ddc6-4322-bf04-ac4716bf77e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e34309-b8dd-473b-87e5-ccc925af4de6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0170047b-5136-454b-aea6-e79e11e4bfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50987c3-2530-4aee-8e87-1fede3fc65e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff1f097-390d-4558-ace4-2b112c3bfde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17681f66-2ecc-4874-acc0-712a187b8d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7423f2f2-23a0-46af-bdb9-41a9030cfb3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ba091e-2c12-4c45-ae26-10a533647403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a619f5ca-cdab-4e41-8267-c8812df51252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f10536a-02f1-4d8c-9894-c5843a04e3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f56162-c6a9-40f8-b769-43f35e1040de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f19787a-db87-434a-acf8-0c8bb4cd4e9b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a6280c-9742-4da9-b3c2-a4b4ceec4920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b27909-7c44-4aad-abc5-c28728d920bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2132fa-ddb6-41b2-8bb4-ab890c8f5bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32d7200-e636-48fb-9b3c-39e038356df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5ce04a-d481-4978-a2f6-ce1bf58e3b93",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d2436c-0bf9-4b4f-a590-6dd3675297dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7fa49a4-6e85-43ab-a9af-d538477cf974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efa9115-a5de-48ea-a3e0-18bc56b96955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a57d2d4-3321-4655-827a-be9538787523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaa6869-2efa-4678-86a9-8b47e546c287",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa07bb7c-c353-4612-a75b-367ea8ac277f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa9051c5-e1bb-4ba2-81a4-8e123987f149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4098c810-b882-4871-9e12-11ae2a7744bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73363c45-d7bc-4cbc-977d-d96274cf634b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ee076d-e3ab-470f-b6c1-2819b2e42376",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ee48bf-f7ed-410e-bceb-d04259afdbd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d5c840-0e4a-4a07-b116-72c0b168c79b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5790d2-9154-4e44-b57f-6f41b30d0a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637f2b6a-58a8-415f-adf8-8f95750ecb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a5cbf4-2a15-4e7f-95fd-1056893a8c6e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2496f49-ae5e-4eeb-8681-f5520ba33861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3be0cb2-6b13-49be-af8c-6f0923e7c5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c8ee9a-27c6-4a67-8340-056893997341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60683daa-b59c-4495-ab10-f04df2a196c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e43411-3349-4653-a968-f16a1e7a4036",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271b6f26-04e5-4ecd-b383-7103ac649518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c84e075-14b3-4964-82c2-ae85c13ac60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e250d08-3f1e-488f-aa69-3bd2b56bf3a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2881728-fb94-406c-abf6-60395cf7790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8017e237-8ac5-414e-92d1-f03d460f0d4f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f611e2c-47de-4db2-a3f9-15711f456420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3932b467-401c-4b9b-9a8c-e71188554ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94ab4ba-fc87-499a-bc1a-0a57fe195c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f094928-a5a0-4439-822e-0f74810d8b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa2bd47-5fd0-4f67-8fb3-703aa0bdb477",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2012f64-3a25-49ae-82df-46363b4a1ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08675b2a-0c11-4311-8867-f66dd8346e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc8ea90-5522-4901-92f6-5d438178cf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8f5b42-7456-4a44-999f-6dd8f51a9667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b1a7ca-9e0c-439e-a50b-6d94bb9680a7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5fe891-6e27-4e71-a849-c3f298b045ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d501acc-e787-4bd9-9f46-fc41887f552f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4809f4-01fd-4e28-b14b-98116cfc168f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c9735c-e061-4fec-8a52-9c8b7f5acaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579af1fd-87d2-40a6-8769-0148278c2214",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5818357c-411c-455b-9483-43658f2f6a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12d20173-0848-4ef5-9f9f-44e153d50d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e079aa-8aa0-4df2-8784-250c7b3611ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f8fa0f-8e6b-47e9-9af2-eda12eeeb98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1188b4-c7e7-4e97-ae56-49c5d4c388ff",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fd3fcc-3a8d-467a-8208-1ec4a18052c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7d9f20-806b-46eb-97e5-85a86d8369ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81663c58-a8c6-4de7-93ce-17aea462ae1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25201427-0fbb-406b-b4ab-d2fbe832b136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855e1eba-8ac3-4f0b-859c-eb27dfed0774",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf0b36d-cc01-40f3-9cd9-ff82178f8130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbe3456-201e-439d-ad58-46153b78a91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a241ae38-c6ef-44ed-ab06-2fc17a7ff1bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc3b2e0-fc04-4e93-9d58-1ab6c3b4c89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6cae3c-97f6-4f2a-8463-e59e274daed7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ebb412-1c70-415d-81db-4e34712a55d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afd31a90-7b93-4fca-8263-b038339cc5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d17508-354c-4e87-a95b-c273fc150481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e948c95c-53d7-4bf0-b103-0ab1c3f3e931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e35906-4c27-42c0-95fc-89e764905e74",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e186352f-2574-4d7f-a119-85278221faf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11631275-ffac-46c9-9c2c-62e6089d42d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11708952-3383-4b1a-8e18-4c21e241d124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5707f765-db99-4632-8306-30c65a693cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cd14c6-f4d1-4908-bc3b-2ec9cf957989",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87676268-543e-4a74-97b5-592516d298df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f308887-3142-48c8-9663-fd6a3cc62c77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fbe6a0-4d6e-47ca-9ce3-57b6d80eff57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4967486e-0645-4f32-b28f-609a0a06690f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166d1938-23e0-4cf3-850e-3a4cb104d328",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3356729-c685-44c7-b101-978549d48b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf0da80-fd4a-4466-96f4-c2e3c6f2bcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27160748-8f03-436d-a4cf-53c6ddc21e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f3c6c8-3dfe-49a8-9eee-090a9bfd902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37122aae-c7aa-4064-bd2c-aed0af2cbbb7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b1ded4-13b3-45d7-bf8f-8f7ea71ba7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6130489-5bf2-465d-82e0-22cb67c2404a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb4947e-59a3-42f3-823c-bed677216421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee88a00-5095-45ee-b448-31263829a1e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdea266c-8ae9-4759-94b7-d3998a12c7d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e722c35-90c1-4aa6-a734-ba50df4ba5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603efa23-d709-4992-becb-108b33a8a7b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1657c5be-38f0-46fc-b6f9-195b56d8a4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baec356b-df2a-402f-bc15-efa43005d3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae5cbe1-2d2c-4b62-b9c9-a4948ddbd70f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd74eac-3630-4422-bcff-248b35a1460e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2558c0-ee0d-49cd-8b0d-4aba6bf1f8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5f25f6-7be8-4c1c-b67a-e43769bd9358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27007cd-019c-4e93-8c81-8411e275e3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae58854-ba2a-4e20-b1cc-398b43f84ca4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56d2149-e844-46d8-a085-b1f8983ae3c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cd291b-fd08-4a35-8c5b-74b759b13f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ae9b4-b060-4fc7-a364-059c09a56763",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9f9c90-b4d8-4ccf-b939-084b7b642f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ce753e-70bd-4b80-80cb-e75b71a90830",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b51a67-d12f-408d-b5b5-e6a5ae3294f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f53839-526e-4de3-ab7f-ace49ef7b7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f279d3c8-1ca4-487f-b16f-97cbc1a7ac4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f68683-d177-4a04-9448-aba88e3308b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6f103a-b829-4978-b61e-c31d10ef7d6f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bdd480-a2f2-4ae6-9841-bc6970556138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "872b6584-a74a-41cb-aec1-b6c50b0ce44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653fadb6-5085-4660-8b6d-a834f3d4679e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55dfdaec-6aa6-49b3-82da-4fad5ed38f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81042ea4-97b2-4f46-8beb-502ae429d69d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19aad771-2036-4282-bade-33af95a22712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f605a411-e452-4c41-a98f-0b03d0a46617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba4ff59-8f8d-430b-ad45-3f77cbecf59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ef66c3-bbd7-4f74-9826-43117a5b4209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a17e0eb-61e6-4195-b102-a9a4cf753ab4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeb1ceb-1cba-4511-94fa-fbd8cc5059ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59168500-a64e-4787-8397-0da86b72a317"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a6bb7c-d476-4d5a-a739-f06cca44fe02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d680322-f9ee-45d1-aeb8-947e78dbd319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5039bab6-eb48-40d2-9cfa-ad5f7ae5734a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d21766-6ccb-49c4-94dc-131d0173cb68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8b8d377-bc40-48a0-a18b-a6b8b00e6ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10451c4d-faf7-43cb-8fcc-9fb0c1237d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf7ba90-af4e-4a11-97a0-18aaac73e24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f009ef-f0a3-4880-8042-b27cb14bab3d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fea62f-2657-4425-aeb8-9431e8899e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014f65ea-9453-47e0-9032-645044e845d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc7ca8f-f9c6-41ff-88f8-6ed7422f205b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba1dc7d-ba71-4fd7-a54e-0afdcff9963f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d056ccf3-9216-4c3a-bf3c-450d10f52a52",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af48bb6-7625-4980-b7bd-861b48ec606a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785570cd-8b0f-48bc-9a55-540d04aeff40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff26be7-6bba-4827-8646-5e6dd2a78c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db694b73-84c0-45fd-9e73-f4c4c852d6ad"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59d01616-7412-40f6-8211-06b0a8e21cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea8398f7-e907-484f-ae1f-8f38d73fff2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df072ac7-8258-4651-a9b2-3b5940739dbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "44eabb52-4de4-4571-be21-b9340e66db56"
                    }
                  }
                ]
              },
              {
                "id": "c1243caf-c51a-4155-a102-a544ccaadacb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87a902d3-a0a6-4d37-a029-c53808929240",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25514f3-0e38-4498-8a5c-3106806a8781",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bc2f29bb-bf7d-482d-90f5-d5353c30ba96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840c88f8-8be1-4479-b3d9-a9380f6837bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4595f56-f110-42df-b76b-375cef3bcea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc3fcde-a19e-47d1-9d6c-cf4788ee5163",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052ae8f1-800e-46ee-9129-c44e75177841",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "931536b7-8aa5-46dc-9dce-94e811496d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab62d98c-138e-439e-9fef-587d50638786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "167dd394-b918-4e8b-8fd3-d4d17dfd6d7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9adc95c-e2c3-4954-9341-9f5a82c30d97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b25ad837-7d76-4a63-bfa0-17ac3e3700e0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3450f973-f80d-4013-974f-1c8da12caaac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a15a23db-3ba5-40f5-87e7-2ce1c31e56df"
                    }
                  }
                ]
              },
              {
                "id": "c42542a8-5eec-4f73-a106-f43ac95314d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e6ee5113-4aef-4cf7-9956-4fb9c9479667",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5cd6b9-a058-41be-a8e4-4b6c57ec2ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ef1403d8-7363-45d8-92c5-b52a04107496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28398811-2f3f-4418-a363-6a97aa530331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "063d9e4a-b455-4c34-8959-2ea3b3c8b292"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ed78b0b2-06f0-4876-8654-7636f3d484f4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5848a39b-fa8e-48bd-ac2e-b01f20085972",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "756f8988-94f3-4f51-be60-28cd5d553893",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6a12736-8e3a-4c11-9ccb-4d57141c6858"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cea982f-d329-46fd-a45a-b78d4da4541e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07bf65ad-be37-4231-b6da-c741dc72e173"
                    }
                  }
                ]
              },
              {
                "id": "0643905a-66df-43d2-906f-78e27f0fac32",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac17f7fd-ac55-4fd4-b858-d0b4fc6844d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "67d138a6-34d2-4d1f-ab23-95e07db577a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9a82125-8b74-4e74-8824-51a5c7eeed7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9cfee57-c2d4-4d27-afb6-d4b1c7719b71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5b9d4e1-c8de-475b-8af0-4d23f0da8ca3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ec90a2eb-0fa0-40f9-81d0-2c4537c29df1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "accf7b82-d847-476d-9ab5-6a8eb36880ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09c3d29c-b312-4a9e-a5ef-bfa7545eb529"
            }
          }
        ]
      },
      {
        "id": "1f4491e2-c069-417e-b844-f1689d8ee0b6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5bc5cb7c-f223-4759-9597-836c1775aeac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e621ff8b-4f28-486c-9f3e-b47fa0d7bf52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c848c4b-012a-44c0-9485-003cce1cc06d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7b46f91e-c310-4e93-81ea-a282535d932b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b81b16-14c9-4bc6-9223-3be5d853b8d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74717d70-c6e9-4468-bae1-18bd8b467d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab6ff38-a6ee-48f9-9c33-d90deaa75fce",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c3f740-57df-4341-9f26-b153a639710b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b4c2b4ee-5177-4118-8929-52bf4a2587b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c044c6-fd80-41ac-9f8d-f4d4d4f0d9d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95c681eb-6d76-47c2-9b8d-d98529eb4cb9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ab990fa-7a1c-45bc-beb2-e4e15d25d27f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f16378f8-d427-4e64-9d7c-8e1d6b636776"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d99e6bec-cd19-4cc9-b50d-0180381759ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edeb5e5a-ef42-43ff-8d7d-d55f03d1bb1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c470465-8102-47c0-a07b-fbc7d81ca4d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b3c015e2-d6d0-4988-919e-96d690210061"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "943f9c82-4a2b-4e3d-897b-fdde67a04db8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c8c5bb6-534a-4191-908b-185be159c5af"
            }
          }
        ]
      },
      {
        "id": "a0e24c75-533c-4fda-912b-86d1386c1277",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "778c1029-5598-4f2a-8efa-f5bc9702c91a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "615349a3-d2d1-4934-8462-7543db792101",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1f86291-0d5c-451a-b444-3c52ab952a73",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecd0dd0-3ef9-4a03-a5de-ff90f3ba81b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49afa5d5-127d-455f-beb5-d29065f527d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b3e0ed-35ed-4ab6-bc9a-013bedc363bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "922fa499-e123-4505-993d-8f2c92ca4d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aa31fe-c5d7-47b0-808e-1256fe17e324",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e7dbf5-0ef0-4837-956d-9d8670338269",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "780545d9-d5f6-4674-92e7-38036f6ed50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caa2240-11a8-4bb9-b986-4afd149417a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb3d1960-622e-4672-be52-f088f0b65b12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d10820f-5876-4d41-a4d2-641d8031b970",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4093a559-88b1-4639-a513-0837f711ab7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f53d9e63-6948-4a8e-9145-d75b14ef1aee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58ee9fbc-fac7-4324-8f12-49a6e3d89996"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06b6a5af-2e6c-4ca9-915c-650fa88201d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5db057e0-0af8-4579-966b-bfeda9c969e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a9b4fa0-4bd0-40a1-a6cc-e39d0ad53e98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "823263df-769c-4889-b795-9b13e43944b0"
            }
          }
        ]
      },
      {
        "id": "8dcdad3e-71e2-4f1c-8eb2-d037f44a735a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d4ee93ea-cbe9-492b-b34e-7cff264775f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6550717-9204-4042-9a3a-b7ba31ceb695",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "feb7b1b2-fd6c-46da-b7ca-729b8b9b58ef",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d728cf5-1b25-457e-b6e2-bbc0b2771de4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed8da9e-1f22-487a-8e14-35977679dffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac35d31b-5d49-48de-a7d8-51e579cfea07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "137ca169-2c5a-44b5-9e7f-95740218c222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb326c0a-110c-4c91-888a-9d223291a574",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac71aa66-b63d-4d35-8214-813663a8b39b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fb46d4f5-b67c-48af-8204-759c0efc0251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e32f900-6650-4237-b58a-94fae2b44dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e50549f-8322-44f9-9b4f-6abeab31f8cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1faae818-907b-4185-8134-5e1fdb522553",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3904b6b0-d62c-4570-96bd-f94b3ade8ace"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "119bae7c-23b8-444c-ac53-8ab18bed2ab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "616983f7-efe9-4c87-8be0-269cdce4953e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f659245-e2d4-4903-97e3-714b53ff3428",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ecbccbdf-1ade-4c2e-ae8e-0823e0a12b56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "addb2857-59a4-4594-b806-9b0315d22fb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28038805-be80-4038-9042-596002a19c58"
            }
          }
        ]
      },
      {
        "id": "186b104c-dba2-46bd-9e1c-36a5f22f928f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fd642df-d897-4a2f-bd70-7a160fe0cc8a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d3352f5-ee20-4c11-b2da-50c03f6ada6d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b8f610da-33b1-40ce-9f1d-5022f09835d0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0430b319-65b9-4e94-81ab-cb3b6f9152f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf129c55-d83a-4bb8-b8f0-383f9217ec57",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 737.6692307692308,
      "responseMin": 20,
      "responseMax": 8707,
      "responseSd": 989.0499045390169,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679704664178,
      "completed": 1679704866542
    },
    "executions": [
      {
        "id": "3b64d150-4549-473e-89fc-cb98d6d4eab7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4cb8f33f-c6aa-42d9-8760-d90b7a740a46",
          "httpRequestId": "ca11fa28-85b3-42f9-8a75-f81797a4e350"
        },
        "item": {
          "id": "3b64d150-4549-473e-89fc-cb98d6d4eab7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "03edc95e-4588-4b9d-b281-ffda1dbf069e",
          "status": "OK",
          "code": 200,
          "responseTime": 88,
          "responseSize": 0
        }
      },
      {
        "id": "a075f4b0-88c1-41a7-b0a6-733991d9faac",
        "cursor": {
          "ref": "8df8478e-5420-49d5-a70c-a4d5cc00a994",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c8a37e0c-d08c-4205-bde8-4e4e7b026cf9"
        },
        "item": {
          "id": "a075f4b0-88c1-41a7-b0a6-733991d9faac",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0466a63f-5f82-480b-874a-a36c81872d1a",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "60c5dd5d-fa96-4bea-bed4-d33d40e480c1",
        "cursor": {
          "ref": "6aa28f78-ac8e-4947-b11e-4a5929fad858",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "01833ded-0ffe-4c6d-98e3-c11a77e6f5ee"
        },
        "item": {
          "id": "60c5dd5d-fa96-4bea-bed4-d33d40e480c1",
          "name": "did_json"
        },
        "response": {
          "id": "b266d6ca-72d2-4e49-9dc5-8ee5ed629f28",
          "status": "OK",
          "code": 200,
          "responseTime": 650,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe10f69-d929-4e41-99db-d6f1145c74d2",
        "cursor": {
          "ref": "c90cdf16-1f5e-4f95-be99-1b4501f490e2",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "561281a9-b183-4b7c-bd53-c4b84d5ab744"
        },
        "item": {
          "id": "1fe10f69-d929-4e41-99db-d6f1145c74d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0977392-7dd4-4f9d-b9a9-be0bed9af47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1261,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe10f69-d929-4e41-99db-d6f1145c74d2",
        "cursor": {
          "ref": "c90cdf16-1f5e-4f95-be99-1b4501f490e2",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "561281a9-b183-4b7c-bd53-c4b84d5ab744"
        },
        "item": {
          "id": "1fe10f69-d929-4e41-99db-d6f1145c74d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "b0977392-7dd4-4f9d-b9a9-be0bed9af47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1261,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8918e4-3cb7-4568-8277-342aa5f80002",
        "cursor": {
          "ref": "4c386852-f96a-497a-8468-129c697eb4b0",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bc8ecd4c-a54c-488f-a812-e0ff22b2d8ea"
        },
        "item": {
          "id": "2c8918e4-3cb7-4568-8277-342aa5f80002",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dcd04658-1c5f-4d4c-9cba-c38b4da8aa3c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 761,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6db2a4-6989-42ac-abe8-8c26a27a3c8d",
        "cursor": {
          "ref": "6ed7bf49-6f8b-41a6-900a-2045fbafad1b",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "622b9fdb-6ecd-47ed-9954-bf679dfaf442"
        },
        "item": {
          "id": "ff6db2a4-6989-42ac-abe8-8c26a27a3c8d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "42e5d680-246c-4534-9135-a5a1ee9e6117",
          "status": "Not Found",
          "code": 404,
          "responseTime": 769,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c357526a-c86b-446d-9929-5844db6558ea",
        "cursor": {
          "ref": "6dfc38ad-9169-4973-94f3-2582e97b70d3",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "809ae10c-1948-474d-8e35-6d548b402a06"
        },
        "item": {
          "id": "c357526a-c86b-446d-9929-5844db6558ea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4365bac7-c0de-4dec-ab7a-a4f417c91e39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd89b4c6-18c0-4030-8191-8c66a7ba558d",
        "cursor": {
          "ref": "641bca02-f2f0-471c-b61b-e8a9757827ee",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9f52af9f-44f7-455e-9d2b-c8705dc81835"
        },
        "item": {
          "id": "bd89b4c6-18c0-4030-8191-8c66a7ba558d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "44bc5498-6446-4254-b237-2f494cc15494",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 590,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd89b4c6-18c0-4030-8191-8c66a7ba558d",
        "cursor": {
          "ref": "641bca02-f2f0-471c-b61b-e8a9757827ee",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9f52af9f-44f7-455e-9d2b-c8705dc81835"
        },
        "item": {
          "id": "bd89b4c6-18c0-4030-8191-8c66a7ba558d",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "44bc5498-6446-4254-b237-2f494cc15494",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 590,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fcd84c-2601-40c6-9d9d-e29223c8c8ba",
        "cursor": {
          "ref": "4038cb04-ff84-4809-8644-c5ca72226ec5",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a4544ca6-576e-4e0b-b0a7-15ab84553c79"
        },
        "item": {
          "id": "72fcd84c-2601-40c6-9d9d-e29223c8c8ba",
          "name": "identifiers"
        },
        "response": {
          "id": "d49101ec-c369-4304-8a33-689086335377",
          "status": "OK",
          "code": 200,
          "responseTime": 990,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a87622-1a50-4910-8bf3-6d13af010e4a",
        "cursor": {
          "ref": "cca440a8-08f9-4bfb-bfe7-e2ea3805cf2e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a24fb4ad-bb79-4873-8512-fa1dd25a6eca"
        },
        "item": {
          "id": "63a87622-1a50-4910-8bf3-6d13af010e4a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "758f2559-b867-441c-a215-8b49f35ccf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a87622-1a50-4910-8bf3-6d13af010e4a",
        "cursor": {
          "ref": "cca440a8-08f9-4bfb-bfe7-e2ea3805cf2e",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a24fb4ad-bb79-4873-8512-fa1dd25a6eca"
        },
        "item": {
          "id": "63a87622-1a50-4910-8bf3-6d13af010e4a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "758f2559-b867-441c-a215-8b49f35ccf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfe1fb4-478c-437f-80ad-fa716463e757",
        "cursor": {
          "ref": "742b4a22-6f2a-443a-a1f8-8d94d2fc5d4e",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4c6b220-b293-4496-8387-829c4e71704a"
        },
        "item": {
          "id": "4bfe1fb4-478c-437f-80ad-fa716463e757",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3a20f9fd-8067-40a3-86c8-94841cedfa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b824c5-56e0-4db6-ab20-31d87fff14fc",
        "cursor": {
          "ref": "20b97beb-7077-4de4-9be5-29cfe59a42b8",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3a67d80d-3e07-4fc3-b982-40ecb9fef16b"
        },
        "item": {
          "id": "c6b824c5-56e0-4db6-ab20-31d87fff14fc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "19338a3f-cb21-43b9-8d3c-7ec0dbf803ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ebb957-7650-445e-8256-6732ac31e375",
        "cursor": {
          "ref": "93359c0c-5df1-4cd1-b820-4415af5dc95f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c2b5fbfe-bc4b-408f-86d2-1150dc8d5e91"
        },
        "item": {
          "id": "d3ebb957-7650-445e-8256-6732ac31e375",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b5cb845d-7a70-4027-aa7b-508e730a8b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc38275-16c4-49bd-8d6d-13b2cea24fc5",
        "cursor": {
          "ref": "944ddcf6-9595-4dba-bafd-be103fbb0ad6",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "52e871d0-ee60-488c-b5e9-b530950052cf"
        },
        "item": {
          "id": "2cc38275-16c4-49bd-8d6d-13b2cea24fc5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0d7f0684-e76d-4612-95ff-0beca8da7706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae3e88d-3018-483b-afdb-aee9798e76c8",
        "cursor": {
          "ref": "f36452a5-10c5-43de-b87c-f3a73adb3007",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d88e88ca-8fb4-4e70-baa9-d16511bd7dc6"
        },
        "item": {
          "id": "5ae3e88d-3018-483b-afdb-aee9798e76c8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a91df83c-71fb-45c9-a8fa-b2ecf328f013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f2c99a-f447-43e9-a739-7b78025d6547",
        "cursor": {
          "ref": "c7d8f288-17fc-49c8-9e01-5a91310e7cb2",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "96cfab8a-6354-4600-a53d-941b8e891c58"
        },
        "item": {
          "id": "b4f2c99a-f447-43e9-a739-7b78025d6547",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "040043f7-4dfe-4f03-9911-339b13a3afdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8ba340-ba37-4b06-a0d9-28e4ee235d61",
        "cursor": {
          "ref": "bbb0bb9f-65b6-4b0d-82cc-a422449e4f34",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eeb7e3aa-265d-431d-8e6c-e7cd6aa937ca"
        },
        "item": {
          "id": "bf8ba340-ba37-4b06-a0d9-28e4ee235d61",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a5b62b4f-54fb-43b1-a37a-4ab48a8d5943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5a572c-507d-4407-9705-cddf3bf8e1e4",
        "cursor": {
          "ref": "7ea234b1-a67a-46ab-93c4-b73139bba628",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed229b9a-2391-4711-b9be-efa3052318df"
        },
        "item": {
          "id": "6f5a572c-507d-4407-9705-cddf3bf8e1e4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ff85b7bb-a7f1-4cb2-b823-a405877539a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b07112-b5e5-4167-8e75-36e9d24389f9",
        "cursor": {
          "ref": "49022dc5-0ab3-465f-bbce-9623c9b8c17e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c99c47f8-f8d2-4c8b-a978-a9e948c86805"
        },
        "item": {
          "id": "e8b07112-b5e5-4167-8e75-36e9d24389f9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6a8f8b76-1a0d-4585-9fec-2dffa5673d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d40edf2-f9e8-41ea-bda9-e0aac3f7ff28",
        "cursor": {
          "ref": "37bcad78-9576-47ea-9561-7a49c8fa963a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1f95bf3c-2bf6-4b53-90a2-235543fb9d5c"
        },
        "item": {
          "id": "1d40edf2-f9e8-41ea-bda9-e0aac3f7ff28",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0d91b139-e926-48da-a6fd-23d4f1a14212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be640908-f7b6-42f5-bf7d-118a4bc2bdc6",
        "cursor": {
          "ref": "ffcec008-bc99-4fcb-8219-9b6c1f15043e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fa77d441-a97c-4ddd-b2af-9296aaf12020"
        },
        "item": {
          "id": "be640908-f7b6-42f5-bf7d-118a4bc2bdc6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ed4c8c1b-5afb-42d2-bbac-50af37c315f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905142d-39ed-4471-bfe5-78a8d0c9c822",
        "cursor": {
          "ref": "ab03abb9-98ad-4848-b509-5f8b84ccb1cc",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7f5059fe-de8e-4978-af4d-ddf248428cf6"
        },
        "item": {
          "id": "7905142d-39ed-4471-bfe5-78a8d0c9c822",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b7877941-e024-4eee-a9ef-50ee68371533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17632c4b-fa29-4a27-bf29-8849735ca589",
        "cursor": {
          "ref": "a5a39c4d-27eb-45b7-a110-e2d8d1d82d16",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "26e8f731-60f7-422c-818c-4185c0bec79c"
        },
        "item": {
          "id": "17632c4b-fa29-4a27-bf29-8849735ca589",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "56dd37eb-8884-498e-bd61-65cd6c41c961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64b4a30-9db9-4152-b8e5-a7d022a89f9f",
        "cursor": {
          "ref": "6afa82dd-9079-45e7-bcf7-a282219123ff",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ec29c9b3-d6f4-4329-aeeb-002a1dd4b027"
        },
        "item": {
          "id": "b64b4a30-9db9-4152-b8e5-a7d022a89f9f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ca8d6611-c0e4-4707-a555-fe2b991a9d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd6efd5-b93c-4f45-8b3c-071fc0fa7ea4",
        "cursor": {
          "ref": "3e75866d-0fb7-44d6-a18a-bc430b3abae0",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4c1caaa4-705b-4253-8c86-1b0b3251a11b"
        },
        "item": {
          "id": "7bd6efd5-b93c-4f45-8b3c-071fc0fa7ea4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "84cd6300-7a8c-4170-af86-9a10ae7806ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a0e6bc-b547-482d-811e-338e32e03fc0",
        "cursor": {
          "ref": "62259dae-607e-4bb5-ba99-da62df308ca8",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a7519480-8a92-4ded-bbbe-491b7845e928"
        },
        "item": {
          "id": "34a0e6bc-b547-482d-811e-338e32e03fc0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cb4a6b76-19e7-4fd8-8554-44317ba0ece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a73382-8234-4512-b3c5-f2ec397556f8",
        "cursor": {
          "ref": "5dd175d2-8528-4367-a8f0-947942cf0c0a",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "105c70b6-4965-4822-a3d9-14fe127523bb"
        },
        "item": {
          "id": "42a73382-8234-4512-b3c5-f2ec397556f8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "59867077-4969-44fd-a695-c54ee5f1c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccdd9e2-6505-49bd-bfd0-83c182e30125",
        "cursor": {
          "ref": "7f497a07-090e-4d8e-bd69-d49c14841e43",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cf64a5d9-b987-4f03-8be9-664f26722aaf"
        },
        "item": {
          "id": "dccdd9e2-6505-49bd-bfd0-83c182e30125",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4e04b412-b294-40a1-a302-390fa7adf9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1098,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3257728-3c62-4059-bb8b-c640b8d94350",
        "cursor": {
          "ref": "7c6d119a-843c-4e01-939a-1b2bd8e9b8fc",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6b8de97e-8d2a-4986-8284-33c1551d57f1"
        },
        "item": {
          "id": "f3257728-3c62-4059-bb8b-c640b8d94350",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ee8e510b-b7d0-4f0a-8eae-c6a17f9c98c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "900743d5-48ef-4b71-b016-3fa29929d044",
        "cursor": {
          "ref": "e30809e6-0b68-4ed3-b4b3-620800159b09",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9671ffe9-d5ed-4570-af0c-937c4d712b8f"
        },
        "item": {
          "id": "900743d5-48ef-4b71-b016-3fa29929d044",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "03499ba4-c902-4305-9c9b-8fa7ec10deb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234be829-18fb-4336-9a6a-0ca8d389a414",
        "cursor": {
          "ref": "ed788904-bc2d-4e72-bcf1-a622eebd934c",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d009f830-e18a-469e-9c9c-87e8de3a04ea"
        },
        "item": {
          "id": "234be829-18fb-4336-9a6a-0ca8d389a414",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "31d960aa-8991-4a94-bd46-8980e320cbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1480,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c511775d-6be6-401d-a480-9226127209cc",
        "cursor": {
          "ref": "33336f67-2ac3-49a8-8dec-9470cc334edd",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e75e1d3d-0b4f-4352-99ca-85b289934b95"
        },
        "item": {
          "id": "c511775d-6be6-401d-a480-9226127209cc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6d5221f9-8217-44fa-b7be-8c15e4820adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1189,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d43a234-1264-4b12-8131-4724f79c7b1f",
        "cursor": {
          "ref": "933f7f3d-323d-488b-b168-0228e1101638",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2021692b-1c78-4ee2-a22f-690229550ecf"
        },
        "item": {
          "id": "9d43a234-1264-4b12-8131-4724f79c7b1f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b26c2016-13ab-4704-b366-ad71947389b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4336c4b-70a7-4637-8011-15fe7786af3d",
        "cursor": {
          "ref": "ac3b12a9-b814-40ee-b9dc-19816452644f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ecc29f41-bedb-4adb-b0ba-0ece9fb4fd94"
        },
        "item": {
          "id": "f4336c4b-70a7-4637-8011-15fe7786af3d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "21d85160-2b55-43df-9f76-e6f5b6f6602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b230d-839b-4539-ab8a-0c96c6c0ec25",
        "cursor": {
          "ref": "0d1d2f09-5cef-4fc4-8203-4f2c9d3c26eb",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "14649c83-93b3-4cc0-a7e4-5286f2f14284"
        },
        "item": {
          "id": "d33b230d-839b-4539-ab8a-0c96c6c0ec25",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ab51b408-abe4-45ea-93ce-04acf35450c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b3db8-2953-4863-9c04-eb291ca29fa2",
        "cursor": {
          "ref": "103f7633-0580-4fd3-821d-6ea200036139",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9da8287c-98cf-4ecb-9592-bb6deced6bd5"
        },
        "item": {
          "id": "ed1b3db8-2953-4863-9c04-eb291ca29fa2",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f18a02b7-531b-4f6b-b701-6cc3352e4bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58ca58a-4a3a-4730-bd43-61e3b39c5918",
        "cursor": {
          "ref": "abe2bfd4-6f01-4948-8a4d-f2b35b3562d9",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a805e678-0b7b-4456-a293-83e696fc7ba5"
        },
        "item": {
          "id": "b58ca58a-4a3a-4730-bd43-61e3b39c5918",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "97920f61-959d-4fb0-bf28-563143f4c44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcda240-9d1b-4e38-9130-cd5596d6bb85",
        "cursor": {
          "ref": "b3657cc1-a973-47a8-9f37-4ee02791852f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5bed6971-9e19-4585-86a8-b80c6b4bf009"
        },
        "item": {
          "id": "2bcda240-9d1b-4e38-9130-cd5596d6bb85",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1b4b5aa5-bf00-4521-8203-87ce54305e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1746eea-3893-4fa6-bc5e-5e38cfabd5d9",
        "cursor": {
          "ref": "8f9feea1-ccb1-4c7f-bd53-16c63a1ee46b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "831462e5-306f-4f69-b85c-954c9722cb11"
        },
        "item": {
          "id": "a1746eea-3893-4fa6-bc5e-5e38cfabd5d9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6c0b53fa-78e5-4174-946e-ab3a6cc61352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ca68a-92b0-4925-90a7-9dc938a3217d",
        "cursor": {
          "ref": "3b04a534-6c7b-4ba9-8df5-1f72b6c143f2",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8db23919-1381-40ae-892b-70307df4f689"
        },
        "item": {
          "id": "bd1ca68a-92b0-4925-90a7-9dc938a3217d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "832bed37-ca5c-4932-a8b9-8600a47af0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b7ffb6-56ff-4427-88db-41c21bf5c378",
        "cursor": {
          "ref": "315da845-51a8-44e1-8818-b8c67b2ed285",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "44b2c034-d169-4696-a7d2-5f3460b65612"
        },
        "item": {
          "id": "25b7ffb6-56ff-4427-88db-41c21bf5c378",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "33374f99-fb5e-4a59-8713-9603bdd8e3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3d6d09-44ca-4df0-ad32-78a2f3c12801",
        "cursor": {
          "ref": "15cef105-8261-4422-8f8e-66e633665ebd",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "49f77437-613c-42e7-8a61-f2b50eee2b93"
        },
        "item": {
          "id": "6f3d6d09-44ca-4df0-ad32-78a2f3c12801",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8d17a196-7ed4-46e1-a9e2-72be570f981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ff785-ec07-42fb-b15e-4137f812f7ef",
        "cursor": {
          "ref": "3febf78e-a719-41be-a6a2-f83560ca2758",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8c3f9929-1b12-470c-a290-c287f5dbb5d7"
        },
        "item": {
          "id": "f64ff785-ec07-42fb-b15e-4137f812f7ef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "86d794e7-85b1-4285-b40e-e327b01fff85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cd4e38-0137-4d6f-a04d-64a82a283958",
        "cursor": {
          "ref": "38c23d67-3ea9-4608-804c-c012ac29b33f",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "565ed6fa-6173-437e-bf5d-a8c90be91f32"
        },
        "item": {
          "id": "11cd4e38-0137-4d6f-a04d-64a82a283958",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "8fee5319-f525-48d1-a114-3557202351fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852f45b2-e06e-40b7-8496-9174bd480515",
        "cursor": {
          "ref": "b4bfb515-b912-4675-be37-e32c0fe09488",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2f482910-5edb-4a3c-8987-6dcfa3129027"
        },
        "item": {
          "id": "852f45b2-e06e-40b7-8496-9174bd480515",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "edc30cba-6b1b-4760-9187-dd6ddabfc58b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 728,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67dda9da-eacf-4c6e-9dd1-5b22cf020cdd",
        "cursor": {
          "ref": "f1c42bc3-fc2b-42eb-9828-40aeaee85677",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "71b29d8b-8fee-48bc-a9fd-ed0272ac46e3"
        },
        "item": {
          "id": "67dda9da-eacf-4c6e-9dd1-5b22cf020cdd",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "efac6991-cf7b-4348-a52e-a3088b83b0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540c7caf-4759-4a28-b1ce-808e815602ec",
        "cursor": {
          "ref": "ebdbf0f8-51df-4786-83ec-a02ab9388e3b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "92bb477f-88a1-4eab-8279-cf34a0462d79"
        },
        "item": {
          "id": "540c7caf-4759-4a28-b1ce-808e815602ec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "510971af-393e-41b3-b7b9-c1df0898bb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf4b7e8-1965-4cc5-98fe-b1dab676690f",
        "cursor": {
          "ref": "dbeea3ab-80d5-42b4-9ff9-b9a05d04d243",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4acd1d89-5d1e-45f9-a5c3-4bf5835f7c1e"
        },
        "item": {
          "id": "caf4b7e8-1965-4cc5-98fe-b1dab676690f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5448bb8c-01e2-4992-b70b-f07e5bc6513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55d1283-b273-49ae-acbc-83234bf2c08f",
        "cursor": {
          "ref": "57ca0954-1fb6-4289-ac93-442c82d85120",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7e0aa3ae-339b-44bf-a460-26611669c5d7"
        },
        "item": {
          "id": "d55d1283-b273-49ae-acbc-83234bf2c08f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0323bde7-7afa-45a9-b2ba-5b27ef575d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092fa512-303d-44f4-863a-718b2f7809fe",
        "cursor": {
          "ref": "fb91106d-30b1-4ac4-abf4-2d06e931ad95",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0722727c-9349-4701-932c-d3e13249c41e"
        },
        "item": {
          "id": "092fa512-303d-44f4-863a-718b2f7809fe",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b3e288a2-5ce1-42a8-bbc0-e646379f6a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a13666-53cd-4279-8867-a8ffc4dae2ad",
        "cursor": {
          "ref": "fadd7cb4-e9f8-46f9-aebd-c96ea28f79b2",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "edff3b66-70c1-453e-a3b1-0b59ce9e2226"
        },
        "item": {
          "id": "b0a13666-53cd-4279-8867-a8ffc4dae2ad",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4a0fab30-4be8-4dd4-b5aa-390acd3a752e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f792a3c8-8bdd-49c4-aa83-3d9443943341",
        "cursor": {
          "ref": "f14d9f81-cdd8-43f7-b3b6-1a14966c7f29",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c1bc2306-3a24-4ad7-a074-40458234c73e"
        },
        "item": {
          "id": "f792a3c8-8bdd-49c4-aa83-3d9443943341",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "56060978-4328-4c5b-9f73-b88be6e0bdfe",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 780,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83ac1721-d028-4a0c-b7e3-de939b4b02ed",
        "cursor": {
          "ref": "e1ada861-7c74-4718-85ac-d95782611a2b",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e6109385-37d3-4dcd-bf5e-96266072849a"
        },
        "item": {
          "id": "83ac1721-d028-4a0c-b7e3-de939b4b02ed",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7691e100-191f-4512-8a63-05edaad121bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c980026b-7b71-4853-a943-375a220d0c5c",
        "cursor": {
          "ref": "5cc26613-9499-42f8-8206-5d058ba1b3a3",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b119e6b9-11c5-4e9e-a4fc-a04af5a288e5"
        },
        "item": {
          "id": "c980026b-7b71-4853-a943-375a220d0c5c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f74bfc0e-8265-412f-8fb3-ed648adce6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe821a64-d3e1-4c60-bf0a-9a96eeb067ed",
        "cursor": {
          "ref": "119d5de5-9ce2-449f-bc56-6923ae53dcaa",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "227ca228-32ab-4d12-86a6-c3a7931bd7b3"
        },
        "item": {
          "id": "fe821a64-d3e1-4c60-bf0a-9a96eeb067ed",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "22d9b836-8846-4313-a5ef-e3d4944f2df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3136ac69-0171-4a5c-8e50-7ec6f5b108ab",
        "cursor": {
          "ref": "6e97e124-c644-4224-9f04-38cfb1e86ed8",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "32ce0010-5e42-4e30-86d1-7b51d624be4e"
        },
        "item": {
          "id": "3136ac69-0171-4a5c-8e50-7ec6f5b108ab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0751d8be-67ff-4186-b041-7f74e5bcc423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641e657d-4e09-4c9d-b12d-c2c8dbc1cb3a",
        "cursor": {
          "ref": "2339a6aa-fdb3-4096-860c-9c18b903a5b2",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "333325db-8a15-4435-bf78-78ca2d0625db"
        },
        "item": {
          "id": "641e657d-4e09-4c9d-b12d-c2c8dbc1cb3a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "262cb936-7a95-4e7b-b756-3d94b7cbaf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43bbb46-b819-45ca-a44c-44b2cf2b6355",
        "cursor": {
          "ref": "0edabfd5-31e2-4765-92cb-af06c44ec3bd",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3beb1828-1c82-4fd5-8a21-f3c6b0989afe"
        },
        "item": {
          "id": "a43bbb46-b819-45ca-a44c-44b2cf2b6355",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07b47440-2284-4e78-85b8-320d15aa1b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e593ecdf-8a60-40f1-b627-f08a575d7f79",
        "cursor": {
          "ref": "0778bc0c-d660-4735-ac55-24a259285972",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "207a5123-6480-4eb0-8962-b943a3583924"
        },
        "item": {
          "id": "e593ecdf-8a60-40f1-b627-f08a575d7f79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "529837bd-fbb8-4b43-86c5-3b3c2849e746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b73fa9e-84e9-413c-a6a7-12b7b5c8f3a2",
        "cursor": {
          "ref": "551311af-8e5a-44b6-b3ea-bc9925011c6e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "289db1a4-6cc8-47ec-8d88-c14210b4376d"
        },
        "item": {
          "id": "5b73fa9e-84e9-413c-a6a7-12b7b5c8f3a2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9f39e584-967c-4f58-abed-2e327c09160c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da42171-c7c1-4f2c-9460-56ce36bf2d76",
        "cursor": {
          "ref": "e08da73e-41f4-4bde-a519-5effc4da9043",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "73f646fb-a1d6-4f05-b3d9-46bc2f1a1ad2"
        },
        "item": {
          "id": "2da42171-c7c1-4f2c-9460-56ce36bf2d76",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b66b738c-5c80-461e-84bd-97a9f85d87c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8c5bc2-5599-4745-a635-b17508583b30",
        "cursor": {
          "ref": "cf80783b-7113-432d-b758-4e913e288800",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a6fd57fb-6212-4df7-997a-2d0049ba92ac"
        },
        "item": {
          "id": "ff8c5bc2-5599-4745-a635-b17508583b30",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "73fb66a7-6dca-4ae1-9d55-39cd4a8c5f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4819ffb1-7d94-488f-81ee-eb35ce8a9fa8",
        "cursor": {
          "ref": "55d45f3e-b69b-408d-a9d8-6be079d3a605",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0b6beed5-6caa-4205-bb2a-bc8c5e6047ee"
        },
        "item": {
          "id": "4819ffb1-7d94-488f-81ee-eb35ce8a9fa8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a746132a-1b39-48e8-abe3-bac8252f007a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b695f4-31a7-4a74-be38-f7c68b899f21",
        "cursor": {
          "ref": "9eb54bad-5577-4a35-b343-eaaed24f9530",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "96915db3-188b-47ef-8884-0ca32e8f2c11"
        },
        "item": {
          "id": "42b695f4-31a7-4a74-be38-f7c68b899f21",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "74e688d8-8cf1-4681-b071-6aa38e8d3005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cc03ae-741a-48fe-956a-d4486ff9b4e7",
        "cursor": {
          "ref": "16be0389-7f67-47e4-a2a3-ab2c5fa76044",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d19dd788-c267-4ee7-970d-ed43f77f6663"
        },
        "item": {
          "id": "b7cc03ae-741a-48fe-956a-d4486ff9b4e7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fe7a55a4-bac9-472c-8f1f-344cbd8574bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e606945-6da5-4acc-81e4-85708f337849",
        "cursor": {
          "ref": "602b4cfd-8589-4ffa-9e2f-9c2e0f745168",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "88520963-16c5-4fb8-9509-09b2cc5a8377"
        },
        "item": {
          "id": "0e606945-6da5-4acc-81e4-85708f337849",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "21dd042a-c21e-48ad-a3d5-fd950bec5187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13730649-8062-4722-a939-fb78430153ff",
        "cursor": {
          "ref": "c9bcfa6a-2c6d-49f6-bb18-ce644d7ede2b",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8fc94c57-8fde-4608-97d6-d160c5038a2c"
        },
        "item": {
          "id": "13730649-8062-4722-a939-fb78430153ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "da3b654c-9b2f-4797-938c-07cc2d916afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e261493-3108-453a-9cfb-019cb080574f",
        "cursor": {
          "ref": "e515a2b3-5b23-4ba8-a863-ac0c0ead5787",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ee899068-34eb-4acd-965f-8bdffb8defc2"
        },
        "item": {
          "id": "2e261493-3108-453a-9cfb-019cb080574f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "429a1ada-af66-4fa4-a095-4b7782a6ed89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6affa3-81f7-4a3d-937f-16851b0094d1",
        "cursor": {
          "ref": "2088532e-a851-4457-9ffe-e440500ea72a",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "20e495bb-9489-434d-9016-f8691c1b9060"
        },
        "item": {
          "id": "9c6affa3-81f7-4a3d-937f-16851b0094d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b2ebadc5-f401-49d2-b6a9-57c086100ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a22b3e3-10e1-48d8-993b-24b87e0a6fac",
        "cursor": {
          "ref": "debae81e-874a-461c-9e06-bf1daa951d60",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "efd37230-3450-4302-b558-5c7ee9563727"
        },
        "item": {
          "id": "9a22b3e3-10e1-48d8-993b-24b87e0a6fac",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dc150edf-4069-4ddc-a4a6-bc509779c2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe86f97-5cda-4fba-907d-799aa5894218",
        "cursor": {
          "ref": "e8fbbf5b-71dd-481e-8cbb-cd9c7b2a18fe",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9de1134d-0b21-4e5f-9c00-8687b2fa6cef"
        },
        "item": {
          "id": "8fe86f97-5cda-4fba-907d-799aa5894218",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "905efb07-fdf7-464c-b766-a9567573ae4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02dca28-e9c2-4c18-9db8-92860ceb0cde",
        "cursor": {
          "ref": "a6f941d0-645b-4f5c-98f3-30b795383ef4",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b4ecd094-5ac5-407f-b371-43b327d853e9"
        },
        "item": {
          "id": "d02dca28-e9c2-4c18-9db8-92860ceb0cde",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e71cd3bc-5cb3-4a34-b57d-e302e561fe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443fcf1b-5578-4991-9545-0821905e47a7",
        "cursor": {
          "ref": "ad0edc7e-179e-4380-b3ab-212bc4c77514",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2386a04b-e5c6-4407-ba12-5486a1985c4c"
        },
        "item": {
          "id": "443fcf1b-5578-4991-9545-0821905e47a7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e017f280-f987-49ec-aaad-8653a269a3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3372418-1a11-4b88-a142-ba6aaba25913",
        "cursor": {
          "ref": "0faf8465-c5ff-429e-9a23-337f7505f228",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ddeacdfe-5447-4dc7-b126-58f036eb399b"
        },
        "item": {
          "id": "e3372418-1a11-4b88-a142-ba6aaba25913",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0149a0df-1cf8-4cdc-bfd3-24d4091bb7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5507ad09-5cd6-4b63-b56b-a3b63d3bd6c6",
        "cursor": {
          "ref": "edba2e5b-5162-4406-982d-663e57a6a76a",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "61489a07-334a-4a4e-ab15-d5bec2cf7375"
        },
        "item": {
          "id": "5507ad09-5cd6-4b63-b56b-a3b63d3bd6c6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ca8e0551-ac62-428c-9e9e-9d265292a1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb097c1-ec56-415e-a76c-e6992e4da21f",
        "cursor": {
          "ref": "60bab2ce-ca9d-4cea-9c3e-bdcf001eea06",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1217d339-a043-44af-9db6-3a2990cfca7c"
        },
        "item": {
          "id": "6fb097c1-ec56-415e-a76c-e6992e4da21f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9fb8c334-703b-42ac-aaf6-71c4838d29c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef87b5e-528a-45c9-a4f7-79b61c2eae79",
        "cursor": {
          "ref": "e272452e-8006-4088-8770-d6d9c68203fb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ea51662f-557c-4a65-91fd-7fefec09712a"
        },
        "item": {
          "id": "2ef87b5e-528a-45c9-a4f7-79b61c2eae79",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "2d09adb6-1309-401d-9360-cbcde2f35a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86c58f9-6e9b-40f9-8962-ebdd7e335ecc",
        "cursor": {
          "ref": "fd611afb-52d6-4d56-a990-6f981da91f3e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "91e17c8f-4898-490a-b0a4-3a1a979c020b"
        },
        "item": {
          "id": "f86c58f9-6e9b-40f9-8962-ebdd7e335ecc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "24b377d0-66f5-4ecd-8426-59a98d95a006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5444725-f018-42fc-afa5-6ee85ff76320",
        "cursor": {
          "ref": "f372513d-c5af-45d5-ad77-5568550ec525",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "326a14cf-d089-41ba-8e37-c6412e25e2f7"
        },
        "item": {
          "id": "f5444725-f018-42fc-afa5-6ee85ff76320",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "216e5b87-7f90-4c1c-ab9e-af9b224e30a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fd09e5-e628-4f1e-80f8-af7969f7abfc",
        "cursor": {
          "ref": "16ddc775-0342-46f3-a10f-48d1d12e2ba0",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "61fe8722-f00d-43d0-9181-7974eea350d2"
        },
        "item": {
          "id": "c3fd09e5-e628-4f1e-80f8-af7969f7abfc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8e0b60ab-3126-4a4a-8ef1-7e7b71278ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed479c-32a7-412b-a3a1-5ac6984c2ec4",
        "cursor": {
          "ref": "4c123505-f606-40e6-8c33-f7a86f18e622",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6d0b8abe-c6ba-42ae-930b-88ad719d10ec"
        },
        "item": {
          "id": "6aed479c-32a7-412b-a3a1-5ac6984c2ec4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "28348fcb-3a6d-453d-b220-d053da5889d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dacc363-1b9f-4d1d-a361-b9bcfbd46a37",
        "cursor": {
          "ref": "496bbca4-4444-4c07-ab99-799187e8606b",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "00ea28de-7122-4a47-bf35-f24c6b2969e0"
        },
        "item": {
          "id": "4dacc363-1b9f-4d1d-a361-b9bcfbd46a37",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bffde58d-2d19-447e-9b37-1aaf2a4c0e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4054be-365e-40e0-bfc0-a97970025b03",
        "cursor": {
          "ref": "18f8ff41-efe2-42a2-95c0-12f0da6e4317",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6e3a3915-36f1-4761-90d1-c7a2889432d3"
        },
        "item": {
          "id": "4c4054be-365e-40e0-bfc0-a97970025b03",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "db0327fe-a362-4d60-883e-f1d6f6724e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb8cac6-9d54-4841-a026-ab2f09f4390a",
        "cursor": {
          "ref": "a09359f8-0dd0-4348-b93c-290f5030a30d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9bf4efcf-28d4-4709-81f6-b35b2460fcf7"
        },
        "item": {
          "id": "1cb8cac6-9d54-4841-a026-ab2f09f4390a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c51bffb-c208-4797-b3f3-f5d5463755fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606a2e55-53ea-4b57-a9ba-eb7c59dd90b6",
        "cursor": {
          "ref": "bcc6cf12-3163-439c-bf4f-88d35f6ab76e",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e63a2173-1a1b-40f6-b591-117221ccb34a"
        },
        "item": {
          "id": "606a2e55-53ea-4b57-a9ba-eb7c59dd90b6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cc07f555-e8a6-4237-ad3a-b3544451de7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb13e29-1523-4de6-890d-0fb1d780ba0a",
        "cursor": {
          "ref": "23b98f3d-21e0-4519-8391-2e152042dfd5",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a62d9d06-137a-46e6-a85f-c3de42ff8363"
        },
        "item": {
          "id": "0cb13e29-1523-4de6-890d-0fb1d780ba0a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "96249574-2878-4ae5-9ec0-91446204f83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4977ca-c93a-4c58-8b19-64c7fdd51637",
        "cursor": {
          "ref": "1d97903c-1710-4e32-989c-dd8ed59981c2",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c3a89206-74ca-4bf8-8b03-e3957af7e0c0"
        },
        "item": {
          "id": "fd4977ca-c93a-4c58-8b19-64c7fdd51637",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f4238165-09a2-4f62-870f-5401965fe6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4e97e-41ba-4778-971f-053cf080495a",
        "cursor": {
          "ref": "d6a5363f-9d0c-423a-86d7-df81151ac292",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e7a244eb-6c55-428f-b3c7-0f3232a1dddd"
        },
        "item": {
          "id": "11c4e97e-41ba-4778-971f-053cf080495a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "04c12ddf-9449-42d7-b7a6-d6c2cebcaa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de791ab-b5ad-43d5-90b6-9332d0454e70",
        "cursor": {
          "ref": "f5118757-6c2a-4bd0-a6b0-7ee63d9b0314",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "388bedab-970b-47fc-8130-b1de1920ff85"
        },
        "item": {
          "id": "5de791ab-b5ad-43d5-90b6-9332d0454e70",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a1cacf9b-cef4-4ca1-8e57-0bc2e3286afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec8f260-9a5f-4742-a56e-192fc7862f1f",
        "cursor": {
          "ref": "ab1be437-8b32-4982-ab73-8c37bfd0cb83",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "891896fa-940d-4c49-a7c5-2d71e9cee52f"
        },
        "item": {
          "id": "7ec8f260-9a5f-4742-a56e-192fc7862f1f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7e0c8af6-1ceb-4d9b-8db1-b72b8283d453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920809e0-cb93-47d4-b047-6b3c3c98ad94",
        "cursor": {
          "ref": "041bcc65-396e-4098-83d4-e9ae020c5bbc",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ecc5fdf8-cf82-4203-85f7-a04ef15d5cef"
        },
        "item": {
          "id": "920809e0-cb93-47d4-b047-6b3c3c98ad94",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "46ccf1bf-6048-46de-af01-f94359a5aeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc85ab7-8802-42bd-8e38-c938a219fcaf",
        "cursor": {
          "ref": "438b3960-a30e-4968-8ca3-a84c86bc6759",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f71d47d2-2d0a-4d14-9499-611a213f07b2"
        },
        "item": {
          "id": "dfc85ab7-8802-42bd-8e38-c938a219fcaf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "820303c5-f8fa-46b8-b306-51e1502fa9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731a7bd9-9bdf-4d60-8dc4-7aae97d35bcc",
        "cursor": {
          "ref": "b1184c21-ebbe-4fea-81cc-29b739fd1fda",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2db3a402-8e12-41ba-b37b-084cc6ca5f16"
        },
        "item": {
          "id": "731a7bd9-9bdf-4d60-8dc4-7aae97d35bcc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "32b3b494-f6fb-47da-9dec-92364d2a2c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35588561-4332-4d58-bb82-7c43e7749d08",
        "cursor": {
          "ref": "6824d761-d716-4ce7-b307-9bb018d59060",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4461b6fc-cac7-4ab9-b3fa-371c9a3d88bc"
        },
        "item": {
          "id": "35588561-4332-4d58-bb82-7c43e7749d08",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f2f147fc-079c-423e-bf94-a687c6d82366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3078979b-9740-4e1e-89a2-f10ddb773e40",
        "cursor": {
          "ref": "06e7f50c-cebc-4c2b-bf55-f6919428b317",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "325eea8b-e7e8-4734-9a48-8a8ae2dbebb5"
        },
        "item": {
          "id": "3078979b-9740-4e1e-89a2-f10ddb773e40",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "85ce4053-c9a6-45e5-a7b1-aab4ffcbcb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 821,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d9693c-33b7-4264-a0b4-a4255e9fe288",
        "cursor": {
          "ref": "b9caa579-37f2-4c73-968e-1a321ad1c798",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e78ad6b1-d032-4802-9d5e-c10d2dcac699"
        },
        "item": {
          "id": "48d9693c-33b7-4264-a0b4-a4255e9fe288",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f8ab2902-66e4-4196-bd52-9c9e1d738d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e5f372-4924-480a-9c86-49ddd4b21f72",
        "cursor": {
          "ref": "839f9d6b-7b7f-455b-a06a-ecec49d28d3e",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "83c46534-707d-4627-a829-7d99affd5004"
        },
        "item": {
          "id": "c1e5f372-4924-480a-9c86-49ddd4b21f72",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5de0b580-7f08-42ec-a26a-6481cfc42cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c83889-c366-410f-99b2-fce469d5f1e3",
        "cursor": {
          "ref": "2f798dba-872f-4627-9e55-36cdbe4f3f4d",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "12a75492-60c2-4511-a145-6024399dfd24"
        },
        "item": {
          "id": "d0c83889-c366-410f-99b2-fce469d5f1e3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2a43d04e-9a9e-4e21-87ce-89f186d0aed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f478f67-5df5-450b-a882-30718fa02e44",
        "cursor": {
          "ref": "dc0a9b6a-1943-493a-96bd-edcfee844e44",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "56564eb6-5692-44c2-a745-be0efa59d27e"
        },
        "item": {
          "id": "1f478f67-5df5-450b-a882-30718fa02e44",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7237e02c-a084-48c2-9fd6-252d3ea96b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7c632d-00b0-4431-9ba3-289b000e39e6",
        "cursor": {
          "ref": "fef4a8b0-19f2-4c1b-b8fe-ff60b0114b54",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e8eb08dc-550e-46de-8a37-e4f2084c803f"
        },
        "item": {
          "id": "0c7c632d-00b0-4431-9ba3-289b000e39e6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "46b0c0f7-14de-4932-a492-49e6e72a1fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2867e7-4cce-488d-82f5-2c66215cac72",
        "cursor": {
          "ref": "196d30df-7531-4dd6-a6b1-5e526691b57c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "09531078-8cb8-4381-a3ac-b1223e44ca92"
        },
        "item": {
          "id": "1b2867e7-4cce-488d-82f5-2c66215cac72",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "91512aef-2eb8-432c-8f20-cab46f19b683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2462c45-dc99-4195-bf46-569168290bc4",
        "cursor": {
          "ref": "115fcdb2-787e-4b1e-92de-707e6a691612",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7f40831b-74dc-41dd-af55-584617eec44b"
        },
        "item": {
          "id": "e2462c45-dc99-4195-bf46-569168290bc4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1a9a08ed-a9c5-4c53-a790-6ad218dc3a0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2384a15-7aee-4437-a21f-4382caed4b46",
        "cursor": {
          "ref": "ee36ed4a-18d7-403f-b7b9-4fc11bc5b0e0",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "157d5c33-e678-4a69-b39c-3e96d0b39350"
        },
        "item": {
          "id": "e2384a15-7aee-4437-a21f-4382caed4b46",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "cffcead7-6bc0-47fb-9ebb-d9cc2a6846ba",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 602,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fd958e-8128-465a-9660-67d7b97b90f3",
        "cursor": {
          "ref": "4ea9ff1e-5e13-4e7c-be00-b9e92695dfd6",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "be4f0cfa-a885-467b-a7a6-cac6ac96b145"
        },
        "item": {
          "id": "60fd958e-8128-465a-9660-67d7b97b90f3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a9476671-6ddc-4663-bc45-0eeca914bc8b",
          "status": "Created",
          "code": 201,
          "responseTime": 6220,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f98192-fa99-45c7-9156-447cdb7854ba",
        "cursor": {
          "ref": "fa45445b-1866-45e3-9fc3-f146d1664606",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "567a7705-e38c-4faf-9606-a4debada2ca3"
        },
        "item": {
          "id": "c9f98192-fa99-45c7-9156-447cdb7854ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "004669c4-f9ff-4586-b399-d9eb47d723d2",
          "status": "Created",
          "code": 201,
          "responseTime": 7259,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed275d6-48d1-43ec-a9c4-4a1420f977b2",
        "cursor": {
          "ref": "e9994630-d7cb-45a6-8851-c182bb5a0851",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fb1c42e4-4e64-4306-b831-cf0a7a4c3908"
        },
        "item": {
          "id": "6ed275d6-48d1-43ec-a9c4-4a1420f977b2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3dfcb804-40d8-42f9-9d91-41fe547a78e1",
          "status": "Created",
          "code": 201,
          "responseTime": 8707,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a60da9-8676-40ac-be11-7125936a34c8",
        "cursor": {
          "ref": "6b0c4433-9d84-437b-8b0d-5117270636d3",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a9cb4ace-a4e5-4154-a29a-5f76d91800fc"
        },
        "item": {
          "id": "f4a60da9-8676-40ac-be11-7125936a34c8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ce3698ca-40a6-4132-83a2-82cf47ba95e7",
          "status": "Created",
          "code": 201,
          "responseTime": 5485,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4793568a-72c8-46f4-9ed0-2da3947eb9f1",
        "cursor": {
          "ref": "301ad285-7912-4e17-9054-f7b844d77efc",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "87ca104f-580a-4dd5-a327-d877082ca0d3"
        },
        "item": {
          "id": "4793568a-72c8-46f4-9ed0-2da3947eb9f1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e53e1f90-328d-4beb-a30a-3ec35308dd56",
          "status": "Created",
          "code": 201,
          "responseTime": 6470,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "da768082-812b-4401-9203-a73081a439f4",
        "cursor": {
          "ref": "3c0fff02-7c17-448e-bc76-b484a2de405b",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "645d38ca-281d-487d-81c9-0851afec8b7b"
        },
        "item": {
          "id": "da768082-812b-4401-9203-a73081a439f4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "423cfd48-e6e3-4301-b1c2-914fb80d72a3",
          "status": "Created",
          "code": 201,
          "responseTime": 7287,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa7b783-bdf1-47ba-87f1-b352838f6fcb",
        "cursor": {
          "ref": "d7f32218-0033-4505-b432-8ac2c4682b9f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48984343-809c-4c6f-a136-46e746bab32d"
        },
        "item": {
          "id": "0fa7b783-bdf1-47ba-87f1-b352838f6fcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dff00341-626b-4bb3-af43-321110229ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa7b783-bdf1-47ba-87f1-b352838f6fcb",
        "cursor": {
          "ref": "d7f32218-0033-4505-b432-8ac2c4682b9f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48984343-809c-4c6f-a136-46e746bab32d"
        },
        "item": {
          "id": "0fa7b783-bdf1-47ba-87f1-b352838f6fcb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dff00341-626b-4bb3-af43-321110229ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a015bc90-d34f-429b-a5ea-cfe2fe3f4aa3",
        "cursor": {
          "ref": "62c494f8-46e7-4f15-974b-26f8237a2419",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "155c86c2-e629-499b-830c-50ca0a64b517"
        },
        "item": {
          "id": "a015bc90-d34f-429b-a5ea-cfe2fe3f4aa3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "67c9b5ef-deed-4da2-bb7f-0ea3739b414c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9236e18-3216-4cb5-a83d-e7b34c8a19a8",
        "cursor": {
          "ref": "c0300ad0-5dea-45b5-99b8-9030cffb92dd",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3957ca69-6daa-4421-a421-8873fba22e38"
        },
        "item": {
          "id": "b9236e18-3216-4cb5-a83d-e7b34c8a19a8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "16218076-2f8a-4f94-905a-6d2dda8312c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf435e-78fd-4cd0-9da6-59cc740d407c",
        "cursor": {
          "ref": "c4fa219f-8bfb-4e06-9ce2-28e3e727129e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e7590d83-03f0-4648-ae3e-c23e177820e3"
        },
        "item": {
          "id": "f8bf435e-78fd-4cd0-9da6-59cc740d407c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6b20c0bd-c877-426b-80ec-3381c68ee342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56a354f-de2a-4b0d-8447-a660099ee290",
        "cursor": {
          "ref": "7022dedc-caea-4189-8035-9230a89c3d5d",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6bce6965-5114-4831-8782-d78fe3167b3a"
        },
        "item": {
          "id": "c56a354f-de2a-4b0d-8447-a660099ee290",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7209f2a3-c874-4524-a46f-b0beac8c845c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6658fa48-4133-48dd-9a79-74929fcf259b",
        "cursor": {
          "ref": "12ce5fe6-98e4-4c0e-b5a3-2897b974a9b3",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3c987b26-272b-4f5c-9a85-3b4600740189"
        },
        "item": {
          "id": "6658fa48-4133-48dd-9a79-74929fcf259b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "db4997a0-3f8a-4fb7-8958-54444aa0ead2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1721aec-79b6-4536-b775-7c78abb4545e",
        "cursor": {
          "ref": "6b6d69b5-d961-4337-bea2-1bc050511e57",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ad0bf74e-1cc9-4dd2-9ce7-f55e29133c96"
        },
        "item": {
          "id": "c1721aec-79b6-4536-b775-7c78abb4545e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "30207e00-5d56-44d6-a355-c254fe9f297e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5681a48-c0ec-4ef1-a6ca-534b1e050147",
        "cursor": {
          "ref": "8ced4be3-3647-4bc9-a498-83c008dc21e1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "db3e7ea6-f524-4ef8-8160-9b7b453e9a67"
        },
        "item": {
          "id": "c5681a48-c0ec-4ef1-a6ca-534b1e050147",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5f85a02e-6a04-41a8-b193-494f0d7bb41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee1652f-1cb7-43c9-8145-bcb69efcf4e5",
        "cursor": {
          "ref": "84b74a1b-0f61-4920-b358-aefdcb1d1ed0",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0a1821a3-49b6-4d6b-af99-f49be0861098"
        },
        "item": {
          "id": "aee1652f-1cb7-43c9-8145-bcb69efcf4e5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b540543-0837-4744-98e3-5b3d84802e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a1e025-5ad1-4621-8724-692eb6ca2898",
        "cursor": {
          "ref": "ee334dfa-e7a5-4bf0-81ea-82e3effd16c2",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ced0ebbe-ef91-4715-9acb-b4709cfa6c33"
        },
        "item": {
          "id": "24a1e025-5ad1-4621-8724-692eb6ca2898",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7ea8e406-1815-48f0-b3cf-38335980b8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec737c0-ae31-49c1-a76c-65133f222ae2",
        "cursor": {
          "ref": "ba8a2cc3-67ee-462a-85b1-31c16111a840",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "abed8d5d-2c61-4a7f-bd08-2a4343d6c9d0"
        },
        "item": {
          "id": "aec737c0-ae31-49c1-a76c-65133f222ae2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7ae03246-e534-444c-b8d7-0cb554511e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8bc09c-4eca-43ab-bf6f-abbbbfba018a",
        "cursor": {
          "ref": "d7e28c7c-7561-466e-813d-6fb1ef12b948",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b12e14fb-2f00-4f64-9b7b-4f5f357cc362"
        },
        "item": {
          "id": "5b8bc09c-4eca-43ab-bf6f-abbbbfba018a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "198c0a5a-01c5-4f22-8690-ba6c1015f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 865,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce1e3ee-bd90-46ce-ac80-66bc6f825f9f",
        "cursor": {
          "ref": "93262de9-53ef-475f-824f-bb7112a72779",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0a8913b9-ab17-494d-8b96-7769a85c91c2"
        },
        "item": {
          "id": "cce1e3ee-bd90-46ce-ac80-66bc6f825f9f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d4215632-c06e-4544-a87d-710e5ce15cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e979a6a-bd97-4580-8bff-56a0eaaea413",
        "cursor": {
          "ref": "cc7d044c-cffb-45a4-9dd9-14135fa3183d",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "af48018e-a836-45ab-a47e-e2bd9dad71ac"
        },
        "item": {
          "id": "9e979a6a-bd97-4580-8bff-56a0eaaea413",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f17e10b8-189a-48e8-9b4b-f47450296d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454a4576-409a-4373-baba-6e026ea514ab",
        "cursor": {
          "ref": "48af66be-84cd-48c6-a696-dad3cf2c0c5c",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1bc7f405-022d-4991-8e52-613142f42d42"
        },
        "item": {
          "id": "454a4576-409a-4373-baba-6e026ea514ab",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "23aec46c-2800-4b91-8e45-fa6f37c50d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c8c8ab-f7cd-4598-8ab5-aa5f6c6a8d28",
        "cursor": {
          "ref": "025a2f88-832f-48f7-a936-93f814367ec2",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a4001105-e5e0-4d3c-90f4-6ae6e7c23a39"
        },
        "item": {
          "id": "a5c8c8ab-f7cd-4598-8ab5-aa5f6c6a8d28",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "7420a1a6-c7e8-47aa-b7b2-25318ae62e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f18f057-8aa1-47ee-bf86-6088e22e809b",
        "cursor": {
          "ref": "3852716a-4995-4fdd-b5b1-01f5c584b878",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1976d16b-f651-4a97-8658-fb41a35adf95"
        },
        "item": {
          "id": "3f18f057-8aa1-47ee-bf86-6088e22e809b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1d2fbae2-6d1a-44b1-8dcc-b3792844b140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac56af1-6b03-4c30-a001-fd672f6cc338",
        "cursor": {
          "ref": "ab50a845-b505-4e44-9374-55861fd090bd",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dac0cb4d-f43a-443a-8e7c-d1b748f2c0d5"
        },
        "item": {
          "id": "0ac56af1-6b03-4c30-a001-fd672f6cc338",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "24650d6a-5f92-46c0-94f2-0475403642f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99887b08-5c83-40bb-ad17-13c58ddadc09",
        "cursor": {
          "ref": "5c4c984a-962e-4b52-9d81-4f29e71278c7",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "55dc2f17-381c-4233-995a-ae827e6f964a"
        },
        "item": {
          "id": "99887b08-5c83-40bb-ad17-13c58ddadc09",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2ad5bf2b-c8bf-4b29-be62-d159ae939005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02973910-442a-448e-8196-950706245898",
        "cursor": {
          "ref": "bc019e8f-fd46-4983-b553-3c5178301591",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d8c4fe08-e55b-4776-8de0-2a51f32245e6"
        },
        "item": {
          "id": "02973910-442a-448e-8196-950706245898",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cecc9e51-158d-48fa-89b5-025a2a50f9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdfbd4f-50b9-4b96-8a1e-4d69dd3e3de4",
        "cursor": {
          "ref": "70ff601c-43ee-4d90-9810-c2e7d5fece99",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "48232ad6-8a86-4601-86b9-2f9132522336"
        },
        "item": {
          "id": "6fdfbd4f-50b9-4b96-8a1e-4d69dd3e3de4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b11c73f-726d-43f3-9222-fd33b9717e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec1b6c3-d909-4399-8348-c79deabc2ab1",
        "cursor": {
          "ref": "e75803a9-fce6-4d37-a0c2-cf13baff9eb2",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "598dcf5b-3fa7-4fe4-89cb-cc973509be1d"
        },
        "item": {
          "id": "dec1b6c3-d909-4399-8348-c79deabc2ab1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "06eb83af-9239-4373-8f0f-c2e651292385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cfba7b-697e-4910-9603-0b09515719ab",
        "cursor": {
          "ref": "27d36ff2-7bf1-429a-af78-dc21b22fdf3d",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f3db921c-a5fe-42c4-a411-6c201ac52f78"
        },
        "item": {
          "id": "51cfba7b-697e-4910-9603-0b09515719ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f4119111-ceaf-4fbf-9f22-a4fb63c6a231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adc9e97-d83c-4e50-9a96-bda2bd0c4569",
        "cursor": {
          "ref": "af3398bf-932a-4428-8c51-88ca4609fe53",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8a4874ca-4db1-4c7c-aa4e-bfddf9d33eba"
        },
        "item": {
          "id": "2adc9e97-d83c-4e50-9a96-bda2bd0c4569",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5898fef3-9b40-43fb-9ddb-dc691c95fee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27400f55-b058-49b6-a7f9-6739150c8cc4",
        "cursor": {
          "ref": "acb8c968-e672-4957-b1ab-34ea9cc9cd08",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0279710b-793d-4d6a-964d-8753adcb1ae0"
        },
        "item": {
          "id": "27400f55-b058-49b6-a7f9-6739150c8cc4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "238d7066-8245-4f66-91f7-104fbf83456b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71863ec-3a23-4f54-ad83-a2c014b72e72",
        "cursor": {
          "ref": "2341ade3-d209-4137-bbc4-082c92d97724",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "da5634ac-d1a0-4310-9f44-509e8aef67f5"
        },
        "item": {
          "id": "f71863ec-3a23-4f54-ad83-a2c014b72e72",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "221f7ed4-6d5c-4b1b-98e3-d6f418e9b7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d830a3-0e42-4b20-9eb2-0c269cbe45fe",
        "cursor": {
          "ref": "cded02ea-573e-4976-8e42-cefb36002930",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "fe4c9040-f1d7-452e-bffc-caa25e7398cf"
        },
        "item": {
          "id": "62d830a3-0e42-4b20-9eb2-0c269cbe45fe",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "089d4963-623b-430a-98f7-d7e9162d50c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d210e537-c8cb-41cf-b734-82bf10c42c72",
        "cursor": {
          "ref": "14b164df-fa10-4cbb-a74a-bcba829a2276",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a2094096-95c0-4353-9eb6-c2efb7ddacfd"
        },
        "item": {
          "id": "d210e537-c8cb-41cf-b734-82bf10c42c72",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b983046f-cfeb-495a-975d-7437078bd085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e0cfaf-3397-4f47-b172-33872357840a",
        "cursor": {
          "ref": "544c7848-c827-49f8-8f07-9d1500e59bd9",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "69c4ae3d-c5fc-43fb-8f41-fc9bc817bfb3"
        },
        "item": {
          "id": "e0e0cfaf-3397-4f47-b172-33872357840a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a2c5385-149c-4f68-a0b3-9b823d6eb583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b97558b-a601-41dc-b069-1fbcabc326ef",
        "cursor": {
          "ref": "b51d6b45-5b5f-4ea8-9534-2732d501b43b",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ddeddd3-8d51-4909-93a4-9d479fe93a50"
        },
        "item": {
          "id": "4b97558b-a601-41dc-b069-1fbcabc326ef",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "eea990fc-4ddf-4d68-bae7-b6f84ff7e0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d5cd4b-342c-4c6f-a341-10acf4bae06d",
        "cursor": {
          "ref": "00a1dcd3-22c0-4990-ad45-d29c60fb7b5c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "cfd26119-072f-4eed-8343-53daaa5cacf6"
        },
        "item": {
          "id": "f3d5cd4b-342c-4c6f-a341-10acf4bae06d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6f2ae8a3-f9cb-4c87-83cb-3e7d48fe3a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a7a611-11aa-4552-9d46-ac4908d09c02",
        "cursor": {
          "ref": "81240629-b668-499c-b8d9-49f6ec8c73b5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "dfa78e5c-dfdb-4175-8adc-3d54e0e742b6"
        },
        "item": {
          "id": "e8a7a611-11aa-4552-9d46-ac4908d09c02",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "849ba369-6a48-4ad7-ab31-d02f78d28210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bc6a27-4038-4f92-9cf1-440c9a375406",
        "cursor": {
          "ref": "6b317439-94fc-4f4a-9350-d6ee02258021",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ad95f8e9-d948-41fd-8999-893829ff0593"
        },
        "item": {
          "id": "d0bc6a27-4038-4f92-9cf1-440c9a375406",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9a1e0ce-a4a7-449c-a30f-9bb4857ea075",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414e958d-f69d-46c7-8db5-3b278e467740",
        "cursor": {
          "ref": "43a2aa8b-a8e8-41c1-a5c0-5d0dbb57b02e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ddb66e7e-0ded-4104-b0cc-9bf1ba130cfd"
        },
        "item": {
          "id": "414e958d-f69d-46c7-8db5-3b278e467740",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f36506c4-cecc-4cdf-891b-3eee100ea3f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1078,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c83db06-6f47-483b-84e6-f7f573af77fe",
        "cursor": {
          "ref": "60cb3b34-51cc-4524-9e06-e987e37a87a2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7b1b4631-6c82-4da3-b220-4f6b98d5bd90"
        },
        "item": {
          "id": "2c83db06-6f47-483b-84e6-f7f573af77fe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e2fedec4-7828-46e1-bec6-20fd8805f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c83db06-6f47-483b-84e6-f7f573af77fe",
        "cursor": {
          "ref": "60cb3b34-51cc-4524-9e06-e987e37a87a2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7b1b4631-6c82-4da3-b220-4f6b98d5bd90"
        },
        "item": {
          "id": "2c83db06-6f47-483b-84e6-f7f573af77fe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e2fedec4-7828-46e1-bec6-20fd8805f7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1135,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dd744c-200f-4c1d-addb-1cb6d8d615aa",
        "cursor": {
          "ref": "f56ead80-42f1-432f-829c-2e8113db05e9",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2b8929ac-1f0b-4adb-8da0-edda3397e95c"
        },
        "item": {
          "id": "f3dd744c-200f-4c1d-addb-1cb6d8d615aa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f6abf638-3e8d-4fe3-bfd9-6723b5983773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "322aab57-2f70-4cac-a853-af2bdf795aa5",
        "cursor": {
          "ref": "c041f5d0-c86c-46b4-a24f-c6ca95fe8f88",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "30ac06cc-b591-4dc6-b745-8e0470895196"
        },
        "item": {
          "id": "322aab57-2f70-4cac-a853-af2bdf795aa5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "268f64be-c85c-452f-adb6-5e27b3f9631e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1396,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78391361-3fd8-44ad-ab66-c6734a8a1e87",
        "cursor": {
          "ref": "310488d3-5cc4-44ea-a5c0-ccac0a9ad335",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0b18ec07-c6f1-4e45-8a3c-a604747a1f4b"
        },
        "item": {
          "id": "78391361-3fd8-44ad-ab66-c6734a8a1e87",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fb666cb2-ff62-4267-bcc7-b2942c2da85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1047,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45936f8a-e401-4f05-b778-b9030f31dc7c",
        "cursor": {
          "ref": "06aab769-c822-4798-a468-222405c71cb9",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1de4aeb2-f38b-46d0-abd7-5e8c8a26609f"
        },
        "item": {
          "id": "45936f8a-e401-4f05-b778-b9030f31dc7c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d9edb341-f513-4a03-912d-96daa39bce0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb2bb2a-dafe-4d88-8a7c-7a513b3f389e",
        "cursor": {
          "ref": "805e35da-dc69-4a03-8c54-3abf3a3d673b",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "07022096-2360-420c-9e9a-26e71081a3c8"
        },
        "item": {
          "id": "5eb2bb2a-dafe-4d88-8a7c-7a513b3f389e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1592114f-d432-4fc5-9d25-07e805edf7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed412bd-e8ac-40f0-afbf-ef1e6b59132d",
        "cursor": {
          "ref": "0fa3a08f-c80d-42d2-882b-1a81a16fa3f5",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "af2dc6f9-6fe3-4438-8344-760b0503d803"
        },
        "item": {
          "id": "7ed412bd-e8ac-40f0-afbf-ef1e6b59132d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cb008a72-e7cd-4130-b986-5cfa4fffdd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbeff9e-a827-461a-9be0-aad96e2c1388",
        "cursor": {
          "ref": "ff30714c-426b-4bde-aa5e-67a2e9618b4e",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b6223d67-60ca-4823-8981-4a28e5b12077"
        },
        "item": {
          "id": "edbeff9e-a827-461a-9be0-aad96e2c1388",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f3ce505c-8182-4bba-b34c-48af6bf47c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4321be0d-2b3b-42ce-bfa7-a464c41d13f2",
        "cursor": {
          "ref": "676ce2cd-84ca-4a22-a75b-53511a6fea0e",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5985d93c-7a09-477b-958c-0fc688dc2266"
        },
        "item": {
          "id": "4321be0d-2b3b-42ce-bfa7-a464c41d13f2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "008f7656-d218-4410-90c7-5d5c5e61dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65d2134-bdc0-4725-817c-69fefc351488",
        "cursor": {
          "ref": "45bb663a-af9c-495a-aa72-863809392c40",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5270f0d3-b8b5-4533-8993-7adc40520018"
        },
        "item": {
          "id": "a65d2134-bdc0-4725-817c-69fefc351488",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0bab3777-eac1-4bae-89c6-9bea59581b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd49c0c8-23ec-4b7d-85de-31aa1b34f3c7",
        "cursor": {
          "ref": "e4bbc5e2-a982-4fa7-b25c-9082c7980a9f",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "30839210-b31e-43ed-998d-fb48f3232287"
        },
        "item": {
          "id": "fd49c0c8-23ec-4b7d-85de-31aa1b34f3c7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "baf5ce55-0103-41c4-bf88-24e2034eb601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba11b00-9c38-4800-8014-8cac8953cf06",
        "cursor": {
          "ref": "b28c3a30-5e6f-41ec-b4e0-64a037dd5a93",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "89ecd38e-8eb2-4d3e-a1f2-2db780f0881a"
        },
        "item": {
          "id": "8ba11b00-9c38-4800-8014-8cac8953cf06",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b6b90575-acb3-4f68-b619-e000544aca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa43e2d-b69b-446f-9975-35aff91285d3",
        "cursor": {
          "ref": "e11019fa-9086-461a-bdd1-b206224d80ed",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cdcbd5d2-2b14-49a6-9907-a1311a4a825a"
        },
        "item": {
          "id": "5fa43e2d-b69b-446f-9975-35aff91285d3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8b5dc401-d498-4668-b8a3-56e0cdf4aba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f707e1f-4fa6-4b4f-92d4-7deaecf8950a",
        "cursor": {
          "ref": "da6e9a2f-a172-4223-9f31-90e10d812c6c",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "440c97ba-2d62-41a3-9b62-701acaa74c10"
        },
        "item": {
          "id": "3f707e1f-4fa6-4b4f-92d4-7deaecf8950a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d8ea16c7-f9b7-40b0-b2d1-9e7a2cb25733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ee73a0-533b-4f99-84f9-a4e02c7f2460",
        "cursor": {
          "ref": "66ddd8ad-5f4a-45b0-9678-0907e013ff0c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "65ce9ad2-01d8-4b6e-9c6b-1167057772fd"
        },
        "item": {
          "id": "47ee73a0-533b-4f99-84f9-a4e02c7f2460",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b8f4a7e3-7384-4f6e-97c9-b797a7f6e288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3865854b-0695-4af3-9e75-00365e9d3aea",
        "cursor": {
          "ref": "4c165ea1-4d35-48e1-9040-31fe4df4da51",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c8295d22-8d50-4c1a-867c-f07aac7474b9"
        },
        "item": {
          "id": "3865854b-0695-4af3-9e75-00365e9d3aea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "68d74a9a-f750-4e3f-ad66-df835cf1da5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbc4b9a-cf3e-4dd6-aa9a-ddf5b2fc6ed8",
        "cursor": {
          "ref": "d02f02f9-e27b-4a06-ae05-a5cdfced8bdc",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e16cc9c6-4f0c-462f-b6d7-79747d380ac9"
        },
        "item": {
          "id": "adbc4b9a-cf3e-4dd6-aa9a-ddf5b2fc6ed8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "59b1181c-effc-4f9b-b5a3-0b5401cf888a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ba5269-eb6d-4437-a032-b3d11dd66f6c",
        "cursor": {
          "ref": "55298918-45fd-463d-8d9a-363b1d9bae79",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "93f93f73-cff0-4cd4-a63b-68f5e048b1ab"
        },
        "item": {
          "id": "c0ba5269-eb6d-4437-a032-b3d11dd66f6c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "633cc134-51cb-40e2-8378-fa861f755521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a847812-4976-4450-9866-92fecf1f675e",
        "cursor": {
          "ref": "30f314b3-db77-4a3a-9b92-dc37b50e80c2",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7515e2d2-709f-417a-8f0a-76d796134fea"
        },
        "item": {
          "id": "4a847812-4976-4450-9866-92fecf1f675e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "804f8239-6709-45d3-a7aa-f042d17acb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e7f2c2-4a66-4690-be04-41016ed41ffb",
        "cursor": {
          "ref": "e264ff35-b95b-41a8-9ed8-69671dbcd456",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "613d3305-877a-400e-80a2-614951272470"
        },
        "item": {
          "id": "a1e7f2c2-4a66-4690-be04-41016ed41ffb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "99a172ad-d946-4aaa-a454-6efa403e56de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cbc723-80b2-4924-8c98-b05d71ccdabe",
        "cursor": {
          "ref": "b644a961-e23b-4aa1-9862-1284b3720e36",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bd77e0fa-8577-4297-aaf0-46fac185daa0"
        },
        "item": {
          "id": "17cbc723-80b2-4924-8c98-b05d71ccdabe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "68255b37-a08e-416f-bcd0-cc58d61299ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cf66ae-d1b7-432b-b616-f6cb56e40774",
        "cursor": {
          "ref": "84a413d9-98ec-4cf3-a69e-15f35ddb88b2",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5f082f66-0afe-4e30-9c3b-3ae6dfdf046a"
        },
        "item": {
          "id": "d9cf66ae-d1b7-432b-b616-f6cb56e40774",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "97c288e6-f5a5-4f6a-bb09-0810cd6ba4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7ccf61-9b4f-4e19-bca9-2e87a8a5affa",
        "cursor": {
          "ref": "f0f173f4-5639-4143-8ca2-4c3efca8fe72",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1b0a3770-1dd3-47f3-92bc-4a6f3cc4961e"
        },
        "item": {
          "id": "0a7ccf61-9b4f-4e19-bca9-2e87a8a5affa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a5e904c3-8a87-472c-acac-c74a89a6a43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2692172c-a99c-4a1a-905f-8372534d2910",
        "cursor": {
          "ref": "761f4f5f-72cd-41db-a305-bdecc9984b92",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "442d3e32-39af-47e8-b16d-83aab2701b06"
        },
        "item": {
          "id": "2692172c-a99c-4a1a-905f-8372534d2910",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "21daf756-4340-4fb9-809e-9d0e7f03601d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a7a96-b65b-4a86-b2d7-c724d7ae683d",
        "cursor": {
          "ref": "2836ac93-8acf-44cc-ac4c-02d9153f2a94",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc70462b-2b24-4f06-b6ea-50aa3d598f09"
        },
        "item": {
          "id": "1a5a7a96-b65b-4a86-b2d7-c724d7ae683d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1a8507f2-f14e-4eee-b5b8-d0de84de98e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f63960-2caf-4816-848e-d4ae2206e807",
        "cursor": {
          "ref": "e7558f13-635f-4a2d-9d6c-cce9b0a448d4",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cbbadeb0-3c01-4949-966d-a8a18fcee134"
        },
        "item": {
          "id": "d7f63960-2caf-4816-848e-d4ae2206e807",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "84fffb91-aaa7-498d-ac48-e2a00f70a4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4058412e-e5c6-4da1-848d-4719637f4754",
        "cursor": {
          "ref": "d62cb69f-b60e-4760-94d2-55c203dfcd6d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "97d17da4-7404-4374-82ac-2fb1d802e894"
        },
        "item": {
          "id": "4058412e-e5c6-4da1-848d-4719637f4754",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ccd3f5d1-73fd-41e3-8162-d72ed7fa52bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3bd183-55f7-42b8-8300-2cedc49d2ac8",
        "cursor": {
          "ref": "2e857d60-f9a8-4a74-ad73-f369bc35cafb",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "89756e2b-700b-476c-91b0-8e380d6f1f9e"
        },
        "item": {
          "id": "8d3bd183-55f7-42b8-8300-2cedc49d2ac8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4bff4ac2-9da7-43e7-a30a-c14013dfd176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8faa933e-bd47-47ce-834d-1d94ca4e0c7b",
        "cursor": {
          "ref": "72bce8f3-1a9c-4c69-8cfa-d497552af90d",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2917ff49-d253-44ea-966f-1c9140265051"
        },
        "item": {
          "id": "8faa933e-bd47-47ce-834d-1d94ca4e0c7b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8067aa7d-ff06-4e34-a47c-3dba31399c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a662c2a2-f773-49a7-88a3-bf0bb4c0670c",
        "cursor": {
          "ref": "3d9b4dc4-099d-4ab8-b75f-73542dca5352",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6ffb037e-d58e-4b53-b09f-28b40334071a"
        },
        "item": {
          "id": "a662c2a2-f773-49a7-88a3-bf0bb4c0670c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3bd90aae-9f8c-4b28-8cf1-e12da585ad54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b3d61-2ee4-435c-9b81-bd2bb3a5e7c5",
        "cursor": {
          "ref": "f569c227-23dc-4ea5-921a-3d1dba7da86a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "50d78a56-0a43-4a75-9705-8e247bc10026"
        },
        "item": {
          "id": "256b3d61-2ee4-435c-9b81-bd2bb3a5e7c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f67f3a39-1c39-422b-9d86-fb7050847859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d0a43e-ef33-4502-ad4a-87fbf65b527e",
        "cursor": {
          "ref": "7978e087-76f1-46be-8b85-799307dc7092",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8f82bbea-2289-40a1-a272-0dfc98e60980"
        },
        "item": {
          "id": "80d0a43e-ef33-4502-ad4a-87fbf65b527e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4088817c-229f-4d94-ab97-e6c38f9beceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01306fa6-c60f-4b20-93de-1a35648617bb",
        "cursor": {
          "ref": "f654679f-c1cd-45e9-9b63-21033a9041c5",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d29a3ed7-b2e4-498a-a061-63ed4f35646f"
        },
        "item": {
          "id": "01306fa6-c60f-4b20-93de-1a35648617bb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b0e2b4dc-daf7-44f5-b0ec-d4601ff66ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d2b729-6bd4-4669-ac8d-9fa48367a804",
        "cursor": {
          "ref": "8b4d4e59-de0e-4268-ac17-e71224e86446",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "99fb4467-fb84-47d8-8665-beba52c7c1f6"
        },
        "item": {
          "id": "64d2b729-6bd4-4669-ac8d-9fa48367a804",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8c6af675-9a8f-4840-a037-84ee51137c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536c7ccb-4961-4507-89d3-83c6154f5022",
        "cursor": {
          "ref": "28074401-ad45-45b2-94a5-7621638b38fe",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0b8142ed-25e4-4a6f-8e87-3ffc0ebfc92c"
        },
        "item": {
          "id": "536c7ccb-4961-4507-89d3-83c6154f5022",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "68391366-c754-42cd-92c5-3169a15cd218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7299d7-ec75-4842-8973-6dce0cc294ab",
        "cursor": {
          "ref": "bfb5e737-c89e-4367-a0a4-243d0f6f60a1",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "945358a3-48ee-4e04-993d-04d4ec190ae6"
        },
        "item": {
          "id": "7b7299d7-ec75-4842-8973-6dce0cc294ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4f349348-bb29-428a-b850-c36c5be74b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3879426c-02e1-4a5a-80c6-588659411621",
        "cursor": {
          "ref": "211e404b-ab3e-4cfa-b5f5-d91adfd18ae7",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "19d6b8a3-7138-4eae-ab89-150858ebd7a2"
        },
        "item": {
          "id": "3879426c-02e1-4a5a-80c6-588659411621",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d262be64-f0cd-4f61-a5b6-57b3eadf2900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88f653a-6e20-4c8e-b4cc-61899f187a60",
        "cursor": {
          "ref": "7ec67b7a-6a56-4b6b-913c-a0b884d472e5",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4d6fb120-5b1a-4953-a7c5-aad7eeaf297c"
        },
        "item": {
          "id": "d88f653a-6e20-4c8e-b4cc-61899f187a60",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b9c262db-1d72-4860-a419-3affd64a01c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a649a7-855a-4da1-b0b1-495337f1397c",
        "cursor": {
          "ref": "8106503a-8390-48bc-ac77-5eb41dbf922b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c40a7964-90da-492c-bf22-858ffa7c25eb"
        },
        "item": {
          "id": "41a649a7-855a-4da1-b0b1-495337f1397c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "46542503-e2d6-401e-952f-7444342de26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc56b709-93f4-497c-8b03-e5ffaf1a160e",
        "cursor": {
          "ref": "797c21b2-4b5a-4453-a289-e32704f0a6d4",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "0445be1f-9a5c-4346-b72d-a8e9399d9bc4"
        },
        "item": {
          "id": "cc56b709-93f4-497c-8b03-e5ffaf1a160e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "bca7f2e9-1216-424a-8de4-b9591abffc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d956cf55-4aaa-475a-bb63-1c0d4f0cc0b3",
        "cursor": {
          "ref": "3523bb2d-3a38-443b-9496-bbf8b015db3f",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7f867aac-9c98-4fa9-8cde-8a684c1b0241"
        },
        "item": {
          "id": "d956cf55-4aaa-475a-bb63-1c0d4f0cc0b3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "73c2888a-5bd8-483e-b7df-08106b84cdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35d09a7-a3f6-4ba1-9d2b-d82cc1193267",
        "cursor": {
          "ref": "5d0a4f1b-b899-4fb3-bcff-42016c84868f",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64655059-5c42-4aca-9807-7236f5edda9f"
        },
        "item": {
          "id": "c35d09a7-a3f6-4ba1-9d2b-d82cc1193267",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "89b4e6d0-39bb-4253-8b0a-9b6b3473edf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 924,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca80172d-1bda-4113-aba7-ab6a7b2bd1aa",
        "cursor": {
          "ref": "05451f82-714b-4704-8ad7-48e082edb738",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4466a11f-15ef-4ea4-9e22-b240c24cf53a"
        },
        "item": {
          "id": "ca80172d-1bda-4113-aba7-ab6a7b2bd1aa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eee50c70-78fc-4dd0-bd83-341c709a5f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 923,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504f99b6-9e68-4186-b258-292cc5132ba5",
        "cursor": {
          "ref": "9e109f8e-c322-469c-adb8-7571b628bbe8",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "02bebf49-b37a-4e4b-8351-4cc35b125fab"
        },
        "item": {
          "id": "504f99b6-9e68-4186-b258-292cc5132ba5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "15fe33b5-1ec7-4b59-bc85-14b8d4c5bb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0596bf-4d6b-4619-9967-56a303bfc845",
        "cursor": {
          "ref": "d406274c-4eb1-48b4-8bb3-03a3f580f950",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4de7e052-9462-47ae-a57a-6db2f9f90412"
        },
        "item": {
          "id": "ac0596bf-4d6b-4619-9967-56a303bfc845",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d443a5f3-3271-466a-b1bc-d8aa037fe837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9007b39d-ef2e-497a-a8c3-7e405675b592",
        "cursor": {
          "ref": "cd4e2182-a72e-4876-b62b-3254efa19154",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3f34c0fc-8cb6-4c78-9c25-6c644079efa5"
        },
        "item": {
          "id": "9007b39d-ef2e-497a-a8c3-7e405675b592",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "43e02e25-c1cd-49da-af1e-07e1180bc53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f156e9-0b55-4e31-bccf-71cff4777512",
        "cursor": {
          "ref": "d1cc050b-a4cf-4abd-80a3-1812d90e56f0",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "dc1b417f-d42a-468e-8edd-ea7f1a3123a0"
        },
        "item": {
          "id": "94f156e9-0b55-4e31-bccf-71cff4777512",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9f70811c-8736-4ccb-8851-af533a1adf46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fac529-1b2e-47d5-af3a-a8999bf17a5b",
        "cursor": {
          "ref": "e26ee149-a2b9-4579-8fbd-86a7eed94ec1",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60f472c8-25ba-4f4f-b88a-fceb7fff8bcb"
        },
        "item": {
          "id": "e4fac529-1b2e-47d5-af3a-a8999bf17a5b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "637591bd-6cbe-4af8-87d3-1aa1732ba67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc643d0f-47b8-4e87-84ca-e54593ee6853",
        "cursor": {
          "ref": "883f75b2-3884-44af-9938-5a8dffca51f3",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a1ec0c64-fec2-4575-9a0d-a0a6bc05c844"
        },
        "item": {
          "id": "bc643d0f-47b8-4e87-84ca-e54593ee6853",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fbaeeaa7-4b9e-450a-a858-3cfa2ab88cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc74034-d2c8-42b4-8ce9-bb0b4eab2854",
        "cursor": {
          "ref": "e28573d6-397a-4aad-868f-911cbf3f7410",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "21228f0f-8857-4d7f-9fcc-6108936786f6"
        },
        "item": {
          "id": "acc74034-d2c8-42b4-8ce9-bb0b4eab2854",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c718ffd4-f44c-4ee4-81b2-2b3aab2d1c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bc731f-8229-4a44-907b-d330d463d05e",
        "cursor": {
          "ref": "a3d07130-b32a-43c6-a981-ca9c41dbf6b8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "76bf7caf-6175-419f-b2d2-f3700e7200ac"
        },
        "item": {
          "id": "f6bc731f-8229-4a44-907b-d330d463d05e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "57bc2402-81a5-4ea7-9c81-bfecad7492c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e370d188-6b3c-42e1-a6e1-283aba59b011",
        "cursor": {
          "ref": "677117af-dcc6-43cd-95f6-ded83f0c31c9",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "53ec7161-b5a0-4a60-81ad-0d88abc869c0"
        },
        "item": {
          "id": "e370d188-6b3c-42e1-a6e1-283aba59b011",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "8b77298a-9fb2-43bc-8dab-8e5b95262d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d119a1d-c957-46fe-8728-c567547db591",
        "cursor": {
          "ref": "4285ec9c-2e2e-45fa-a2f1-565e96d35340",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9b32fafc-4c8c-46fc-849d-e29650e0e483"
        },
        "item": {
          "id": "3d119a1d-c957-46fe-8728-c567547db591",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5c6ff886-eeee-4a5a-946b-ceccc5559ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9400ac7-3133-42ea-9153-0bf0ec51c6d0",
        "cursor": {
          "ref": "0d260eed-7ff0-49a6-b8ed-66d0136ceeaa",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "538f772e-68b2-4ea3-9da8-941e8e0e29e5"
        },
        "item": {
          "id": "a9400ac7-3133-42ea-9153-0bf0ec51c6d0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3bcf7531-2111-43ca-aaef-9a311a59cdd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff33152c-41f7-48c8-9712-df2089706c1a",
        "cursor": {
          "ref": "ab4aa8e5-80c4-408c-a6c5-70fd85d8c2a0",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fdf7a956-cd7e-45ff-b5ea-441d72c77782"
        },
        "item": {
          "id": "ff33152c-41f7-48c8-9712-df2089706c1a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f550acf0-c360-48c3-9b79-0c3baa3a05dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6e175b-dc85-4fba-876a-71cf1f1a8d83",
        "cursor": {
          "ref": "12b06815-cb6b-42ef-a74a-7c237b465137",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8ec5d4c1-814d-4a44-ac8b-05d3022e7c67"
        },
        "item": {
          "id": "0f6e175b-dc85-4fba-876a-71cf1f1a8d83",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "49fd4c15-2db5-41a5-ac5a-515fa1b2bc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff71af5-7279-4447-ab1b-7a4cf884ef8d",
        "cursor": {
          "ref": "f4e6790b-4b8f-4d73-b36d-8d1257957706",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b352622f-3b58-4093-ad79-0426fff9078a"
        },
        "item": {
          "id": "9ff71af5-7279-4447-ab1b-7a4cf884ef8d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "76388ff4-760f-4baf-a886-f0ced809c572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8a1e2c-04f8-499d-a3ea-006d9faec420",
        "cursor": {
          "ref": "3322315b-0d5e-461f-bd56-ac7e22aa3534",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3f34a197-cd8d-4e33-aee0-672c1caa1dc0"
        },
        "item": {
          "id": "5b8a1e2c-04f8-499d-a3ea-006d9faec420",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "91000eaa-c494-4aa1-9e07-647428716fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85ec211-2c34-4751-be50-29f86f3e35db",
        "cursor": {
          "ref": "6da55d14-0960-48ef-b345-f7ea2f317443",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0889ce5c-8c4b-4a34-9691-f22ec9a033bc"
        },
        "item": {
          "id": "f85ec211-2c34-4751-be50-29f86f3e35db",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "17947a21-626d-44d1-a83e-4fe0ba96c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d786bf8-ed99-41dd-bdde-4082b7ae079c",
        "cursor": {
          "ref": "930c82d0-af99-421d-b5cf-830966fad626",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "510b5207-dbb5-4d7e-a527-d5618db4676c"
        },
        "item": {
          "id": "8d786bf8-ed99-41dd-bdde-4082b7ae079c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7bcbbdc9-cf96-4805-afc5-c7c631b3635d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f976a612-aa4a-4ce4-9983-cfa19446fbc6",
        "cursor": {
          "ref": "c2a78716-8130-423c-8fea-866949c8f364",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a9c3e3e-8625-4779-8d0f-359658c49cd2"
        },
        "item": {
          "id": "f976a612-aa4a-4ce4-9983-cfa19446fbc6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "181e7cee-f437-41f3-8735-92e2e08ca321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24486bab-d1fe-4bc3-92ad-38cd23d382a2",
        "cursor": {
          "ref": "81d2efe3-9f52-46b0-ab45-c9b76fcf62a8",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5fcab8d1-a25e-42e1-838e-09186af49cbe"
        },
        "item": {
          "id": "24486bab-d1fe-4bc3-92ad-38cd23d382a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fcb159cd-5125-4b3b-91d6-e03b5e0e1472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec3ba62-0eba-48b6-8732-3efb5fd84bda",
        "cursor": {
          "ref": "ddac2ad8-e4b2-489e-9f9c-4b3cc49a180e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9236e1f0-163e-43cc-8ccf-fce94cf2e19a"
        },
        "item": {
          "id": "0ec3ba62-0eba-48b6-8732-3efb5fd84bda",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "19dc6c17-0332-4bd6-86ed-15e9615bb2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131c754a-cbda-4881-be17-7dc551e823ab",
        "cursor": {
          "ref": "4f3285cd-7981-4bac-9301-ce42e9a70c06",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b8d211a9-c7bf-4d4e-91d9-6f076bd60901"
        },
        "item": {
          "id": "131c754a-cbda-4881-be17-7dc551e823ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d5ec19cb-c9a0-43b0-946b-0d336daf161b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3b7aea-93a2-4336-847a-881aaad62134",
        "cursor": {
          "ref": "8243ce4a-df79-41fd-8bb3-5cab33d71d00",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8cfdd52b-03ea-4bc9-81ad-594345b0fe40"
        },
        "item": {
          "id": "9b3b7aea-93a2-4336-847a-881aaad62134",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2aa9dfd7-d64b-4476-b360-c03189f90bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb45d4-5f95-4100-ade5-98d35ba84bb7",
        "cursor": {
          "ref": "56e51552-e844-4ff1-853a-5163767dcde0",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c0a758f9-53d7-4b26-8997-cb2bd56f99fa"
        },
        "item": {
          "id": "4abb45d4-5f95-4100-ade5-98d35ba84bb7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bcb2bb3b-2044-4c84-b383-4d906fbbffea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8484499-243b-4844-924c-10610d868245",
        "cursor": {
          "ref": "78773f60-0065-42a0-895c-0d5719c65dd5",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "de335c4f-2a20-49f6-ba17-107cc68062d3"
        },
        "item": {
          "id": "f8484499-243b-4844-924c-10610d868245",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a4f35887-4254-4d2b-82b9-abdac4312699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 411,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d790292-a02a-47c3-9ecb-50356d73cdc8",
        "cursor": {
          "ref": "29905305-beee-4f58-8bae-241110f5a32c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "77ec8a1d-6976-49f5-9619-49ee7e939d44"
        },
        "item": {
          "id": "2d790292-a02a-47c3-9ecb-50356d73cdc8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1cd7f594-789e-44fb-aa25-e725c55a3206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e34309-b8dd-473b-87e5-ccc925af4de6",
        "cursor": {
          "ref": "289b1c0f-d301-4ed3-a72d-bc6d1ae5798c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "98c1622b-e997-4df2-999f-bbb6f69a145e"
        },
        "item": {
          "id": "a8e34309-b8dd-473b-87e5-ccc925af4de6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "21f7fa5a-3eee-4026-90b3-8a625316edbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7423f2f2-23a0-46af-bdb9-41a9030cfb3e",
        "cursor": {
          "ref": "50f629ca-e128-4880-ad45-1195d1adca77",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "db717296-048a-4491-9db6-080f6994c029"
        },
        "item": {
          "id": "7423f2f2-23a0-46af-bdb9-41a9030cfb3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f682c643-ae87-4210-91a4-753ff69f5f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f19787a-db87-434a-acf8-0c8bb4cd4e9b",
        "cursor": {
          "ref": "704b5715-7d3b-47c3-82ab-fd5ca842dba3",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aaf8ae2d-8754-4b27-b704-5d1b12d0a964"
        },
        "item": {
          "id": "2f19787a-db87-434a-acf8-0c8bb4cd4e9b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42389260-5d8b-4c53-9241-1f624ac0001a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5ce04a-d481-4978-a2f6-ce1bf58e3b93",
        "cursor": {
          "ref": "8b105d21-7509-4cbd-a2a2-7511dd38d92f",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "142f647b-68d7-4954-98d1-3523bc855dc5"
        },
        "item": {
          "id": "2c5ce04a-d481-4978-a2f6-ce1bf58e3b93",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b8b6c2c9-5368-4523-9531-53455bf99d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaa6869-2efa-4678-86a9-8b47e546c287",
        "cursor": {
          "ref": "8b755842-875c-43e2-bc84-4c30f175ee23",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "87a0a0ef-8052-48c3-b5f8-0676516d3b3f"
        },
        "item": {
          "id": "fcaa6869-2efa-4678-86a9-8b47e546c287",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "23ab5a09-a179-45c8-9b6c-c3cc1bb310a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ee076d-e3ab-470f-b6c1-2819b2e42376",
        "cursor": {
          "ref": "02416b58-5812-43d3-8d70-75848236c7fc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7e817d18-7510-462a-8673-a3b0d0d1da13"
        },
        "item": {
          "id": "c6ee076d-e3ab-470f-b6c1-2819b2e42376",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2ee0d98c-f714-4ddc-8da7-dca3a7f1cd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a5cbf4-2a15-4e7f-95fd-1056893a8c6e",
        "cursor": {
          "ref": "dbaa9501-ddea-4be6-aed6-c2b690c37db4",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "666c972a-96c7-4ea9-a477-7b50c2717797"
        },
        "item": {
          "id": "b2a5cbf4-2a15-4e7f-95fd-1056893a8c6e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "89912c53-9440-486a-b279-eec036cce55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e43411-3349-4653-a968-f16a1e7a4036",
        "cursor": {
          "ref": "f199dd98-6971-488c-9901-4a1a3ba9b6b5",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "03056114-f61e-49af-8c64-2df7dcf67150"
        },
        "item": {
          "id": "a1e43411-3349-4653-a968-f16a1e7a4036",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "62a3f5b6-a0d0-4209-b4d8-7a54c84569ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 408,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8017e237-8ac5-414e-92d1-f03d460f0d4f",
        "cursor": {
          "ref": "4ade8f4a-d6b9-4351-bd91-cd27d2aaaeb8",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d4b27d6a-327a-4bc0-884b-a1e88f1b8cf1"
        },
        "item": {
          "id": "8017e237-8ac5-414e-92d1-f03d460f0d4f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "81e9c575-4261-4855-b290-0cd68272f05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa2bd47-5fd0-4f67-8fb3-703aa0bdb477",
        "cursor": {
          "ref": "ac4bd109-6e12-4533-83f2-65c6526d1ca6",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f2e6c1a4-16a2-4d68-a675-80c2d4e58c8a"
        },
        "item": {
          "id": "3fa2bd47-5fd0-4f67-8fb3-703aa0bdb477",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a20c9dec-9a4e-4529-ae0b-b072dc8f90e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b1a7ca-9e0c-439e-a50b-6d94bb9680a7",
        "cursor": {
          "ref": "91cb621f-e9e9-4d0b-b047-3d210dd9e490",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "966f0e04-c6a6-448d-9908-8599530ba02e"
        },
        "item": {
          "id": "45b1a7ca-9e0c-439e-a50b-6d94bb9680a7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "183f7a1f-32c3-4ebf-8469-efc5184c744a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579af1fd-87d2-40a6-8769-0148278c2214",
        "cursor": {
          "ref": "1f4849f4-11ea-493d-8ae3-f7c9f0de33f8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fefcf840-fbdf-452d-91a9-d013971ea707"
        },
        "item": {
          "id": "579af1fd-87d2-40a6-8769-0148278c2214",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ba4a946c-5891-43ec-9d54-cbe0adf1c7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1188b4-c7e7-4e97-ae56-49c5d4c388ff",
        "cursor": {
          "ref": "24912727-7ba2-4b42-b664-c43f19532488",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9588bff6-d447-4489-b3e7-76a9e2caa789"
        },
        "item": {
          "id": "bb1188b4-c7e7-4e97-ae56-49c5d4c388ff",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2866ea0d-a9db-4ddf-919d-fe45a982ec77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855e1eba-8ac3-4f0b-859c-eb27dfed0774",
        "cursor": {
          "ref": "b6ad312f-cd73-472b-8cf2-2835258208b0",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "33a39ffa-ecdd-4edd-a9a5-88bd9651ae76"
        },
        "item": {
          "id": "855e1eba-8ac3-4f0b-859c-eb27dfed0774",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9c49d2ce-2429-4f32-b001-5df8430f7e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6cae3c-97f6-4f2a-8463-e59e274daed7",
        "cursor": {
          "ref": "689516a6-432f-4453-ac44-ed4d5560c3cd",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c5ed68fc-359a-48be-bb98-2cd8013da321"
        },
        "item": {
          "id": "9f6cae3c-97f6-4f2a-8463-e59e274daed7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5c006144-ca29-4680-b4c8-033523071b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e35906-4c27-42c0-95fc-89e764905e74",
        "cursor": {
          "ref": "b3c77bdb-df9b-4ae9-bd55-1ce2ba7ec32d",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a1aea259-f968-452f-bfa7-4c5cc46e3d58"
        },
        "item": {
          "id": "15e35906-4c27-42c0-95fc-89e764905e74",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e0cd8a47-ac51-4b71-86b9-f4773820b9fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cd14c6-f4d1-4908-bc3b-2ec9cf957989",
        "cursor": {
          "ref": "970ebfaf-6e8b-40ee-b781-b30f11cb5160",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9952cd9a-368f-459d-939c-ab000b1050db"
        },
        "item": {
          "id": "32cd14c6-f4d1-4908-bc3b-2ec9cf957989",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7d89062e-272e-4bc2-accf-bbd021ad64f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166d1938-23e0-4cf3-850e-3a4cb104d328",
        "cursor": {
          "ref": "51ead8f4-26ac-4023-a161-36a60bbd5a73",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "588e9d66-9fcc-4162-b467-0138da6c05fc"
        },
        "item": {
          "id": "166d1938-23e0-4cf3-850e-3a4cb104d328",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0e163fc4-d043-4384-a705-bb8ebc5e591d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37122aae-c7aa-4064-bd2c-aed0af2cbbb7",
        "cursor": {
          "ref": "3b246600-0ecc-4bd9-824d-3b8cdb7ba682",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "83365343-9a67-4720-ba52-dfd998e71ea4"
        },
        "item": {
          "id": "37122aae-c7aa-4064-bd2c-aed0af2cbbb7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9de66178-010f-4de1-a8d1-567d8fe240d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdea266c-8ae9-4759-94b7-d3998a12c7d2",
        "cursor": {
          "ref": "dcddecea-65c0-46a2-a9c3-22861e93a94b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5dd428cb-8afc-4e3a-a33f-421467a27624"
        },
        "item": {
          "id": "cdea266c-8ae9-4759-94b7-d3998a12c7d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f70cb9b5-58c1-4a57-9a6b-b4781eb8a9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae5cbe1-2d2c-4b62-b9c9-a4948ddbd70f",
        "cursor": {
          "ref": "ac3aebcc-8b54-483a-9ba1-0da1b1a70f7c",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e0d081fc-4bee-4483-8c0f-789be924cae6"
        },
        "item": {
          "id": "5ae5cbe1-2d2c-4b62-b9c9-a4948ddbd70f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "85689eb1-846f-41d4-9fa5-518999f037b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae58854-ba2a-4e20-b1cc-398b43f84ca4",
        "cursor": {
          "ref": "67582dd3-dd96-4211-a517-f4763aab2934",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cd77c8e3-f57c-44a0-a750-d91b04158907"
        },
        "item": {
          "id": "8ae58854-ba2a-4e20-b1cc-398b43f84ca4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44a944c2-c993-4fd4-ba86-811d4daf41ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ce753e-70bd-4b80-80cb-e75b71a90830",
        "cursor": {
          "ref": "12bcba94-0421-4d69-9570-deba18688b10",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f6323021-dbc1-4d57-92b6-e22c93f4e190"
        },
        "item": {
          "id": "01ce753e-70bd-4b80-80cb-e75b71a90830",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3bcf9aea-ceb8-41d3-90aa-a02a5c3332c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6f103a-b829-4978-b61e-c31d10ef7d6f",
        "cursor": {
          "ref": "85b7a677-c264-42ac-9818-1034dafa40cd",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "dc48aea8-ef2f-4ec6-a725-a42b82c36c39"
        },
        "item": {
          "id": "cf6f103a-b829-4978-b61e-c31d10ef7d6f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ff45aa01-b887-4700-8c98-5c3771869324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81042ea4-97b2-4f46-8beb-502ae429d69d",
        "cursor": {
          "ref": "2a4432fb-1b64-417f-be3f-73df7ed7f6cb",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "56e273c6-ed90-4121-8324-34689d7b0324"
        },
        "item": {
          "id": "81042ea4-97b2-4f46-8beb-502ae429d69d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bf1cdf02-9c45-4d80-9d86-fe3dcdcc0dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a17e0eb-61e6-4195-b102-a9a4cf753ab4",
        "cursor": {
          "ref": "695facf4-e252-4bfb-909d-ce05badc3361",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c3aedf42-ba94-4ac4-9eb8-7806dea055d9"
        },
        "item": {
          "id": "5a17e0eb-61e6-4195-b102-a9a4cf753ab4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f5d9e824-622d-4008-90ac-c4eacf4f2133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5039bab6-eb48-40d2-9cfa-ad5f7ae5734a",
        "cursor": {
          "ref": "200875ff-4872-42e4-8fcc-2a454fa6d109",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7836c551-b543-403c-a9c6-65bc819d5fa2"
        },
        "item": {
          "id": "5039bab6-eb48-40d2-9cfa-ad5f7ae5734a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f6a0bc94-4604-42dd-b83a-dcba8a548550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f009ef-f0a3-4880-8042-b27cb14bab3d",
        "cursor": {
          "ref": "d7a5a3e9-1f86-4a3f-90f7-d2a58ed9e567",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "788c4c05-6f2e-44b2-9f34-19676e803f42"
        },
        "item": {
          "id": "88f009ef-f0a3-4880-8042-b27cb14bab3d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ee24991c-9564-4487-8ede-cd5e49f8d5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d056ccf3-9216-4c3a-bf3c-450d10f52a52",
        "cursor": {
          "ref": "d2e1d81b-c982-4c6d-a38d-7d9bfea033df",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "37d31bf9-9644-4c37-8249-16c143c4a066"
        },
        "item": {
          "id": "d056ccf3-9216-4c3a-bf3c-450d10f52a52",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "265490bd-fac8-4e99-92a1-8c80557aed7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a902d3-a0a6-4d37-a029-c53808929240",
        "cursor": {
          "ref": "536582b0-17f9-46f0-a987-c1ce75cb9e72",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "54b92e4f-3a75-4cb3-9785-74a2aae98859"
        },
        "item": {
          "id": "87a902d3-a0a6-4d37-a029-c53808929240",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e5f4c606-2515-4dc8-b439-b7ab8f904f52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc3fcde-a19e-47d1-9d6c-cf4788ee5163",
        "cursor": {
          "ref": "8981c4a9-613e-4c06-b16e-6ae1f4666ee6",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52cd6104-a2dc-4872-99b3-7cf622a067a4"
        },
        "item": {
          "id": "7fc3fcde-a19e-47d1-9d6c-cf4788ee5163",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "821c2265-3ab3-4226-b1dd-6fcb2a965475",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 442,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee5113-4aef-4cf7-9956-4fb9c9479667",
        "cursor": {
          "ref": "2bd35676-3814-4322-9b3c-aee3081420d3",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "382254f6-ba82-477b-90d2-e8b0b1259728"
        },
        "item": {
          "id": "e6ee5113-4aef-4cf7-9956-4fb9c9479667",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d3c2f4f6-7e9c-4c81-95b4-9cd628842256",
          "status": "OK",
          "code": 200,
          "responseTime": 477,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5848a39b-fa8e-48bd-ac2e-b01f20085972",
        "cursor": {
          "ref": "df704c63-8e0d-4526-987c-cbee7f2b6cbc",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b0c3246d-194b-45de-9d51-50f6becbed90"
        },
        "item": {
          "id": "5848a39b-fa8e-48bd-ac2e-b01f20085972",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e51fe9f1-dda3-4eea-bc60-9d6f1a4d501b",
          "status": "OK",
          "code": 200,
          "responseTime": 1996,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0643905a-66df-43d2-906f-78e27f0fac32",
        "cursor": {
          "ref": "594e9647-b3eb-4202-a5d1-8d2df44131b2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8add37dc-d968-4d7c-8ab7-6d4e399ca9a6"
        },
        "item": {
          "id": "0643905a-66df-43d2-906f-78e27f0fac32",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "81934d52-b98a-4baa-86df-daed0cfc6de2",
          "status": "OK",
          "code": 200,
          "responseTime": 1594,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
        "cursor": {
          "ref": "fa6e5443-b65e-49e4-9c53-8f57a2eabf24",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "234784e4-a56d-4010-b8d1-8125656ad33c"
        },
        "item": {
          "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38c333a8-6c3d-400c-a682-55739f8b36a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
        "cursor": {
          "ref": "fa6e5443-b65e-49e4-9c53-8f57a2eabf24",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "234784e4-a56d-4010-b8d1-8125656ad33c"
        },
        "item": {
          "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38c333a8-6c3d-400c-a682-55739f8b36a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
        "cursor": {
          "ref": "fa6e5443-b65e-49e4-9c53-8f57a2eabf24",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "234784e4-a56d-4010-b8d1-8125656ad33c"
        },
        "item": {
          "id": "498bfd3d-bc49-4b08-af67-aea3f1810c1f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "38c333a8-6c3d-400c-a682-55739f8b36a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab6ff38-a6ee-48f9-9c33-d90deaa75fce",
        "cursor": {
          "ref": "db5c1e2e-f97d-4a60-9c93-bc5d95af9a89",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "67066f27-b452-42bc-8394-c921e5ae2f22"
        },
        "item": {
          "id": "0ab6ff38-a6ee-48f9-9c33-d90deaa75fce",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4e4b98b0-d6c3-4f21-b3ba-9f783651cbb9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 940,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f86291-0d5c-451a-b444-3c52ab952a73",
        "cursor": {
          "ref": "b7261b87-44f3-42bd-9fc9-17f2ea67578d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32d36ff0-c67f-4bd8-877b-5c0368fb8ab4"
        },
        "item": {
          "id": "d1f86291-0d5c-451a-b444-3c52ab952a73",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd67fbe5-6249-43f8-bb6d-5fa9d55c72b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f86291-0d5c-451a-b444-3c52ab952a73",
        "cursor": {
          "ref": "b7261b87-44f3-42bd-9fc9-17f2ea67578d",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "32d36ff0-c67f-4bd8-877b-5c0368fb8ab4"
        },
        "item": {
          "id": "d1f86291-0d5c-451a-b444-3c52ab952a73",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dd67fbe5-6249-43f8-bb6d-5fa9d55c72b8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aa31fe-c5d7-47b0-808e-1256fe17e324",
        "cursor": {
          "ref": "c33de2b8-db43-4572-a62b-300c5666db64",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "29201bce-558a-47f9-afc3-5638fbc29d25"
        },
        "item": {
          "id": "88aa31fe-c5d7-47b0-808e-1256fe17e324",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "850d8f11-925a-404c-af47-ea6beaf2e6ee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1020,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7b1b2-fd6c-46da-b7ca-729b8b9b58ef",
        "cursor": {
          "ref": "a40db643-930d-43e5-bbf4-a3bc76bc7968",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed3f2924-d29a-4d83-bec1-5abca2d00481"
        },
        "item": {
          "id": "feb7b1b2-fd6c-46da-b7ca-729b8b9b58ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c223846c-de2d-455e-ab11-ab8fa95dc7a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb7b1b2-fd6c-46da-b7ca-729b8b9b58ef",
        "cursor": {
          "ref": "a40db643-930d-43e5-bbf4-a3bc76bc7968",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ed3f2924-d29a-4d83-bec1-5abca2d00481"
        },
        "item": {
          "id": "feb7b1b2-fd6c-46da-b7ca-729b8b9b58ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c223846c-de2d-455e-ab11-ab8fa95dc7a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb326c0a-110c-4c91-888a-9d223291a574",
        "cursor": {
          "ref": "35c0bfe3-0e96-40d3-aa38-7c1889038f1e",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ee8d1eff-234b-43aa-86db-2425a8079617"
        },
        "item": {
          "id": "bb326c0a-110c-4c91-888a-9d223291a574",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "410160d6-bc9a-4b86-9865-cec513f1f2d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 800,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}