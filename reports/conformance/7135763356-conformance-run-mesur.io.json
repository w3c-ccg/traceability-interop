{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "75f6c225-4f9c-4601-bf56-f527801ee594",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d982b26d-f6c1-4000-a1a4-9fc93a9c26b3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07c18397-b8ec-4562-a7a1-def0c55fbd5c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ecb33b56-eeb6-4f68-933d-73b7df5daa21"
                }
              }
            ]
          },
          {
            "id": "42a6e902-2ed0-4bfe-9c16-77bcadb17766",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1591905-8505-48bf-a645-4928b1cbc33b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "23abe7d0-5b5d-426c-bdaa-9072b93e342f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "65f50392-83a2-4da2-96d0-8856f6825375",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8a544a68-5459-43b2-acf6-cda3d2862d3b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8015972c-a90d-44bf-bb70-8d3190b7d399",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df7690b6-7cda-47bf-a8c7-7eb4e307b692",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e5a347b-eef0-46bc-a6a3-ff02106cbdb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "950a025c-17bc-4011-8ab5-21784b26d501",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49111a47-2365-4525-97f6-de82995e6fb1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "06c6b12e-662c-482b-8c3e-f79a43f05772",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55c55ed4-1730-4bbe-9547-320762215720"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "decc225a-bfba-4b42-8fd3-d3fcd1c55489",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c09cd2d8-66dd-46fc-9c18-36dfe47df46e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3aa6643b-3fc1-4a10-9a60-a3c297fecddf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bce0a08c-150b-4e6b-be2a-c71343375c4b"
            }
          }
        ]
      },
      {
        "id": "835c5909-bc14-48a3-a786-a98de37284ea",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0267ccef-a7af-4846-bad4-41ff90c96c3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4940e9df-a696-4779-b167-805d9d37c67c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "35f88745-5158-409b-9376-f2536b18c25e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f49f53-24d8-40eb-a36c-9018e79d57b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efb6e11a-4a31-48f0-88b3-c216486e4300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7790ac7a-f158-4740-9881-da3349314760",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e789b653-bbac-4cf5-8252-8ae17ab9e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b243584-a7fd-480f-8342-976ad1b0895d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed5081b-e448-46a1-b82d-f3645dfe6095",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc91351-d80e-43bb-a295-c216eafd9e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75b949c9-6221-4536-9872-63af9a449cda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "36dae884-7870-4e85-8160-bdc6265ce55e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f5a49c95-26e0-41b1-b605-b1eb1f52c99c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0dc4c4-7d0b-47ca-9231-5eef645257b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29e630ae-ae13-408b-9dcb-f602e751cab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4422e2-2dcd-4a2b-abb2-3213ccd0761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a38200c-3653-4c27-b95a-70de87deaa54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3b4d718a-a996-437a-83db-a1942d7e499e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51003ace-d1af-4372-ab3b-c685200db4e6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4bce5cfb-e70d-483c-8e6f-13b3c107a8cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ecfd0ba5-d9e9-4a6b-8c44-e33d851d552d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c13b15d9-72e8-4086-9340-a9ece7217253",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5943554f-218e-4222-9f48-78367a27694a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6e4753b-7467-4eed-9809-15ee030e96b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddd3f7c6-99e1-4105-9410-ba73294bbdcc"
            }
          }
        ]
      },
      {
        "id": "741b5cfd-edb7-46bd-9d75-ecd0e22f4b68",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2a325585-6a54-480c-a4b2-0798e2e70820",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e5a3a12-2bd7-40df-8318-56dba5714e04",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c02aced6-3cd0-41ca-a749-feb33a8e5438",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a74c2a-4389-4e8a-908d-fe69c7145ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ef106d-ecb1-4009-8b90-9c3379841906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c385e4c2-6293-44ce-8d29-1cfcbf44f78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a441cae-2e4e-4860-be1d-54fdd22ba977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd7974f-7e61-48b0-a883-3a3f5745453f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73be546a-018e-413e-8995-43b6f9c1320d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b89b379-2228-4c19-8889-d8bef1640a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b42b95-0c65-4cae-b6be-c88f18021080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94b7aa8b-ee70-4198-b564-01a2b6f2c84f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b949d504-fca2-4e35-9ba2-d0deedcee84a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e378ad0-6f71-432b-88b8-5b87ed75b08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98bbad2-f4d5-440e-b1d1-cd8c589df2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fe27bc-5bc2-4118-bb67-0f621da803c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f2e602d-f8cd-4265-9b37-2f73cf769bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599c4225-55a3-4b9d-993a-2bbec74537a8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e10d756-6a8a-4605-af6a-7eca0cb15092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e725dcb-1c53-4817-a4fe-ed535d3ca554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ec9215-5f8b-4442-84c8-035b01a4b011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3569e38-c68f-4c8c-94ab-5e20f1b2b0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79009911-2502-4129-b564-1dcd3f3ffe81",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06cc3f61-6d72-4742-8775-a4be50423e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe8ee77-3dc6-4bd0-9f50-92fd4485707a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619e2c57-3a47-4f32-a61a-2f11dc8721a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "530a93a8-78ed-44a9-a7c6-8d781c857afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9d8c7e-9e6a-4627-a86e-4accb8ff315c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbc9e79-4d65-4745-b3a8-26e7246dd8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac0b437-8469-4754-a35b-1524bef6f30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a6ef12-953d-44e6-91d3-43c2788f3702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0dd8846-fbe8-4f98-8ecf-345298af8628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3fc3c8-4ae9-4464-8971-99f67ee88c61",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ac22cd-e04a-4aed-b6f0-343c5e29373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434f53d5-95ff-4fd9-a513-b640ada53b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aae4b9a-46a6-47b8-817b-a2a7a659e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c905c99-d8f7-459c-a9e4-c62c469a1178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7f3284-7184-4bf5-b694-2cfced545e28",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c97e01-d013-40ed-a3d0-302b10659b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73263621-d1e7-4456-8064-aba26ecb6197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf04dcc1-7bae-48eb-971a-7654ef42f6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ec7b2b9-c110-48e6-a481-2a585aec9f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b9d69e-e802-41e7-ac12-6781d26fe2cf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "477bcca5-84b6-4f22-a17c-034c696ad7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8effb23-c262-4428-9ddf-ecb99024ac2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfc6ea0-d71a-4d1a-8e88-273d890f3783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d010daf-1011-4913-aec8-559ad9457992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19597799-9d6b-44ae-a398-be101c488dab",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae154845-4d13-406d-9e9e-3c13fcc7e9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e59aceb-7591-4cb2-b219-ac530eec23a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df9b3dc-084d-4244-a48b-f9b980ac266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07cb5ebf-f2e3-433c-b939-908e92ba62b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69c394e-76a8-4bcf-85df-f10dd7f376a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f915a1b4-4a10-4f7c-a4f9-f64e6587666d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff41547-ed7f-4d52-abb7-d47c3ddc0085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e582dc0d-d631-40d2-aac7-422649cf247d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac2f06f7-4271-444f-8f5a-f644ca18349a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f96370-a9bc-494a-bf31-5a92f68910ce",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1093a3e1-69c4-460a-9fc3-7f65fa13532d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3add7a-d49f-442d-a46d-abadde466f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c330cd-714e-4a47-bee1-9df1b3cb5d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f1349a0-5587-4132-b404-e32eb017729a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be74513-7691-46b7-ab94-092a40903268",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1131c3f0-0e6d-4ec0-8049-6879e999f012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecda63a-c0bd-453a-bc10-e3a8cdd5af4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251333a3-b757-42be-90d7-2b1d8c018dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6fc0773-c00f-42d0-b6f5-df4df5e9d63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86de4e0d-99ab-4788-932f-b8faaf4edd20",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145c5926-61bd-4302-83a2-c95a911ae81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8819ec0-f206-43ff-aaaf-3fb2bea045a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20d1c9a-d058-4477-aa45-10a5e4d738cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79affc5e-bc8b-455a-aa90-7c3309376c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0452bc5-eba8-43f2-8678-0c80bc4e2603",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c9e6b9-f3be-474e-a2d6-f3b53786b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34062627-e8e2-4da9-ad96-2061db81f9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b9fa01-b3f6-4ad0-9354-8a5c23e7c00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03a4463f-a8f4-4e57-a827-c2de5a2e978d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac8c8d0-014d-4ce8-8ebc-3238bf3294ee",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70accbc6-81b1-4183-ad5b-41f4ada58ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696bcd3c-3a89-4611-86ba-b8ec35d6f1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff62c618-a2ce-414e-8999-d444249d57d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "867ada6e-720b-4879-b417-b14ee9a42bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab74713-5342-43a5-893c-ac9405635b85",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca2c859-28e8-40d4-af5a-44f0a7fe4966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4deca13e-d5df-4668-b212-22a6679ce185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88aaaa1-9e8a-46e1-906a-495cadc721a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc9673ef-98f9-4b7b-a14a-c2a449cec8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f51041b-473c-49a4-9a29-a9c98b129ba8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5706e9fa-dfb7-4e31-80a9-179b28c50854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f9d0e5-4065-4934-93d2-8e9c379984ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdcbc87-941d-4620-8777-f6a5b4328498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f243ca-d667-4a75-bf95-d9da2805f415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b48ea6-2cf4-48f3-8459-47c1e9ca867a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69e4302-ba5a-4997-90f1-2f58ede2a78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c675823a-e3d3-48e8-923f-28cb5c5c3779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b94b68-0626-42d5-98df-c42335203584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb433e76-4510-4488-a788-cf21063df999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2b39ee-ade8-4915-906c-b403f6e29358",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfaa96e-da2c-4306-b858-14e88a64e55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886b8263-616a-4482-bbef-02c0ac2bdfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef6d0f3-128c-4193-bc91-a3b1c619fa62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90e32b5e-2fc2-4031-aa37-34744b27b0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a61318-5854-42bb-ab5e-d5a687c90e14",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd22c3d-4f98-46d3-a2f2-87596c71f17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccdf000d-c172-49c4-9f07-a7735387b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b3f449-e6b9-469b-bc97-1e7d308fb85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f50a6b41-9d6d-4a93-80d7-b573f7efb9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd99002-d44e-4b77-86a5-c2e6c5af964b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743d328a-59f7-4a3d-a11a-365c4c457a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f323ecb-1f5b-4788-8d02-64e6f191fee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49309149-0c72-401a-958c-a5edffbb9f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85139118-35bf-4eaf-8d3c-cddb580feca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b16e06b-e4ea-4c5d-9ec6-2e34d630a78d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49b3248-b5b0-4790-ae36-00db8d472fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cff0762-4c62-4dbd-9ab1-c26436666e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a044a27a-49a2-433c-9c45-f55815333c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8c09df-e346-4c1b-9222-e9b79eb2b9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3b41e1-87da-4f61-bafc-e8e12313e812",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628cf732-5b50-4e94-a95a-3d367878c9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868d9b80-b926-47ae-a96b-91182b3a4496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e5c5fd-ed95-4e78-88d4-299fbc1df38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d674a43e-c704-4ba6-98bf-d7d3791a3b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb4f543-9f4b-4952-b222-56ea8aa042ea",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abe3e70-d617-4674-a35b-c71f8bf83578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5c8240-9eca-4b8c-b38e-8b5f705be5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84740b3b-c6ae-4cfc-8c61-4399039dd886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5da177-6f68-4e3e-8bf7-9aad218533b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9966ac48-7c53-44d6-95f9-328a7cd29fcc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f914cabd-0cb3-4c24-bdc2-df4b2965f43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ac003f-6482-4e18-8740-1fb212cfcfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e4ba00-0ccd-4793-b168-f1acf633f42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "794bcf5a-0754-4f69-81ca-4daadcfa7d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1cd7c1-4d5d-4957-9a21-6afa5f570563",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f5435-c874-42f5-ae57-0d352f6955a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac32a8fa-0520-4ac3-9d23-7ec3bd7df054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7682ed68-346d-4599-9b96-2345e54a2fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdca25c-6eb4-499f-8d3a-0cd4aed3be9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882cde4b-aaef-4ed6-8f3a-93fee35471c1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2061649-2d43-499d-9117-e81f711e3b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fd7d22-ee5b-48f9-b2f2-ecf7172209fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc4115d-1304-4253-bb5f-a77cb90f6a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3076cd-1723-4292-8c64-d88803f1953a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7153216d-918a-4ab0-973b-298b74f437ae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea41168a-eeab-402d-92a7-39a73c331581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbda6275-c660-4a83-b61f-2e7054cc462e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c58d71-e825-44ad-8cb7-b7931b1f0e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "279071a6-2033-41e6-85a9-e2c1730f8a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc65b81-4355-4c75-ba3b-57e72f2d5249",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7da26ac-3c51-46d0-97be-127068ec4df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90929df2-1c6d-4a39-ba8a-a7ca19619f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad18f74-7bd1-477f-b995-eae6135f856b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d741a3b0-376b-4d27-a9ba-26be83972092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a8d81e-9ecb-4201-bd8e-df36432cbf3e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d644c09-b2c4-487f-8e06-5f873312ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b41b40-e497-4486-ad8c-9c25e0d2493e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d1d4aa-ac50-443b-891d-be0a1ed6bb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae788a4-cdf3-4c9a-8d12-523f9c367064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceee363-a2d6-4225-a594-93505eb31bad",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45718e5-6747-4b57-a33c-b87978801189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7743ab11-392b-456a-ac0b-ec5a132bc9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a858cc0-fe4b-4e54-ae71-3a67d4ab2937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e0c3b5a-4bd7-4884-a65e-e78fae9bc632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35fe0a2-9c49-4332-9748-7786cfa08091",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6a1ba7-dbc5-47da-8926-d87c51d3b163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97eb7077-6da8-4e40-bc1d-819549c0e769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08fdb09-e740-4827-9b72-a28ac4804953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e511eb-892c-4b2f-a350-d079af7129f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19a5b75-5533-4af0-ab38-c793ba0fb7f9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74c1339-f55d-4538-a738-178968e0515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883c8812-e58a-4494-82cb-b3764cd90147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108dcc77-6eb5-4618-ad46-bdce14a1f607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23585d5f-b64e-4fe2-85f1-b12e6e0c2806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3434f34-1b54-4ef9-82e1-69f73e3f9510",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f54ea5a-8a71-4a13-8476-fb7c9a067a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680f5389-2e36-4503-8b5b-c5e20fc3f342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29d3347-9518-4583-924c-07b1657f90bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "26b8d38f-a7c9-4c41-b25a-ec13f437073d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e1e8cc-d505-4f36-8ad7-d892a31230c2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d141e9-9c83-45d1-b655-86870332b9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dafcea0-4629-4b05-97b7-5b08ed4223d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84885d72-cd69-477f-b692-45a34e991b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ce0b12-9827-4334-96d5-92e72d3d74fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3e4487-5317-41e8-aeb8-b612334fe49e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dec0602-727e-46e7-8183-9842e2dec6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f1cc9b-ac77-4e87-a16d-e9e75eb84608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab95424-d18d-4145-ae2f-4f2e170beeff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83b5cfde-ab97-4156-aafb-2a60c535b975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3000e5-e99e-4f91-a734-42c37fe27731",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427fcee5-4133-4951-bef1-ac517990ff27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcaca04-cac7-4712-8010-7944beea24b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236756e4-85d5-4f1c-8ffd-13b26257fe7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77bf84be-6cf8-4ee1-af79-9d8891a747ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8147f59-9935-40f0-95ed-2f39ea8630de",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e064c2a4-ffb2-4b5c-aca8-3a870be181dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7517b44d-b39b-491e-a1c6-d7fac6a5864f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f93769-a38a-4d6e-ab86-70903a0eb97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79edf13a-6862-4b87-85e7-4df5af00e459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15214e31-10a2-4636-bade-6bf2157679ba",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193d1075-5894-4afd-b287-269fd0f67e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5e30d7-ab49-4561-8523-0003eee55d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315415a6-cd83-4e24-ab04-24bbab8af74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "77e85ca3-7419-45f1-9a56-75b0f370d6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1f9803-3a37-4d3b-894b-76890459a6e7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5461bbe0-aaba-4ec8-b76f-09bf598eb9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38afd35b-8ded-415d-868f-63318e49f11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd14dbe-fab9-46a8-bf12-f1ab70ec2936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e913f0b9-a33c-4572-a716-89b3150e8e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc807218-990a-4939-9d86-b52b166d4a3d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69232037-6e13-4974-9d3e-5e75ec2fd73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f123429b-8ea4-4b0c-ba15-332a086528d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6883635b-e3be-4b26-b540-13b53b8f99b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bc409db0-9465-46ee-ae00-17d212569356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a94959-6943-4d60-83e4-4bfc5b3475a1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79749ad-951d-4cf2-944e-30b696f90679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bc1786-eb69-4345-9575-146b80b38ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d685c3-911d-4a7a-a977-8f05ab7c008a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "58b7ef8b-3812-44c7-a2b9-a2951657d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d4c804-9107-4027-b1dc-1e32ad90087a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47e43c3-7bf2-4e90-a2c7-ffbfedb2fe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9e01a6-882f-4fc1-867a-ab16f15629ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5946bf63-ab8e-4277-b495-925c08461ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6df4bf9-5b55-4495-b427-f17f4989e0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab493051-b7cb-4019-ba3d-533ca1f1804b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863b823a-b5d1-4fc1-a946-4ee92914acc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef0e7bf-b073-40f5-9412-d5a793df8e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180afbef-e05d-41d8-b49c-478400103df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc6f196b-59c3-433d-8c35-7ceb4267cb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88cbe01-4c11-4c8b-8cf2-175725cdeb6a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320d64b7-c7b9-40a7-ba6b-5b884e770d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2391d32-1552-4b8c-8103-b397ba5907b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49eb7b40-f49a-4f3a-b02f-39b5b585d531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06a7b0d-101a-4dd5-9915-095016427337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c03b93-f712-458e-b6ab-44a05e0d04c7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3694399-c45b-433c-9925-b4e29f182ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7aa94b-0f59-4599-a6f3-9d4641ecfbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53dd1ead-6332-4cfc-8a56-19d9357f917e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f7a664-5844-4e2f-a7d0-f434c187c2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a682af9-381b-42f5-ba8d-990d05c2f119",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2baa87-42b1-4f8b-ad3f-9dfb4ee3025d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44fd700d-3b0b-48c6-ab3d-f9fe8b85edad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd16e97c-0f62-46c4-8c92-1e01b3c868e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b1d983-588f-43b5-a926-a6d4556046a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e73ff5f-ab98-4ff3-8b2b-af4bc373a177",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70d06e2-4d85-4a87-ae9f-baa593881937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9855dfb4-2891-4c8f-8b3f-161841543be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b3aa37-fc8a-4a7a-81c8-0e65c504ed3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "88c4bb8b-2f21-4233-81fc-ab2bb70bc36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c26a54-e61f-460e-a9e7-c8122142f5da",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cc03f7-92de-4b4a-ada6-bbbbea0e96b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c8a1a8-10d4-4c5c-814d-764aff2f4c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb45b01f-7e69-465d-8e27-3de2008010e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00f73d96-5847-400f-aba0-a37d0a819226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e10e030-32ff-406a-babd-84c85af785f4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aab3a07-e87b-4e74-8801-56035dbe0ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9425373-6f86-45d0-9a5a-c698f95b5c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147e3d2c-430f-4042-83a8-3867e21b5472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4a05a8-bdcd-4626-8829-c36b5c4cefb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a133a7-2401-4322-82be-dfb473c80602",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a70ab52-d52a-48c8-9d89-0576a8321361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5277a5ae-d066-47ab-9959-a5e82b7769f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddbaed4-ea35-46aa-a3f8-3e6cc0fde90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "edc2bb7d-79db-454d-ae9d-bd534fa4d7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913e96f-65ce-4c43-a8a8-eb389f34da17",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac2df6d-2576-4a78-8f83-8a73fb0811f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d4768b-fb6f-41a3-94a9-52d61fd91dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b32d561-166c-4a9a-a499-ef5d45565918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ace5b128-9cf6-43eb-b6af-342f35f9634d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9da5c2-711a-4296-b7f5-791a54b8a6e8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd62a78-7a18-45fb-b1c8-5d1cba564869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5d34fd-608e-4ac4-a952-a4a14113fc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688bade9-1488-4d84-934f-8ef020e9d31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e38bc185-2841-49c9-a3d1-5430a003ebd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f52120-6cfc-447f-a184-647d0c118eb4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242a7214-4c16-4185-9c6a-5119f05906aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93242314-4ad0-48cf-9ce6-a40ec4a5c16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682db381-82b4-47de-be3e-728a38e1ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05cc845e-1937-4b21-8b39-25a0892422fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbbfcb7-2874-47b8-83dc-72477042a8eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45dd13b0-f097-4bc8-a7cb-cf1e10604157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4fdbf2-3447-4ba1-889e-c968ec895629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60375d50-e708-445e-a779-b7cb7877b4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "87cbb1d0-2791-41b2-ae3e-ed88b0a0f869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ce7271-a492-4feb-b221-ae25b2cdd1e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7e55cc-ae08-4707-975e-16ff7578854b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2180561c-6b78-4af0-87e7-561c0446b2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f32eec-782c-4926-8494-20144d070a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6ca78c-4166-4597-9c53-d8310d4c1b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdcdf5e-9d7f-4475-ad1b-bc8415285c1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec57781c-e2db-469c-bee7-d8df9c8929cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0d542f-e046-4945-ae0a-f88eb0cdcbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3edb782-8f00-4f7f-8d4d-659973f498b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad47a6f3-f72b-4fe8-9778-474d4e288b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c342f621-92d2-4fa1-9cbf-5084b278c429",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72f89b4-3126-4dc1-80ad-e2ca49190fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05bde9b-7d1c-48d7-9403-90ab87641400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3920bd31-6ba0-4e00-8b9f-afb5cafac92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5c93c6-4f57-4c8a-9983-ebb70d40ac74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78db4c4-8b7c-40e8-81af-f978f121cff2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fb0692-0854-4855-9986-d82bf1fc0fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e34fbf-6ede-4411-ab1d-c5d50d107251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee3daec-ba57-475c-b1e1-60ca1dfdc90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f974fb1-d095-4715-91ef-ef8319b4d7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528665af-8ff3-49ab-9b3e-ef891af84b3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e261c2ca-aa71-4f0f-8a02-99de8ada06dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad7ada6-5524-4c6d-b104-ef0463f16d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a580a1-6d1d-486d-aacf-ef9d87251e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fff16bb-b068-42a6-abb4-96b94cafb992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cfd72c-ff6f-4de2-8ab2-3cd8213088c1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68c96d8-df0a-4c35-a9a9-aaa78366baea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6a5037-dd77-410e-84eb-a81da76c7261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bae65c5-416d-46a9-a18d-c5c6b8e1b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "73e77e60-bf16-46f8-9289-726f0c3144c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a629ab17-ec77-47c9-b03c-86e6291767c0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b9fb08-9f0c-4075-b67a-ba45fbac2f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4f99f6-d4c0-4d27-abce-78c382df9411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7cfd83-466b-46b5-8a31-e5b9f8e53ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d88b4d-29e8-4af6-91e7-711c2d7c37d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c54b86b-3626-470b-b37f-bd7649d9bc7c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ce620c-20ff-4fec-9aa0-5907d5113457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72d29b83-c5f8-4703-9172-b31bc5a349f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b02ad8-6089-4849-b50c-df38f25c70f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1664ce7-688b-454f-ae9a-1e74054114cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff63c0a0-293e-4199-a513-3355b26e3e12",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e4329a-201e-4687-8954-45a84a2c11eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1680369-96b5-410c-99d6-cf4691c3ea5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7c44a7-e129-4b52-ac14-df61df143f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60db1db7-8549-412d-a5ba-87d42dd947a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808b3ee6-78ad-4806-8d69-9eb9eaa057f4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8fef7a9-2ba1-4d24-9651-4f24274a56a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7184375a-f047-4160-90ad-b71b1574e6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b6c0f-707b-48ed-bea0-04d07cb6f16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25b4a404-e820-40f4-aa43-b25369e01d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1f0763-23be-48e5-930a-5059ca141c5c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00203909-bf88-4901-a827-5f1f663bed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2b22b8f-8821-495c-b2be-af2d9ec8cc5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36c44d4-d348-4156-8088-8fd4d71311ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f21f7f75-451e-4aaa-a4bb-24db0127a064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1410e361-efb8-43f2-a74e-59a8708dc2ae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f568dab3-6dfa-40fd-9b20-d41b07aa65f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133d769c-da7b-4400-bb6d-62ddbc23ada1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a32e4f-0420-432a-a989-baee824dc21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "95079f40-13ad-4239-946a-9a27c408937a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac67197-0219-4349-945e-e92ce3f0abee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956d1e2c-ef0b-4dd6-9938-6c8f3353d026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48330f9-52ad-40ef-844f-962de3191e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06052a3d-3ea6-4d85-ab5f-2e55e7a5da49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "884873d4-6a9b-44bf-9b6f-1d31c7e7ce62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafa3aeb-b493-4607-9b40-0107866de8bc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd7226b-077a-4b90-badb-a6cd1e2e117e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371f2332-d32f-4e24-9325-9b4dbd8f5a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5746f194-db3d-484e-9fa0-6273fd234d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "834f2302-7b3d-456c-adc4-ebd7ba647853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55799889-0f7d-4b4d-84c4-35a10fba533d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167b9ba8-6660-4d6a-80cc-b6b6203783d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1434c5-1fb7-4e99-9378-dbd806ce4973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3952e8-e04c-4328-b518-6af30fb294bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d61ab725-5bc5-48a0-825d-acba95e260f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213b07cb-5a59-4ac6-b853-37d8afa35e53",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663c2c70-9edd-4e5d-b300-b0dbdf644ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996dad36-9330-44a8-b227-50a4871bd25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7139c36-909e-4f0a-9a5f-ad58da5c7902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db26e4ae-0fe7-4958-993d-063d435e2026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7369ee4-0093-4133-b255-0904abaa1877",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a34cf2-721c-4656-b0aa-a82d9a7edba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0ebd95-23e3-4218-97bb-4578fc8efdf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77631ccf-f57c-489a-9659-2ea9fc312000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "14bd8bca-bca3-4e0f-ad13-ea3be4e2aeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35aecbb2-4162-4c57-a7c8-5433271e3233",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960c4967-9ee0-4234-887d-4031d37b9462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8acd7621-afa5-4cf6-a645-883762ee7a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f24e92-5e8a-42a4-b6b4-486bbc74b55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8511f48e-205b-44a1-b148-48ce87bab4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6130617d-3fc9-4528-aad0-88ae34fb50c2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cb02cb-d9ae-4c47-a204-9fafdd973849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46afaaa8-04e3-4761-971d-264712fdfd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7bf85e-d107-4a25-89fe-aeb4145292ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e944b2c9-6886-4cd7-90dc-681e81542249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0a0d0b-7655-4ce0-b46f-e6fb6444bbf2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001d9726-dbc4-45d4-8a14-4c853e338e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ec3599-08b7-4ad4-9618-908d19416ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd158a9-5d44-4cdf-80a9-26979691594a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "911cdd4e-9a28-483d-a03d-fccb395827bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa664ab-0fb9-4ff6-b92c-559c995c6c27",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17a8fd2-60e4-4c09-87b5-5c5a299246be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c84ea9-a1ea-407c-bfc6-85e1749ee3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605c59b9-d1f9-42b8-8a3d-f1f30e91a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9746ad-84a0-4209-adee-9279e45c5588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c65906-0784-4344-9387-6cda97d8ac0e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bee00a2-4d77-4d63-a210-be1f151c22e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4323033-fc49-4c41-81c9-ce98353bd1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce2d399-2303-4069-9be0-f839b130d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f413427-ec3d-4fa9-974f-a4de1f92b533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac0c92d-33df-45dd-827f-0d0dbd241c81",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e50df51-e90d-4f12-8102-2b1ca36c4f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9430a543-9036-460c-a653-916c63d5b55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3c4920-eee6-4dd8-9767-0cc5159a13b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51c158e6-c64c-447f-b499-d32db338a7c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f29490-90c4-43a1-a98b-143230cb2d8e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a0c233-a2a2-4726-839e-e22604700a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdf449b-6ad0-47cc-8351-7992885916d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac644c03-8521-4b09-8310-1c3e043ebd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "68614ec6-8508-4f16-9b22-5c0677eb7826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8f020f-74d8-4a1b-b8cf-0cb5906e7485",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19054b1-0069-427b-93e6-af8f67c74447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ef937a-9c40-4358-859e-8394d7a237ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8085ce4-409c-4669-a8b8-c99254040ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4415b3-1329-41c9-9233-291331186537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8383b1-c10b-4eba-913b-8c0a3f4fe0d5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985b9085-dc09-4459-b66c-b280a400ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab54300-066c-4d25-ba73-404a7901ceb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacb6a03-ed33-4edc-bf9e-62a9cbeb4058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3f0c2ce-8d2c-4e68-8cad-f3d23efd0a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e19a42e-74b2-46ef-98e9-9d03cc80ad85",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e366796-2d18-4950-a9bc-a26cc5a8ea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b4c8ca-2d88-4b30-b83b-346ca4fa5d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8db4d3-6078-455b-8707-0db7b4183315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ace0205-984a-4bc2-9f35-136320c821eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25178a5-e034-4a81-83dc-f3d2d6ae6e11",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caaa118-ecf8-4615-b3e2-367252ca7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa3fa3cb-2859-4f34-a4b2-7d7350c46dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e229386e-a581-42ad-ad24-722aff75d12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c77caec-1d36-4045-9464-240d9573286b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7d35fe-2c80-4ef3-a5b1-ecaee8d26a6f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06294d8-e1cf-4ba1-b9bb-5f31201c96ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b082eaa8-f3bc-4a03-81cf-fe09ef4fe46a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0d6f83-6801-4f63-802c-6c87573aa37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92277d9c-52c7-4269-afa7-92303f301300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8794d3a1-700c-47cc-832e-fb59fe448736",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b81cf84-46c0-43ee-859a-7d9ced9669b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639034ea-75fd-4453-8999-401d88cc12bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9366241-a4ac-4ed2-8a40-9006e80a89d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3c6ca6-d294-44c9-8011-96e0c5f93f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff9a11d-e808-400e-b9ad-f896de396535",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3f3a37-04b7-4ae8-9927-66040954f58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6d3eea-3723-4e9e-ae7d-86fcc770125a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e875bac-9d6d-4036-950e-7b0679c0577b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7af6519-89a5-4ac4-8ff4-9892a597add9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b57f791-2140-48c9-9850-fe0314dfefa5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3711964-3d6f-46e1-a0ff-0644e82a69cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d253c30-31b2-45b7-bac0-459e3f44ec72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82a7b34-68a4-4e54-b6ce-cc4bdb7392f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63d15663-778e-4bda-8045-3a3a6f3a4b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594bdbd1-84a4-47b7-8135-5d2b1e52df29",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cc546d-9928-4fca-93db-e02d1c26974e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e327827a-5c5e-4705-8800-d8fe2045cbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ea974d-ab17-4b87-ae8d-766d4fb09891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f74c38-3793-4d26-97b2-48929ba0b726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2741b44-1ae9-4ccc-8bea-a7f7231643b4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be22cf3c-1bb8-466c-8824-fa79a694c2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c50a054-f1a5-4895-827d-fdedec4542cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df669b39-ec82-4ad7-b1c9-957d51e29853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d073f2c0-0269-4f29-b248-965821abeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b41067-9356-43f4-b9be-3f44e2ebecfe",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d755522a-48cc-4196-8b02-4d787c2c26aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293a5889-22c0-4ffd-8a78-2f0846b0ea7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c965d5-0206-4686-b157-63884e306dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba23a310-4259-471c-9051-9fd5099b98f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb37e88c-4922-479c-b709-2e340bf15949",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062500da-36ce-4b3f-b2e1-f6c89895d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7f054940-7df2-451c-9da3-76d83026586c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9df69d-ec25-48e3-9549-5f4c8f35b10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1829c6d5-242a-4943-906d-795cbca4109c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "839b4b72-5ee9-4a2f-ba31-26fcc1042037",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68ac66cf-0c19-45c0-8106-ed0d024531f4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b611e2-2b38-40fc-98e1-c74ae173bf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cdf6415-c86e-4451-b9f1-6829054fa1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede19188-9d8a-4978-8b0b-1c067342b901",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef6c293a-8ec8-473d-84ce-4c6759c1f450"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c249f2c-a6bd-4775-b06f-767f39844bcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6888f8c-609d-4b69-8c65-6e3b7ad8b9e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3a671c9-05e1-457f-b993-00889cf2e086",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66453417-923c-4372-afac-7abb775c10fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfdc3557-70ab-4136-b4dd-32040ecd386b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b89ee736-ab28-4f67-97fb-d6b7a75e5bce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4277bb53-d98a-40a0-9008-3e0cefbad2a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9f74a2b-953e-4a13-acfe-c536de3bfab8"
                }
              }
            ]
          },
          {
            "id": "6607bbe3-2efc-4448-adc8-89411a06efb1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8c4ed44d-8f87-4bd1-b0e8-02c8669f5bce",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "de427a19-a720-4cc6-89dc-610e23b8ddc7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d587e3-e25a-4225-8a2c-a0779ffd6b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6799d7eb-b433-46c5-8d91-1abb4e514b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04acef7-df72-497d-ad08-2df6b7418e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75256fda-e719-46af-9936-d58228b2f1a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5c9e71e-ce9f-42c1-8f0e-7fbe34c4b4cb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f606b1bc-aea8-4ea6-8e36-672ed7d32b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70e89928-8fa1-41a6-93ce-47ee9530b1ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17ef7369-1827-43d0-8fd9-6d645acdaff3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7fb70f44-5745-44e0-8bef-e1e1c0e8126d"
                    }
                  }
                ]
              },
              {
                "id": "1de6fc54-b914-4087-b11e-27e19afe058d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d3c8e0b-1a7b-4cfa-bc97-11bc2f71448d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c6e98ff-798b-4038-aa58-fb30fc1fff2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab5f43af-498f-4e93-94ea-b9ead647850d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b0d7fac-8058-4c0e-a588-29c3b48662e8"
                    }
                  }
                ]
              },
              {
                "id": "8a76dab8-f1da-4a95-902d-7557f11d4361",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29f7dbce-4ef2-4f92-a58e-5c7982bd29fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57a4a1b3-335c-459c-b51f-0f91c2232e52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "802047bd-c0ad-42f5-bb4c-d8147f730891",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b204a2b9-d0b4-4ae1-850d-4a0dd9df8d49"
                    }
                  }
                ]
              },
              {
                "id": "ea11bba9-f162-4361-bb15-c6c287d7c196",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5470f318-d50a-4f65-913b-a83fd7f69c60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a093d40-e706-45c2-89c3-7ff6c9ba2131"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39dbebb9-97fe-433e-a2f9-b8f916ae7254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c740f10a-7f63-4b9f-a029-a71d2347d25e"
                    }
                  }
                ]
              },
              {
                "id": "2af82781-0b9f-4d45-b57d-d7fa254f5681",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe7ee973-a9cd-4ed4-9fc3-70281d4273de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fa2250d-81bf-447f-91d5-10f2bd21e180"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f061f0-4994-46ee-be3f-19533a9ef0af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca422510-8580-40e5-b636-a48b8a266777"
                    }
                  }
                ]
              },
              {
                "id": "f1ec6faf-ecd4-4c11-9e5f-16c1ec1a24a7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfdc03ef-fede-4521-8221-99c870fcce3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adf1249e-ca97-42e8-a060-55bcf48ccd28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5bd5072-3099-4db8-85b4-e75fca8de829",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b78a98cb-bd67-4aa6-87b3-2c02ca39355d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aa823f1a-7bcf-442f-98e5-d29cc5114f8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f72abee-2ab7-4629-a49c-e0cdaa447b08"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "831187bd-7e69-4f15-8dd7-f6bbfe22b1a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a308c1f9-54b1-41ae-ab1d-430f52599419"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd756736-a870-4973-8736-da2966ca2fb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "27eaecdb-5ed2-4323-9a0d-e64ff60055c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f42ff45-b434-43e9-8006-76be2d901de0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c6ac15e-1c2d-43bc-9513-0d2d8e2fe0e9"
            }
          }
        ]
      },
      {
        "id": "57603cfd-a039-48f6-9ad3-27ed2f700708",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bf9321b9-99ce-4810-9a3d-fb5c584bec4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d39c245-534d-4540-8065-cb41383273e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d895f0d5-acb5-48a5-974d-3e5b759e7f9a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7fd8ef-db33-4ebf-a92c-1abb279d4d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1caa3e1-268c-4426-86a4-e468c9f943d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3c27c2-000e-471b-8379-051f3a33c503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1070c563-98c9-4daa-a31d-98ec89d48d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3373543a-f7a8-4c0e-bc4f-8069f3e4531f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8368e1b0-ef56-4b0d-b181-98dee8252b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f542bd-d31b-499b-956c-1c31ef76ad65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856cbad8-5b3b-42bc-b46d-ef58f1c9ad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b1a6fa-8b25-45bc-9fff-7848dfc9be59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff921bf-0c18-415a-aeec-b7cd46cb3693",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2ae309-c10d-455e-a124-437419e7b06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5acbae58-f594-4a2f-a423-5b368a1464c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6795f6d0-5c78-42b3-ae8d-9f2ef8440982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a92084-df96-4543-bc95-361bb8ec8e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d581a3df-a278-423b-aeac-6374478ef2d3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0a0eed-5a23-425f-82d3-c8cb8eeaee23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7527b075-c064-497c-b3e8-a385ed5d3980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c01a01-4ecf-4838-8401-2d0c0be226e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f88941f-2d32-4eb2-b029-92a7bc7e2eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03780f6b-c0d3-4ac7-aa87-50195b7458a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5363ece8-e7f4-4535-9878-6bee722162fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59606149-66ae-47df-a28f-9f9152687176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b24f8b-f41f-4db2-8e54-173fb1e6d5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f549d8-ec99-4656-8cb4-74b873642da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a37945-b536-4f6c-9ba7-f649e4085a84",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c01babb-72cc-4e9b-b8c8-cbbd9a1e6367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d7836f-fdba-41c7-9dbf-f1b4c217d00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e15223e-5f66-4418-9b98-5a55352be110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03973865-8edf-4ea9-8bf2-ce3a0fb3c4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3d8b27-0948-40dc-925f-ae22d96a3579",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c576324-3437-45db-b73b-a2ec15a62da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3373d9-1901-496d-98df-952d5e4c1011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00232d4f-ad28-45c0-bb0b-8631ac9709aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5abded-3a03-4b3f-a381-43821ee2f78f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96933eb-5122-451d-9507-b4e1e2d2d7d5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680b582a-0df4-4625-ba15-e7e8a4c01f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a38b5c3-6fa4-41f8-84e9-08c0083e5585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed27548d-649d-4206-b450-b43aa069064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2ba512-95bc-4bea-acea-4e2953fe014d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9332314c-8c0b-41d9-9db6-a71470f285d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b3feb1-7091-4425-b6a6-5be45a7221f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caec98e9-aa71-4bab-ac8e-afe346f0c288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24040110-c8f0-48ff-ab14-66c2315ff815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be3ac45-c77e-4a80-a437-4ed0fcaf3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4a3c6e-c438-4281-92e2-0e12a5ef2fb3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33008cc6-d646-4dbe-b395-e286dc303dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c441ad58-05cf-4fe1-9b61-102a82f770e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca887b1-c6ed-4195-9cb2-110fbf866a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9400487b-8c31-4b11-9954-d3ad349233c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8f1dcc-2786-43c4-b06c-cb2852ef832d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fe13d8-2cb1-485b-ba18-d034c16a9070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6447fbe9-bd86-40e5-87df-d53f427d3796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f620874-80e3-49f8-bd70-e30aa4d52ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c2538105-d892-4bc9-94ad-ffbb66cf8ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7dddcdc-bb6f-4c7b-8a78-ea8e85884b0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628d475c-2324-465d-914c-26f7c59f3128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf60b78-2ddc-412d-8e95-7ee173afe486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21372842-219e-4f20-8778-1c05f0e983c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df2988fd-da02-4993-b264-c1dfe0fbfdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e402ddd-55f4-4694-ad34-10ef38b91c8f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f942d8d0-66b5-4311-9f51-2fecab6d40d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9a022f-6b4e-4b76-9244-2219d3c84f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17221536-3788-46d0-bb58-97ef0c6b5391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9694822-1e38-4e93-a436-b6e5b0d800da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70604793-953b-4dfb-94df-7cac37e9c368",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98765b89-7e67-47f7-a661-e5d05eeaa036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dae7c5-3682-4d2c-bcb1-c762957d8a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d0034-73cb-430c-94cb-4bcc8b4b7504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ecbc07-8661-4857-b9ce-9f36bd5ecc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4474b3-930a-406b-9070-a0841598519b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4182f615-81f4-46f7-a5c3-66ceb06585a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cb79a6-a191-44a4-b75e-ba72c7f12542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022c9424-0644-4363-abe4-49c692b33dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "978109d8-7549-4c64-a360-1cfb56d3a36e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7809d7fc-b144-4642-a236-cc4bf4cee8d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3009ca19-82d1-4f62-ad57-fa3f0d680bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d5d958-1b38-4edd-93fb-f8db8287b5d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ed8136-9ec6-4154-a3a7-a3431d2b890d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f01e6a4-4005-4a99-860e-51d8b7a8a5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ec7177-e00e-46bf-8f47-82f3cddf79b7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c14366-5f69-4cf1-bb23-37a5503cd458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbda8dc5-205a-4fb5-a570-3df7ac838b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f20c53a-e2bb-4a44-988e-1404e106cef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "23ecfa6c-289e-446f-b3c0-fff621083a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09b2c80-d129-4761-b5fb-080754764837",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a36732d-358d-4339-b4b0-819237375119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a33fa7-529d-4d87-a28b-c9c662daa733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e902dd44-0b65-42ab-9079-c024e8e74861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5058ba52-ab50-4718-84ee-36040b7673a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d95b9a-2dfc-40af-8944-9d29bcb02df8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b4ff01-ed46-4749-8dcc-efadb7d7d028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4515b3c9-76dd-43e3-8d41-3945ea9508df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e709ffa-6c31-48e0-a8d6-78e6726a78a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97dc3d4-29a1-407b-bda0-f9bfb4ae0f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb14a79-be41-469a-96ff-8b6d75f74e4a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826fcf0d-5780-4229-a417-fd602e863209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47931d5c-55a3-4ae4-a129-b9e275dd353d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5efa56-5ce5-46d2-9711-ad25fefe6f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2de4bc-1438-41b7-9607-8d425db0118c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e36d35-9ce1-4bd4-be45-3200e9a68c71",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3333f1ca-40ed-4ef1-885e-3a402c2a25a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad52d1d-fd26-40ec-953b-8f65caa79d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661c658b-26ff-45c2-9e38-4dd57288a76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66aad2ab-da7d-45ac-9b2a-5677477022e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684cf5d9-e5d2-4dbe-bd32-e9057dc5c303",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c66a514-efcf-4ec0-9ab8-d341142ec4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3ea6d8-3651-4856-8805-204b778e6044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea02a9f-cd45-4e31-8a29-3ddc2f526700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2fdea2-ec01-4c32-84be-c80fcbf2ae49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1ba1bc-26f8-4589-8517-f9ebfe67764c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d35d69-864a-4962-b4fd-01163f7ae8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9e0df9-b4b2-4853-937d-f8cc9e6b393f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c177c4bf-ff94-4d7b-b629-9ce9735bd6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f120831-f51b-46e2-b2a7-047482b4a8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a96337-f2c7-4194-a301-2702bde8a9e0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97364147-95f2-4628-9114-8564194b3314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e67418-2c96-446a-8445-750744a3d1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e4ece2-d7d0-4021-8047-4a124c819444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1de19e1-a3ba-4118-a6dd-70eebda8fa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f004e5f0-fb4a-401f-ad9d-609e89466248",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3ab7a5-7b21-415f-af61-7a707c78c524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f88300a-547b-4783-beb6-4f7d0c17799d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2ee692-28a8-46c3-8a6a-f09ba9c3ad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9db6740-d3c1-4507-abd2-a7f5a273616f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fa7e02-4f53-41ca-9022-df130a54f0dc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777d6074-314a-45ca-9af8-18e643877f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c292797-9f48-4d58-a697-f7c1a825f767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692beab2-0926-4cd3-8e44-07ce8343ae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebfd2ee-b047-400e-9a66-886f1bb34dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2808b6cc-9180-467a-b5e7-9118d2808632",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83892504-2323-474a-a2b4-24ec33773fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d6a495-1290-4855-ba90-03cbcc7735c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09af896-81d8-4f17-add3-13b41c5f896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0232add2-6721-40c1-a60e-a3e87aa628dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2c6cae-2050-46d8-ac0d-984410286112",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbfa4ff-031d-4e9e-b7d8-5253873d3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a9ac84-92cc-4747-ad61-602cbbca5f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5fbd9c-eda7-4906-bb1f-7dc3600e14b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5250a6a6-3bf4-41ce-8ad1-480b26913e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430155a8-ada3-4129-a37b-21865e28490a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ded3b9-72ce-43cf-94b9-d4ecb132ebc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226ff347-e96e-4cea-95da-2de4b6528cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc1d729-5944-4140-ac0d-d4bd7bfa0144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "872e9b7d-9940-4c5c-bcf0-886487fd74d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04066d71-3ffc-4638-b686-d0e51f00d196",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a16967-6b03-45ca-aa2d-24f62d0e1f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0435e7-dde8-4d0c-a8d9-369d341dc14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b975f0-844c-4861-ada7-5337646a1265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7497d0b5-ac82-4a41-87c0-1c9e85d6e542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9355f4-f4a8-4e86-8d40-844264f5d1a5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a51bc8-98be-4f87-8815-07d7a038842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff977cd-659a-4f7f-ab93-f1c93ee8fa11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535b9f27-fd77-4f18-a246-2a2a167cbfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a02fa8-5950-465e-8e39-befb84dcc40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20d2c75-0a5b-4dd7-9002-e01e6e432aee",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bca6299-b60d-4e0a-84e9-3b406910b12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3328ce4c-6b10-40cd-9611-cca984227d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5b2c66-2c0c-4b82-ba3a-7204badbdb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f84a5a84-ffa8-4b6b-a6ab-104d81ea0ab1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "586ba91b-bf57-4658-81f9-ca8063175215",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4443466-82b5-40fa-a03a-f412e8484f1e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebf1247-e5e2-407b-801e-9afa35bb053f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1f2848-e6a2-49c9-9235-4cbfb8f35815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149f9760-7247-4f3c-8966-b834b9108914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20aeb378-1546-47ad-8bca-6734487b4c6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "761c3272-cee2-4c2c-97da-2add3895738d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fe72ca0-cc0d-41c5-8a15-9fd3fdf9565d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5db9e14d-b3de-4277-a60d-f55ad4d60c05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bbdc850-2eb2-46fd-bbc5-b7c78d39db6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec2ad8c3-a6f1-4403-9431-95c524989f32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6862593f-3ac9-49b8-872e-14a051e198c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cafd54eb-7ca3-4013-b6b3-2307aa1db6b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "964178e0-73d2-4cca-b59d-65516ccb8154"
            }
          }
        ]
      },
      {
        "id": "2ef9e764-4993-4529-96ef-daeac2fdecea",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "997a21ff-8d92-4f00-affa-8d6badc1139f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01a716e2-de3b-4a45-860b-5babfd59ded5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1473db4-b744-44c3-a961-d9bcaaddb6b3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91617d47-642b-4fd6-8085-1bdf56f870aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16d3d67-6d98-4a6c-80aa-7aa32b1d3b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cacf3f-d0f9-4c6c-8564-e9c33c7b16ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "35083f66-c152-4478-812f-38fae2392452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f0238d-6e81-498f-b806-b5134877810b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ebcdca-6de3-462a-9565-ee0112ff9c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e347c57b-13d1-4018-bedf-f526a23b0f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94013e02-35bc-45af-a807-80dfa27c67bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2e40fa-6912-4573-8870-af8fedb57edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac925b95-5968-44e1-9151-216aea236705",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e17499f-ea24-42a2-ada9-270ef19a12ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f95892-1f0e-4be0-8840-aabecea05555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ce2c4f-4f3c-4fc8-863f-5384b6aed919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1978f5-8861-4b46-8200-92ee6420b730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8a2a4d-d7b9-47a7-b807-16a4d909d042",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd80794-9baf-407e-a999-20e84601826e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf88532-b4fe-4206-9850-403a13dc1078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5691b9-d27a-44bd-9884-9d0f239a1d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1912ecbd-3284-4c57-82c5-248c8bf5644c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d376bf19-927c-4527-b487-1f4ba9ac9e10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b63384-bc4d-4d29-95b7-a443bfb1b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1203243-2652-4856-b6ac-0518bfce8e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0735c2c-d9d4-4013-acd2-241c6a24ce1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4e462e1-7d17-47cd-8023-4fcfc4721354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a963d5-120c-4749-abb2-6dcea56d74e2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35c2c77-f67a-47c6-a338-176067e2d7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebfdc6d-8b05-475c-812b-7bd0e7982fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ea2db5-fcc1-4758-b990-8877df23f703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64bef841-3652-4091-ba31-3508e8071318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa3b6da-834b-42a3-a94b-de4ba8de4325",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c44521-2b78-47d6-9bdc-c18a14e9f1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277b0598-c8ee-4c32-8f98-d80999e57e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd06bb4-5893-428a-b590-77496e8ff2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "37148814-3d75-4f20-b537-25bb510b17ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8a98b4-7a35-4b8a-8434-ba8817ac072c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c6ca13-c16b-4461-88b6-f396f54752cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b88045d-d544-4136-9219-91fe851e0af1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db8977f-9cd4-4265-9d89-318aa428f95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e33f880-ed7c-4ca6-a55e-ca898371ba8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c330e008-1fda-42d4-aa03-7bf80ce18ae9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b91357-61ab-4126-af5f-92669ff64a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "711dacc2-3e3e-4015-a84b-30c24ce79c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8c71c9-310f-4fa4-a6a0-e3ff82da525c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "611db841-2c20-4ec3-95cf-c12dfd5305ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b760305d-d637-491d-b286-dc43cadcc3c1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acda405-d1f3-4a38-aee3-bfd51307cc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8fe72c1-898d-4a46-8d0e-88bf1683e5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc4185d-5ba2-4a33-87c7-cc228ceacd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d9c17d-0a80-401f-ba98-d1ee5674e947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c12016-4093-497b-8b54-097a39c17d82",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d71de1-b0e2-4b74-b62a-8a1886f3efc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d65287-4972-4a07-a25d-67b169c35269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6139e0-8b38-4b98-a266-9ef3e9a97eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7c4548-0def-4a1e-91bc-e2a64219d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b532c29-e3cb-4309-9ced-60a0ce00c96c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6017031e-d71c-475b-8c03-8036128e8486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f8b943-2608-4f1f-98dd-48339f2a7d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1075c730-08ea-4fc0-8969-f86fe38d5684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f88784f-221f-494a-9172-36a6e985e65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d676bd5-0d8c-4ccd-9acf-e7d459b57436",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a821b5-c298-4b69-94fc-30bd70909f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88562f0f-5c14-47b8-9628-6220d986c37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537abeb0-0fad-4364-991f-f182fac9c1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02b44b1f-f11e-441a-8977-5d6782f5ca32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b486f6e4-6877-4088-bfd3-f4ec18a866af",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c948c4-86bb-4425-a353-832b6d427bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9b573b-6309-4247-8047-a01029ca060f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bbc786-f411-46a4-a6cd-352fdcd93c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72c794f-963c-49e9-8b0b-e3f30ad4c4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7067af5d-3a72-4c53-bed2-97c59dc51fcb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95abbc0-f5b9-4019-98b1-4e3596857dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7687d6f7-5694-4359-a959-351d2e5c3b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72b85d9-176b-4a63-85b5-bf6a394982a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d060935b-02e0-406c-aa5b-7f2ca5ac2928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3761519e-19a0-4354-853d-af0e0baf9cc8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91016b0b-a0f8-4610-abaa-bc64d5fa6d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae1877f-a0a4-4d1b-a4a4-05ea62a34a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23622ca0-7470-420c-8515-a6e2190ffb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff30b82c-0602-4bee-ac01-255b23f4177c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3dea7b-0eaa-4c3c-95bb-6387e962a1d0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a64fac5-60ec-4a4a-b2ea-e0107a14aaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d41dcf-f87b-4958-b46f-e50a3e282bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fd294d-95e9-4412-a10b-bb7dd0db102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "00a41355-238a-4a70-9309-32f24cd2afe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed11224-cc24-4eef-ac53-539ec32b4b74",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f3d712-7dd8-4945-b948-f567e19e62c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fe95d5-0196-4e74-bd59-f20b61109aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914b617c-5943-4a7a-ada3-627b6ce777e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45020e8d-4b1c-43f9-b28a-a2670c6a0d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3457259-bf68-4241-b1ee-18e6a1a0d5a3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725a9d42-6171-476a-9f38-50425d639c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3136a44-88cb-46c5-a727-eef52a18c0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe22447-ef59-4266-b594-1d903f251ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f0dd58-f334-424a-8969-c8715a243645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38580892-ede5-499f-8c63-2d5bae2da760",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7660fb77-c3d1-4034-b2a8-15e198fdf4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c16829a-6a48-4434-bfd7-c6046cf50761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a074e90-4134-482e-af8e-30f09986fb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97235e2a-c76e-426a-ab63-1e2593c3f3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a058bb9-25bc-4a6c-982c-ef8dd12fe2b0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b5c192-3c1d-4bca-98f0-bdd6937280bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af51a0b9-5b77-48fd-981d-74f02a235200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6f0907-c6f2-4d8b-846b-493a41dc1d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30645221-69f1-47d7-a5a6-0a8cc56f3810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc73b1a-cc0b-4535-ac1b-449537194a8d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a234626-d2b3-441e-97d7-529c2212911b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881a2741-1759-4083-a494-2d13787eb74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30242baf-8d85-44c6-b3b4-4c54cd01b17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2a0966-bee6-4101-8420-e9ecba14c8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc81c76-b265-4e82-a018-69f748c49db3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bde7e6c-43cb-4911-8fae-bf25dd2df755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37458f81-b07b-4191-a730-0c0ba97c96e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed17d5b-ae2f-4294-8f4c-aa8cccbd5c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "365f05f6-76c6-48a6-9a4d-c7020ca0417b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da90482-ce6d-4890-a8d3-520530b4fae2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aadee0-d570-47d6-8a52-52483e8801c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a68a8b7-2090-4ab9-bb14-cde41ecb3775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c50f398-7a08-4758-ad1c-e5abdf284471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ed504b-1892-41a7-a6a8-cc9e59966040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d66143b-a9f6-41f0-b259-43f3e9413341",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fca4616-7f3a-4ab3-bf87-3d4341e36805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5d9589-9d12-4ad7-a868-685baa3e77b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d2f077-08b1-41ca-9a01-c1c87d22b60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac22c255-7934-472e-bddb-529c71c0f95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde12748-9491-4b53-b49c-3eda6f853d72",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de8d71e-f434-4873-943b-2a6d30902db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0111bd-da70-4b22-b2ea-12d0e78f3e9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f2f89b-ecf1-4c18-a574-eae22d6d853c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c17447-c825-4858-bfcb-171253e4cf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65199d9c-13e4-41fd-90bc-c949a69c8e22",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3fe7d9-0558-49f9-b334-6eb08a8b706d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f4b491-e564-41c1-84ae-a1222e1489e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf7f15d-c08c-4a3f-9238-6340171469bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9dc94b-b110-442d-8cf5-10ac633743d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10093db1-5ced-4fd1-b819-aab2d07bc09a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be38a93-c476-4d82-ae0c-7fd260c08152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eae248e-9a04-4cfe-aac2-edfeda96a1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41daa26c-97e1-4ea5-9d99-14680166ff8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eda35f81-be4f-4ad8-b508-0147110b4468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0fd6c1-f772-43f9-886b-a16c33299c10",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c356c-bc83-4769-8684-97cc562e385b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142b4f41-ec7d-424c-a526-0e3794523508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f96d67-3bcd-4488-89aa-1d6dcf479379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b649284-3baa-4eab-9ddc-16f70319cf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f76c86e-09e3-4982-963f-05e6c93c2457",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0897399-5a74-4e47-831a-13860a5eb78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465481e3-54ba-4f18-aa34-a4df0362ee0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d05e96-89ae-43c7-8e2d-c11292484577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad7ee2a-ec10-4a22-856b-c2bbe7f7cd06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254c3c43-74b4-4e3e-8502-9225b4023dfe",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69379603-2e4f-45fd-8099-fe088308a2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6228c14f-a2a5-4c7a-827c-5ea055fdfd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffe48d3-db8d-4bfa-8ca5-304b05488620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0177be9-7dc0-41e4-b33e-e222ff061472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c91a37-9621-440f-b379-c779f09d1920",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60a1886-8cc0-46dd-8589-1f36f84e3b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823fe83d-b86c-4819-a43d-6cc20ec0af41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddb7b65-2269-4539-87ae-4551a1a3d336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e5409a-5d70-4073-912a-f35b6447f971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4506133f-d697-4c00-984b-e7c1926a5e59",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1763994-3b62-4eb4-b13c-fcd19febd7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d63ec3c-a37f-4878-9bde-290524e489e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c8fd57-c674-481d-9879-7cdb1fb4a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6abb92-25b9-4296-9b17-bec39299e787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723824d0-0ee7-47ad-90f8-256b7f25ae5f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a1b27c-16f6-4a6e-9017-93998f525116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c75ccc-8a4c-4eb4-a730-746f17f29b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5715a87e-969c-47a9-893b-91b88d44027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c062e61-e217-4b42-b884-f7a5b2bab63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a33cbc-e720-4a97-a1a8-e0d7f1bf4077",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0669c892-90cd-4f95-bb00-a2f07aeb3dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dd405a-ad3f-4039-8559-a67812ef3efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da7c7e3-0e20-4906-8766-79c586a52044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f5456e-dd75-4b30-a879-05f3cc191215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dc09be-c1c5-4393-91ea-cf3db421778c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5433336-d945-47a0-b69c-5bd43aa528aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc86456-2978-4140-b8fc-79c926269390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b79ec5-de04-4324-9f29-ca837fdcb65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad83fe2-e2bd-49bd-8f4b-f5c958e7f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f958f94-8108-4d27-89c1-fadda50454c4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a961b7b3-4b50-4bfd-8fad-62503d16a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4da571-7424-4635-9961-2075ec04a4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afe88b5-cfd7-471f-9a8e-8e806f769cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2b36a8-c3bc-495c-aeb9-62fa5f00c789"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7af0af27-50c5-4a79-a93c-a9f12f85d3c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39fd68a6-0de0-480e-8dbb-82588b2606c9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95835651-ebbd-494e-8d2a-5876f330d39b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "431145d9-e3d0-430f-ba6b-65ce5bd0f4f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4634c701-e9e5-452f-8ca0-9ef9b6576db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28f7f0cd-f455-4f01-8b60-f2cad8da2381"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b66def7-92de-442a-b407-4a71968079f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80bf7be7-934d-4aec-bac2-28e811d2da55"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0cdeb34-cd59-49a4-b5de-2df86a33e660",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5d0bfab-f712-4885-9160-9441c1159a45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "456e7ef8-d357-4c3c-a8e0-b1fbcdc1e48d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1126c04-d463-48c2-9bc6-ed973baed5b4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0f41322-0c47-49b0-81e9-5e56095e3bc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d01429eb-8e56-4475-9b21-1ea71d15438d"
            }
          }
        ]
      },
      {
        "id": "7308f626-035e-494c-ad03-76339a867930",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "59ecbb6f-fa5d-4e15-b2d5-02363f80b276",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bdc5da2d-75af-4c9d-930b-17bd8c4817ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7580e234-c120-4704-b5d3-1dc90e16d834",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d2b5d7-6585-4fad-8c5f-fd872fce764b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d573cb4-5ee0-4ca0-9a21-9db31f06f5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9423455-0533-45f7-bfd6-e2cadcda2072",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f377b13-3fcb-4ad0-8883-9c4991c4e490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd5638f-63f4-4709-94dd-17d35b6a65a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ea1146-9cbd-49b3-b643-7d7a2abc06be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8197e0f8-a5d9-4889-ac1a-d273d303b9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed84b6ab-bd21-4d8c-a57d-06e3a4b0db50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81c2533-d82d-452b-99fa-7dce867aa37a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b89f40-422e-4436-bcff-b33fca21ba6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ebadec-a4b7-4d75-b507-6e816bd3aa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b09e7d9-5d48-4b94-9158-ec244d8ac55f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9797f3-1fc8-4cf3-a58c-b50aa6a6cbf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c03a951-7c0d-4c6f-9adb-a179ba525e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a3b3ff-3e67-47b6-be8f-ca7644e13bae",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99df798c-aec7-47f2-9c57-6a41401f388a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8e463c-7867-4044-a484-e86704881936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ce048a-848d-4626-b13c-8a3ae183a841",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ad8d20-7116-41b9-b19e-3096c9ed4929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f88be05-6ab9-447d-b4da-ac2afa1fb6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedbd05d-2074-4dec-94d6-3b74ab3148bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4444e26f-fb5e-4bcc-9e8b-7b9bcf10e3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3422dbd7-c88d-44eb-b71b-afaa09fa3c6f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89301df4-44d3-418d-9ee0-acd9c9264553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff859cc9-ed00-4233-a0b4-54648033841b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab80ff85-2bfa-4a61-b8ad-dc127275dc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db18c74-95c3-4247-8174-0adc17cfcc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5217c72-9903-476e-ba65-960f756740f5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7626fa06-ecd9-4fa5-b0fd-eea0daadf100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b369bb-8e2c-445a-abc2-df4874288176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c25a22d-8303-4e02-84d0-90127dff5cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf502032-a44e-4d1b-91c7-207ab86b6a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25527f1e-5cb2-4bbe-b072-2322b36706e0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8482e4de-b227-45cd-8988-ab242114986b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "165db81a-1588-4d4b-a69b-2ddd69a35408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2524e3f8-673c-41a4-855c-38bdbe9c6947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54e4238b-8ca7-4ea1-b4e1-19af130dc2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9ce798-d460-4a7a-9f26-be2ccf225efa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d77290b-3c98-45ad-a382-e2b2af64ec35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f81a335-9931-4711-b611-3a65423b2ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3db1b56-5bfe-4bc3-b065-9e2db625189b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b73080-73f8-4345-ab56-609b18988479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4352a30-0713-46be-820e-b35bc84b24bd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036db06d-a20c-4a00-bb0f-6dbc40ccaf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09875b5-e594-421c-8717-44230443a8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415d0c55-5a0c-472c-928b-b8420ae7261c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d967b04e-74f9-4677-a965-6bcec506f01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cff1740-e867-4403-95ab-a2f9b18c83ac",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1fca99-28b7-4d25-9100-a450d97a0c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96701fe8-23ab-4095-98ce-a8f3f4b60607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8a47e-e278-43f4-b799-a6d5b8925c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215bd14c-8469-48e5-a883-c6a06a93cb86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d557eb-e849-41fc-8ee4-b9e7d3c9f996",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ba4b28-8cba-4f99-bfa5-b9877f7b1dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14cc98b8-55f7-41a5-b3ef-24cf216577b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae27e2d-446f-496e-b16c-0b215c5324dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb07442-3f48-42eb-a22a-eaafa8a4b903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f9650d-a40f-4926-8413-ed71b813e17e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13a6a7d-ff0e-4b45-8176-7191ca2b5ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c8ab692-1b5d-456e-9f8f-5bd64f099aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee6ebce-6b84-4e2d-b7ee-d7aa9a716914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a424e027-e1a1-4400-9207-35202b05ebb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e4c248-d963-490d-bf6f-df085f3305d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4a7da8-2d1e-4c7c-a8ff-617282764b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990b9abe-5b0a-4c98-b90a-9e3b32b8513e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486aba62-e248-456c-9930-8261f764f79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffaf33af-b086-4522-bf48-e1fed48877f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30a9bb8-409c-474c-b4fe-f139fee865c2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2841fe-949a-4b41-85f1-ce41b33571b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b94df91-4b69-4ff5-9ab0-6df0e25b2be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabb0ae3-0858-4c61-9fc8-7ff6ed154a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef948f19-1a28-4d99-b202-0c37fa824633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b416a11c-0b04-40f3-aea5-7fcfb9adf032",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51fd3de-ad06-4c7b-a211-ab55540ab8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc2e127-0a16-4c87-9b78-fa728147f883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f73407-f1f8-4b97-bc93-b0dd1cabfb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b645a66-0d78-4f96-bd5d-50508ff6fea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f28fc56-cdfa-4357-905e-bc4665916b30",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a21553-5232-499d-a0e0-2654189008e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90aca46d-73ad-4a67-af6b-b368d94334d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff18d15-09bd-400b-b7db-6af0911d39de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5078ca77-6a5c-481d-8a83-fa9f34891a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1fe36d-8d43-43a7-910b-45eb5901803c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba64007-91e9-4e76-a3de-12522f91b3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d96765-9f51-4e7f-ab11-7d3b77ca8ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f02c88f-e4e8-44c3-9b3c-55f8b5ef41cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cbee8ad-769c-418b-bb5f-1db0ebbb9e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee50c37-b828-4417-9065-e9cde56b8018",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e25dbe2-a589-4ae7-92a6-cf4df0349b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63211023-c633-4e20-bdb3-83bbccc34ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836b3c0e-9ab1-47e1-af84-b848b89bfdb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0832224-8212-4f1f-983d-2228295e4d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f32a0e-bdcc-42ae-8949-70ea81b8093e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb2c1a2-6d73-408b-9bd7-c318bb68b112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df5678c-e3f7-42fb-a2c4-9b9b082b5e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f7d0c7-f728-424e-a0ec-56c8cebc5fcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc20a2c6-503d-424f-9c19-4a2eb882a650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2644bc6d-aa67-4202-97b1-4a1548806f6f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88ec410-ff9b-485e-8b2e-9248fcf36386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eadb8f2-ec6c-4b38-8ab7-cffc27c8151d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b8820b-f7ca-4123-92a2-65f9c125f172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93773c1-36eb-4179-8ff7-82474b7b3bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a55376-7a57-41bd-ad3a-1f96495609c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f1e965-18e3-463f-9ac0-869040aa8b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f8fe34-7397-42cb-870e-922ae03254dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f611966-f34a-458b-9673-b8673994f6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5745c47-69d4-4b85-b29f-db11fda5eabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e027043-83f9-450b-83d6-0c5c787f9bb1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86dea9f-a2c9-4442-8395-ab9630b3dcea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02517980-fd2b-4e4f-8fd9-d3dfa061ca18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0fba2d-e7e7-4b8e-bfcb-f1eb1f40904e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922275a8-af84-4b38-8295-cee89851a42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156c6f23-defc-443c-baec-1f808d29aab2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778d6cfd-154d-416c-bfb5-0aaa7a126136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f30eae-bc6c-4b42-b360-ca7383f72fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6a9338-9188-442b-96e6-4da3fd46a394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226ec0e3-44f5-4e0d-9515-4a5900392014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2533c7-d797-49f6-a699-9a04542c1725",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92345483-3df5-4cfc-9fa4-4cb6f6446d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cdb8d94-cc5e-4e40-8aed-22b2b7341687"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb1c3d1-8909-4c92-8ead-8e0d7154c844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d784e5-ab02-4ef9-a053-8d152ca01734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a84079-48bf-48d5-8848-f35f62d62e6d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91f2da2-ad07-4874-becb-3c09bed94f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d5125c-d28c-4e61-9dac-c331d17d6a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab727a6f-ef84-40fe-97a4-e2a2bc847111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c30861-80c2-4c4e-9f42-584c6fc97ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c017e73-2464-48d7-8f2d-6248399134a7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e141f65-30eb-47ce-904f-ad1ed287e42a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "644fa6e8-929b-470f-9f01-cd0ecd9631a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4babdf2d-a5ab-45ec-a2ca-9da5c98e0b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df355f1-429b-49d7-9c94-02a3dfd0ed5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462c862c-f49a-453a-af78-03ebf889611f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451315e6-192e-49f3-aa08-9aff2fb94f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7def78-67e9-4518-b93c-363648ac84f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8978061a-1e45-414a-9e07-e9a9b3b3de5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa99529b-35f8-4d7e-bd52-cca436470d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d65cefb-26a1-44dc-bb01-da1b9333ce0f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c185c08-662a-4bae-978c-53f807c76077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f3efc05-f24e-494f-a559-f899403d0c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085f8d80-b0a1-451b-82aa-a017d45d34e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d887bb7f-876e-44b4-84fd-3e42c6d65520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61fe213c-f80d-4987-b816-7652aad685e8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff125bf-0342-4543-82fe-1e06d2c694d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f9ac96-6956-4b74-a034-1def16ea5fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3261261-0d56-4c4e-84c6-1ef10aa37461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91d3da6-6c58-486a-82d1-f9cc78ceaa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc06814-4930-47c2-aa8a-11b3d0b7598e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a4ce5e-6bad-4e1e-a27e-aee4eab68a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3cacf2d-253a-4fc9-b5c9-2e940b5e4597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b915d5-9fe9-43b6-a6f3-82738dfc20e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6eeeb60-2009-47b7-aa9c-e34aab7317c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba791c4d-8b3a-48a2-b58a-df3a78e6edd2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaeabf9-1110-47dc-901e-ec669d55ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b122f80-4c21-45d1-8030-3ac4b053ffbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b53df-8cba-4dcc-9c04-37028937e09f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5646c4c9-bffd-4675-baf5-ff780eb8524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fae952f-c37b-4102-b7bd-d577cee653bf",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ff0f03-edb7-4ecc-b2e1-79e9ca8476d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b886b2b-f6a8-4709-b4a5-6e51cff1a03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2002c3eb-3e6b-4215-b1da-f8164bcb23cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a81a17-bb7d-4d1e-8e89-006b387dc581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a843283e-3569-499b-9684-e4c399104e2f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d802506-9975-4aed-acea-9c43e50ae825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0760c190-bd31-4d2a-b465-0cc2ec9d7e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50112b3b-6ce2-4c52-9a79-13a231c6652b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cdbb36-4dd6-420c-ae5e-e9eff5c41190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d314ea57-35b8-4e5e-bde1-2bf531dba770",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8b374d-d3c9-4af5-a290-eb2cb0ff57a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360bb6be-268c-4467-ba0c-4c03f041249a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1720f8-bc88-4905-8913-287c399033ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b0eb2b-1883-4fc9-a349-4035769f534f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cec84bf-6efd-4a23-ba10-205d03758817",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbc8e50-203e-4cd2-ba11-1872ee73ac06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "639ccbb2-3a38-4c01-8176-2b04a4b57d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e18956-dda6-495b-a0ae-f97dabe08f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78c8cee-aded-4c71-896e-fe01f50f75ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c35aa04-2ea2-40f8-8752-5ba7a1d710ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5fad86-488a-44db-ad33-a01100d3a09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54a9a019-b537-4260-ab41-14de796c56ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decbef04-219f-4dda-af33-5d8760ce9e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64eff3a9-e1a8-43e6-85a9-b17c5584876e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee449746-fd74-443e-82ff-161540be7092",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a14d529-2728-414e-8a83-bb9b0e9316cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5bb1ca-bbf1-41fa-935c-899a839e3663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0388ac-8390-442f-8d2b-c4b98b75f071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc12bbd-9108-45d0-a4e6-5c3d940894d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb6962d-cae5-442b-923b-d77b202ad1a0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896a52e9-95fc-474e-b8e6-0e8e47feb3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde9bca0-e905-4eb7-b1d0-ee270663f212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed45354-970a-483b-bdb9-74a87f2afed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d50990-2c60-4c58-aa10-57e267104eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6882b1b0-f0fa-453f-97ce-e7d14d920f1c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7749a56c-9ff6-464e-8dbb-f6b682ec94e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcbffc1-b44e-4a5e-b376-e1f424638655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99ee6f4-e803-4f31-969b-1290707778d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ad3407-1926-44a0-85bc-8b7ac6a14297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480b42ce-44b4-49fa-80e7-0398651af135",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f3f460-1d42-44e1-b209-2b2f38395c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0c2784-98ab-483b-9d11-f953972bfcce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfe8f2e-1eda-4d39-bbef-ccdc8b9c76e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762b0226-7392-4754-a41f-5f716db2198d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbba4397-e0bc-41af-9a41-a063bff9b4f1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4099a5-602e-412d-9b36-bf21cd654e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9640c7-7034-437c-b6ea-190a69127cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f993d-edf0-4fc0-9bcf-85640929eac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e72ad7-75db-4c43-8a1b-e8aa11432143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a9db69-7a76-4c8c-aa9a-e54d3943dd31",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ccc1a2-7069-4852-9016-6868e1f45554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e112028f-8f86-4434-a4dc-16f1e8fdc8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31128054-a2fd-4644-a59a-a5400d6f6d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6683beaf-714c-4663-97f1-e5838444c3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8323c469-4da3-4844-a081-297e3e976384",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ff2177-6608-4080-a80d-65993c5647e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45c9aec-55cd-4c75-8b84-f4063b774f87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839294e1-75e4-4755-a150-3beb6920f08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec0c789-dc6f-4fc9-bfd3-6d6e41068d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b405c438-3efb-4388-946c-c75ec532ffa2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d25155-f5a1-4adc-8816-e31a0e60a409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315e9b4d-797a-470e-a8d6-ce87bd2e575b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7670534-c32f-4b69-be17-619ef508a53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7b3544-1833-4b71-8dbc-20525372f804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ef6e31-1977-409e-bcb1-457bc3e07c71",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241087f7-c5d4-4f99-b44d-a2fb039a490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28449d69-93c3-406f-813e-92ac187abf26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75af542-e692-4562-8b07-fbbfc7f64479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78292282-7e0e-49db-96fc-e123bf9a6d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5e4e9f-f907-48b7-9e07-2a30e8bb46fc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489b5fff-6c4c-4bc4-a9c5-f7864589d6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d202140-2f61-4334-a490-982ad444ff0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7842772d-9dcd-43f0-8b71-8f421649b14f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8b4e42-8a18-441a-a085-524ce4855812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecd2e2a-b8b2-48f3-8bb2-43bb784ee825",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e3d133-dff7-42a9-b720-498a708b4036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76752a46-fa8f-49d2-b709-723c009054db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06478b9a-0302-4ad0-98d2-4cf441f5786c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd62fce-2a71-4345-bcac-1a285a30afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c48d275-cb65-4c8e-b5c5-666ef8622c3b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4ac173-5d30-476c-a8bd-5f8a5e292576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980166f1-4837-4a6f-bde9-6c38085cf8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94512e90-b894-4df0-a1eb-a56bf51b5062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea3da8b-c2c9-41c2-b417-7042b2558bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f34b9cc-1922-4f2b-9945-f2c8acbd4b07",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd882fe-768d-4e6a-941a-554a091446a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dc604b2-9183-4898-a0a4-ad37679cd728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc58385-1721-42e7-933e-d9b6869d158d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e834d22b-2d41-4a12-a654-cd166682890e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321319ca-cfaa-4770-9b41-5c792186d18b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48fc236-8e8f-4c70-b95e-13562d200cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef19cbfa-ad68-43ed-abe1-08751a8b93b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c9e6ad-b970-4bf7-942d-a3c10e81c393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3af383-66a1-4b95-beb2-afe66286c183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cb0f08-c7c7-4afa-a89b-9f4a16e20161",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02847be7-1a5f-4892-8b93-158ea96e2d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d67a509-7da6-4a90-98ba-0559f9493053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60785fdd-b9a9-4dd3-bc29-c97a6b222830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb72cb2-6e8c-4e46-a8d2-5821bef029ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3efa9b6-ea33-4b7e-9259-910acc0f85b9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c015c5d8-1346-4d5f-ab93-8a2bd5901251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b66a84-a2a2-4d78-8e75-a77b23703287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f35aef-5b19-46ea-986e-0397848f73d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16ddbc1-3bc8-4c86-9c5c-627ffdf9f073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbfd875-0b83-48bd-a260-48b4bbf974fa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19d92fe-9d51-4c81-b3ad-851e76c1f91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6679e2d5-ce05-4679-933b-3cfab0d9927d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90efbd-9b42-436a-85e4-3b683713d870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dc0040-6261-4894-a916-542a8266f5df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab41734f-5bc7-43c3-a43b-1cadb917a229",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa33431-903f-43ab-bf03-aef003330306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf768934-69f4-4207-a4ee-bd1279545dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6061dcc-bedc-473a-92cc-846a4c0178c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0163944-dfe9-416d-92be-a34f03a4c758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e01b4f-0bf1-42eb-bc74-bc7752ef8e23",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623b6779-695b-43b6-afbf-33f4f2b8f7b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd677c92-e1ed-4417-b633-a14170716556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887abd04-b449-4afa-9458-a7becbb38234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440fe76f-ef40-4945-8b49-3c67fb903343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a6c1b4-33cf-44f1-8501-6df37b90950c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d76d1a7-0570-48e8-951d-31ebb44c0fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c34232-d625-4b37-ab7e-218411a5b1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d236950-0146-42ff-bd35-cf9020d0e012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73254e1a-efa6-4431-9793-3bea5f538207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d155c3e7-5638-4cef-b73a-fbf008fc581f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90bcc8f8-234b-4dd1-94c0-179d8275b369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c99145-b1be-4cb3-b810-8d88100f7f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f673bbe8-ccab-41f3-94b0-0d9a474d1132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc3c341-f4a4-4abe-9ae5-2e982538ddb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca040f7e-b080-435e-a07a-00c4574a50a9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2026116c-b062-414e-bf3c-848501520225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67be48d-043a-483a-9a4d-ff9cd9ff3adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8fdcad-260c-4a78-b118-4af2e8b51204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62af6fe6-cad2-403c-a31c-e2da743e71ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4145f5-4318-4f45-8f63-40dce2e53369",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0b5223-7480-4347-8aba-f31c4f3d2cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e33ac9-9652-46af-8c36-ca11e530842c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c962c52e-8757-4fa7-adb9-1f70c8b962f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e08b96-9cac-4204-96c8-29c0f8a2a3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7681d4a1-ff6e-4585-bd5d-5d047d841640",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1914c37-bc9a-423c-b141-63580cea38ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d93870-152e-4899-a88b-4b596c000503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8311bf6-7b5a-4476-a1b4-b2c619f1962b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a0eaa3-710c-4e74-92cc-3658ca5fccf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af20b63a-d0d8-4017-bde9-9c5524e52e85",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dc0ec9-d8c7-4053-8f33-84abc938742e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a73469-d57d-4fc9-94f0-e0c62efaf931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8d2a9d-d7e2-4541-a555-d7b13242fadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa6b043-ce7a-4207-9134-6f88fe8bed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5797e9-9fd6-4f03-ae8f-465d8859be57",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94305ac-7b98-420a-bbb0-87eb03159cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23f1a7ea-98a4-4f83-89b2-3d20c73dc886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787468bd-9713-4392-8ec6-e33b7fa146ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624e92a4-c1f7-4bdc-a0cb-c09dc308687f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3871b56e-f185-4f1f-846a-08f34e172834",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9accbe-9ce0-4227-ae65-a58b8a5457c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e935c43d-64a2-400d-8566-6fb82f25d2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2869ea7b-a61e-4e59-a9f1-10260fb0a21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96d3699-8cfd-44a4-bc05-72c43a46108e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3500bdfd-b830-49ed-8fce-3e181b8b62ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce28114-51bd-47ed-a5ee-96ee6599cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ebc2fb-6ae9-4528-81b8-7f82b581516d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b15bc5-813f-442f-9236-8317ad73e22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c110a3-3281-443d-9628-6b554ad9e37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d30f44e-41bf-47fd-848e-6a9308fac1b2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b19a52-8a74-4155-8d52-00bf9684eb22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd9233cc-8efc-49e0-8f52-39acd7aab48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1584b1e0-bf8f-4d03-b9a2-009b350ec5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26b74be-fe91-4389-a6cb-2a70974d98c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d174c415-cd97-448a-b7f6-68e1f80e56fb",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fdbee7-86e3-4bb9-9f51-b38914b2e26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78558e83-e87f-4212-862f-25fd3c723855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca761b7-7755-4578-8a18-ff661e5c8188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d06d4e9-ea2b-4fc6-9ae9-3d83315b0b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c480d413-1f0b-454d-a9b3-e7487e119a0a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e83cb3-d0ab-4bb4-8438-22c49d6dfbca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17097fd-68b0-402d-ad31-9379116fd209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab81b66-3b8c-48a4-a00f-b6f18aae49c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82dcf1ad-aedb-41b5-97da-250f8ab059e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d016e36f-2e89-4b97-b832-c1fb38c17def",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09b83e9-b539-4a93-99f7-cc9ba6afac86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "977dda5f-4311-4ba2-a292-3c4e37060b26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7189802a-0b8b-47ff-871f-71f209406d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac40ae2b-f8c0-42d2-9baf-e66abe1e1ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195dcbfe-bb62-4d58-a6ee-9dfd52237354",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a56066-9bc7-48be-b62f-666114c07bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5f22cc-2213-428c-9e53-43b9b3457b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88b26c9-5650-4a3c-b40c-1d77790a9ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858825f9-ca21-49b8-8554-094859682e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1845f934-3bb7-4c53-9097-887e7b4aeacb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8ef7dd-84ab-47f0-a3b7-2dc6cfb57182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41f80264-7f69-4b90-8b66-bbf689c93b14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6f90de-b74a-4ed0-a5b3-2ec23fd0dd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f407b10f-da11-4a55-b12d-b11a6472394c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa696bc-3282-4616-b855-e54f8e110ce3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c185055e-3889-4525-a8dc-b64c36fd088e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33960ceb-4857-4e7c-b38a-2f75a13e8a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4631cd-4b4e-4913-8e23-5ec3c79680ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecbee07-9dae-44c4-8a08-4e4830d23335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd16acbb-a465-49dc-9675-825ed13e954e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0185e40-c0b3-4303-90d0-47b138eb3612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "695fc6bd-f156-4197-b2ac-138cf20e926d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3a05c7-867c-4d4b-9d17-ecc9d9dd8c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378af00a-fd19-4062-9355-2e22e7605b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cb9676-23ef-4b62-9a76-8d5ec18638a8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0945c6cc-b4d0-4675-bc64-5c9b72bfc5ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3593e0-f8ab-4cab-b703-6d9809e508fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edcae04-e6aa-4ba3-a5cd-ad06b9f7bdb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe310f8b-d405-424f-b9f8-b69123b95176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06c729b-af30-4c48-9f01-30e3c7ea44ec",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119132b3-e981-41fb-9d73-95894d5416db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c67ae3ed-ad30-46c3-b255-f51f54408e35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "290e9287-f49b-43f5-bf25-8ce1aa8ce9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bab5ea-9a24-4495-9345-f90847cece50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5779ab7a-b2fb-4a1c-b755-a3e6b5defc9e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a6fb88-2e3e-4f7d-9c43-05121910898a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec21e25-9aac-4879-b84f-563a5044139e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e0ddf1-c371-4c0f-83d8-36e848b8ba83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb407bf6-4ed6-4225-9ce8-b4fc8d9338c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15786b94-aead-49a4-b491-1564cd225555",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e200530c-7b62-494f-accb-d70b3ebf4e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f35421f3-a2bd-4677-9346-348a67b7dc0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d3de8b-7831-4b73-bf86-54c420cdb3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da8afd3-b266-43e6-b709-26f567097a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91626af5-f86b-4a94-9e3f-97983198fdfd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae9aa10-692f-4430-b8b9-4985d832b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "236b0bd9-3dd2-47a1-94a7-9119ec38e90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67ca093-9c39-4ec4-bec2-6609e0d38821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c595de18-7819-4f0d-8e75-1a6fcb204a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a76dc88-3f14-48d7-9b7a-5fe41901a26f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117cf9c6-4268-492c-98a3-190f91b0dba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307628ef-66ee-4ec5-b4e0-1d46332c1f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229e088-85d7-4c1f-a576-457812d99efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e042684-c2f5-4998-87fd-0c5aeca14ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965a998d-2221-4f34-bf8c-2eea79d92329",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d29ae8-164d-4d2f-9614-e40b9cd20eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8452f31d-d062-4780-934c-85f6c633d5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a772f82-32c7-4c32-a5a3-f133925b97e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec1ab08-a480-4216-8956-2e85bb995a88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa78702-e3f3-4c4a-b6e9-de9d990f2424",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5e301b-34c7-498e-8fb0-41864ace6644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0cead5-c87e-45f8-9c01-3bd06215f705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f2dd9b-4668-442b-926a-600b31f9b524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07640b9-5179-4854-b238-b9bc48533af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979e51a8-519a-4525-a085-a7e98bf1fa75",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c23a81a-5fee-497e-b325-e323b1ed26f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5560bd2a-e5c6-4e62-b6df-a3d38acd4c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc408ec-c2df-499d-b405-aa943e0023b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4017a04-4152-43aa-8ba7-1c7d08838b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e012261-4970-480f-92eb-a91fbc708b20",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175886a7-3487-41d4-aee1-e301e23cf465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5375ad4-06cb-4e59-b1af-52a82bb32de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad033847-40c4-47d4-a334-be2e03f3b534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb507688-eb97-41ab-9ca2-050d9bbc53c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f842c425-8448-4b52-94e0-7ea037fc0b3f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7de23d-b633-4b0b-960d-8b773b06658f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56985c9e-6a5e-4199-a3ff-4b3f5f4bf1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a453ac-cad5-489d-9983-17862d4a3770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9603b62-193a-4fbc-b5a9-fb1af9c17ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b5cdb4-9a86-478b-ab6d-8ad9d32e14f8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b0858f-a475-460e-a95c-d82b0ce0af5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f3c86f-fff6-418b-8267-f8f33f946578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f567ed40-d7d8-44de-a53f-026906e9db14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23420a8c-baa5-4ca2-8235-b522352c3ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62deb19c-447d-42ed-a4dd-51d62e7104b6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fb5d99-0cb7-4e0d-842e-0ed64c2c92cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fa4645b-dc4f-4404-8761-8c7ba27b41bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dd6c2a-097e-42ab-90c4-978ce28f58bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bf1d54-2349-4844-88b3-b9ab61f4acc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980630ef-e068-477f-b47a-cfe78e9a8128",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e86a71b-a1c5-43b9-bb0d-8c5051821f60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2bda67f-69ad-4432-9042-a253b3ca75b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115cf419-2245-4fb7-834b-a62644f67d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4668855c-b595-4723-a4f4-37290d575644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7f5339-33c7-45f8-aebf-84b69180bf3a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6638655d-eaa7-4995-a31e-9a3df7542902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49201b7f-728f-403e-b358-f630bf3ba684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "177a6528-ce48-4e8c-9386-18e0628882ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdf26d0-a7ee-4e90-af91-709d4b53f0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fba681-2de3-4948-97e3-795726299bca",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93d17a1-f6a6-429d-8a9d-e3082a4613c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357ac1a4-56c4-4f66-baf9-b505410fdd75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809839bf-3244-4660-be7d-d6f6f390d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae36ed56-33cb-4de9-ad48-a12c4600d61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0472a4-006d-4cb4-b605-033d80da5ef7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109f4952-d597-43a3-848f-e63b513a5b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8099927a-15a4-4f5f-85d6-e0535c515875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af004645-23fc-468c-8631-a2ad4098e0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f8ae40-7758-42ba-be80-58a95e563979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca49fa16-2913-41c8-bbb7-87332834f852",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302a235c-c787-4724-8c9d-f53f20450bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c2b5b34-f0d9-44de-954d-0887d27985d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e578d9-10fe-4dd1-b1ad-a9938e39443f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a893c3ea-9f6b-4ea9-adf6-20c4eac935c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76df5e6-2d63-42fd-84a3-746ea55d77b4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbefebf-1f08-414d-85da-eb4911d790c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c709c8b-27bd-45a7-87b3-ac61db231e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb893bd4-e3d3-4992-b570-e230eec7fdec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58695eb5-92fb-4d30-901e-7cb82ddb8f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf50f464-905e-473b-829b-73324f557131",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9a94b9-443d-4904-855a-46ce6e4368c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07c717c7-87f7-4758-9e37-c69b68f23201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bffa2a-6cff-4b67-b386-880a2d398cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda720cd-1517-4d06-8865-693e8e99e692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfe486d-50b1-46a7-9573-e435449c77c0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aca6670-5e92-4dd2-ab54-697f8e8ba3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "485601df-1ae3-40ca-91ab-54edf6cd052d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894b8138-0554-4191-808b-b950bb684b38",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d4edba-07d8-4b69-be23-463e2a480a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27a46ff-6f8f-4ce7-ab47-465a4b45a15d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3697c25a-d73a-449b-8052-1021260505cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5685df-7b90-4f42-bc40-2752510f5c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20bec38-fc17-4084-9876-ddf1fc604c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a9c638-7054-49e1-b82d-6349eec942ba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52878564-beaf-4162-842b-8b78fa51e7a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7237ec58-4c7d-4468-94c1-3908282083b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4bbfbb0-e85b-4123-9602-b60bbacfe7ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5942b00-6161-490f-9241-2e037af1b539"
                    }
                  }
                ]
              },
              {
                "id": "fb50d282-df03-448a-a8b7-8bc24a16884a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42a4b00b-ec45-41ce-88ba-37a0bf604164",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c604129-fab7-4de6-a6e6-72ad437c23f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "950bf805-341f-48d4-b416-0d0d60dc4f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09059416-028b-42fa-8d9a-c396b68f1ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "811edb67-e655-423f-87af-b12b64d75a29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a951ef64-4118-4d7a-9b1e-8cc010007bb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a4a16d3-fe95-4db0-afba-1269e416524b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ad9bc6f-94c5-4cc5-802a-2fdeeaba381e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83f63c15-7f7a-4aa9-bcf7-4ea0d3758729"
                    }
                  }
                ]
              },
              {
                "id": "0d7618d6-9199-451c-9d82-df73912078c3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fb1eb7d6-aade-45ce-bd01-1730e65b97c6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a9b43-f081-4635-a106-3e17186fe1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f9fe0560-2268-4189-a918-1d207338ba79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d02988c-973a-490f-983c-3a2a089613bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d784f3bc-bf1c-4e9a-8e46-a1826b5f091b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b75bfbd-7539-40d7-832f-f7795a4618a6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fece4c5b-a870-4ecc-b36f-6b27bed19dac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "912a5d0f-0e3d-4638-a3f7-b0ac2c6f449a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae534862-cbad-4cd4-b71e-1ff089e2a8f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60797237-6528-4abf-8c20-347bae2887ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4838b90f-59c2-40c0-b0e4-835200fb0b80"
                    }
                  }
                ]
              },
              {
                "id": "23d2a168-565c-4e1d-9d4f-8405738534d0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ae9616-8d20-4845-af0d-57c7e365b3cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee80ef45-4d7a-4f8e-a66b-cd9c127defb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70fb1fa0-2244-4353-8b16-39c504591dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "167005ab-28a0-4ddf-91f3-4f86f7ca1d20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2eafd34-0b38-4951-9805-c38ba8ce4f77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d829f4c7-87c0-43ff-9f48-6eb8b720431d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95b9556f-bca1-4f4c-a5e4-c059abbc40d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "703dc76c-60f6-4a32-9aca-c3989cc8fcfa"
            }
          }
        ]
      },
      {
        "id": "ee81531f-48dc-4540-ba8d-eb3bb4c498b3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3dbe09bb-c7d4-4e8a-b7e8-ef342cf64929",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8ce77e9-83a8-4673-9ab0-79171e5ad4d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a5fe1354-a49c-49bf-a01d-b47b65816cab",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d624f8a5-2a95-47b0-93f7-c96273a1aa92",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b66e9fcb-51be-4082-9d1c-0c3b55a6b1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "411fb35f-da0d-42fb-9039-9c33ba6589d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efe245d3-1b6d-466f-a583-aa74ea8acadc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a0faa5c-ac47-4ed5-9481-e33b2e36dfa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "784a3967-cc59-407c-b771-43f96d89a138"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd43d7d-eef8-4638-aa72-7b837c0cb239",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56ddb833-50d6-48de-afb2-0e6fd6911100"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c11e2e0c-05bd-4c5f-9826-619c60651b72",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "915e2363-0ba4-4380-82c7-febf5f0923f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dad13eb9-b810-4d42-8498-c660515b2bb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17a828f1-8f1b-4393-95c6-59aa387e04f7"
            }
          }
        ]
      },
      {
        "id": "2495262e-281c-4722-9dd0-ab92585febc4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "04745ca2-ff69-4651-828b-714798d1d672",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9031cae0-0c38-4369-be7b-5f6495b3cea0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8951d79c-6a7c-43d0-ba85-8ee869158065",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc234f71-c76c-4690-855c-5e36b888563f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "741d8c6d-089a-426f-9fab-fd74020756c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aade69-e085-4f69-a085-73af38786310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c4a6711-615d-4881-b798-92a42dcf12f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b56ddff-6be4-4d72-87c8-8103d8296bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16e8b9af-53b8-4e5c-97dc-2e30f3c77661"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47cd500d-9a12-4657-871d-e9eea508b34a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a017bbeb-1882-429c-81e2-9d14870e0173"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d13494d0-2cd7-4c4b-a3d8-b564ea85c1f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38bb3719-e380-4546-83ac-7882044e61ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9de97cba-5b29-44d8-b597-3baf8a91f0fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a581d807-e1fd-4886-a8c6-7314311c2e0c"
            }
          }
        ]
      },
      {
        "id": "7604ec30-fc28-4d7b-8830-768544ddd8a8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bb07ce87-050e-459f-afc5-e9b8511b7052",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1e2c12e7-3e5f-4e85-a553-ebe5762ea748",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01c02a60-6796-4b09-a0e6-c23dcf87f002",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f87fc0-b7e5-41b5-8806-7ed9d4f322e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4fce774-d3ca-455d-a8f6-e10be18567c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47faa069-bd2d-4a61-8b8e-54446e725264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b59b51cb-9ec8-43ec-b792-24e5b0cbbf2a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35b16739-ce42-4476-b00f-88c707b45c85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e16851d9-3e20-48dc-934f-1418d0a7bfbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f637cccc-4274-4be0-bf7b-6e7473cdbb22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea6dfec-57c8-4053-b5ab-872e0efcdde5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e92d2383-7998-4ba8-b03d-5fa66a6d7277",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "209e5c31-20b7-437e-bfd5-88545827e757"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d72f1483-7468-4c63-bbbe-1ce012c353a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2c2bd73-b2f0-4f72-b4c2-5421b75f0be9"
            }
          }
        ]
      },
      {
        "id": "12131ed9-a233-4b3b-8266-a20fadcb61fc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03a91d8a-7065-42a8-9de3-d84d4ade34c3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1541e6b9-311c-4c92-b3fe-c350899da181",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c87667d9-3806-41da-8cc7-01191dce088f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9deee8c9-230d-4a07-8dd3-5c54d87f9a18",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0b30780-6bd1-4c77-a6a6-497a83f1df10",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 57.512280701754385,
      "responseMin": 21,
      "responseMax": 224,
      "responseSd": 20.36588194579304,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701995777179,
      "completed": 1701995802643
    },
    "executions": [
      {
        "id": "d982b26d-f6c1-4000-a1a4-9fc93a9c26b3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "df657dc9-eb8d-496c-9542-30a5eee03a95",
          "httpRequestId": "d9da6c80-8d0e-4224-a669-953201bed37d"
        },
        "item": {
          "id": "d982b26d-f6c1-4000-a1a4-9fc93a9c26b3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4fc15f7a-9a5f-440f-8ec2-1ac2ba5a0403",
          "status": "OK",
          "code": 200,
          "responseTime": 76,
          "responseSize": 0
        }
      },
      {
        "id": "42a6e902-2ed0-4bfe-9c16-77bcadb17766",
        "cursor": {
          "ref": "073b12ed-57b4-4f34-8734-dcfc2ef874c7",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de2e5953-4687-45c9-9f83-fe4b75c8125d"
        },
        "item": {
          "id": "42a6e902-2ed0-4bfe-9c16-77bcadb17766",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2064b272-e2f8-47d8-8ce3-952d42387531",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "8015972c-a90d-44bf-bb70-8d3190b7d399",
        "cursor": {
          "ref": "d1854d7a-3698-4959-b7fe-79c5502f9301",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a0906000-50e4-43bc-af34-c0de9e8ae6e2"
        },
        "item": {
          "id": "8015972c-a90d-44bf-bb70-8d3190b7d399",
          "name": "did_json"
        },
        "response": {
          "id": "c778b70a-51dd-4f5a-ae18-db7928b94110",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f88745-5158-409b-9376-f2536b18c25e",
        "cursor": {
          "ref": "41db55cd-ae98-48e7-9501-4f794a3abe87",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7094ba3c-6255-46b3-b09f-26859ed7975d"
        },
        "item": {
          "id": "35f88745-5158-409b-9376-f2536b18c25e",
          "name": "did:invalid"
        },
        "response": {
          "id": "b28f7ab8-d5d4-4be6-addd-43c0fb3c9a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f88745-5158-409b-9376-f2536b18c25e",
        "cursor": {
          "ref": "41db55cd-ae98-48e7-9501-4f794a3abe87",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7094ba3c-6255-46b3-b09f-26859ed7975d"
        },
        "item": {
          "id": "35f88745-5158-409b-9376-f2536b18c25e",
          "name": "did:invalid"
        },
        "response": {
          "id": "b28f7ab8-d5d4-4be6-addd-43c0fb3c9a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7790ac7a-f158-4740-9881-da3349314760",
        "cursor": {
          "ref": "24332f62-8115-4fa8-aa69-244a0c11150c",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b9afc025-d2f7-4d65-a77d-eb067fbe91e8"
        },
        "item": {
          "id": "7790ac7a-f158-4740-9881-da3349314760",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7052181e-2590-415a-b21a-d3dc21cf5fd1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 88,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed5081b-e448-46a1-b82d-f3645dfe6095",
        "cursor": {
          "ref": "de43a920-ea8c-41e9-9505-f693a69f0d16",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d5ef5aeb-c288-4cc0-a778-8befaa50436c"
        },
        "item": {
          "id": "eed5081b-e448-46a1-b82d-f3645dfe6095",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f7887e19-5311-4163-8c5a-524093b74522",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a49c95-26e0-41b1-b605-b1eb1f52c99c",
        "cursor": {
          "ref": "b5dfb001-f4d7-4cf9-912a-f8f9cb871de9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "15d218e3-b529-4b17-aed9-013a119c80f8"
        },
        "item": {
          "id": "f5a49c95-26e0-41b1-b605-b1eb1f52c99c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cebdf1fa-bcdc-4df6-904d-defbc8817240",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51003ace-d1af-4372-ab3b-c685200db4e6",
        "cursor": {
          "ref": "50923f6d-b797-4d92-8a9e-0c1363a6ee2d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e402b54e-dd35-45d5-bcd2-a1f98f45aca1"
        },
        "item": {
          "id": "51003ace-d1af-4372-ab3b-c685200db4e6",
          "name": "identifiers"
        },
        "response": {
          "id": "0a8f8732-106e-4d95-89f1-331687fa96a6",
          "status": "OK",
          "code": 200,
          "responseTime": 206,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02aced6-3cd0-41ca-a749-feb33a8e5438",
        "cursor": {
          "ref": "df0585cf-4e43-43e2-a6bf-98c23e1a967a",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d515f087-39f5-45fe-bdcc-d8db9fcc4e25"
        },
        "item": {
          "id": "c02aced6-3cd0-41ca-a749-feb33a8e5438",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b6dd9f41-071f-4839-b431-32c15724eecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd7974f-7e61-48b0-a883-3a3f5745453f",
        "cursor": {
          "ref": "7c4ea1c2-a9fc-4164-be04-1a17c3b95416",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7b60d4eb-93ad-4fd3-a52c-ac099029c8cf"
        },
        "item": {
          "id": "3bd7974f-7e61-48b0-a883-3a3f5745453f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "98e5cc2e-214c-4100-b349-d2d1b5536729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b949d504-fca2-4e35-9ba2-d0deedcee84a",
        "cursor": {
          "ref": "773390c3-43f2-48c8-9574-24613820d142",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3c01441d-c78b-4cc4-b3e8-07e127fb8b43"
        },
        "item": {
          "id": "b949d504-fca2-4e35-9ba2-d0deedcee84a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dd8e3ff3-42b2-4a13-acc2-cfb085e83472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599c4225-55a3-4b9d-993a-2bbec74537a8",
        "cursor": {
          "ref": "dded9c8b-6824-4343-b0ce-ec6994b18003",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f0775d35-ae33-494b-b711-9b4dc9129f76"
        },
        "item": {
          "id": "599c4225-55a3-4b9d-993a-2bbec74537a8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5346946d-abfc-4612-8cb8-9ed6ac6a431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79009911-2502-4129-b564-1dcd3f3ffe81",
        "cursor": {
          "ref": "f77fafe6-1562-4e7c-b05b-6ae2ed1a16b8",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "37f98621-9397-4fc4-8f3b-bad8b6a16166"
        },
        "item": {
          "id": "79009911-2502-4129-b564-1dcd3f3ffe81",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "134c4949-c626-4734-b8bd-63dd7b76ac45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9d8c7e-9e6a-4627-a86e-4accb8ff315c",
        "cursor": {
          "ref": "568aa9ce-f09e-4278-a8aa-7933bfa69a8d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6e0590b5-a17b-40c0-96c3-725407dfedba"
        },
        "item": {
          "id": "0e9d8c7e-9e6a-4627-a86e-4accb8ff315c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5c6c624-7c4e-4e03-a63e-ccab43a81ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3fc3c8-4ae9-4464-8971-99f67ee88c61",
        "cursor": {
          "ref": "6bde615e-9b2b-4501-b958-ae7ca443ae08",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d4112276-df30-4a9c-908c-eff99c432c07"
        },
        "item": {
          "id": "af3fc3c8-4ae9-4464-8971-99f67ee88c61",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "833034e7-1078-465d-8867-2062cedf37a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7f3284-7184-4bf5-b694-2cfced545e28",
        "cursor": {
          "ref": "77fe9ac7-8ff9-46e0-a9cd-6a22cf37e513",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ca0509a5-29e4-4bd3-ab7d-3c7e7211d72c"
        },
        "item": {
          "id": "2f7f3284-7184-4bf5-b694-2cfced545e28",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c0379b31-9ea9-4f49-9bfb-eccb17ac2d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b9d69e-e802-41e7-ac12-6781d26fe2cf",
        "cursor": {
          "ref": "e5d54257-31d6-46f7-8f76-488a49faf388",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f3aedfac-7b6a-4450-a96c-2d82d9858f63"
        },
        "item": {
          "id": "d6b9d69e-e802-41e7-ac12-6781d26fe2cf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dd3e8341-54d4-4229-91ff-f91d8b239167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19597799-9d6b-44ae-a398-be101c488dab",
        "cursor": {
          "ref": "59cce704-c1cd-4562-9996-5b89fa02672c",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9362f52-ad20-49ac-9b1a-e92faa610b75"
        },
        "item": {
          "id": "19597799-9d6b-44ae-a398-be101c488dab",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1fae37e1-da7f-4a1b-959f-438704899e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69c394e-76a8-4bcf-85df-f10dd7f376a6",
        "cursor": {
          "ref": "6933e90f-18c1-4757-9f1b-c336c4aafdb2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3f200cd4-2190-447a-a3c9-ee0c49d75b59"
        },
        "item": {
          "id": "a69c394e-76a8-4bcf-85df-f10dd7f376a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1049239c-0043-4197-9d0e-bf3565a56474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f96370-a9bc-494a-bf31-5a92f68910ce",
        "cursor": {
          "ref": "6b0e1e27-ce2a-47ac-924b-2a117a1b621e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6e8970c1-434f-4e7d-9aa6-05419867e347"
        },
        "item": {
          "id": "47f96370-a9bc-494a-bf31-5a92f68910ce",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "42888fcd-8479-439d-a024-e7406bac86e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be74513-7691-46b7-ab94-092a40903268",
        "cursor": {
          "ref": "ec3990ce-c787-4820-a19e-ef23f9411089",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f77d2993-33d7-4def-aec3-69d51ef35951"
        },
        "item": {
          "id": "1be74513-7691-46b7-ab94-092a40903268",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1a80ed95-e264-4419-bd4f-47db1a237c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86de4e0d-99ab-4788-932f-b8faaf4edd20",
        "cursor": {
          "ref": "88ab2665-53d4-4d01-be4e-249ef2a48082",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "351fd5a5-ca60-4525-9c05-8fbf3bba55b2"
        },
        "item": {
          "id": "86de4e0d-99ab-4788-932f-b8faaf4edd20",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "516e2546-11e9-41a9-818a-3a214d67d7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0452bc5-eba8-43f2-8678-0c80bc4e2603",
        "cursor": {
          "ref": "f77c4656-52c1-4fa1-b0f7-9382ce65551c",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "03221717-3279-4c07-9fec-c80dc2010df6"
        },
        "item": {
          "id": "a0452bc5-eba8-43f2-8678-0c80bc4e2603",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2cc9dcf5-5af1-45d7-bc00-76f23b489ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac8c8d0-014d-4ce8-8ebc-3238bf3294ee",
        "cursor": {
          "ref": "b9793315-45a5-483e-9080-a43caabb4b69",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0f2e8fd9-0d18-4423-9a9f-927324594d99"
        },
        "item": {
          "id": "eac8c8d0-014d-4ce8-8ebc-3238bf3294ee",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "93dede60-f9b4-4018-9eed-6495d57c8cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab74713-5342-43a5-893c-ac9405635b85",
        "cursor": {
          "ref": "dbf0339e-9b0e-49bc-8cab-b8b814ae09d7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "01f93fbe-a746-4a67-9510-02233f426286"
        },
        "item": {
          "id": "7ab74713-5342-43a5-893c-ac9405635b85",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c6f6cea8-d7f8-4284-aef1-21b8db0720e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f51041b-473c-49a4-9a29-a9c98b129ba8",
        "cursor": {
          "ref": "d0c85f34-199f-40d9-ad68-ab07e66f3a48",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "594a94f3-8692-405a-a631-f6baa86bee11"
        },
        "item": {
          "id": "1f51041b-473c-49a4-9a29-a9c98b129ba8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f9f0e3dc-61b5-492e-be4e-a39855e666c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b48ea6-2cf4-48f3-8459-47c1e9ca867a",
        "cursor": {
          "ref": "d5a1cb4a-813f-47ee-bb8f-7ce563d75be8",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d046b899-9132-447a-a2ed-16632072920b"
        },
        "item": {
          "id": "f1b48ea6-2cf4-48f3-8459-47c1e9ca867a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "99bc44e4-e266-4ba7-b9de-8892cf4082e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2b39ee-ade8-4915-906c-b403f6e29358",
        "cursor": {
          "ref": "5a593040-2e97-40ac-987f-c3caa4574106",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dc2a26e1-93b2-43c0-bef2-d26b997d6a9f"
        },
        "item": {
          "id": "ff2b39ee-ade8-4915-906c-b403f6e29358",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "26ba824b-4b47-4e3f-8926-e17131b52e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a61318-5854-42bb-ab5e-d5a687c90e14",
        "cursor": {
          "ref": "8c65fa3a-882a-4c4a-9de5-e034f18ccd78",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3eb30cbc-5f52-404d-8e46-f8792369161c"
        },
        "item": {
          "id": "f7a61318-5854-42bb-ab5e-d5a687c90e14",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cbbfa4fd-c8e0-42de-81c5-a75f8e885077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd99002-d44e-4b77-86a5-c2e6c5af964b",
        "cursor": {
          "ref": "57e66ebc-1e7b-47b4-8593-37780ad42cf7",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ab8a12e5-6879-4ed8-8601-fa427e952e5f"
        },
        "item": {
          "id": "7dd99002-d44e-4b77-86a5-c2e6c5af964b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1ea2df3d-e1c5-47cc-bd32-477ac4ee3339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b16e06b-e4ea-4c5d-9ec6-2e34d630a78d",
        "cursor": {
          "ref": "c2874592-bddd-4abb-9dfd-8cf94d4d1360",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c2fb84fa-3c74-472d-b68d-32f860aea698"
        },
        "item": {
          "id": "7b16e06b-e4ea-4c5d-9ec6-2e34d630a78d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2419b92e-b3df-4be5-bdd2-4c030c8112b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3b41e1-87da-4f61-bafc-e8e12313e812",
        "cursor": {
          "ref": "d3dc1aba-7092-4310-a3f5-18f58093eca2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c795505-727b-4a0a-9379-2e13a5768476"
        },
        "item": {
          "id": "9f3b41e1-87da-4f61-bafc-e8e12313e812",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db599d13-4972-44bc-9fa6-9a278733fa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb4f543-9f4b-4952-b222-56ea8aa042ea",
        "cursor": {
          "ref": "46eeae98-0ede-4ddb-8c7c-006839e2a383",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9a2b382f-ae15-4d46-b6fb-d51869bee069"
        },
        "item": {
          "id": "ceb4f543-9f4b-4952-b222-56ea8aa042ea",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3a84d59e-ebbf-4e88-8373-e9dd4e2a536b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9966ac48-7c53-44d6-95f9-328a7cd29fcc",
        "cursor": {
          "ref": "24e7dfef-2c72-4c9d-81c8-b96c11172bf9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b3a5afe1-cfe8-416f-b814-a6e1d9d7b902"
        },
        "item": {
          "id": "9966ac48-7c53-44d6-95f9-328a7cd29fcc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6a9fc761-c3fc-474b-88be-e3bd22d23125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1cd7c1-4d5d-4957-9a21-6afa5f570563",
        "cursor": {
          "ref": "e0aaabe6-39cf-4e54-999b-1c5b26d7388c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4905f6a8-0723-4efc-98ae-582dc700f505"
        },
        "item": {
          "id": "8d1cd7c1-4d5d-4957-9a21-6afa5f570563",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3bf5e5fe-aea7-440f-92f5-9d8e6f6e6697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882cde4b-aaef-4ed6-8f3a-93fee35471c1",
        "cursor": {
          "ref": "c98254c9-3791-47d8-8ff0-a77312cb870c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f202f4a9-34ba-4bae-9f9f-1e4780731ebf"
        },
        "item": {
          "id": "882cde4b-aaef-4ed6-8f3a-93fee35471c1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cc5908c8-d786-43fa-a827-66bddfb96cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7153216d-918a-4ab0-973b-298b74f437ae",
        "cursor": {
          "ref": "5ceb24aa-19af-408f-a35a-c0d25330e772",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "70995140-6788-4143-a741-c32060f0f141"
        },
        "item": {
          "id": "7153216d-918a-4ab0-973b-298b74f437ae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "53f20ea8-4782-475f-a083-86811c5f811c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc65b81-4355-4c75-ba3b-57e72f2d5249",
        "cursor": {
          "ref": "1f2cd4cf-5cfd-4f63-94b3-0e3141954a5b",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b869d2db-518b-4c7a-9b3b-a1f89813c350"
        },
        "item": {
          "id": "5cc65b81-4355-4c75-ba3b-57e72f2d5249",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ddbabded-8f59-40ef-ab41-0c53843e5269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a8d81e-9ecb-4201-bd8e-df36432cbf3e",
        "cursor": {
          "ref": "61cbd714-840c-4aee-93c9-afc51702cade",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4bcbdd72-144b-4718-88b9-02ecc8b7a3f5"
        },
        "item": {
          "id": "d2a8d81e-9ecb-4201-bd8e-df36432cbf3e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f83a6e03-155c-4b5e-91e9-57b8b8ab2566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceee363-a2d6-4225-a594-93505eb31bad",
        "cursor": {
          "ref": "15fc7021-8025-4510-969a-146c94cdaa66",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "817cd51d-61b4-49b9-8475-2a90d0989d7e"
        },
        "item": {
          "id": "dceee363-a2d6-4225-a594-93505eb31bad",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cc5ef6f7-ed8c-4bae-acbf-1c9ac5713caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35fe0a2-9c49-4332-9748-7786cfa08091",
        "cursor": {
          "ref": "ab4ff456-f986-4c55-9c95-f373dbc2de29",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bfc7ffe7-db71-49e0-80d7-f6c4fe228fa8"
        },
        "item": {
          "id": "e35fe0a2-9c49-4332-9748-7786cfa08091",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "98c46930-73ba-4bef-93e2-d49e7e11aa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19a5b75-5533-4af0-ab38-c793ba0fb7f9",
        "cursor": {
          "ref": "3e5fce88-35db-4d9e-9b73-19bc48c38b90",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f099cdad-00ef-4b46-b01f-095f5a281bd5"
        },
        "item": {
          "id": "f19a5b75-5533-4af0-ab38-c793ba0fb7f9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad65e749-e92e-4c7f-a335-76c8a125bb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3434f34-1b54-4ef9-82e1-69f73e3f9510",
        "cursor": {
          "ref": "a377cc73-3af2-4307-8177-fa4bd5c0aa0a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a31a207a-8045-40f0-8bf3-2f79062b3da6"
        },
        "item": {
          "id": "e3434f34-1b54-4ef9-82e1-69f73e3f9510",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5e061570-1dad-4f7a-af56-41b46c51a23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e1e8cc-d505-4f36-8ad7-d892a31230c2",
        "cursor": {
          "ref": "a95d8ca2-cd5b-475b-8c1d-146e13a58a45",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "433f7371-17d3-46db-b225-422acc56b0b5"
        },
        "item": {
          "id": "d5e1e8cc-d505-4f36-8ad7-d892a31230c2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "73206319-177d-4862-9713-06f735df3b28",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3e4487-5317-41e8-aeb8-b612334fe49e",
        "cursor": {
          "ref": "1ac73c30-69ce-4e71-baf7-0301696a2cae",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "140323c7-c7b6-47f4-9f5c-5cf53d3493dc"
        },
        "item": {
          "id": "3f3e4487-5317-41e8-aeb8-b612334fe49e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9d9791f8-8075-4991-b769-c0f8479528ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3000e5-e99e-4f91-a734-42c37fe27731",
        "cursor": {
          "ref": "65d390fb-bab6-485f-b6d2-e75163c59b37",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2d5a6319-b2fc-4321-94e4-f7cfda7be6fd"
        },
        "item": {
          "id": "7e3000e5-e99e-4f91-a734-42c37fe27731",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "243316ff-b0e7-455e-919a-5b124ed318aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8147f59-9935-40f0-95ed-2f39ea8630de",
        "cursor": {
          "ref": "5d38d6c2-1c31-444e-a665-803d933105c1",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "95c023ab-f986-4ec0-a2e3-68ec3e49666e"
        },
        "item": {
          "id": "d8147f59-9935-40f0-95ed-2f39ea8630de",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2c43973a-df92-4a5c-8ce6-3faea5c8d8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15214e31-10a2-4636-bade-6bf2157679ba",
        "cursor": {
          "ref": "917f4111-934d-40f0-9e74-692689bb1a8a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "da5c7c51-1ba5-482b-a67a-e96ea1cb8190"
        },
        "item": {
          "id": "15214e31-10a2-4636-bade-6bf2157679ba",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3f0bb0b7-048c-4b8e-a7f9-096607fef67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1f9803-3a37-4d3b-894b-76890459a6e7",
        "cursor": {
          "ref": "a3b780a0-1853-4779-b942-69070336ad94",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9c3b87b6-5eef-4656-af79-5c5438b7769e"
        },
        "item": {
          "id": "0f1f9803-3a37-4d3b-894b-76890459a6e7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5d2310f9-a270-4020-8a04-de6f8e9aab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc807218-990a-4939-9d86-b52b166d4a3d",
        "cursor": {
          "ref": "2317d875-a38a-4201-be7c-f46097680a84",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cbfee497-be60-4276-a1d2-bf3cd23f020a"
        },
        "item": {
          "id": "fc807218-990a-4939-9d86-b52b166d4a3d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c0b51142-dfdd-449f-a253-d20ce9a8f1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a94959-6943-4d60-83e4-4bfc5b3475a1",
        "cursor": {
          "ref": "7812c95a-74ef-4cb6-956d-6592b100350b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "74d19d83-15c6-41ec-9f0d-b763f24d1ea8"
        },
        "item": {
          "id": "d0a94959-6943-4d60-83e4-4bfc5b3475a1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fedab602-3016-4e55-b2b0-10e0f3106141",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d4c804-9107-4027-b1dc-1e32ad90087a",
        "cursor": {
          "ref": "8cad24ca-f865-44ff-a148-d9eeae19e97b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "31d75947-84cf-4ca6-ba87-14d5b2ea5048"
        },
        "item": {
          "id": "c3d4c804-9107-4027-b1dc-1e32ad90087a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "64583877-c058-4b49-8869-43f475e58ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab493051-b7cb-4019-ba3d-533ca1f1804b",
        "cursor": {
          "ref": "49652806-1173-4fea-8f93-d5abb8019a47",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ce0cd6b9-1aab-4914-9655-9e5123a5544e"
        },
        "item": {
          "id": "ab493051-b7cb-4019-ba3d-533ca1f1804b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d8a95916-2511-4d57-8fa0-10ac2b19f56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88cbe01-4c11-4c8b-8cf2-175725cdeb6a",
        "cursor": {
          "ref": "96abe7b2-5fac-4f88-8050-e749b19da947",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1e2fbc58-9e15-4c95-bce1-6b974a8019a0"
        },
        "item": {
          "id": "e88cbe01-4c11-4c8b-8cf2-175725cdeb6a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a4ebc06b-7468-47ef-8fbf-81805635eaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c03b93-f712-458e-b6ab-44a05e0d04c7",
        "cursor": {
          "ref": "bac83f97-d45c-42b3-96c3-b1f8d37b9753",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8de8a1e2-f204-47f7-ac7a-18cdf5b61f89"
        },
        "item": {
          "id": "d6c03b93-f712-458e-b6ab-44a05e0d04c7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8bb1db36-941f-4b4b-b4d5-c1680e4fa821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a682af9-381b-42f5-ba8d-990d05c2f119",
        "cursor": {
          "ref": "f5147fdb-8c1d-4136-9977-a04dec623c63",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2ca8a5cd-460c-4853-96e6-dabafff3d67e"
        },
        "item": {
          "id": "8a682af9-381b-42f5-ba8d-990d05c2f119",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9382300b-ff87-4c8a-9a8e-76fd4ca93e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e73ff5f-ab98-4ff3-8b2b-af4bc373a177",
        "cursor": {
          "ref": "f3e5b85c-298d-4054-a4ae-69e1e588cce8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e8490c4b-dacc-447b-b0f2-d1168284214f"
        },
        "item": {
          "id": "6e73ff5f-ab98-4ff3-8b2b-af4bc373a177",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2708fc1b-7a79-4a93-a8ba-08b52d5b337c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c26a54-e61f-460e-a9e7-c8122142f5da",
        "cursor": {
          "ref": "015c340c-986b-4a3b-9d68-1d29c91e64e3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7d0aa5c4-05da-4e46-83c6-5a84f161cd41"
        },
        "item": {
          "id": "d1c26a54-e61f-460e-a9e7-c8122142f5da",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c2dfda6a-6ee1-46a4-9692-a48cfd654fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e10e030-32ff-406a-babd-84c85af785f4",
        "cursor": {
          "ref": "0b2493e2-ea25-48bb-a9af-e8545345493e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f137a7b7-f19c-40b6-882d-8d675f5ca8f5"
        },
        "item": {
          "id": "5e10e030-32ff-406a-babd-84c85af785f4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "88998acd-4f94-46d7-8abe-48734fec6f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a133a7-2401-4322-82be-dfb473c80602",
        "cursor": {
          "ref": "6901d2f6-c821-4fe6-94ef-38d8c35f24a3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4d355f47-8235-4f1b-9727-209cdeafb9c3"
        },
        "item": {
          "id": "57a133a7-2401-4322-82be-dfb473c80602",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "18419e2d-9110-4e44-bbea-606d21376d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913e96f-65ce-4c43-a8a8-eb389f34da17",
        "cursor": {
          "ref": "a0751175-23bd-4acd-9666-966711d7d3e9",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "37b412d3-4b9d-42d8-bcda-2a2758a2e3b4"
        },
        "item": {
          "id": "5913e96f-65ce-4c43-a8a8-eb389f34da17",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1dada45-dfd8-4232-b0df-11bcde1a2d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9da5c2-711a-4296-b7f5-791a54b8a6e8",
        "cursor": {
          "ref": "97dfc1c2-1b02-441b-b925-1ef86c725338",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c0d63ace-809d-4500-a3ed-1a36c8efc975"
        },
        "item": {
          "id": "2d9da5c2-711a-4296-b7f5-791a54b8a6e8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d303ec43-8f6c-42f5-9a28-843bf278c055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f52120-6cfc-447f-a184-647d0c118eb4",
        "cursor": {
          "ref": "cfd0a7cb-f4e4-4f38-b9ae-549273f80678",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15b0a5b2-bc08-4c46-9d9f-90dc3d85bcf8"
        },
        "item": {
          "id": "16f52120-6cfc-447f-a184-647d0c118eb4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "892f295d-4230-4638-b123-5f15e08479bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbbfcb7-2874-47b8-83dc-72477042a8eb",
        "cursor": {
          "ref": "a0dfc023-1180-430f-a385-0e2286ea82f7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0cdf32c0-ff53-48c2-8452-91637f54b570"
        },
        "item": {
          "id": "7cbbfcb7-2874-47b8-83dc-72477042a8eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "41d3fe74-de67-4af3-a225-21de9067d211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ce7271-a492-4feb-b221-ae25b2cdd1e3",
        "cursor": {
          "ref": "f2b2794a-9952-4916-add2-d449add95e64",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1fae6716-8446-4829-80fa-b60a92770a95"
        },
        "item": {
          "id": "76ce7271-a492-4feb-b221-ae25b2cdd1e3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "86a7325c-8c96-44f3-b0e3-c09743fbedae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdcdf5e-9d7f-4475-ad1b-bc8415285c1a",
        "cursor": {
          "ref": "a2b0e96a-08f4-42f9-a184-1e5a8b50904e",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "19955517-1450-4727-a75f-a15721cf8cd0"
        },
        "item": {
          "id": "ccdcdf5e-9d7f-4475-ad1b-bc8415285c1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "37d0713b-5b17-4f0b-915b-ea38a594a420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c342f621-92d2-4fa1-9cbf-5084b278c429",
        "cursor": {
          "ref": "781ba06d-cf99-4661-8bdb-8ec9cb4e200a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "01f1891a-1a22-4b42-aa98-d49e4836d150"
        },
        "item": {
          "id": "c342f621-92d2-4fa1-9cbf-5084b278c429",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2827aa93-0ad4-43f8-aa4f-a5e9d0de2970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78db4c4-8b7c-40e8-81af-f978f121cff2",
        "cursor": {
          "ref": "f0860f76-2f6d-4399-97b7-993dc58a81ac",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "10c58934-19f1-47fe-a305-4f6366c1d049"
        },
        "item": {
          "id": "d78db4c4-8b7c-40e8-81af-f978f121cff2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f8e87de5-4029-462f-85fc-c1ff62c99d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528665af-8ff3-49ab-9b3e-ef891af84b3c",
        "cursor": {
          "ref": "0b1bff80-df18-4661-b37f-c424884382fa",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "06866ce6-4e79-4587-99c6-158e9ef6003b"
        },
        "item": {
          "id": "528665af-8ff3-49ab-9b3e-ef891af84b3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3d9fb8db-d23c-45c2-87d8-5cb4b6eae63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cfd72c-ff6f-4de2-8ab2-3cd8213088c1",
        "cursor": {
          "ref": "5c103d44-4aa9-4c6a-b2d9-3daf8ee92af0",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "deb209d8-728d-4344-a009-9a4acabf7371"
        },
        "item": {
          "id": "e4cfd72c-ff6f-4de2-8ab2-3cd8213088c1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "72f16f21-1d92-4284-a3bb-9197859dc143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a629ab17-ec77-47c9-b03c-86e6291767c0",
        "cursor": {
          "ref": "0f2ced45-ae0e-49c1-a5ed-b2cbc872cc5c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "54a05651-87a4-471f-a75d-85f8d1b2f735"
        },
        "item": {
          "id": "a629ab17-ec77-47c9-b03c-86e6291767c0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d93cf06f-1ff9-4010-9411-17ec8b1ad3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c54b86b-3626-470b-b37f-bd7649d9bc7c",
        "cursor": {
          "ref": "4ac219a9-1234-4050-8743-7b6e1811fd62",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e98265a5-b5a0-4305-9644-be68b2b1dda9"
        },
        "item": {
          "id": "9c54b86b-3626-470b-b37f-bd7649d9bc7c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e3fc1def-c540-4011-9fdc-41acc32205eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff63c0a0-293e-4199-a513-3355b26e3e12",
        "cursor": {
          "ref": "43d78d51-1183-432c-b404-1d2bff1f4a04",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2c4f02f5-cd88-4bf0-ab08-c2f39c7f3e4e"
        },
        "item": {
          "id": "ff63c0a0-293e-4199-a513-3355b26e3e12",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5396780a-25b8-4f89-8ae5-b9803a27102f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808b3ee6-78ad-4806-8d69-9eb9eaa057f4",
        "cursor": {
          "ref": "0f1457c7-d613-40f8-9a2b-246e11259320",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9f2d6bc2-89cc-432f-b164-7fc3a9d429bf"
        },
        "item": {
          "id": "808b3ee6-78ad-4806-8d69-9eb9eaa057f4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "175536d2-f665-431a-96a7-0b638c40cc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1f0763-23be-48e5-930a-5059ca141c5c",
        "cursor": {
          "ref": "b51fd72c-88f9-4fc5-a7b3-3134669412c5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4582d3e4-bc71-4878-a70d-17f3336e6146"
        },
        "item": {
          "id": "2b1f0763-23be-48e5-930a-5059ca141c5c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e28d9ae0-9435-4cdb-8d22-0a847cd5729d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1410e361-efb8-43f2-a74e-59a8708dc2ae",
        "cursor": {
          "ref": "c6efa3bb-ac35-47e2-a255-a7d45ad25fc7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4f07b59c-7c4a-491c-b222-efce7574d14b"
        },
        "item": {
          "id": "1410e361-efb8-43f2-a74e-59a8708dc2ae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8f517e00-75bf-426a-bd03-d5c046bc048c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac67197-0219-4349-945e-e92ce3f0abee",
        "cursor": {
          "ref": "a40d5fda-29d6-4677-b79c-f06949d8fdec",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4aa0289a-dcbe-46ff-ac71-8af09598219c"
        },
        "item": {
          "id": "7ac67197-0219-4349-945e-e92ce3f0abee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2ab4c983-86b9-4a75-9a80-68e2dde4334d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafa3aeb-b493-4607-9b40-0107866de8bc",
        "cursor": {
          "ref": "38bde6bd-1ee9-4d26-b4ce-fbd5ac6b9fc7",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "382eb574-67d4-48c1-b7b1-4077b2d56796"
        },
        "item": {
          "id": "aafa3aeb-b493-4607-9b40-0107866de8bc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bf9dd334-07a0-43f9-b81d-42a5c627b7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55799889-0f7d-4b4d-84c4-35a10fba533d",
        "cursor": {
          "ref": "eeb27062-a91b-4317-b8cf-11c4a6fb8815",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2290b41d-35ec-4bc4-8bd2-3703f092a0e1"
        },
        "item": {
          "id": "55799889-0f7d-4b4d-84c4-35a10fba533d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c1cfc593-c8cd-43a1-8696-ba95e5a19df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213b07cb-5a59-4ac6-b853-37d8afa35e53",
        "cursor": {
          "ref": "d2333719-8085-4d65-9a87-4edd3df723c3",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b7f8e546-3a7c-4dd0-aa52-4bacdad2a0ab"
        },
        "item": {
          "id": "213b07cb-5a59-4ac6-b853-37d8afa35e53",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fc2021f5-97e7-43f8-88e1-4069136da72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7369ee4-0093-4133-b255-0904abaa1877",
        "cursor": {
          "ref": "48360774-dded-4641-83e4-5935092f712c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "201c3406-1d9d-4526-84ea-62efa67d7ab3"
        },
        "item": {
          "id": "e7369ee4-0093-4133-b255-0904abaa1877",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "45c1e205-993b-4e57-b838-eba0c162c130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35aecbb2-4162-4c57-a7c8-5433271e3233",
        "cursor": {
          "ref": "b4b6851e-323a-4bf4-a0a7-84ad276d76d8",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "105627b8-59bb-49a2-998c-d817f3bafae6"
        },
        "item": {
          "id": "35aecbb2-4162-4c57-a7c8-5433271e3233",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "33af133b-e08d-4e73-bcc6-72116ad216ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6130617d-3fc9-4528-aad0-88ae34fb50c2",
        "cursor": {
          "ref": "46e4f4f5-3a68-42db-ba80-7ce1ef92bcf4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5c64b9e3-5087-4222-84cc-030fb44ce468"
        },
        "item": {
          "id": "6130617d-3fc9-4528-aad0-88ae34fb50c2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "08743e1f-5fff-4a9f-a182-fbbdf3a179be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0a0d0b-7655-4ce0-b46f-e6fb6444bbf2",
        "cursor": {
          "ref": "96ea791b-5d08-4153-9e59-0b8dfcb4318f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f827484a-31f0-49f1-ad80-0acc50116a09"
        },
        "item": {
          "id": "9e0a0d0b-7655-4ce0-b46f-e6fb6444bbf2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6b3ef2c1-71fa-4b98-8040-4fa092153ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa664ab-0fb9-4ff6-b92c-559c995c6c27",
        "cursor": {
          "ref": "bff38cc4-b8ea-45d0-9a25-4757e7579b98",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "44417c0c-32dd-4210-b754-a752798f36a9"
        },
        "item": {
          "id": "afa664ab-0fb9-4ff6-b92c-559c995c6c27",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ae68f622-8725-4f44-8a85-352c72df3cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c65906-0784-4344-9387-6cda97d8ac0e",
        "cursor": {
          "ref": "76c4cd4a-aa4e-4ad3-9bb0-365cecec54bf",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4cad4951-0118-4475-835d-523565a5cd14"
        },
        "item": {
          "id": "c6c65906-0784-4344-9387-6cda97d8ac0e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3244becc-2a88-43c8-a780-b9e18662dacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac0c92d-33df-45dd-827f-0d0dbd241c81",
        "cursor": {
          "ref": "710d6cc7-ca21-4c98-b087-13d0ab18b217",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "825f56bf-8ba5-4daa-bb37-2a2f5d0d9bb0"
        },
        "item": {
          "id": "6ac0c92d-33df-45dd-827f-0d0dbd241c81",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "809385ee-5cd4-4576-ba01-140d46f8b0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f29490-90c4-43a1-a98b-143230cb2d8e",
        "cursor": {
          "ref": "42609208-bfeb-466e-bc60-a57269629801",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5108556b-4b20-47ea-9d15-a76ea4ff49aa"
        },
        "item": {
          "id": "36f29490-90c4-43a1-a98b-143230cb2d8e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3b4269db-45d8-46bb-8a0d-65c2dd774b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8f020f-74d8-4a1b-b8cf-0cb5906e7485",
        "cursor": {
          "ref": "e458e461-ab0c-43ad-bcd6-7f6495bd8c20",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf60386d-9d8c-46fa-ba05-ea119490d813"
        },
        "item": {
          "id": "7d8f020f-74d8-4a1b-b8cf-0cb5906e7485",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2b6f7a02-06ca-4811-a7b8-19560cc7482b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8383b1-c10b-4eba-913b-8c0a3f4fe0d5",
        "cursor": {
          "ref": "0c4b13fb-7cf3-418d-9d8b-6293f2b9cd71",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3698f43c-a86e-41f5-ae53-1a5c747be024"
        },
        "item": {
          "id": "7d8383b1-c10b-4eba-913b-8c0a3f4fe0d5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3dcbc34b-040e-4be3-81a9-51fc936ea02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e19a42e-74b2-46ef-98e9-9d03cc80ad85",
        "cursor": {
          "ref": "d93bd74b-a954-4b4c-b06e-579322299ff6",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b3e3bc7b-44e5-482f-9427-78e034092b74"
        },
        "item": {
          "id": "0e19a42e-74b2-46ef-98e9-9d03cc80ad85",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1b2808ea-47cb-421e-bcef-b0f51e569a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25178a5-e034-4a81-83dc-f3d2d6ae6e11",
        "cursor": {
          "ref": "07525929-d411-4e66-baea-1076af73b487",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1ac8497d-3f77-40bb-bba0-c657fa184857"
        },
        "item": {
          "id": "b25178a5-e034-4a81-83dc-f3d2d6ae6e11",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bfa5e29a-f6e2-4cfd-a0cd-f7a898838a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7d35fe-2c80-4ef3-a5b1-ecaee8d26a6f",
        "cursor": {
          "ref": "b9e7dbff-5562-46e3-8157-97e7361cd8dc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "32d53141-68d0-4315-9f6c-129ccf360d94"
        },
        "item": {
          "id": "4c7d35fe-2c80-4ef3-a5b1-ecaee8d26a6f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "163ba1a5-f13e-4dd6-afac-99f244f414f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8794d3a1-700c-47cc-832e-fb59fe448736",
        "cursor": {
          "ref": "96444de9-139d-44d9-9074-3a5641c242f8",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7f0c155a-2959-4bba-a71b-4d166272696c"
        },
        "item": {
          "id": "8794d3a1-700c-47cc-832e-fb59fe448736",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "eefcb531-18ca-40e9-bb7e-badb6a50ecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff9a11d-e808-400e-b9ad-f896de396535",
        "cursor": {
          "ref": "ae95aa0d-91d6-49b0-b38b-13f7ae7f2abd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f69e6fc9-f4a4-4a79-a9bf-24a63ac5e9f5"
        },
        "item": {
          "id": "7ff9a11d-e808-400e-b9ad-f896de396535",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc871d78-7c90-417f-be27-7daf10976c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b57f791-2140-48c9-9850-fe0314dfefa5",
        "cursor": {
          "ref": "cc9f944a-7924-4f4f-a8e9-7c9938a66c44",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb82096e-2182-4e07-889a-5c6045985d3e"
        },
        "item": {
          "id": "5b57f791-2140-48c9-9850-fe0314dfefa5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f04d97fd-3e84-4ff8-83e0-f8dca562f834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594bdbd1-84a4-47b7-8135-5d2b1e52df29",
        "cursor": {
          "ref": "46070a8e-9b1b-4dd2-b751-68fcaf0b395b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3795191c-3fc6-4318-889b-3407153b1d71"
        },
        "item": {
          "id": "594bdbd1-84a4-47b7-8135-5d2b1e52df29",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5b1c11c3-4a79-451d-b996-cd706a5f224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2741b44-1ae9-4ccc-8bea-a7f7231643b4",
        "cursor": {
          "ref": "24170a79-5540-45d7-b08f-0b8bdd13c84e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "16982613-b07e-48c2-a091-1c648c1b536a"
        },
        "item": {
          "id": "f2741b44-1ae9-4ccc-8bea-a7f7231643b4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "98691614-c031-4f14-b9f8-f5518382f8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b41067-9356-43f4-b9be-3f44e2ebecfe",
        "cursor": {
          "ref": "5007eb2d-f278-4395-b063-733a429e3ca0",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e0dfcdc6-3743-44db-8571-6c9853f20f51"
        },
        "item": {
          "id": "95b41067-9356-43f4-b9be-3f44e2ebecfe",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "04aadd3a-fe4b-49e5-b9c6-3c0258b97ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb37e88c-4922-479c-b709-2e340bf15949",
        "cursor": {
          "ref": "2a668dbb-c640-4232-8205-721c1ce80905",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c2e69712-e0ef-47e2-9c9b-ea95f9a702b9"
        },
        "item": {
          "id": "bb37e88c-4922-479c-b709-2e340bf15949",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b48116bd-fe3e-4d8a-8662-454eb74b6779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ac66cf-0c19-45c0-8106-ed0d024531f4",
        "cursor": {
          "ref": "f9d41b55-e705-48d0-b5e6-647a6e193db8",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e9f25c1a-9532-4471-aa5e-d1127e281a7e"
        },
        "item": {
          "id": "68ac66cf-0c19-45c0-8106-ed0d024531f4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "757cfe87-0621-4024-b5f9-5738827de641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de427a19-a720-4cc6-89dc-610e23b8ddc7",
        "cursor": {
          "ref": "9c71b0ef-6189-4873-aab7-af55193e9837",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fbf6b349-4314-4c8f-94df-f667e1c96d71"
        },
        "item": {
          "id": "de427a19-a720-4cc6-89dc-610e23b8ddc7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f7faeaec-f63f-4778-9bb4-5df1faaf34a1",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c9e71e-ce9f-42c1-8f0e-7fbe34c4b4cb",
        "cursor": {
          "ref": "9069c586-0440-45b1-ae2f-9600981093b6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "da1c3b3b-2a61-4886-8910-2c095f024065"
        },
        "item": {
          "id": "a5c9e71e-ce9f-42c1-8f0e-7fbe34c4b4cb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5c16c170-cdbf-4e96-ac37-c893bdb50967",
          "status": "Created",
          "code": 201,
          "responseTime": 201,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de6fc54-b914-4087-b11e-27e19afe058d",
        "cursor": {
          "ref": "2325fa03-bc89-448e-a701-d02ff488fffc",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b762d641-392a-4a9c-a0b6-e08c476c0267"
        },
        "item": {
          "id": "1de6fc54-b914-4087-b11e-27e19afe058d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5894e054-de5e-4bdf-88ec-2bc8febb080b",
          "status": "Created",
          "code": 201,
          "responseTime": 129,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a76dab8-f1da-4a95-902d-7557f11d4361",
        "cursor": {
          "ref": "c5197618-e0a8-4b8d-b78e-6cef83f346df",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "41866ae7-cf46-4061-a0a5-1d6745a00231"
        },
        "item": {
          "id": "8a76dab8-f1da-4a95-902d-7557f11d4361",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d6e5c420-11dc-4e05-ac99-e67e63a61a6c",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea11bba9-f162-4361-bb15-c6c287d7c196",
        "cursor": {
          "ref": "023fd7e3-a186-4293-970d-42449bf75651",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fc4d16b8-ea03-4f24-846e-72b52ca0ded2"
        },
        "item": {
          "id": "ea11bba9-f162-4361-bb15-c6c287d7c196",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5b14c1bf-c655-43c6-932a-7d8173a3d233",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af82781-0b9f-4d45-b57d-d7fa254f5681",
        "cursor": {
          "ref": "f6657b67-6065-43a9-b8fb-67d1bf396057",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4dde3236-a098-44a9-ac7c-1642fc9aa926"
        },
        "item": {
          "id": "2af82781-0b9f-4d45-b57d-d7fa254f5681",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c5c46c50-8944-4c7a-8a62-4183e243733a",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ec6faf-ecd4-4c11-9e5f-16c1ec1a24a7",
        "cursor": {
          "ref": "ee2d9e01-924e-4483-b252-395886a0910a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c0f5435-fd31-49cc-88b2-82751bfa56c9"
        },
        "item": {
          "id": "f1ec6faf-ecd4-4c11-9e5f-16c1ec1a24a7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e3d44b09-02ac-48cb-876e-e0057747a257",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d895f0d5-acb5-48a5-974d-3e5b759e7f9a",
        "cursor": {
          "ref": "774d789d-6076-400a-98ce-0dd66f2721ab",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "696c8fe9-c1fb-4092-8230-3d0a865b9a5d"
        },
        "item": {
          "id": "d895f0d5-acb5-48a5-974d-3e5b759e7f9a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "19634697-b839-4508-9a75-52ec2d18d00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3373543a-f7a8-4c0e-bc4f-8069f3e4531f",
        "cursor": {
          "ref": "3892d678-fe33-492d-a928-fe193d90d31a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b99f5237-0a48-461f-b062-d0688d8f2631"
        },
        "item": {
          "id": "3373543a-f7a8-4c0e-bc4f-8069f3e4531f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "28a41402-c529-4153-9210-741aa4271d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff921bf-0c18-415a-aeec-b7cd46cb3693",
        "cursor": {
          "ref": "3539a59e-b8b2-4e74-aa8b-20f1d4388dfb",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "498ce6a2-341a-48f4-a9ab-43dbf2cb9b59"
        },
        "item": {
          "id": "fff921bf-0c18-415a-aeec-b7cd46cb3693",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2f2e5f99-4935-4d8b-993a-cd6495b54c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d581a3df-a278-423b-aeac-6374478ef2d3",
        "cursor": {
          "ref": "905783ef-11d2-4864-bfc3-04c519be4c7a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6acac3c3-e108-4385-8406-b7a1907f4b07"
        },
        "item": {
          "id": "d581a3df-a278-423b-aeac-6374478ef2d3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4f37e28c-9b32-4c47-8e85-b5e3ddd3bcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03780f6b-c0d3-4ac7-aa87-50195b7458a5",
        "cursor": {
          "ref": "02816fec-6e16-42b1-b159-62f8f6d2c74a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e23a1fb4-f1b4-409a-8477-41ca438ffd2a"
        },
        "item": {
          "id": "03780f6b-c0d3-4ac7-aa87-50195b7458a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4021ec63-d0ad-4b93-a162-69c006e3628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a37945-b536-4f6c-9ba7-f649e4085a84",
        "cursor": {
          "ref": "62356bb0-6261-4aa9-b536-f3c522c327f9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3787189b-1e5a-48f5-861f-f726e1625d8b"
        },
        "item": {
          "id": "06a37945-b536-4f6c-9ba7-f649e4085a84",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9455f134-7814-44a9-a787-0944e0864ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3d8b27-0948-40dc-925f-ae22d96a3579",
        "cursor": {
          "ref": "a9beee5b-c5dd-4454-b235-c9530e8440ce",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2ffa8e36-ffa7-476d-9dfe-79fe216c2462"
        },
        "item": {
          "id": "3c3d8b27-0948-40dc-925f-ae22d96a3579",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4fd0b3b2-2b56-4d8f-b5c0-2c7b68781bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96933eb-5122-451d-9507-b4e1e2d2d7d5",
        "cursor": {
          "ref": "494a054a-d075-41a7-887a-29f094588e38",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ab040dac-6225-47cd-9b5e-f6f0a5d2e3db"
        },
        "item": {
          "id": "a96933eb-5122-451d-9507-b4e1e2d2d7d5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f8a1bf8f-e1bb-4fb5-9ade-3b72c131aece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9332314c-8c0b-41d9-9db6-a71470f285d5",
        "cursor": {
          "ref": "d109a5e3-0c8f-46a9-9aa6-5c443893513c",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "59a512df-212e-4dda-902d-628e9c9dbaff"
        },
        "item": {
          "id": "9332314c-8c0b-41d9-9db6-a71470f285d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fe731643-9608-40a5-80ae-019a6172e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4a3c6e-c438-4281-92e2-0e12a5ef2fb3",
        "cursor": {
          "ref": "06c05fcb-eac4-4ba6-8b92-36c8bd0d0df5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ceedada7-4ead-4065-a62a-1bde311e8c1e"
        },
        "item": {
          "id": "9d4a3c6e-c438-4281-92e2-0e12a5ef2fb3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c103579d-29a3-4ab5-9720-0258c6ea6bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8f1dcc-2786-43c4-b06c-cb2852ef832d",
        "cursor": {
          "ref": "d8523c34-db60-4582-9a62-b9d6642efb9e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "37074373-c63d-487c-9073-ae57ed92b99a"
        },
        "item": {
          "id": "af8f1dcc-2786-43c4-b06c-cb2852ef832d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b5577db0-5b3f-4a39-90d0-8f45223bb915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7dddcdc-bb6f-4c7b-8a78-ea8e85884b0a",
        "cursor": {
          "ref": "cfb0dc65-1ae4-4c2c-9486-1d8d1cc6d3e5",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7255ddd2-850d-4f0a-8f7a-1b2b849fdfdd"
        },
        "item": {
          "id": "f7dddcdc-bb6f-4c7b-8a78-ea8e85884b0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "eceeea59-7744-4f38-836e-b6ed2b9ac0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e402ddd-55f4-4694-ad34-10ef38b91c8f",
        "cursor": {
          "ref": "babee400-ea19-4cd4-bd9c-4e0de13b532c",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "490f363c-16e9-439e-8236-5c5ae2414a36"
        },
        "item": {
          "id": "4e402ddd-55f4-4694-ad34-10ef38b91c8f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "82f8addc-dc5d-441a-9d98-2626bfe05b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70604793-953b-4dfb-94df-7cac37e9c368",
        "cursor": {
          "ref": "e5bf895c-a6d6-4a2d-ab41-b8ada6c799c7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3dcaff00-b3ef-4f03-99ce-772c4ab56ec6"
        },
        "item": {
          "id": "70604793-953b-4dfb-94df-7cac37e9c368",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1d344e58-6d8e-4c37-a9a5-b03a7a779d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4474b3-930a-406b-9070-a0841598519b",
        "cursor": {
          "ref": "63c1505f-8a38-4fa5-82a3-0bfb3070f58a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6fd50c44-7053-4efc-b901-2de843be159d"
        },
        "item": {
          "id": "8d4474b3-930a-406b-9070-a0841598519b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e146de76-0833-4751-8110-e9c2cd2f4c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7809d7fc-b144-4642-a236-cc4bf4cee8d8",
        "cursor": {
          "ref": "eba9cdae-f904-4dfe-9976-25394a43b6b6",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3ea1fa22-a50b-4f4b-9f44-25c27155d073"
        },
        "item": {
          "id": "7809d7fc-b144-4642-a236-cc4bf4cee8d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "064e0006-eb95-440e-a332-49b2f935f70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ec7177-e00e-46bf-8f47-82f3cddf79b7",
        "cursor": {
          "ref": "9c6d226f-5033-4772-8cc1-46833378349b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1cdf00c4-885f-4584-8845-0e49fe92d2ab"
        },
        "item": {
          "id": "a6ec7177-e00e-46bf-8f47-82f3cddf79b7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8845a8c-2cfb-435f-830b-f5e5332582d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09b2c80-d129-4761-b5fb-080754764837",
        "cursor": {
          "ref": "38167138-d16c-4ab9-9562-e76d2c2c7179",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "55a7ee4e-d7a5-491a-99c3-1169e4213bcd"
        },
        "item": {
          "id": "a09b2c80-d129-4761-b5fb-080754764837",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c5bf4d41-e0e2-4f60-851b-310f0983d3dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d95b9a-2dfc-40af-8944-9d29bcb02df8",
        "cursor": {
          "ref": "28098c4e-b6ec-49af-a884-64f19aafd74b",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "73c9bca5-410e-4314-8e8a-088e3bdeb42e"
        },
        "item": {
          "id": "56d95b9a-2dfc-40af-8944-9d29bcb02df8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c5d6f136-131b-4add-b5b7-104a84782ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb14a79-be41-469a-96ff-8b6d75f74e4a",
        "cursor": {
          "ref": "f6d64c0c-fdc9-4d96-87de-d31a71c95107",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3edc4793-909b-41c4-8c94-48ae4038a234"
        },
        "item": {
          "id": "3fb14a79-be41-469a-96ff-8b6d75f74e4a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "39d79a14-97ea-4f7e-8157-a27edf5818ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e36d35-9ce1-4bd4-be45-3200e9a68c71",
        "cursor": {
          "ref": "4cd6f6b9-24c6-44fb-928c-ea89632a83f9",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "11f92b2c-1fdf-4578-b32e-3c9fe948cd1f"
        },
        "item": {
          "id": "18e36d35-9ce1-4bd4-be45-3200e9a68c71",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "067b442f-b131-4ea7-85e5-22ee69fdb8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684cf5d9-e5d2-4dbe-bd32-e9057dc5c303",
        "cursor": {
          "ref": "fe708745-67c6-45cf-b9b0-6c6216cea9bf",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ecf7e7ec-9328-4604-ac79-c36ba0512759"
        },
        "item": {
          "id": "684cf5d9-e5d2-4dbe-bd32-e9057dc5c303",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "70f45314-2674-4115-8f7c-acc91481dfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ba1bc-26f8-4589-8517-f9ebfe67764c",
        "cursor": {
          "ref": "7a81e235-1a98-438a-a772-2c8ce793b89a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6779499a-cac5-47cb-9c90-59f4518aa2a1"
        },
        "item": {
          "id": "bd1ba1bc-26f8-4589-8517-f9ebfe67764c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48296ca1-abeb-48e9-a8b5-644e6c867d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a96337-f2c7-4194-a301-2702bde8a9e0",
        "cursor": {
          "ref": "fe4cf444-fe5e-47d7-9708-bd861a420ce5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "2ffc9cb0-557f-48b1-991f-f4582ab2b48e"
        },
        "item": {
          "id": "35a96337-f2c7-4194-a301-2702bde8a9e0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "95ead1db-217e-4ac0-ac7f-26b8f95b5556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f004e5f0-fb4a-401f-ad9d-609e89466248",
        "cursor": {
          "ref": "d93024b0-67b4-436e-b2c6-e5e228648ce1",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c22cdf76-9c7e-470c-923d-5fe96ea7a33f"
        },
        "item": {
          "id": "f004e5f0-fb4a-401f-ad9d-609e89466248",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c88d0f5b-1ecd-4ba7-994b-fd5ae5a5670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fa7e02-4f53-41ca-9022-df130a54f0dc",
        "cursor": {
          "ref": "674e2db9-cfdc-48ac-bb8a-5de199383055",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "83b7d211-fa78-4152-a04d-b28fba7e45f1"
        },
        "item": {
          "id": "03fa7e02-4f53-41ca-9022-df130a54f0dc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ba8d9dfe-606d-4034-ba1b-bb9394bb04ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2808b6cc-9180-467a-b5e7-9118d2808632",
        "cursor": {
          "ref": "2ba8a51a-e6ea-4d79-a032-ddb8a8599d09",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c370236c-6a9f-44b0-93a1-cf066287f61e"
        },
        "item": {
          "id": "2808b6cc-9180-467a-b5e7-9118d2808632",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b70a1808-254e-4781-91ac-88db9732ead3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2c6cae-2050-46d8-ac0d-984410286112",
        "cursor": {
          "ref": "8a210387-befa-4369-825e-c92907dc484e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "777b0518-4644-49c2-934b-3fc0b0ec00fc"
        },
        "item": {
          "id": "6e2c6cae-2050-46d8-ac0d-984410286112",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "430edee6-9894-4063-a22a-f5cf30869c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430155a8-ada3-4129-a37b-21865e28490a",
        "cursor": {
          "ref": "590be28c-dc73-4400-b490-c05c33122c3f",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cb646e4b-08d1-493b-95aa-9917eb5a33d5"
        },
        "item": {
          "id": "430155a8-ada3-4129-a37b-21865e28490a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5e365992-32a7-454f-9fc3-6469bdf2ab9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04066d71-3ffc-4638-b686-d0e51f00d196",
        "cursor": {
          "ref": "b5d916a3-260a-4441-b959-2b48e355c2a9",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4705c3f0-4233-45f1-a3d7-0f7a9ea25cf1"
        },
        "item": {
          "id": "04066d71-3ffc-4638-b686-d0e51f00d196",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a9e926b5-9322-478b-b14b-99a86e4f83c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9355f4-f4a8-4e86-8d40-844264f5d1a5",
        "cursor": {
          "ref": "c3caac4e-2032-46d2-91dd-90ec6fbed807",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "af06a203-1b2e-477b-88b4-b46991577c1d"
        },
        "item": {
          "id": "6a9355f4-f4a8-4e86-8d40-844264f5d1a5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "73cb221f-330d-43f1-991a-5f90a60f849c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20d2c75-0a5b-4dd7-9002-e01e6e432aee",
        "cursor": {
          "ref": "9b1289f7-1d2e-4f1e-813c-f410d76adac3",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a69869c9-f700-4558-ae1e-82b94f57ad5d"
        },
        "item": {
          "id": "f20d2c75-0a5b-4dd7-9002-e01e6e432aee",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b5a2b48d-4bab-41a1-a1a8-b483f4a71ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4443466-82b5-40fa-a03a-f412e8484f1e",
        "cursor": {
          "ref": "428f00a2-9382-4962-bd74-4201ad5f68ad",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8c3cde43-017b-46ec-a1a3-9425aa90fb78"
        },
        "item": {
          "id": "c4443466-82b5-40fa-a03a-f412e8484f1e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5ae9a5e6-67bb-43b1-aff8-ecc64f57f572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1473db4-b744-44c3-a961-d9bcaaddb6b3",
        "cursor": {
          "ref": "5f6d385e-6882-4cbd-914f-f7e3415c10bc",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f7be8367-778d-42e9-aca2-9dd03d784121"
        },
        "item": {
          "id": "d1473db4-b744-44c3-a961-d9bcaaddb6b3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e44c2aca-a6e2-4684-9f74-af0edbb778b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f0238d-6e81-498f-b806-b5134877810b",
        "cursor": {
          "ref": "180a8784-7b11-45af-ae6b-17123bc2dd3c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be20ab9e-7fff-4c3b-8da9-49cb25579f9c"
        },
        "item": {
          "id": "e8f0238d-6e81-498f-b806-b5134877810b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "892ec69d-99f4-48c3-b3d9-8ef969cb2ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac925b95-5968-44e1-9151-216aea236705",
        "cursor": {
          "ref": "35f638ea-079c-4525-a04e-a7bf6a361824",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6d4a3538-94c2-474b-92ba-98c4e0f8acc0"
        },
        "item": {
          "id": "ac925b95-5968-44e1-9151-216aea236705",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05f115bc-1bb6-4f33-bf31-825a7eb4069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8a2a4d-d7b9-47a7-b807-16a4d909d042",
        "cursor": {
          "ref": "eaf34b54-0fa8-43cc-ba75-e48a785324da",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b6717b8-f31c-4212-ad69-2797750243f4"
        },
        "item": {
          "id": "6d8a2a4d-d7b9-47a7-b807-16a4d909d042",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c27618f3-64d8-4541-bbaf-d425b3c24f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d376bf19-927c-4527-b487-1f4ba9ac9e10",
        "cursor": {
          "ref": "b3b039ec-4468-451d-ae67-ddf7e0aa2fb8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "38b1dad2-0bda-40c8-9867-2c8b6cbab736"
        },
        "item": {
          "id": "d376bf19-927c-4527-b487-1f4ba9ac9e10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "14d1cfbc-dcb3-4007-91f7-eb2f2498e2f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a963d5-120c-4749-abb2-6dcea56d74e2",
        "cursor": {
          "ref": "43dba176-5dae-4141-9900-d0effb039ad6",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "6949ce7f-897e-498c-a77c-a2e7f23440ad"
        },
        "item": {
          "id": "46a963d5-120c-4749-abb2-6dcea56d74e2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f3327bed-db2a-4868-a583-d5840a162632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa3b6da-834b-42a3-a94b-de4ba8de4325",
        "cursor": {
          "ref": "7842c9ce-ce19-4d01-ab38-f39132f587eb",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4806ace1-b124-47a0-93cf-2116905979cf"
        },
        "item": {
          "id": "eaa3b6da-834b-42a3-a94b-de4ba8de4325",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8be4cfdc-166a-4bf9-bde8-997c5d6d3a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8a98b4-7a35-4b8a-8434-ba8817ac072c",
        "cursor": {
          "ref": "333a34a0-e3f0-458c-bc51-e24fb6b98d7b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "80f2e065-62de-42e6-bd08-bf75a99069dc"
        },
        "item": {
          "id": "4f8a98b4-7a35-4b8a-8434-ba8817ac072c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5119e378-fa27-4fb4-a53f-20b6002aa517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c330e008-1fda-42d4-aa03-7bf80ce18ae9",
        "cursor": {
          "ref": "05d9bcb5-484c-4033-96b4-97730695383f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5b288851-2502-457e-8b61-934515ab914f"
        },
        "item": {
          "id": "c330e008-1fda-42d4-aa03-7bf80ce18ae9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4f5dfc4e-7b99-4149-8b32-28093076c889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b760305d-d637-491d-b286-dc43cadcc3c1",
        "cursor": {
          "ref": "28b202a0-1ba8-4083-9d1a-337d7b7379d8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "afdfb55b-5848-4462-8114-70296432a591"
        },
        "item": {
          "id": "b760305d-d637-491d-b286-dc43cadcc3c1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "21112e3a-08a6-4bec-b5f2-9dc22ecef492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c12016-4093-497b-8b54-097a39c17d82",
        "cursor": {
          "ref": "0f97e2a0-40d0-4fb1-aebc-7e68f7675c7f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "366c5fd7-79bd-4858-aecb-3b775f7b2b7d"
        },
        "item": {
          "id": "11c12016-4093-497b-8b54-097a39c17d82",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3109ec81-39c5-4072-9038-c5309127cec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b532c29-e3cb-4309-9ced-60a0ce00c96c",
        "cursor": {
          "ref": "0589fda2-2643-4a1f-bc72-ea56d99224f0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f6a5ad56-d748-43f1-93c4-764372d79aa9"
        },
        "item": {
          "id": "8b532c29-e3cb-4309-9ced-60a0ce00c96c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4f1deb9-bc6c-4fb3-bdb5-78c5c7f9dee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d676bd5-0d8c-4ccd-9acf-e7d459b57436",
        "cursor": {
          "ref": "91f85cc1-1b65-43a4-aa4c-fa8c35326544",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "32895ab7-fb2a-403f-8864-a61a0e571a4b"
        },
        "item": {
          "id": "5d676bd5-0d8c-4ccd-9acf-e7d459b57436",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3d35ef38-67d9-443f-91d9-5cc9baaaaaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b486f6e4-6877-4088-bfd3-f4ec18a866af",
        "cursor": {
          "ref": "65189bd7-cb8c-48f2-b384-e57d0d60e9dd",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "01d2e2e7-9666-4690-8231-4b5604c298c4"
        },
        "item": {
          "id": "b486f6e4-6877-4088-bfd3-f4ec18a866af",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74a94da9-ee45-408b-b1ff-c954090d4038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7067af5d-3a72-4c53-bed2-97c59dc51fcb",
        "cursor": {
          "ref": "88baaa3c-49c8-4a73-96c1-5055a270e971",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e4568a1f-848e-471f-ac38-09894ef59531"
        },
        "item": {
          "id": "7067af5d-3a72-4c53-bed2-97c59dc51fcb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f408841-3a5d-41b1-b142-9323b208c9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3761519e-19a0-4354-853d-af0e0baf9cc8",
        "cursor": {
          "ref": "c5020935-6b2b-4e3d-b087-fe86cba32645",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bd155b8d-2d8f-4798-8ad9-519f0a64e6f3"
        },
        "item": {
          "id": "3761519e-19a0-4354-853d-af0e0baf9cc8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8c3f36d4-5c04-40dd-b30d-a354ac37603f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3dea7b-0eaa-4c3c-95bb-6387e962a1d0",
        "cursor": {
          "ref": "12991cd8-1ee2-46ea-947e-88c2a603c1eb",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db9986b5-f608-492f-bdde-74ab267d40dd"
        },
        "item": {
          "id": "fe3dea7b-0eaa-4c3c-95bb-6387e962a1d0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "643cad01-4e92-4980-8ddc-cd7a5ac3fd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed11224-cc24-4eef-ac53-539ec32b4b74",
        "cursor": {
          "ref": "681201b8-53ae-494a-b124-af8eaa630bae",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "047e2c8b-299a-4ab9-bd6f-0f1b55be06d2"
        },
        "item": {
          "id": "fed11224-cc24-4eef-ac53-539ec32b4b74",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a6e6f737-008d-4582-9402-5b5d9c3e61b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3457259-bf68-4241-b1ee-18e6a1a0d5a3",
        "cursor": {
          "ref": "88bf4fd4-560c-49ca-88ed-cde5be81a70c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7b0902d5-e2c1-423f-862e-3e234ec5341a"
        },
        "item": {
          "id": "a3457259-bf68-4241-b1ee-18e6a1a0d5a3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8b154a26-8c4f-4de0-bc8d-40c878e0cd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38580892-ede5-499f-8c63-2d5bae2da760",
        "cursor": {
          "ref": "fba3f462-5e42-408f-839d-eb763ca89811",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0f514f41-af3f-4164-88ec-ef918a1d742d"
        },
        "item": {
          "id": "38580892-ede5-499f-8c63-2d5bae2da760",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "06c8ecdb-2170-44ac-8d8b-5e8134e15d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a058bb9-25bc-4a6c-982c-ef8dd12fe2b0",
        "cursor": {
          "ref": "5e512bbc-f1d4-40a4-949e-8b72a1ef5da6",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cd3cf66b-bde3-41ed-acf3-e7d803db1d3c"
        },
        "item": {
          "id": "7a058bb9-25bc-4a6c-982c-ef8dd12fe2b0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ef7a3d67-a434-4384-b3b9-738b10c39af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc73b1a-cc0b-4535-ac1b-449537194a8d",
        "cursor": {
          "ref": "198b8f5b-ea2b-4bc2-a558-a4dbe88c8777",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9fea009f-e498-4318-adca-1e9be4897b11"
        },
        "item": {
          "id": "ccc73b1a-cc0b-4535-ac1b-449537194a8d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d3ad2406-3263-468f-beec-27e5f67cf53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc81c76-b265-4e82-a018-69f748c49db3",
        "cursor": {
          "ref": "6c8d86cf-9ab3-45b7-9d64-63a225810ad9",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e48ca3ab-0d6c-4312-998f-9886438f80d8"
        },
        "item": {
          "id": "dfc81c76-b265-4e82-a018-69f748c49db3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8b93af71-1ad2-4145-9922-05c5d054dbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da90482-ce6d-4890-a8d3-520530b4fae2",
        "cursor": {
          "ref": "074efc33-931c-4d2a-9a68-aba4e76644db",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e0d1aeed-46fc-41b4-b796-86c0576fcdbf"
        },
        "item": {
          "id": "0da90482-ce6d-4890-a8d3-520530b4fae2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "364ebf1e-40fb-4f55-a752-895bb80e1ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d66143b-a9f6-41f0-b259-43f3e9413341",
        "cursor": {
          "ref": "8eeb4157-120d-4d77-83a5-b85f4e9d9bea",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "85ada680-4ce0-4864-8534-b179333f7ed7"
        },
        "item": {
          "id": "1d66143b-a9f6-41f0-b259-43f3e9413341",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b626da61-2874-4c4c-ba05-a22c2001d36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde12748-9491-4b53-b49c-3eda6f853d72",
        "cursor": {
          "ref": "541f3d81-0ecd-4253-b966-55c9afc411c4",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8e1729d8-3a83-404b-88c8-daf91126e967"
        },
        "item": {
          "id": "bde12748-9491-4b53-b49c-3eda6f853d72",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "43fea181-44e1-42a8-a376-1522e1079f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65199d9c-13e4-41fd-90bc-c949a69c8e22",
        "cursor": {
          "ref": "f4ddbd27-1cf3-44dc-b332-1828237a6df8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "40aae5d7-9f2f-466a-bea6-20f027799336"
        },
        "item": {
          "id": "65199d9c-13e4-41fd-90bc-c949a69c8e22",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "532193fa-082f-48a1-bd52-fc4b44067f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10093db1-5ced-4fd1-b819-aab2d07bc09a",
        "cursor": {
          "ref": "ac3d4c28-9e00-4256-99d5-b4e80536fa35",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cf2ce7a1-3894-45a9-84e7-23691849d159"
        },
        "item": {
          "id": "10093db1-5ced-4fd1-b819-aab2d07bc09a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "17770795-dac5-4476-b780-4770d8e8af9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0fd6c1-f772-43f9-886b-a16c33299c10",
        "cursor": {
          "ref": "0a52969e-189f-4e50-8950-9ba569bfd832",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a64f33f7-ebc7-4571-b826-6535021fae29"
        },
        "item": {
          "id": "bf0fd6c1-f772-43f9-886b-a16c33299c10",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f476dca-2158-4f2d-9750-c865c2133c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f76c86e-09e3-4982-963f-05e6c93c2457",
        "cursor": {
          "ref": "ca287fce-275c-4263-bd11-d6e07db17ca7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d8375f4-e4d2-48b8-a501-65f83012d04e"
        },
        "item": {
          "id": "8f76c86e-09e3-4982-963f-05e6c93c2457",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c3800168-93d1-4673-b57a-6a13741e71aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254c3c43-74b4-4e3e-8502-9225b4023dfe",
        "cursor": {
          "ref": "8247d36e-ffea-43ae-ab7c-53a4444a151d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b913801b-160d-4d00-8f6a-99efb752a9f5"
        },
        "item": {
          "id": "254c3c43-74b4-4e3e-8502-9225b4023dfe",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5a0c02a6-8725-4b48-b8d4-f99cbcd3c155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c91a37-9621-440f-b379-c779f09d1920",
        "cursor": {
          "ref": "c1d493d5-da21-43fc-9534-e0dbf7ca490e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "840a9f9d-1380-4736-a731-3dbe0021eb9b"
        },
        "item": {
          "id": "29c91a37-9621-440f-b379-c779f09d1920",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "803d40e9-6d67-45d9-b6eb-3a066528e534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4506133f-d697-4c00-984b-e7c1926a5e59",
        "cursor": {
          "ref": "0e80948f-0b88-4f28-b8b3-436dc083622b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "166d1c74-8fc3-453a-8427-3d98789d3b54"
        },
        "item": {
          "id": "4506133f-d697-4c00-984b-e7c1926a5e59",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "57c30355-d319-423f-921d-7a7c5845a388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723824d0-0ee7-47ad-90f8-256b7f25ae5f",
        "cursor": {
          "ref": "5cd5ee13-fb7c-4827-b9e3-e6c6a69a511c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "667fd9ab-68c5-4d54-8f9a-ed949064df7d"
        },
        "item": {
          "id": "723824d0-0ee7-47ad-90f8-256b7f25ae5f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "28812b28-0e36-41cb-a7a5-8270318f39a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a33cbc-e720-4a97-a1a8-e0d7f1bf4077",
        "cursor": {
          "ref": "f572d6ac-289d-4037-894d-42db1e842615",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "67051cf8-e486-41bc-a9d2-dd15476ee889"
        },
        "item": {
          "id": "f8a33cbc-e720-4a97-a1a8-e0d7f1bf4077",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8fef613c-4d5e-4373-9b53-e0893802525b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dc09be-c1c5-4393-91ea-cf3db421778c",
        "cursor": {
          "ref": "de797fff-253d-4f5b-a7ee-256d409cb1c6",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f80d3549-e57f-4e76-ad88-8e5a9f5b2424"
        },
        "item": {
          "id": "e4dc09be-c1c5-4393-91ea-cf3db421778c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "3b4b3b64-fbc1-4d37-88b8-eda81080d088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f958f94-8108-4d27-89c1-fadda50454c4",
        "cursor": {
          "ref": "44d6b803-78f5-4f83-bcb3-4524b07e6fff",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "59d22112-0904-41de-b5b1-fd19ba15b06b"
        },
        "item": {
          "id": "7f958f94-8108-4d27-89c1-fadda50454c4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e82188be-2f90-4625-af5f-57a0271a2cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fd68a6-0de0-480e-8dbb-82588b2606c9",
        "cursor": {
          "ref": "998c124d-7460-4881-b8fb-cfee01002a43",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa00ece6-8ea9-4dc2-b951-ca5d0183c6d7"
        },
        "item": {
          "id": "39fd68a6-0de0-480e-8dbb-82588b2606c9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2dc66387-2926-4a91-857d-e6beea610e82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7580e234-c120-4704-b5d3-1dc90e16d834",
        "cursor": {
          "ref": "5adcfac7-384a-4545-92f2-495aa698dbd8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e708104a-86de-4c1d-b5f8-719372516ac3"
        },
        "item": {
          "id": "7580e234-c120-4704-b5d3-1dc90e16d834",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2b10c7a9-641b-47f7-899f-f1f13b0668c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9423455-0533-45f7-bfd6-e2cadcda2072",
        "cursor": {
          "ref": "10b4df4a-ee5b-4e59-aaa3-663bdadc11ac",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ba69fc8b-4f97-4f06-8dfe-aa502b89aadb"
        },
        "item": {
          "id": "f9423455-0533-45f7-bfd6-e2cadcda2072",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6141d243-2ca1-408c-a792-8a40df3ffd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ea1146-9cbd-49b3-b643-7d7a2abc06be",
        "cursor": {
          "ref": "bd3551c2-401a-4ba2-8f8d-546249d0aea3",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f317cad8-fb91-423f-bebc-1f7c7261666b"
        },
        "item": {
          "id": "52ea1146-9cbd-49b3-b643-7d7a2abc06be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "004802e4-a3bc-45de-a783-9bebcb2496ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81c2533-d82d-452b-99fa-7dce867aa37a",
        "cursor": {
          "ref": "ab40880d-606b-430a-a0b4-7e5adc52f227",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7de5098d-a900-4c0f-a5ed-8eb0ad619201"
        },
        "item": {
          "id": "c81c2533-d82d-452b-99fa-7dce867aa37a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "259df8ae-e570-4e0c-b2cc-380b09911e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b09e7d9-5d48-4b94-9158-ec244d8ac55f",
        "cursor": {
          "ref": "9e375d3b-525e-4a40-a431-3e704fa4a0a2",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f8400596-ac2d-4f2a-8cc4-026ba5de15fd"
        },
        "item": {
          "id": "8b09e7d9-5d48-4b94-9158-ec244d8ac55f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5d6a0a96-348e-4715-9116-9a6a3a9f8cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a3b3ff-3e67-47b6-be8f-ca7644e13bae",
        "cursor": {
          "ref": "303df65e-78d2-4066-b4ba-a1b080d6fe16",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "843ffa2f-e252-4289-b9fe-62aa13d50f3a"
        },
        "item": {
          "id": "14a3b3ff-3e67-47b6-be8f-ca7644e13bae",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e2522626-46f1-4717-aaf1-5cb9fcf7e8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ce048a-848d-4626-b13c-8a3ae183a841",
        "cursor": {
          "ref": "c0f033a7-42bf-4c65-80f3-0f5e9233c0c3",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e052a53c-0e7e-472a-8acc-ce19097f6695"
        },
        "item": {
          "id": "63ce048a-848d-4626-b13c-8a3ae183a841",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f3f8f595-0cae-42d0-874f-8efea845401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3422dbd7-c88d-44eb-b71b-afaa09fa3c6f",
        "cursor": {
          "ref": "46345f2a-1873-498e-99b7-07d003295ab3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fe6dadab-175a-45e7-83dc-2d2574b6c0c5"
        },
        "item": {
          "id": "3422dbd7-c88d-44eb-b71b-afaa09fa3c6f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8fbd25b3-b03b-4acf-ba9b-0a7501483c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5217c72-9903-476e-ba65-960f756740f5",
        "cursor": {
          "ref": "8a388cb1-35de-45b7-ae77-bc09c208a271",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d6d94633-b19a-42ed-ad0b-3b634fcbc5eb"
        },
        "item": {
          "id": "f5217c72-9903-476e-ba65-960f756740f5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "629acabe-5151-47b7-83d2-80e76928e417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25527f1e-5cb2-4bbe-b072-2322b36706e0",
        "cursor": {
          "ref": "6daba944-e161-4f8a-b5c0-a582dbd24637",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1b03a84b-639e-4517-a82b-e71b2e6a7e43"
        },
        "item": {
          "id": "25527f1e-5cb2-4bbe-b072-2322b36706e0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "808f7c5c-b6d8-4197-9c5b-251b927e6981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ce798-d460-4a7a-9f26-be2ccf225efa",
        "cursor": {
          "ref": "c23a9c51-d73a-4ea9-97eb-1258ea1493e5",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a78b3dd4-bcd5-48f8-bbc9-949d78b340a9"
        },
        "item": {
          "id": "5b9ce798-d460-4a7a-9f26-be2ccf225efa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a3d8b441-664b-4abf-bbdb-4facfead59d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4352a30-0713-46be-820e-b35bc84b24bd",
        "cursor": {
          "ref": "950f73e7-cf76-4f72-837e-316d05faec15",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1f50fa1e-05da-47b3-b824-f22eed68809c"
        },
        "item": {
          "id": "a4352a30-0713-46be-820e-b35bc84b24bd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d40155f1-7687-458a-b5a9-42edfee02f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cff1740-e867-4403-95ab-a2f9b18c83ac",
        "cursor": {
          "ref": "c537fa21-a8e3-487d-9a18-fe889fbae91c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "75e837fa-4d86-41f0-9901-9488b39477b4"
        },
        "item": {
          "id": "7cff1740-e867-4403-95ab-a2f9b18c83ac",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7105bc6d-712c-41e0-b70f-59ceb7c065b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d557eb-e849-41fc-8ee4-b9e7d3c9f996",
        "cursor": {
          "ref": "b28ed36b-e770-465d-a774-40475539dcda",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "8c76363c-16e8-46e0-be29-f2e544e8ea5b"
        },
        "item": {
          "id": "18d557eb-e849-41fc-8ee4-b9e7d3c9f996",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4395f0fb-cc70-4cfd-bc9a-988b5563f6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f9650d-a40f-4926-8413-ed71b813e17e",
        "cursor": {
          "ref": "8e0d687c-d35c-47cb-b412-34e43f828e9e",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e914e73d-5a83-4e1c-b82e-fc01363d185a"
        },
        "item": {
          "id": "55f9650d-a40f-4926-8413-ed71b813e17e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eeca454b-d0d3-4d16-b388-603cc0570023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e4c248-d963-490d-bf6f-df085f3305d2",
        "cursor": {
          "ref": "dc010101-8c50-4ca0-a65c-9e79ad2644af",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "867cd0cb-e3df-42fe-af2b-b5c4ae9801a3"
        },
        "item": {
          "id": "45e4c248-d963-490d-bf6f-df085f3305d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2c1d5940-cdbf-408c-839f-af2d14e19e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30a9bb8-409c-474c-b4fe-f139fee865c2",
        "cursor": {
          "ref": "f763c841-973e-4630-8888-3d3255b8f614",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5bf28f5a-1c8d-4ead-abcd-32ad5768d34a"
        },
        "item": {
          "id": "f30a9bb8-409c-474c-b4fe-f139fee865c2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e8d9623-a834-4387-900d-a7ff65ca959d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b416a11c-0b04-40f3-aea5-7fcfb9adf032",
        "cursor": {
          "ref": "37f4519d-cf01-4306-b04a-e985e227b2f8",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "454dbe37-7dac-45a8-8c4e-8689606916f9"
        },
        "item": {
          "id": "b416a11c-0b04-40f3-aea5-7fcfb9adf032",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f67bccff-1f8c-458c-90a6-22e336884a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f28fc56-cdfa-4357-905e-bc4665916b30",
        "cursor": {
          "ref": "2395cfe2-8f16-4796-8732-de7df80ab2f6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dab04e1f-b942-4b56-a5ff-071a26cc3d48"
        },
        "item": {
          "id": "1f28fc56-cdfa-4357-905e-bc4665916b30",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "904930b4-fce8-49be-9b7f-70dbe3ef60bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1fe36d-8d43-43a7-910b-45eb5901803c",
        "cursor": {
          "ref": "3cd4923f-355f-4149-a60e-647791501e1b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bb5b06b8-0dee-4a84-9425-2329a43483e5"
        },
        "item": {
          "id": "7e1fe36d-8d43-43a7-910b-45eb5901803c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f711954a-9c85-4788-9acc-e8215f35bd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee50c37-b828-4417-9065-e9cde56b8018",
        "cursor": {
          "ref": "6fa4a1b5-3b48-4778-abd8-db37fc5ece4b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "05bf749b-01e3-4d9c-a724-ff77e771cf01"
        },
        "item": {
          "id": "0ee50c37-b828-4417-9065-e9cde56b8018",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "31959870-44d4-4a88-92b0-2d8f4d4ee8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f32a0e-bdcc-42ae-8949-70ea81b8093e",
        "cursor": {
          "ref": "b11eecdd-f35a-4fec-a928-5aa936fc298f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "db095660-26c8-4631-ae22-fbb162f7a964"
        },
        "item": {
          "id": "f5f32a0e-bdcc-42ae-8949-70ea81b8093e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3d00bd30-83a5-46a4-b73a-191343150959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2644bc6d-aa67-4202-97b1-4a1548806f6f",
        "cursor": {
          "ref": "db5e88c6-ce4c-43d9-b481-8e475f008bdf",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ea64e379-7b67-478a-9fd5-8af465101acc"
        },
        "item": {
          "id": "2644bc6d-aa67-4202-97b1-4a1548806f6f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "99b8bc03-91b4-4332-b561-c47480a0fbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a55376-7a57-41bd-ad3a-1f96495609c9",
        "cursor": {
          "ref": "cbb3acec-f9c3-4385-9956-bfdf91bb563a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "206c4ae9-7ca2-4cb1-9e4e-6374b95f9314"
        },
        "item": {
          "id": "42a55376-7a57-41bd-ad3a-1f96495609c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "10bde816-97b3-4846-b4a1-f72f446aa9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e027043-83f9-450b-83d6-0c5c787f9bb1",
        "cursor": {
          "ref": "a6c379a8-6d64-4e49-b6e8-1ff0462b2eef",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ed3224e0-d719-4a44-ba9b-15c1966d11dd"
        },
        "item": {
          "id": "5e027043-83f9-450b-83d6-0c5c787f9bb1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "93ae41ae-9b22-4cbb-8e0e-9fa2286995f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156c6f23-defc-443c-baec-1f808d29aab2",
        "cursor": {
          "ref": "26ca1573-859e-41fa-a800-fc803ae076d6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dbf67ffe-56b5-4baa-934a-fa319c4b3755"
        },
        "item": {
          "id": "156c6f23-defc-443c-baec-1f808d29aab2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7392131e-b07b-4961-b505-e07cae4ee326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2533c7-d797-49f6-a699-9a04542c1725",
        "cursor": {
          "ref": "447af540-302e-4067-bc29-581ea4188979",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3649a831-5ede-4cd7-a498-233822d45b4a"
        },
        "item": {
          "id": "0c2533c7-d797-49f6-a699-9a04542c1725",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cc3259a-1ca4-41c6-b1e1-b218e9a727e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a84079-48bf-48d5-8848-f35f62d62e6d",
        "cursor": {
          "ref": "c579062a-e356-403d-b993-27b6ca6e13ef",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cf4e46b6-1b70-489c-9a20-36c869d85295"
        },
        "item": {
          "id": "96a84079-48bf-48d5-8848-f35f62d62e6d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "53701d20-4cd1-4ca4-b7b4-805047e35c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c017e73-2464-48d7-8f2d-6248399134a7",
        "cursor": {
          "ref": "b3d28294-1eaf-4053-a614-c17928d9ac9d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b4920750-41f9-497f-a26b-ce44714f4344"
        },
        "item": {
          "id": "3c017e73-2464-48d7-8f2d-6248399134a7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f713698b-a5ce-4e26-b7be-375abae42179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462c862c-f49a-453a-af78-03ebf889611f",
        "cursor": {
          "ref": "3e59e7ee-c46e-4165-b8a2-acccce5889e5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5a6d4265-90e6-4a92-9899-b349d9a6f093"
        },
        "item": {
          "id": "462c862c-f49a-453a-af78-03ebf889611f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c587401-719c-4b6c-bd3b-3d2b0cabdf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d65cefb-26a1-44dc-bb01-da1b9333ce0f",
        "cursor": {
          "ref": "1134729d-c486-4485-bce3-eb9513af0326",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ec6822f7-ca06-4401-959a-224885dd9b89"
        },
        "item": {
          "id": "8d65cefb-26a1-44dc-bb01-da1b9333ce0f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3eda6379-3341-4667-90ac-78a47fce2831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61fe213c-f80d-4987-b816-7652aad685e8",
        "cursor": {
          "ref": "1badb032-e813-483f-b68b-d07217f2c83c",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d7cbecf4-06c7-40b9-ab7d-f1eb6382329b"
        },
        "item": {
          "id": "61fe213c-f80d-4987-b816-7652aad685e8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ff77ce88-3c25-49a6-95ca-6d2d672ec6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc06814-4930-47c2-aa8a-11b3d0b7598e",
        "cursor": {
          "ref": "71bcfc05-4330-4a2a-ba9a-6971b5cfa2e7",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4505a58f-6592-4de4-80ff-d2d86dc33625"
        },
        "item": {
          "id": "7dc06814-4930-47c2-aa8a-11b3d0b7598e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b204190e-ba01-44c2-8b39-7237de5b05f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba791c4d-8b3a-48a2-b58a-df3a78e6edd2",
        "cursor": {
          "ref": "1937507b-e984-48a3-a433-e3510d6cb90a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "08ef4c6f-594b-4f24-86cb-cc82d6cb36b7"
        },
        "item": {
          "id": "ba791c4d-8b3a-48a2-b58a-df3a78e6edd2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "05ab926e-d621-4f1f-b0df-0fc047cff964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fae952f-c37b-4102-b7bd-d577cee653bf",
        "cursor": {
          "ref": "2f7ec59a-447b-4986-8ace-8050945ef114",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "bf78f9a3-77cf-407a-88a9-efcb3a02c9bb"
        },
        "item": {
          "id": "9fae952f-c37b-4102-b7bd-d577cee653bf",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "22287721-a854-44dd-9680-782650133c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a843283e-3569-499b-9684-e4c399104e2f",
        "cursor": {
          "ref": "d2bde509-dcf0-4dd1-9ad4-3a77b5f0334a",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e9fa74f0-b187-4c72-9343-a43a3197516a"
        },
        "item": {
          "id": "a843283e-3569-499b-9684-e4c399104e2f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "019800f2-5482-49f9-b252-5700cd1896a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d314ea57-35b8-4e5e-bde1-2bf531dba770",
        "cursor": {
          "ref": "9657d62a-8ada-484a-acf2-5d51f2330314",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b772db26-9bde-4819-a43a-eba619512b79"
        },
        "item": {
          "id": "d314ea57-35b8-4e5e-bde1-2bf531dba770",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b0a90ca1-47e9-4c23-b5c7-6f54ca42ca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cec84bf-6efd-4a23-ba10-205d03758817",
        "cursor": {
          "ref": "56169f93-3581-44c5-8b6d-992ef4081204",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "beec4319-dc82-463c-a2a4-32e86cf74d38"
        },
        "item": {
          "id": "1cec84bf-6efd-4a23-ba10-205d03758817",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "68b62bd1-afed-4fc2-b75f-ec88183a98a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c35aa04-2ea2-40f8-8752-5ba7a1d710ac",
        "cursor": {
          "ref": "fbea4e61-5132-4767-9a44-d762eeebbdfe",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "13b2db68-99f3-4714-8ff3-fd8c7e7cdbe1"
        },
        "item": {
          "id": "4c35aa04-2ea2-40f8-8752-5ba7a1d710ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "38b456f9-1c6a-478e-ab3f-9484793f616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee449746-fd74-443e-82ff-161540be7092",
        "cursor": {
          "ref": "4d75a562-3738-4356-a261-68a30ed2fbd1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b7497fc2-3d42-4ac9-8130-19f1b56d1932"
        },
        "item": {
          "id": "ee449746-fd74-443e-82ff-161540be7092",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "12e7e9f7-c8e1-43c3-a279-b6aa16d5ea85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb6962d-cae5-442b-923b-d77b202ad1a0",
        "cursor": {
          "ref": "75597fb0-ac23-484a-9488-82eb65cc9021",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f529ab02-3909-4129-861c-913152590da3"
        },
        "item": {
          "id": "0cb6962d-cae5-442b-923b-d77b202ad1a0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "44a6a338-cccf-4b8c-986a-41ca3c6b37a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6882b1b0-f0fa-453f-97ce-e7d14d920f1c",
        "cursor": {
          "ref": "6d6c5e41-d1c8-4e50-99d5-8b38f9e4555d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3c5e8bce-893b-4fb9-a38f-df4446a91f2c"
        },
        "item": {
          "id": "6882b1b0-f0fa-453f-97ce-e7d14d920f1c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0f8b3a56-34b8-4322-a307-a12a2b851cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480b42ce-44b4-49fa-80e7-0398651af135",
        "cursor": {
          "ref": "58a832c7-110b-412f-9346-23fa41f57dbe",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7f4b3594-0760-4e64-9dba-0bc2ef68fa03"
        },
        "item": {
          "id": "480b42ce-44b4-49fa-80e7-0398651af135",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "43600153-180e-4f14-baca-72f164484067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbba4397-e0bc-41af-9a41-a063bff9b4f1",
        "cursor": {
          "ref": "9bd171a5-7aff-41c3-81a8-0ec2a8657aed",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ec62e5c2-1d58-4b06-a01a-9b1428e02e22"
        },
        "item": {
          "id": "bbba4397-e0bc-41af-9a41-a063bff9b4f1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1af4fad5-a315-416a-a400-a6fadea51859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a9db69-7a76-4c8c-aa9a-e54d3943dd31",
        "cursor": {
          "ref": "fd5d74a9-5a63-40ce-a19a-2fbaca07fd6c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fa325707-2de1-49bd-a9d4-22cdd2268d61"
        },
        "item": {
          "id": "50a9db69-7a76-4c8c-aa9a-e54d3943dd31",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e02dc74f-f72b-481f-8a79-b30d23aa9103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8323c469-4da3-4844-a081-297e3e976384",
        "cursor": {
          "ref": "a2b6a99d-4f84-4ed2-baee-02aaa4af5218",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2feb0a6b-145a-4f48-aac1-9c413233a703"
        },
        "item": {
          "id": "8323c469-4da3-4844-a081-297e3e976384",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6618cae5-c9e2-40f2-b310-74a708f641a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b405c438-3efb-4388-946c-c75ec532ffa2",
        "cursor": {
          "ref": "d5fd0913-d1fa-493d-9c31-f3f43c74659c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d4cdd4ae-1724-4092-a9be-6e3dbd4dda8b"
        },
        "item": {
          "id": "b405c438-3efb-4388-946c-c75ec532ffa2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c6d4f358-eacb-4033-ac2b-f031515278f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ef6e31-1977-409e-bcb1-457bc3e07c71",
        "cursor": {
          "ref": "61dfa154-c648-4a8b-99b3-a530c86a5130",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8f676f8d-9990-408a-84e4-b8f391455ac2"
        },
        "item": {
          "id": "f1ef6e31-1977-409e-bcb1-457bc3e07c71",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fa9a29c5-aa7f-4932-88d4-2b5d21142518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5e4e9f-f907-48b7-9e07-2a30e8bb46fc",
        "cursor": {
          "ref": "2941304a-2224-4f8f-8cb4-f76e3ffa6cda",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "00474054-8f62-4b5e-adea-2e774e80ca0b"
        },
        "item": {
          "id": "1b5e4e9f-f907-48b7-9e07-2a30e8bb46fc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "67d32434-5504-4130-8d8e-ff73b1f5233d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecd2e2a-b8b2-48f3-8bb2-43bb784ee825",
        "cursor": {
          "ref": "3b222246-e52e-4d19-b36c-c4d2701e42ea",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "be31f5d0-4a76-4473-9d2e-2a433ef84181"
        },
        "item": {
          "id": "eecd2e2a-b8b2-48f3-8bb2-43bb784ee825",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "47448dba-158e-4d3d-a55e-1866698e3bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c48d275-cb65-4c8e-b5c5-666ef8622c3b",
        "cursor": {
          "ref": "187a369e-1a81-4a52-8426-683834a80d46",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aef95acf-d5ec-46dc-b80f-2d846399390d"
        },
        "item": {
          "id": "1c48d275-cb65-4c8e-b5c5-666ef8622c3b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3abf141c-72ad-4c7f-a16a-a6fbdbcf9372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f34b9cc-1922-4f2b-9945-f2c8acbd4b07",
        "cursor": {
          "ref": "be201c13-1434-40fb-86bb-410d78d2aec7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "64bcc807-5d37-4eec-889a-85fb2346c646"
        },
        "item": {
          "id": "2f34b9cc-1922-4f2b-9945-f2c8acbd4b07",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dce14742-33f4-4779-8738-426dcfbd4f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321319ca-cfaa-4770-9b41-5c792186d18b",
        "cursor": {
          "ref": "8e6a53cc-bff2-4584-8838-513c52046c00",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "adc8c762-2ad7-4fd4-996b-03ae95aec83e"
        },
        "item": {
          "id": "321319ca-cfaa-4770-9b41-5c792186d18b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ada6ac3d-2910-4c6b-8bc6-94ce3447857b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cb0f08-c7c7-4afa-a89b-9f4a16e20161",
        "cursor": {
          "ref": "d9832bb8-1299-4410-bb88-b74c89b00e3e",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e6df049-5b96-437e-abef-2a9c291abcc8"
        },
        "item": {
          "id": "c2cb0f08-c7c7-4afa-a89b-9f4a16e20161",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bf12d13f-a020-4d15-8735-f82b6bc09c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3efa9b6-ea33-4b7e-9259-910acc0f85b9",
        "cursor": {
          "ref": "ad429805-7962-4b4e-9e10-ff66f7a1c0e1",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "db6c29f2-dca7-4a26-b746-c6291a08efdf"
        },
        "item": {
          "id": "a3efa9b6-ea33-4b7e-9259-910acc0f85b9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ff0a40eb-3ee8-45a4-a891-accfc91367fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbfd875-0b83-48bd-a260-48b4bbf974fa",
        "cursor": {
          "ref": "b6db0b04-8850-4b93-bc9b-d8f40b6515f0",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "06dbce0b-eabc-4a51-8cad-c5606f963316"
        },
        "item": {
          "id": "edbfd875-0b83-48bd-a260-48b4bbf974fa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e0ea017e-3466-402a-85f6-6b1aee3a348e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab41734f-5bc7-43c3-a43b-1cadb917a229",
        "cursor": {
          "ref": "83388886-84fa-48b4-8b17-78f041f7b9fd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f063ed0a-4e49-4376-b415-b7e672f7c523"
        },
        "item": {
          "id": "ab41734f-5bc7-43c3-a43b-1cadb917a229",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c01009c-33ee-412c-8c4b-311d89af6855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e01b4f-0bf1-42eb-bc74-bc7752ef8e23",
        "cursor": {
          "ref": "5fa4750f-770e-400d-83fa-391aad57ec75",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "938042f3-87af-47e0-8106-08de33d0e278"
        },
        "item": {
          "id": "65e01b4f-0bf1-42eb-bc74-bc7752ef8e23",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ddaae109-a164-48d3-8c9e-be618bad3059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a6c1b4-33cf-44f1-8501-6df37b90950c",
        "cursor": {
          "ref": "f2ccc66c-945b-44cc-9f52-6fa8da897059",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f4a8b520-7d2a-4a4e-9956-fa74a2fd8440"
        },
        "item": {
          "id": "25a6c1b4-33cf-44f1-8501-6df37b90950c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5ab69342-ee88-4f83-9bef-866df8898a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155c3e7-5638-4cef-b73a-fbf008fc581f",
        "cursor": {
          "ref": "0712453c-1cb7-4062-9f23-d9bc82461af3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "53ec57c8-08a3-4577-8987-8db4c0ff2e73"
        },
        "item": {
          "id": "d155c3e7-5638-4cef-b73a-fbf008fc581f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8cb8eef0-badb-49a0-9b67-8c37c96a8cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca040f7e-b080-435e-a07a-00c4574a50a9",
        "cursor": {
          "ref": "1b216797-5296-4b3d-9fcd-9c4ff2d7d4ba",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e3ffb245-d48d-4ac8-b8ce-3fd9586e0b85"
        },
        "item": {
          "id": "ca040f7e-b080-435e-a07a-00c4574a50a9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "88dccd11-a438-4bb6-aa53-234ac7dd067e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4145f5-4318-4f45-8f63-40dce2e53369",
        "cursor": {
          "ref": "6514665d-e7f9-4a42-8905-e15119352e4a",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5a757689-2df9-493b-a9a1-045a08d821de"
        },
        "item": {
          "id": "1e4145f5-4318-4f45-8f63-40dce2e53369",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e7ee278f-03ec-4b98-b0ff-1f91991141f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7681d4a1-ff6e-4585-bd5d-5d047d841640",
        "cursor": {
          "ref": "851b25e4-9466-425f-b467-1e081b807e31",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6744122e-a7d7-4e15-b0ea-8670ab794eb5"
        },
        "item": {
          "id": "7681d4a1-ff6e-4585-bd5d-5d047d841640",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "22e8f235-3310-46df-bf2b-49983e8b7405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af20b63a-d0d8-4017-bde9-9c5524e52e85",
        "cursor": {
          "ref": "05e08164-46fe-44c0-a749-4a9d72d06c4f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e658a4ed-6a23-4ac9-8d9f-f5289fb09055"
        },
        "item": {
          "id": "af20b63a-d0d8-4017-bde9-9c5524e52e85",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "06754cba-439f-40a7-991c-f5545b64ad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5797e9-9fd6-4f03-ae8f-465d8859be57",
        "cursor": {
          "ref": "72c02879-022e-4c76-9af1-a05bf74fde34",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0ddfb91b-8b0a-40df-b74f-8798606472ec"
        },
        "item": {
          "id": "ca5797e9-9fd6-4f03-ae8f-465d8859be57",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "78380b53-8f51-4805-a780-fa179612f450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3871b56e-f185-4f1f-846a-08f34e172834",
        "cursor": {
          "ref": "77d6d315-79d3-40d8-90dd-5ae18ac8da99",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9f94e00b-d776-4205-a4d9-7f1385a784a4"
        },
        "item": {
          "id": "3871b56e-f185-4f1f-846a-08f34e172834",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a1471cce-2145-4363-9765-923efe651ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3500bdfd-b830-49ed-8fce-3e181b8b62ca",
        "cursor": {
          "ref": "9a7f8c28-fc7f-428f-85d4-17db50f43f1b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c7becfd-5249-42e5-9d92-2b061814afd6"
        },
        "item": {
          "id": "3500bdfd-b830-49ed-8fce-3e181b8b62ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "79f1a481-06ef-4174-bd3e-40939d29445b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d30f44e-41bf-47fd-848e-6a9308fac1b2",
        "cursor": {
          "ref": "734c5ce9-fe80-43d8-bb33-930d74cbfd56",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5bd69c01-6236-4b0b-8511-21c209a53fe5"
        },
        "item": {
          "id": "4d30f44e-41bf-47fd-848e-6a9308fac1b2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f5ae9047-759b-41a1-b930-af791b0ba33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d174c415-cd97-448a-b7f6-68e1f80e56fb",
        "cursor": {
          "ref": "2b5bb0e6-1c33-4110-b240-26e20d5e33f2",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ad5dc3a2-00a8-4bc3-ad00-1b35d1ce6bff"
        },
        "item": {
          "id": "d174c415-cd97-448a-b7f6-68e1f80e56fb",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d30cd90-3d70-46e2-a59b-8fb90eda23ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c480d413-1f0b-454d-a9b3-e7487e119a0a",
        "cursor": {
          "ref": "e38bd0e5-731f-4738-a2db-16859a98c927",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5099ca91-07f9-4b65-b82d-5469d58e0130"
        },
        "item": {
          "id": "c480d413-1f0b-454d-a9b3-e7487e119a0a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "25bbc757-bec3-4abc-abc4-399ab7171379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d016e36f-2e89-4b97-b832-c1fb38c17def",
        "cursor": {
          "ref": "ac6cf898-3b81-4e85-a72a-64cb55d29d23",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "84fff2d2-231c-4a6d-b657-35a9da26f3fc"
        },
        "item": {
          "id": "d016e36f-2e89-4b97-b832-c1fb38c17def",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2e41027e-e2dd-4e70-a84d-73ba11ed7a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195dcbfe-bb62-4d58-a6ee-9dfd52237354",
        "cursor": {
          "ref": "322eaa74-7a1c-40ef-a6e3-d0eeda36d5c2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3b430d3e-0412-49fd-aade-0dc47ff6cbf6"
        },
        "item": {
          "id": "195dcbfe-bb62-4d58-a6ee-9dfd52237354",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "540b6a3a-e706-4c9e-843e-a8c1c168949c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1845f934-3bb7-4c53-9097-887e7b4aeacb",
        "cursor": {
          "ref": "33690ccd-d2df-45a4-ac64-c1598081cfcd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4d842f28-5959-48ed-86b1-4d33425a1188"
        },
        "item": {
          "id": "1845f934-3bb7-4c53-9097-887e7b4aeacb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "30704b82-11b7-4e7c-a419-4bf1506331b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa696bc-3282-4616-b855-e54f8e110ce3",
        "cursor": {
          "ref": "9a2e4a7f-ea4b-4696-b0f3-5eb6d659b053",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "590a76f1-eefb-4b92-9ebc-775741d70efe"
        },
        "item": {
          "id": "2aa696bc-3282-4616-b855-e54f8e110ce3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "98e0c20a-a71b-4e44-8384-546d9ddbf927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd16acbb-a465-49dc-9675-825ed13e954e",
        "cursor": {
          "ref": "a14dfb1b-c24f-4704-bbd0-7f92ed93d62b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "652ecb8a-17b8-4ace-a137-8db2d34aaa51"
        },
        "item": {
          "id": "dd16acbb-a465-49dc-9675-825ed13e954e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b6e0bf2d-47a0-42af-add7-aed0ba7e757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cb9676-23ef-4b62-9a76-8d5ec18638a8",
        "cursor": {
          "ref": "47674af0-c53a-47b5-bbc3-2d7d66d9b7e7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ab15be3e-d05f-4065-bec5-31bc12e4b2f1"
        },
        "item": {
          "id": "74cb9676-23ef-4b62-9a76-8d5ec18638a8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "31b668cb-ae06-41a2-a5f7-7e28a6b5e2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06c729b-af30-4c48-9f01-30e3c7ea44ec",
        "cursor": {
          "ref": "900f7be9-68fc-4b87-b615-b34ae43ba741",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "75d2b224-0f1d-444f-9eb0-9646328c74c6"
        },
        "item": {
          "id": "f06c729b-af30-4c48-9f01-30e3c7ea44ec",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8646bcf3-27b5-461c-b41a-7faa494334dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5779ab7a-b2fb-4a1c-b755-a3e6b5defc9e",
        "cursor": {
          "ref": "2a111778-f343-480d-90f4-f4135c0b9a65",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c88a53a2-4b87-4c94-b368-229cdb292649"
        },
        "item": {
          "id": "5779ab7a-b2fb-4a1c-b755-a3e6b5defc9e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d9e342ea-75b5-4469-963a-348696841076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15786b94-aead-49a4-b491-1564cd225555",
        "cursor": {
          "ref": "5c95247a-1bb5-4e6c-9e9f-8c2034b5284e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b65d5cac-b9ff-4c34-ac7f-1fd45eba4c85"
        },
        "item": {
          "id": "15786b94-aead-49a4-b491-1564cd225555",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fae5aec1-94e2-4d93-b596-ecfca021188a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91626af5-f86b-4a94-9e3f-97983198fdfd",
        "cursor": {
          "ref": "96399126-eaee-420a-bcf8-3a12c77c4fea",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bad65348-c888-4b14-8599-b2d2c7e4310b"
        },
        "item": {
          "id": "91626af5-f86b-4a94-9e3f-97983198fdfd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a87c248d-1c8a-4ff7-a320-e77a379ee046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a76dc88-3f14-48d7-9b7a-5fe41901a26f",
        "cursor": {
          "ref": "2e1231b3-eba0-490c-bef2-2eade60c70ed",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fe20f1b3-218a-49c7-b593-32102eccc724"
        },
        "item": {
          "id": "9a76dc88-3f14-48d7-9b7a-5fe41901a26f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a2cce026-2fc8-4ca2-98af-7fca2ce6bde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965a998d-2221-4f34-bf8c-2eea79d92329",
        "cursor": {
          "ref": "3eeafef1-42b5-4f60-9d8b-db26656b32c3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "201d2d71-5699-4482-873f-8fc00ba21528"
        },
        "item": {
          "id": "965a998d-2221-4f34-bf8c-2eea79d92329",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3cba7278-94cc-401f-bc83-f9b2340699cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa78702-e3f3-4c4a-b6e9-de9d990f2424",
        "cursor": {
          "ref": "e421a8f7-3d8a-407a-9fce-7809880abd8d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bbfdbc49-3f67-479d-9e46-3bcc9de3b80a"
        },
        "item": {
          "id": "afa78702-e3f3-4c4a-b6e9-de9d990f2424",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1b1032b0-db5e-49a8-882f-037737deacfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979e51a8-519a-4525-a085-a7e98bf1fa75",
        "cursor": {
          "ref": "a0205398-263a-4d3c-8692-61bab067a6da",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "abecee3a-5b35-481e-ab43-107a4e9069af"
        },
        "item": {
          "id": "979e51a8-519a-4525-a085-a7e98bf1fa75",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "15466f24-8b45-4e7c-84b3-ca196cac74d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e012261-4970-480f-92eb-a91fbc708b20",
        "cursor": {
          "ref": "1a392ec0-58c3-4056-9ae6-d78d8ec4ec7e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e70cf224-e0cf-45ca-b6f9-0c3e9afd81b6"
        },
        "item": {
          "id": "3e012261-4970-480f-92eb-a91fbc708b20",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bfadc794-6aa2-4ca5-b219-98ad21739410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f842c425-8448-4b52-94e0-7ea037fc0b3f",
        "cursor": {
          "ref": "aa2e9530-d0ea-4854-abc9-e0b023abc9f5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8f67b2b0-94cb-4e36-8af5-d849a1870262"
        },
        "item": {
          "id": "f842c425-8448-4b52-94e0-7ea037fc0b3f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e8ecb1dd-b362-4a2f-a288-b5b43bf91f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b5cdb4-9a86-478b-ab6d-8ad9d32e14f8",
        "cursor": {
          "ref": "52147f05-11c2-43f3-848d-873be4a1532b",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "56bf2b97-9494-4045-916b-383e8e603a75"
        },
        "item": {
          "id": "c5b5cdb4-9a86-478b-ab6d-8ad9d32e14f8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "3b639268-0c0d-4bde-b457-8f721b57b448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62deb19c-447d-42ed-a4dd-51d62e7104b6",
        "cursor": {
          "ref": "f2be3509-2095-446b-9251-82124f809aa3",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "de67d204-2ba6-4962-adc1-ca52198efecb"
        },
        "item": {
          "id": "62deb19c-447d-42ed-a4dd-51d62e7104b6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b631b9f5-be3e-4564-86d4-575d6c679175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980630ef-e068-477f-b47a-cfe78e9a8128",
        "cursor": {
          "ref": "646e0904-2221-4c3c-bcfb-fb31ffcbf802",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b089aa72-ee92-4988-a812-8d9fe7256d40"
        },
        "item": {
          "id": "980630ef-e068-477f-b47a-cfe78e9a8128",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2ef7940a-da60-431b-a323-fb19467d2c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7f5339-33c7-45f8-aebf-84b69180bf3a",
        "cursor": {
          "ref": "156f5a03-54ce-420a-8a8c-a99ecdae2b56",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "aad9eccf-2a22-4600-ae92-cb8828ca4336"
        },
        "item": {
          "id": "9e7f5339-33c7-45f8-aebf-84b69180bf3a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "76810c34-1ad3-4f7a-a91d-2d2070402ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fba681-2de3-4948-97e3-795726299bca",
        "cursor": {
          "ref": "7269bc3e-b1ab-4b86-9fa7-aceb25079c0a",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "463dbec5-f895-42ff-8469-c63a60eecb12"
        },
        "item": {
          "id": "42fba681-2de3-4948-97e3-795726299bca",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0001f120-20a5-4767-896b-d355d08fc20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0472a4-006d-4cb4-b605-033d80da5ef7",
        "cursor": {
          "ref": "b287f69a-f90f-422c-81ae-764954c4a456",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "6839a342-03f7-4cf6-ac5c-a0ce15aab562"
        },
        "item": {
          "id": "6c0472a4-006d-4cb4-b605-033d80da5ef7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "46bc813a-61a0-42d4-bd5c-0a823626c4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca49fa16-2913-41c8-bbb7-87332834f852",
        "cursor": {
          "ref": "56d44629-1122-4115-9007-a6c8952b35c2",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d5ff9792-bec0-486a-a07d-e84e0a85d496"
        },
        "item": {
          "id": "ca49fa16-2913-41c8-bbb7-87332834f852",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "913c7230-c8a9-4f99-85a4-479d674ef134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76df5e6-2d63-42fd-84a3-746ea55d77b4",
        "cursor": {
          "ref": "dbc60549-29df-4ca6-aa91-d97269774d43",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3a243687-f76e-44c1-b078-f2bb5d81aa11"
        },
        "item": {
          "id": "b76df5e6-2d63-42fd-84a3-746ea55d77b4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "23f35b7d-de42-4dcc-9691-a1a9fd47c546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf50f464-905e-473b-829b-73324f557131",
        "cursor": {
          "ref": "d46a69e6-771a-4679-adee-79ce17820c05",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bf589c9f-aaa5-40a2-91a4-7cde44f675b4"
        },
        "item": {
          "id": "bf50f464-905e-473b-829b-73324f557131",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fe19e0ca-3fa8-4148-929d-80cbc1afca69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfe486d-50b1-46a7-9573-e435449c77c0",
        "cursor": {
          "ref": "c4bacb1b-78ae-4aa0-836b-cb28af3e6ed4",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7dc2a3a1-8dad-4175-a129-77086bf2c3b7"
        },
        "item": {
          "id": "5dfe486d-50b1-46a7-9573-e435449c77c0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0fe125a0-7ebd-41d3-9cb9-afaa14ce616f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27a46ff-6f8f-4ce7-ab47-465a4b45a15d",
        "cursor": {
          "ref": "7107a639-874c-4bd5-b5d6-b8b849474b2c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d3e99f49-3083-4ef2-993d-d1304016e2b7"
        },
        "item": {
          "id": "c27a46ff-6f8f-4ce7-ab47-465a4b45a15d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "251361d8-7660-44b3-9ed0-7c68b16d3e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a4b00b-ec45-41ce-88ba-37a0bf604164",
        "cursor": {
          "ref": "cf8dabe5-a747-47f7-83bc-e0196a81e22b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dd3eca62-d719-4c2f-9ee4-765e3f9f0766"
        },
        "item": {
          "id": "42a4b00b-ec45-41ce-88ba-37a0bf604164",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "819dfc3e-9192-4f8e-9e9f-988522b040da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1eb7d6-aade-45ce-bd01-1730e65b97c6",
        "cursor": {
          "ref": "195ed78b-98ae-4af1-932b-a2bbece91b2a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0dfcc4d7-70c7-4bc1-b489-c3f366227e23"
        },
        "item": {
          "id": "fb1eb7d6-aade-45ce-bd01-1730e65b97c6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "401c919a-9441-4e4a-a4a1-c67274535cc5",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fece4c5b-a870-4ecc-b36f-6b27bed19dac",
        "cursor": {
          "ref": "c33172d8-a32c-40db-b597-768f1ccdaa37",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7c682448-01f9-4d53-a47d-b0a04ccc88ba"
        },
        "item": {
          "id": "fece4c5b-a870-4ecc-b36f-6b27bed19dac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2d2a9f0a-e82b-4a36-8178-4f56185bb195",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d2a168-565c-4e1d-9d4f-8405738534d0",
        "cursor": {
          "ref": "7d7e16b4-14c7-4e6d-a4f5-3df6f39a2139",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f5672c2a-5979-4d8f-ad82-a7c192395445"
        },
        "item": {
          "id": "23d2a168-565c-4e1d-9d4f-8405738534d0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0902a874-f2b9-464e-82a3-68731a454952",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fe1354-a49c-49bf-a01d-b47b65816cab",
        "cursor": {
          "ref": "e65c2262-5a24-4bcc-b67b-9636621003b1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "093d7f41-ddf3-41f7-8c2b-f0cdffb4172d"
        },
        "item": {
          "id": "a5fe1354-a49c-49bf-a01d-b47b65816cab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "482f5ae5-34ce-4206-8304-d4f2348e2b74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fe1354-a49c-49bf-a01d-b47b65816cab",
        "cursor": {
          "ref": "e65c2262-5a24-4bcc-b67b-9636621003b1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "093d7f41-ddf3-41f7-8c2b-f0cdffb4172d"
        },
        "item": {
          "id": "a5fe1354-a49c-49bf-a01d-b47b65816cab",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "482f5ae5-34ce-4206-8304-d4f2348e2b74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951d79c-6a7c-43d0-ba85-8ee869158065",
        "cursor": {
          "ref": "60ada82d-e96f-40a3-add7-01e0718357bd",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "390107d5-135a-49f6-b7bf-87e2a10e5f19"
        },
        "item": {
          "id": "8951d79c-6a7c-43d0-ba85-8ee869158065",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "293681c3-6c54-40c9-bd1d-68a3cf5244d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c02a60-6796-4b09-a0e6-c23dcf87f002",
        "cursor": {
          "ref": "21140d8a-da4e-469b-b628-e85fb9245d1d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "23835741-e445-40a8-a6e1-55076527af3a"
        },
        "item": {
          "id": "01c02a60-6796-4b09-a0e6-c23dcf87f002",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aedeb201-0d54-4161-ad82-a5ca8a558e2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}