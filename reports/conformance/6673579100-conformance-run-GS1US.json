{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "013a4374-4d1a-471c-9d12-9244bf37e777",
        "name": "Clear Cache",
        "item": [
          {
            "id": "291fadb2-4b4a-43db-9f05-488cad847329",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2162feb0-781c-4269-bb56-016f41fc235d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "465dbc2e-bb7f-44e9-aeca-09afd997a811"
                }
              }
            ]
          },
          {
            "id": "a73bad3f-0717-4ac5-b362-60370a362b04",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae6b9b23-1f05-4016-8469-1ff070f93c4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac69ccca-e542-4cbe-aef6-031041cec589"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7a7e0e0f-d38d-47fe-9411-27f1adbf0f3f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2a84321d-3eb3-4d39-9679-c7d98b3d89b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d20d8e42-e0a4-47a8-b03b-20e0b25eaa66",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1860239d-6e30-44c1-abfe-9d39aa0088bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45de205d-a6ab-405e-9dad-7993665ded85"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "04b144da-9b9a-4ad4-94c1-33769e6c7d25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56250f98-aff6-4010-97cf-af1ee7463dcc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "962f2890-40e8-4e65-9849-9df0b4288d46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ab0ed62-a4bc-449d-9587-3bc5f6dad9dd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a099b13e-380d-47d9-aa7a-3b8e002b75e7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86c85dd0-78c5-4706-9a09-6dde69b6ac87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d3a52fd-e1dd-44ab-afa6-caa678489388",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "228d9535-90c2-4123-83a6-dfa66bcc85b5"
            }
          }
        ]
      },
      {
        "id": "5f779b5d-10e8-4464-a7c4-9ebc67c70ab6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "00e61f1d-fce5-46d3-bb9e-c8b52f4b2c7b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c60f1dd-0e7f-4a8e-a29e-0d0801ee02b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af4c29dd-353d-432b-b661-6eed00d5890a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0dca2d-d365-42be-8020-a27a59ad2025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fbb1379-8b81-47a7-8865-5edb0c1e51e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25f1e85-e6a5-44bd-b658-7de4e4f1a344",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a957e0c-3268-4041-9625-57105783a6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22568e9a-7235-4ec7-a80d-5dac5df54368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bf687f-5796-4d98-ab1c-7e6b7df6fe6a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7923bc1-1d0f-4746-9fd6-8cf931b914b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50751732-2484-4a40-af3e-f82094e4db43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7a5addca-45c4-4796-9d90-720eb6ff2f7a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "483046d6-fca4-478a-a37b-9f185996c514",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3803304c-4529-402c-9d28-8b5d14c97efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b1df92a-ff9a-4562-9a13-f872549410a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a8759-0811-4960-a341-30ecef64e3f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4bedca-b597-4dbe-81e4-30113f111f96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "575372ec-4dcc-4599-a23d-5be9f55ac177",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2730645-984f-48b1-9f81-095c3c2364bb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b05aa534-7eef-4fe7-9a2e-471967539048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c8f38297-67e9-4068-9d34-2b71554bb7c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae1c6011-921e-497a-8ece-cd19fe9a3bbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "780f4bd2-5e97-4f87-8234-22cfb756ec61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3096429-6909-4f95-90dc-da8139d52ac8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31af0e05-a2cf-4304-8e9e-b9e4b9ef0c1e"
            }
          }
        ]
      },
      {
        "id": "84cbf823-24f6-4c6c-a147-3d77da364494",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f073e733-b387-4986-88d0-5e9e43d8c26f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f5c7182-a51a-479f-a156-747058151d6a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7043101e-03d4-465e-b903-98980070a7b7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6bbc92-334b-43f3-aac4-0de4865a8833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ead651a-eee9-430f-bc31-7c7528853048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23676c7-5b81-42d6-8f2d-feb6dd66afff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "465bfeca-9f75-4504-8e7a-b54ad99b0963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772e2dca-89e5-48ca-b06c-9f9484cd1540",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0290ff03-c60f-4cfb-9267-64970bb0833d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4b2d57-3c9d-40f2-86fc-24e83a18ee43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dd4b84-6588-4e39-9508-af5535a9ab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5f550cd-22d2-4f56-9c57-e9b400a73684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17760a9-9ce3-4126-8251-6a4a1b07e1f3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159f513b-c837-4a34-8c12-30556c69d252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f52b83-68b1-40fc-8676-92a90149b08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7e4ab7-5bba-427b-baa9-f5d3f2d4f1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8de289cb-5afb-44f3-a5c3-a850b1ef7c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ef2f90-f4ad-4e34-9010-664ad5378f70",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38160f19-5210-449b-99ce-88483d7279b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7920953-a8b5-48e2-989b-b008e09bce01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0457510-706f-4944-8957-17a0a2b1d458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b16155-ce22-42f1-b94a-25b74450a362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c41cfc3-14aa-4bd0-aac3-5194e8446e36",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92989a76-6d20-4594-8c6b-b464d2da9e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a09a56b-cbaa-460a-89ba-860953381804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d2d1bb-ea15-471d-a59e-df784a072d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c49e592-fe26-4161-b66e-17a3a743dbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b43709-b34d-42c1-bc29-c89597a1aef4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070614cd-5540-4876-9868-45d96e2dc2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c031ad1-0a39-42b0-8d9b-6b03467e178d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9646dacf-a070-4eac-b860-a4d25f05be37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cd47065-6b17-4fa4-8264-47a88a7e0787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5511b49b-28ae-45b0-9959-bb8ee1593ac3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eccf742-5e4c-4df7-bfac-593d14cf72cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f6195f-c5b7-490e-a37f-c5fba9482345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bf9202-a22e-4d37-9808-0e18e362f7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bced881-cd9d-4739-bccf-b42427d84fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ddc138-4549-4176-a32d-1cd38ff25651",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d34be18-3290-4aea-bc79-a1202d5c7fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969b31b1-04db-401c-9c84-7005166da4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf048f1-5a02-4855-a088-866757d5c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16059225-3fb2-4d66-8302-0d846bfecd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bb751f-94ae-4b6a-a4b3-00edad80b686",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd94f902-9ee7-46c4-93e7-57bbdb5a8ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0254de71-7c54-4441-88e7-84094a5cee5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5134c6-ab5f-49a5-b046-78f0a98b7503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1e69ddc-7101-4c06-904c-4929356162c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d0c1fa-df13-4059-88f2-e134db7a94bb",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac14dcd-9d50-4a3c-8def-01e855574319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2261563-add6-41be-8f7f-35c3b8ad9d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b42617-785d-49cd-abc8-b0fac6d20dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b04b35d-37ed-4ccc-a45c-91b26c873bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978b20e9-6a1b-4ec6-b3f6-2465dd8a7107",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "396b5798-0793-48f3-88d9-fabdedb60155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888e4173-1804-4704-8af7-770cd1bf0f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cf4246-04cc-42cb-a154-46fc08f8707e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfdf0bf3-fabf-4d36-b2de-ed1bba4b4296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce4c67d-cda9-4524-b68e-bfcc6ecb65b1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ffe574-f418-4fa8-8aad-eba54f8390bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a966b8-a476-436f-883b-4cec464661e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92f99bd-773e-4258-8140-df8ebddcb943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db536582-ad4c-42c5-9c2a-b7b6d03b2817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c659b1-299a-4679-ad7d-8dfc15aa66ad",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5e7ed3-e69a-4290-b953-e45dc20fb20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafed57e-25fe-4d56-97bb-c47a671f35f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61838ecf-3187-4fb5-a828-af76a0df20dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "835eb44b-af27-4bef-b96a-493a8b7d073f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796ef169-7e81-4e2f-ae22-7d3afbd9ebd5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1333cf47-fff4-44b8-acfe-1d3de853ed9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc10b14-3bf7-4d72-afef-eeb9e45d7cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6174a5c5-53f7-4ba9-a4c7-ff9463bbd7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86072592-6208-4a83-9028-079b8f46e901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5257f6a9-7a9a-48ea-a755-950f087db347",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b22f8-02ff-475b-958c-807609deee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f01d201-5ff3-42d9-86d4-ff785caa346f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80440ccb-1ded-4a4e-9cf4-6d58b0879cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4560ea89-e2cf-4b8d-a60d-85049f7f61dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c6ea43f-efda-4785-91de-170e05c0cad8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e9d1e4-74e9-439d-9899-667e89baa9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73642af-3df1-46b0-94bf-ab46f44e6a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0014539-5770-4221-bacc-df64f8bfc58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f8d247-aa4a-43a5-9854-7d28610dd477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c554812b-b4cf-4a30-b2c8-502daeed3249",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8f3ead-18ad-474d-9b2d-63da64b82507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfdfcd92-7a54-4055-9412-cef0add86042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8c255f-be79-4401-9e77-8a4abebc28b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6667c7f-5221-4acb-8cdd-a19183b0c809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c1f4df-e916-45c6-86f3-846be1a74c60",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba3ed5e-e32c-4464-910b-b9094643129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b287ca-502e-4fa1-b73d-f38f6ca58c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470172d2-5f20-4c34-98d6-b39404808d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eae824d-ef22-4c1f-b6d5-e5d3893465b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996a54e4-404d-422b-bd41-45421fff3150",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3201cf-94cb-4610-ad24-dff20fadbb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34b4b60-fed5-48d7-a75c-53b06ecd7b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c62c6c-c6ec-4fbd-8722-51005f6dffbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32525817-0ae5-4afe-bb66-e4e792f9c8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cbccff-fa18-4819-a733-973dc453afba",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f34fe49-b069-42fd-ba39-5487abdcf418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783166d5-5142-45b5-8a9a-2f2539ce7c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123afb58-cb85-477c-b15b-ad7f2380b803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edea36eb-1d58-4b63-8b95-c4da3f18d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b331267e-c407-4eff-b201-e2d1f555d96a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be46fd0-e55a-4a4e-8c52-a05aef53e60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6e7c43-991b-4b68-abd6-f40a8c5d0199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf779079-1406-40f0-a898-898e73c90c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "982af0a8-5463-4d90-b97b-42fc8bbf632a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24977161-c2b9-4620-987c-ab3106f1d813",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad832b9-a9f3-405c-9c0b-6ba9e730b551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4e2742-f3cd-4b08-8ded-157fe66cd796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87c1b0b-5a7d-42f4-8df5-57106aec1493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a764f13-d13b-4a76-851e-f38584427271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6747f4-7ab5-499c-bc45-2d8b28abb184",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c352bc0-96c9-4105-a9a0-e3f23676ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8a9bee-dfdc-4042-b37c-3d11eb9bde85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c67f1-c233-4859-8522-8db2e4bffba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6004463f-7b8a-4773-a445-fa897a0532db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a003d3e6-8b16-4179-8934-16cf1ccc6c30",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbeedb62-d10f-43ed-b524-643d3d53ec6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2810e209-d152-4480-bcd5-ff11420d9bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5129e89-d687-44d5-95aa-71bf1e1ee29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b178fc-6b7e-4d0f-9c44-7083e4dbed37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603bdc8d-c076-44c2-b272-80a7966de9b0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec839e53-4944-4924-8459-3596d24313cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9dc50c-7ed9-4059-a23c-5f3fcb4a9704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc6f58d-bc89-41c4-973e-7889f4da4666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8647477-6cc8-4c14-9a27-218013265ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087ef34c-13fe-49ed-afec-7745cbfc159a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a63c4f4-2f19-4711-b810-9d8b05be1db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6918753c-67fa-4019-900a-2d619e5b01c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36502d9-ffcf-458d-8851-4b9082e8c33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29dd4867-f6b7-437c-90d9-5806273a9ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ac2d47-ca03-4ff1-a808-73d38e71b8fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ec5544-c84a-486b-b6b0-8edb483b04df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f98698-1cdb-4607-9fa7-cf773ee24348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912a2f99-addd-4852-b9a4-00d30822d0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25da426e-e233-4cad-ad15-643ecefd922b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f90c0a7-2b73-4ee8-903c-0e9837aa446e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c68b47-b5b8-4f54-bb16-c977bcbb8ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98136efe-7873-43a5-9c0a-f29dd85ae4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477f25fa-fb3a-4db6-bcdb-2e2d1e569f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "512a64e6-49ba-4e52-88a7-92f266d5b924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39e39d3-c7c5-47d3-95d1-ee26bd08c294",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb1d128-340b-403f-845d-854c321c047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf05d6a6-708d-4e5f-bd6e-11b3bbd6d91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39eea78-e7b2-4469-b268-4052e29e455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea9dc7e-dfce-424c-924e-581c1abd7c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8622e3fc-14fb-42e9-82d0-aa6a30f2594c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0820754-8a51-4d20-b248-e7b244222f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d08dd84-ce50-4aae-9cdd-12879a73f60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca90efa4-3ff6-4d4c-b152-1e5b1fff3989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2342c555-3539-4b41-b3da-625cea260be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d78ddc-2a0d-4843-a95c-ce0b811fe271",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ffd1e5-1c94-4d31-a415-9db1db6c5e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc69537-970b-4783-a90a-efab6d292a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a74718f-824f-47d2-a598-9acc22068bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c116344-3752-42ad-904d-6fb31143dc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08288f5d-ba34-4641-b011-3398abbc24f0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d6acae-bdd1-46e3-85f4-806f021b869c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd285234-d80b-43de-98f5-0f26e45fb7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49adba10-8943-4315-89ae-c6d4570b07ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3bab71-158b-41a2-ac0c-1d04c33688d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ae2fd5-1697-4fc2-88f0-e87477923746",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53fec6c-6dc2-44f7-98c0-9cc5f5843b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a607f5-8914-459d-b7e6-6c191ae4e59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e586f79f-a618-43dd-94a7-40e27bda6fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "229e2e6d-a609-44fa-89b3-c5855746720a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cd9d77-e4c6-431d-a738-1e6490451ac2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de861e0-30e6-461d-aeae-1d3ccafb63da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2888d1a8-0d4f-4768-bb79-0271fd49c997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a9381-ad7b-4e3d-ab4c-bcfbf7d4696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c87d746-97f9-417f-a819-5c388059d45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5221d006-53ba-4c2b-a90b-b61a8ac44138",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c952830-754e-4174-8586-e5c1573fd7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a3d63e-7cd4-4ade-95b0-6751d0c8e274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8ce663-e5ce-4ac5-8654-e0a4ff35e99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "809a2df5-ebec-46ca-8faf-0898def35183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bd17cd-fe88-423b-907c-d22a2fd7e142",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a23ad4-6826-417f-8096-e963fe27ee55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6cd6082-e22b-421b-898d-478a1dd30a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38b659e-3fce-4f3c-a32c-1a148eb5effc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8915867f-2c53-48fa-851c-be86fccab3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebed640-f3f6-4b8d-980e-32298ee93cae",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76009730-a064-4f3d-ae13-b5d985105603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb228fe7-341e-4949-9436-f17bc97e4375"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b968c33b-67ee-464c-bf57-e40b52cb526c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb15561-e357-4b77-a073-7a63b926f9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095364e1-2763-4b96-861f-5ee50c72461e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683adb82-2067-44b9-9c51-53654000e377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f377ce0b-43f3-4a8b-b5cf-3baf9b3eaa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bc59f2-a0d6-4a28-b658-d5fccc6fc670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a7f52f6-943a-4428-bd29-1a72966c87a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c20003a-2aae-4f19-b619-1c0fbd2c37f0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66ca969-4fe4-4c27-af51-5de4fb8759ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85139b1e-47c8-43c1-bfe5-f893b36fcf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c762275b-8603-4840-bf0a-f18b68627e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01523865-0f8b-460b-9a02-b25386f3c49d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c574e-c392-4092-a25c-38f8f2551322",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cdaba5-3bbb-404b-8f99-09e9453d80a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b2acbd-ee40-4cdf-a985-c755fd423f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed620f84-2d92-411a-85db-f6a614b61287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51c0faef-2efa-4638-9b1c-7666f330a9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eaf3f3-f037-4564-a65d-f37f9f436cc3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa387e5-b749-403a-bf88-c8bb70656788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1983214-1880-4184-b406-ddff244abdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48371fd6-17d2-4ae0-be47-2dd0398af99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6e387d-28a3-404b-af3c-c6d01a8ef549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77841c08-89fd-4d43-8498-5111e3efb628",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1b2181-7997-4ef6-8788-6cb1d471fd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7acd1f7-0ee5-4e72-ac09-c5c5bdbd614d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ffc21f-37ce-41d5-93d4-b240e604dd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "106d0ee8-9163-472b-a7a5-04720897fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea71cac-f920-4446-a85d-54cd520177bb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6249b7d-b293-47e3-9c86-0577b8528972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3667cd-8c71-46e2-939c-9c36722a9418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc994462-3afc-4988-8757-c35800197916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75a18a68-89e0-40c7-b9d3-411e59827973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e2a8f0-f7dc-45c1-9d0d-52216daface3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b45bb4-92fa-4c77-8f89-679fb6136935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e472e53a-5213-4f10-915f-ef84987d94d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f21234-1d88-4cb5-93c5-949e98b4373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f42b32d4-09af-4dbd-ac22-2c9c9b45ad65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bcf7de-d18b-4a19-8da2-fbf1e18acc15",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90df8da-ac24-4dd4-a6f8-3aa13cafd8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186ecce2-f8a2-4b30-8850-9b894536bcf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0cc0b8-70ed-4ae2-b9af-13d1087896cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5188ad6f-4147-4417-b482-6529358769c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b681326a-8d64-422e-847d-df1da2bed8db",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165a3db1-617d-4b23-9da1-87b8eb4a1aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d5774a-9e07-4a89-adcd-7b5ea5a37c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52be2229-6f08-4fca-9e55-a49ed0a83018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d856ed01-dccd-4dc2-bf19-b96995758a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c645212-fbd5-4f66-9b6e-ade4a5749277",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd0a955-e4a5-463d-98b9-9184a72c6522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32d0d97-8ab2-4e0b-8c21-d2372e10af07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7b3650-d2a3-443d-b958-86e1b33c349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba0aeac-9622-41fb-ac3c-91ffc87ab8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e1e440-573c-4cf9-9184-f35f3949e9ed",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ccd55e-fa05-4f01-86cf-4ce62d559d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c06c19-7019-47e7-9d08-6c050fbe5ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a500d1ce-507e-4a35-8694-555f10c3a34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f801bf3c-3eb3-40af-8ac8-b25afdb24e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a3069c-ff9a-4656-96cb-abc000475d05",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe764823-e328-4e96-9395-d4faafb421fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545c0617-5571-4193-9fc4-38da8abc7d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d57294-b6e7-41b1-8975-79e522734881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "588273fc-05eb-4733-b3cc-ccba0d1b3177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21b7f18-4fea-4d11-bb71-063627dccbb7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79507e93-7494-4449-b821-f9ff82c4d811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa48257b-3556-4cd4-918e-846f343dcf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160b1b3c-3097-4b97-a8ca-e16d122dc874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb784e9-01b5-407a-a19e-bed61c2583e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417eb2de-d451-4631-8745-4919201874c6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5b3bcc-e569-44eb-89dc-393cf503aec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144cf48a-a208-4f07-802f-4805806b287f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ae90db-f410-42b9-9c4c-298cae7514d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "811a961c-30fb-4850-85aa-13dc1ab15bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2023f29-1158-43f5-a6f8-8e51d8eee023",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a623ab4-80c7-4f92-8399-89da10cc048d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd8b73e-0cf6-4a6c-89af-ba551b3646e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b42ca9-8883-4171-9a6f-c7c3cc129107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b4c168-4400-429c-adf5-653f9d13daf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4715843e-a941-4382-a24e-36b57233fc0d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c90ac2-a0d4-48a3-b98d-ceedac0b1c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605f0160-8834-4bad-99f3-3ec8f7f47265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efee7f07-c184-48ba-b04c-5f266baaaa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b550121-7aea-4236-b069-486ec1fa19aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71be911b-f37a-4270-9882-ac1c5689e44e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60fc86e-7f35-40b9-a72e-919c5621149e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3613b30-27ce-4c62-a646-cff5a3dac75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d9980f-8a0c-4ded-bcd6-022c89499ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18b965f-ea17-42a9-892f-194f20c33a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf6dde-cb1f-476f-afab-bf685ae21bbb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b172f082-6aaa-43e4-84ba-e984eb2462a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "279e69a4-b566-4912-83b7-5f587321f9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a664f63-af19-4155-bcee-04289a125a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b00b1aa-4ace-49e1-b555-3d35c0db33e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e968c8a6-74bf-45b4-ac1f-cd582fcaf5d4",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d4a7fc-6fb4-47df-b1de-636e7a675836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdcdb3c-af72-4aec-888f-4726c9111e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271b3b4f-96eb-475c-a066-d31d7dafdfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d573c06d-ccf1-450d-bdb4-4957c900ef10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdf806c-22a4-4f68-9bcc-6d542236119b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218ed7b5-8efd-4372-b34e-e649497d3252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06f4cdb-9d23-4a36-87ba-c5a35d225682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea699438-bdaa-447d-995c-c35f103f3a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ce0286-7316-4261-a45e-672ae4c3ef81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a790042a-362b-4595-9abe-86f544ee82dd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79220ea5-60b8-4fe3-b930-17c3cdf369f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46496d3-0f31-4a4f-aeab-0f6f83178fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6449664d-5898-4676-a56e-b857960497da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9132d8b8-5b66-4e00-9439-ca2493702098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38ba45b-48ff-4637-b0be-816f416a020b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cf1354-46e2-4e9e-b61b-f1a76e2550c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f94c36e-a758-48f0-86d9-8c243892d9d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33908ad4-4341-407d-a2fc-324355b3d42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a455625-6bb3-4c88-8f27-6f1e84bea5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbddc3bb-494e-4042-9e43-a388fa7bf221",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce55e203-5961-4140-abee-3b23d0e43316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57af1d69-a260-47c6-aaa4-caa2877a95d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e147a5a-68ef-4145-8a74-605e02a8eb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3128281f-ab74-4fea-a51a-9393b6fbfa7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085321c0-ccd3-4837-a9e4-9730a842e1f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b6096e-dcb8-4f97-ab89-4e34ed99b763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c42a98-2e24-4e3e-8850-59cd39fe9c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0daa19d-4c51-4487-ac91-efda6e512b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "29bfbea3-04fa-4472-bffa-42badfdb6f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0f126a-b1da-4248-bdf4-7ff40c823c8e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77c574e-3cba-4ff5-b219-c83d7d58f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b807dec4-aaba-4cb6-b32b-f594b4fc493b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f235fe2c-dcf2-42b7-895a-85a3b31eb74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c377d8df-735c-4345-aec8-0cdd955ecf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc62f64f-3208-4a3c-8c46-d6e2ce6412f1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee1dbbe-68c0-41a0-bc6d-aa9d66d241db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791258f6-0588-4385-aa8a-3a4b52c392e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f23ce0-5c82-4e01-9f8c-29d570f47dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1523a34e-0b5a-4ecd-84d7-a0ce3cca1571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b990628-b3a7-423e-b2ba-6faef7009052",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b837288-9d46-496e-a9fd-d8473b3d4bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e168b-b5b6-42f5-bd97-2cd114c89ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d07dd1a-2e45-46da-9d75-4822d522c818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98f9b3c-1d6c-4000-bdaf-8b7dbcfce974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d669e356-f794-47f1-91f7-0abcc5240849",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2d2b84-9c7d-445c-9009-de62811d42e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c3e850-5975-4367-acc6-9c3f12bbad58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bcbd31-4763-4ba1-8e90-ca50b065b51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07d5c55-8535-42bf-846c-b24beaf73bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d606d91f-52f3-4163-9448-121b29d449bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdfaf03-2868-4056-b47b-2da4e890bc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b3bcf9-b96b-48a6-8e86-41fdf0bcf9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760f25e5-d4b6-49e1-8cbb-d1b3d366889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed89b5d-bc07-42f4-b291-8bd69c58709f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f775e096-4658-4149-821d-e41c6d3df675",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cd6078-7b9d-4e71-92c1-29a104719fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c9d658-ece7-4069-bc35-a7f2c7b2b29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf072c5-66dc-4528-ac17-2ae84d60fad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdc899a-2606-4004-b04c-eb7dd6496192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8700c08-10b1-4790-9b28-b4e2f9de5b1e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544caa5a-60b1-444e-9fa5-d3197e4e5c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d256c76d-f1e1-43d5-8df8-bfed805ec148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3907c655-7322-4718-91b8-007d1023785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9632ad-cde6-4275-9906-34776a61f02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3b1d20-b315-4ec6-9072-907e54cd0459",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2361fa-5a15-4851-884d-68de77942e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840a61b7-849d-4be9-9bdd-6fd1ee04d9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e34cb0d-835d-4b10-a592-e8df5e4e8657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2f81b5-f53f-48ae-a52c-f17855809f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffeed98-43e3-4061-9747-a1ec01caca9b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff50cced-0071-4eb9-a987-8b27f2ab39d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12815af-2ed7-447e-8480-7276cfa83c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8f3509-655a-40c5-abf1-cf7144f029a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa44dc0-b41d-4a1d-9cec-b3cd84d33f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abef473d-120a-42e7-b27f-b4f5b0fcff2d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70657b0-2317-4391-923c-c3cbe2ab087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f16c663-d396-4656-ba09-6903c3caae41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee240318-28ab-4eb2-832a-25d006e8f868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "524a2950-ca0c-49a1-bbc2-2ef9a9e4d4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752bbf4f-cb53-4e29-8159-3dfa420e2b64",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2393e320-13a6-4085-a4ff-e2a97b65c1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc81e3a5-4a80-4349-a9b6-90b41265cce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516feb5c-8da0-403a-90f4-c117bbae7bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7317e705-734a-47fd-ac76-7435f09f2a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8bd666-5d7e-4d49-b63d-e023e3f5a237",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c857aa9e-935c-4f74-886e-108b0c85b40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b7112e-9097-41da-a974-6be76d686112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b05d8b7-0b33-4b36-b4b6-776fd356f294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f82b93-ed44-4246-9c81-764726b2566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5acc403-7f0d-409b-8bcb-f966fbb81d99",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a617ca88-8932-49cb-b9e9-5a1cbec27e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c65f876-800f-4fa8-84a2-4e61b5909630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7c26b1-9e6b-4365-9f87-573537d6fed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "738c2592-c9e1-4f25-9388-884be7a5915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b238f49-f0c4-4c4d-84b0-252709aa3982",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd5e9eb-9cfb-460d-8cac-caae1a16a1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc90f42-087a-4579-b18f-c438bb6e2fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fb48a0-eb35-4d29-b25e-4aa82785e5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94c3227f-13f0-4ae0-a248-ce4261777d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0376146-b6e9-4daf-a931-a945b5b32aff",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94298419-dac2-4795-8387-5aab93abf644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1961071c-e4e3-447f-b694-a542f536fc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8f0e3f-e6f8-444e-9c92-6ff61e0463a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba233ca7-c49c-47c7-a524-f9f73d41c718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c4b4a1-835d-480f-a61e-afa67b02940f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaf7f43-9a64-43fd-9c4c-1f91ef939dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3466b174-d773-494f-b206-eba1c1627d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2edd95-2625-400b-83d1-0c83d2cf5288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2331b5de-a1a8-42d2-9944-23e7ca91f875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069b064f-c78d-4461-9918-a442eb77d922",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8baf67-c9be-458d-a821-a96d45881128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0a701e-9392-469c-a3fa-6b026fefe0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f983cd-c132-43fc-bc32-e0e4e6082442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde54446-d14a-4368-8300-f1297ce185e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dffd0e3-feaa-4b3e-ada0-8c40ac38318e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ec780b-3d0a-4291-b593-5453f644ac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f1042f-bcb7-4c0f-ad4a-d51dd2c9c6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41984c5b-c315-4ec3-a1f5-98853208b1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2356ce69-456f-4903-8def-f1b7b8d9385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3fbfe0-d87e-46e4-aecc-4332c40aac25",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14649d7e-b936-43a0-8694-a84136bb5660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8512efd7-62a3-46cb-9f3c-58892e0578d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95bd496-04aa-43c8-939b-d7bcb15e2122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fd09ee-bd2a-4913-8f8d-8cdc8f2fdbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33417235-f438-4db1-aef6-569a1e00a4bd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58109b05-98cc-43f6-ae60-85c7bcaf2d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e959fffa-b407-4350-9ddf-472a02e5bf76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed9ea3b-c48e-476c-8138-a7e2cf14d8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e10665-1401-4cf0-bd05-0ecab1ccb725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9502f675-8767-4100-a39d-c93da1360570",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2b48e9-31ea-46f9-bde0-2b0c54647a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468e646a-6f0d-40a9-91eb-9cf19ce3f7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e15785-ffb7-4f80-ac90-18fdc0362003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97cadff9-04a1-4722-ba0e-3e40a40c52b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8829d5bd-2d3a-4990-b60d-d59598295c66",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78234f99-6a67-4306-b9b7-0b82b22db266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b8ca97-7903-493f-9398-d851592b5067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725cfc3e-2747-4ca0-b076-f3eb205ba2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b0a30c-3c88-4e67-8aea-8e7087376436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31a7df3-0ce6-4a6c-a119-28bb1841b699",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f99ac5d-fd60-4fd1-8b7e-6861dad45af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584151d9-8d12-4445-af36-1d58b8ba304b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fa1ad5-57e6-4752-aec7-f244992621bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "475dd0c9-1a38-4ce1-9634-1fbcf532482f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f21ae64-e05c-41cb-b12b-e9dfe49d56c4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e711e4f0-5ba7-4d0b-9079-ecca04ca223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "847e64a1-b539-40f0-92dd-6e9feb2a87eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5830dc7-64a8-4be3-a40e-dd6022960f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d528b521-ef3c-44b7-b257-10dff33b435d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d10b0f7-6997-4cdd-9f5d-56dc966643f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516b9012-4764-477a-8d2a-d16d7d273883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10420f75-41fe-4a73-9c6a-0b6de26817bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d971da8-fd50-4ca8-8084-3604f4f18d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd20aa7-d24c-417c-a077-e283ccf5fa80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace1058f-e142-428f-b8e3-63244ed2718e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb17ab6-d7c6-4763-afcc-348da8171415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1bd511-74b0-4626-9f25-ad2eb6e2d1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422bcf4d-dedc-4f85-970a-fbc1f62c7623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b0e0e5-a416-4ee4-9edc-605ab19e3aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649055f6-4ca2-43d2-b096-e1daf2fd4634",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bef8e93-84ba-4091-8664-af0559bcd898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597e23d9-b601-4039-82a1-fd96c22d33bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb82dbab-896b-4dab-b536-4bb345b0444d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "66996e1c-938d-4430-a234-62f1601ce180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b033032f-b868-40fc-ba4f-2e1483211143",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7a82c9-fd66-4f20-b939-e07f1cde4b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0ec47a-e326-4ae1-9eea-185bbf0a47e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87adc948-548e-4177-8244-9ef385f5e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d97492ed-6107-46c8-9f62-95558450fe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6193a9-a8c3-4455-8407-341e9c01553e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0df145-b9e2-4400-b3ba-624cb583b72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783dc4c4-cede-4b3b-bbb3-9ff21b98a8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9e195a-7c78-4e4e-999f-38e8718a0db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63e140c9-27f8-4c06-874f-86697258c712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1478d234-02e1-4f6e-9ab4-d2885874109d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f8b276-c6e1-48d9-b673-713df1ad8edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfa20e2-b216-493a-9bf0-c3bb61b26c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee0a330-12c3-479c-8b10-a191d7f85361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c89fe81b-ccc7-4fca-a459-20088491ed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0f8d2f-7368-4f0c-bcf5-7618041be881",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f90d08f-cf4e-4bfd-a8af-8112202bad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad6ea685-a727-409e-8e9e-7cfa05636baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70919204-f0d1-4af0-b0d2-f0190141c2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "55e11fca-e507-4b24-a14b-64e26d3bd66e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e84a8fd8-3dcc-4a45-9e6b-2dccbb177694",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27a29aab-465d-4c4d-81a0-73743b9d0bfa",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a488c7a-9c46-449c-891f-0c040db395d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33248ab1-de10-41b3-bd21-a72cee90d35c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544a4758-2dae-41e1-966e-1bd06c9003c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1646e38a-1334-41dc-b1e4-f95324faa258"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8366ff1-4345-49ec-9cda-07422a185870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20e8f99f-870d-41d3-867d-d3f85ba976e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "620ea473-37c7-4268-a0ab-d0c4a9873013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d167f24c-0e17-4b49-8503-36c719b704fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a71eb515-3c4e-401c-81a9-628d4ac2f64f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f043bf7a-5820-4beb-a165-46fb5db0004d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "caf47b55-43f4-4313-bb80-9ca5764c6919",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df21c731-914b-4238-b6dd-5aaa25c28352"
                }
              }
            ]
          },
          {
            "id": "a6040059-5251-4013-880c-605d7b9f6d87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2759c649-3e01-4a3d-b1cc-347b4a242c4c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "44965061-8d86-416e-8dc8-18b2fda99c9e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd556b-8afa-4d6a-a22d-b9a82733fe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6c8ea865-72e4-41d3-85bc-178840b7640e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0c9805-ed73-40f6-8d6c-de7a41da5868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08c7c7c-258c-456c-9e63-c1e130998278"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5686b950-e490-4a0b-9d69-473a18fb8145",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "011d08e5-03e0-4319-89ab-d2db19572002",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7deece74-b279-4e3f-a491-031a07e732b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cfbae03-eb8c-4dfe-a8be-c0ddc2bc4259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68b51283-849c-4cf1-8c0c-52dada03f870"
                    }
                  }
                ]
              },
              {
                "id": "58ec326d-6e2e-4e10-a2ad-2258ef176a95",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d93060aa-527f-4051-a6d0-efa4fe191877",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b60fc9d6-d61e-46aa-a615-9d2f21983ffa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d8bc509-07d2-4f39-bb2b-79a11ebfcba8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4106bcf9-9aee-4887-b24a-60ac48e8913f"
                    }
                  }
                ]
              },
              {
                "id": "c979245b-db56-474d-a333-9a8779edde59",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "594bd3d1-607c-4bd1-bd8e-a0121fb2c63a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32c4d0ea-f2fa-477a-afee-775fe17fad78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b773ee-8d07-4931-9b79-9bfd84cd5ce5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54900140-1802-4e5d-8b3a-80ab021b86d4"
                    }
                  }
                ]
              },
              {
                "id": "f2c96775-4590-48d4-b703-f88a61c4aa21",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ece74a-9d79-4b3c-b748-a01ceb20b0d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55b9f556-303b-4f4a-b0b4-3ba80ec28f97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4f4d99e-8b8b-4edc-a47a-b7103d4c15b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c8d1e8a9-e839-41f4-a707-13466ad8d758"
                    }
                  }
                ]
              },
              {
                "id": "98eac74a-75e8-42ea-89fe-8be2a6741b52",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "03d2fb4e-4f3a-4011-bfb1-27f299e53b27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5564322-2d4d-44ec-a3d8-907397152c90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba5cdef0-a557-4a77-bfc1-3ae316ed4036",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0daac950-2b57-41b6-a6d4-771bde63319a"
                    }
                  }
                ]
              },
              {
                "id": "725ddb82-469b-4fe1-87b7-f1c2ac519554",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34570aba-1089-4296-bc8d-f563950ed68f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "029b9f4f-5871-4673-95a4-bc3a3ddb958a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8723b600-be00-4f31-9ca9-860d197166ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "883fb0e4-2494-4be6-9585-1b85b527eee1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f78a1b21-a319-4c1a-bca3-2088e65d48b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "693c01c9-36d5-4490-a6dd-5e7fe0f87b4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0a42ee60-80f5-4c3b-9f66-eb4f861b5fd2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f87e3441-4817-43f3-a52a-2358eae25c56"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97066d8f-29a8-486b-84c2-ef2289c0f889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a8af29b4-5e04-4d02-84e1-39816758d45c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79fd097b-a1f5-4946-92b0-7ee81cc15791",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15ba242d-e021-402b-a77b-bf664fe8efe4"
            }
          }
        ]
      },
      {
        "id": "adf67d54-6c57-4ef7-a203-03100e645114",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fa88a991-fab2-4b7a-bb4a-17a2301bd5b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c7fecc7-fbe0-433d-9e41-b883027577ee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7f5209b-4734-4f99-9580-6d98a7e5b5ff",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a174cfdd-c0b6-4483-a5c6-bd05dffcf484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1973f21c-f03a-42bb-a2b2-9f6af7a34194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97265685-7007-4ace-b968-b84b8026693f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d43908-b106-4d9d-a92f-096a9f8d9f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfed5e5d-17d5-4568-8b1e-f55ba1dfb45c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf944b07-2826-4ac1-a9b3-e94dca99b51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ef8257-f77a-4fbd-8e5c-144ccc79cbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4eb07cb-008a-4496-be8b-185b8b06668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e34b967-b84c-4181-a78d-af1b0c63544e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b03c33-7ae2-4658-8403-0eb4cb664035",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d313f10-93d0-435f-8021-63964b7a65aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1890caec-2b6f-49fb-83b1-e638e4c3e3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b1b414-7d5f-41e4-9a37-dfcb977943c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c34c7a21-02ac-4737-b097-dd6eac6aa1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f39c40-09b7-48cc-bf75-5c806ca55d9b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a679c06c-2875-4ff4-820e-1fe90c5867f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b00b611-af6e-4fd4-b152-935718241bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871ab469-89d5-4c08-841c-872fa98855b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74c83aa8-9da1-49a0-9c6f-b63227ff13cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fe365d-e79a-4fc1-9351-53c31030e335",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5907c42c-c409-456f-9e90-cac68eded50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac139445-6880-4ebb-ae12-d78ad308f2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f008aa4-ae8c-4e20-9d43-da54914c2339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67f0e35-6355-4f2f-9f67-9aa00b94d4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aebba02-b007-491b-908c-9704cd98d7d3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eceb829a-4a30-48dc-b5c7-d7e612ca133b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95e53d5-3f36-4cc5-aff1-117966260b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0433271-dff6-406f-a62d-25e36d53faa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0b108a-5b64-4171-b150-3c10c06c6ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a3a21e-0f36-4b67-9905-0a604dcb2441",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a705bf-3d8c-4163-92ae-333b445ae969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c970f4-55ef-40fe-a226-fecd00237f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b8c633-accf-4776-aa6a-63bb192c8e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f697aa-ee68-4e6e-ba3f-1e53b38762c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e4f2d1-2c52-4cec-855d-0fc06a254d4c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38403d16-584c-4845-84bb-4ffa86570e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57f575e-f6e1-4f45-8364-60a26b3bbe6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930db415-9837-46c3-938c-e5573dcbe8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d56258-197c-46fa-90df-9672e9b655b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54d16aa-d73b-49aa-b125-6c019417e104",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bf5719-4a10-41ff-8115-26be4f2ed293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30304b1f-b074-454b-8617-51657da8d4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8be950-a27a-4ae3-8674-76c63d822049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3da9972-ea48-4ef6-8f7c-538073718c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b74e00e-e9e4-4c00-851d-82c61173a2ec",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e1e7b6-5c7d-4c5f-b5cd-b1447d8490cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bdfaaa-b4cc-4836-b2a5-f4aa0e25bb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ca73cf-a41e-4bbf-8c7e-1451b415d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65b579a7-f9b5-482c-ae7e-612363ed081a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3467cb5c-5943-4844-96e1-70507ba7503a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734f4b39-a510-41e3-b53e-e8027a24ca8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef81fad-d99f-486d-94ab-9d1674738a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c90e8b-fab5-40a6-bc33-df12479173a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cae86d3e-807c-4526-822c-4e0c53bb8005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbee0ee3-0fc5-47c3-91c5-448101761c8b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2688dc97-1e59-4794-af26-54eec8b9be80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf0af3a-48dc-439d-9397-5bfaadbc079d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d68aab-09f4-47f3-beb9-9affb8c42584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f0e41f8-4bc4-440b-8e17-6d013e199299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433dca18-9a74-49af-b064-f1be68a2b78f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f3dd98-8772-497d-ba5d-3ba47d2e3939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e927fef3-faf1-4f8d-b615-d74f2a916f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c560ec-d1ee-4871-81c9-a7a9e61040b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f4ef3f-3ad9-4a74-b999-07093320eb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd8fe61-dbb0-4f6c-b3f7-8965c935841c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447e8a47-c795-49d9-8e81-67dae695a4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9300e7dd-eb44-4a01-a429-a6143afcac13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6673fb0-c165-4485-8b17-4618b35c65c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "550986bf-eed9-4e2d-a0d7-7333a6944ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963cf4d7-0a6f-4091-96f4-d06b28f54f98",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2cfba2-5bcb-462b-9d81-065479b4d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35edc60a-acce-4730-92f4-686aced54cc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ff513f-7250-4448-a83b-2bc707fd8ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e358206-e450-4518-b85f-03056a42c6e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f1be78-f247-4f02-8e70-1966977befe4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f37592-4a74-40d5-9866-5519d523ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d84318-1c4a-4576-9396-afe6f8ddee2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46543385-6339-4afe-8571-51bf9e29a317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb0989a-bf19-401b-b4a0-4544965b1d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e447063c-5869-4379-93b4-b952adff7534",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ca378e-fbb2-4aed-94fe-9607cd89c513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01755721-6307-424c-acf8-80bfc6743e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77ab5af-cbfc-42db-a446-59ab450cb767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecbbb2e-40e6-4d5d-a0cc-5064034acc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9098b01-f1ce-4e37-9f4f-e3aacfe9b1a2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ba7e25-9799-4f1c-af8a-1da1c1f76d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38ee7de-5f9f-4fd0-8ea5-fbf36db43a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29aa5703-cf68-49f4-952a-7c4bdfb943d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36e62c8e-8aa6-40a5-b3e0-566194c57877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52db3f1e-eef8-4f5f-be68-bb45fa8ae80f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fb283c-3b5f-4d07-8321-d2cf6c1e1bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204f7566-dff6-4d1c-93ec-7f17a1dbf5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc9f929-034b-4705-b48b-620c739da63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61f6ef3c-8e04-4d82-bca2-fa7ff56d6bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11df99e4-a862-40e0-949c-96e0b722f0a3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1245ef1d-c5ad-46a5-bfb2-fcb37b27d31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9695897c-eb63-4545-a1cb-75fc0fdd30df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a52795-95da-4260-913d-9409ea75d133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c91b5024-b84e-4d00-be90-46053ccdddf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b6f331-11ae-4b97-b9a0-0cdea53e0197",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02624b4-c995-463f-bfe0-03bbeed0c6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a10560d-a424-48ac-a025-3a9284f1e4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c9aaa0-7c55-4823-b127-c8ca7df64bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed95af0-3cf1-4885-86dc-aa688147608c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8081be6-1147-4a9c-ac09-3f0fbc7c9bf8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8452a893-51b4-4ec4-b931-b224d552b6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17eadc93-c5ff-45db-bcce-bb5430f8e4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19db0ecd-0ed9-4a10-a12a-617bcce584b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f1c054-72fb-4c27-b791-f620d0638d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1d153f-b14a-421d-8f19-7cdc727701b8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd1456-95bc-49ed-aa8b-de28bcd6a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7581a332-b776-4ace-89ee-0d72c4f9038d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a99c74b-7b4f-45fb-a010-3b242f99d684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdd1b51-606c-4fd7-879a-1d95c000f752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fc6689-de55-4501-ab2b-c4a733eea01a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1454124d-8571-41d3-90a6-aa51d3ff0a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3563e63e-be20-4c5b-ad73-9b3583b8592e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaf5e43-86e1-433e-9b2b-d28864a51e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e167a683-3833-4fe6-a02f-702b52a885b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f343b1be-509e-4f68-a496-b9b16d086955",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f681ff97-19a8-455d-b81f-a4c3c53eb348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a15eba-8770-4051-8d53-54927e070410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742b5847-33bf-4f6c-b160-d1b519d9bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbd5992-fbd3-4dbd-825d-c7a30bdddc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec94a35-130b-48ef-9d5a-d4aecb068d50",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9376811-66ce-4e07-865a-f802ecf5fa58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0149c8e-4815-41e4-9aeb-5436c8df2e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852624e4-aed1-4d48-99c5-159fefe47be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2564e9a-53d3-42ca-8684-d0fbfb3d9a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bae74b-4a4d-4d0d-a892-22505880cc40",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28682de6-6fe7-4e33-b4d5-f77af842bf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b41e6b9-626a-4fee-b1ac-fbea554125ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4e0854-81ff-4f56-b339-93a200b135e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "425f8f9f-c6c0-43c0-bd20-bb08b2227d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6fd15d-68f1-4abe-9b6d-04bef0995888",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f583419-4fe4-4606-abfb-fa56fecee539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74514c6f-11f9-4e73-8a40-2de4b8a67fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8317d2d2-0826-41f6-b675-3771e0c8e57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6dee06-adc9-4c05-a8bc-d078c7ca2086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01500719-cbdd-4a0c-8c03-85bd37522e76",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c83526-eb88-4494-9ec3-b6d439f1217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df20e54-6ec5-4e78-8762-d4ba80244814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d763f539-26ef-4833-ab4f-1426fb837e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a81ddd3-ea07-4f56-b250-aa7328c22e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c45953-3885-4241-b4dc-3e177d619800",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ebbc82-ddff-4643-ab32-d9973d91e09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d94841-f87e-4ca0-92cf-533ded48dfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351b6905-73cd-429b-a449-559ef56de2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a659cc9-8fa7-4f76-8d1e-b67ba90ff476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4c5df-5e3b-47b2-a926-6b9539881daa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fe7401-8868-405d-a7e2-a693ee734481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa1acb0-6dd0-448d-afc3-e7cd020f0ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40daf464-9c52-4772-ba9d-04c7ae1305a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7100c257-ab23-4c50-8fc5-f85d9dc0993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f9f832-8c20-44c0-994d-ed50bf64e6c5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4589b-655b-494a-8670-c13657d91400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41bf36bb-9b30-4606-8ff8-b1ffc17db29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53a17e6-a136-4b9d-ae1c-b3714229852b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c76e55f-7250-42d5-8acf-2a59a86b1ae3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70fee1e0-8930-4535-b788-7ecd70c35bfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2fdc094e-71d5-4299-aa85-2e2edfe55350",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8760e8d6-f53a-41b9-a185-ab61e17fdb83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ea5c61-75ee-4701-9e9e-5613086028fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85b7be4-ff9d-4779-b899-6228404d8be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9aa85f7-97d6-4ed3-a4a3-0595f936443f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5864f2fe-b563-4bc3-93e7-58fdc7b76437",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3d2bb1c-3afe-4fd2-b898-bb62831c5867"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47cdeaa5-c969-484f-ba6f-9b0b1db13715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c305133b-4928-455c-9d37-f94e07f3ca7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a94f20e9-a844-45b1-a670-4551b3160e4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e7c3af98-7a06-459c-ac86-dc65d4f3efc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89340ac5-3e82-44e9-9b77-0ee845ed0849",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c95f532-63a9-43b9-bc61-b3f5e913abb3"
            }
          }
        ]
      },
      {
        "id": "3ebd0526-fbc3-4211-8859-478861aa865a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2a3abdc5-00f8-4d70-9e9a-bf1fc37ac3bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a19823d-5301-4919-b3b4-365a0ebe7076",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17366b02-4128-4652-a544-381e472af5dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d156f35b-8f0d-482d-a3fe-c2eddc481df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ceacfb3-0d61-4dfb-a386-3c7fbf715e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a6f3d4-138c-4490-82bd-9c09b3cbb1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc60133b-4476-46fe-9e41-7a6dee7507a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca801f0-47b2-4f1d-9edd-c68fc420f849",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9141def-1fc0-487b-b426-a11cf913814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ee4a6c-f4c8-421b-b8ee-f28199af8e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4524041-bd16-4c1d-8227-66bd7eae034d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a70f1b62-3840-43ec-bcae-8df1395fda0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae449d7e-5af4-47b4-9f1b-1d08d6e552a1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0294f83-932e-4708-a0b1-796898137350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f48993e-d081-44ea-ba4a-24b351eaad82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7aff83-e612-4e8c-b843-f7caf5922d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "713cedd6-59ab-4797-be80-8e316c66881d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716d2466-e727-4fc3-8114-393857aafb27",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7a0cd1-ace2-4813-9a5b-31eda580dbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189a7cfc-280f-4ac0-bd76-e28cb1ae8737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a3c0db-daac-4f8f-af31-cc3ed04299d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "420d8ff3-7528-4256-bf47-7f7587d4caab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c62fca3-ac0c-464c-a946-621d2b5c92ec",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80141fb7-1d1a-46d3-bb80-26585f979af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569d965d-ce2a-42e9-b60b-3319c08ac2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7bf565-5614-4b3a-a513-c931d48f66da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "338314fe-ce67-4286-87f6-12eb83ae460c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b9aa57-7eda-47f0-8032-29f2c3bc00e0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79812039-42a6-4263-af46-5b0ed7255ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51eeb34a-868c-452f-9859-32e86a131a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f5d6df-5c5f-41f4-ace2-bb028245ee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de9afe07-81ad-4d0b-bd92-224a0ba656a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89094ab-5654-4bcb-8247-5f2e97b9fd14",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547f9c09-9f82-4d75-b933-d426e58ce416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df26c53d-37f1-4a58-a3d4-b77663532538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6bf189-5516-49e3-bc35-5264593194b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9129244-20a6-48b4-9cc5-a177dbaab800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56e7026-dc1b-429e-8543-e7dedebc481c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f0e430-de58-47e1-9007-5f15ef484032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f7f35d-c4c8-4c4f-9bb5-6e0a2df5be81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c4a835-d9e2-4096-bd1d-f66975326b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa5a2f47-5cac-4470-992a-8e4fdb21dca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e13050-c71a-4e3e-951e-1e9aa90922fb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e008e83-f1ad-4905-a45a-4d94e0c6f55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b174369-093a-4c48-bff3-2f10e5acf2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a64121-e79c-4f05-9859-6790f48d7910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "610ddac9-14fd-45c8-be1b-07fdccfe8d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65947ba-aa23-443c-a064-9af1d11ff589",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1e3750-b086-4a9d-9847-92a4e82ac631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009cd115-7ac9-458a-ac76-ba1d642fae29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c497ab-5040-4a99-829a-f55c54477208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6634bea-c022-4929-a6b1-aa3371daf6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5826e271-f67a-47ec-b541-b43b4b0b880a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2414c71f-89cc-4811-bb21-75f2c93a3823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d907a7-3ff9-499a-b167-305954d51d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff11218-8610-4de4-bb6f-b4d9c5b48863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "078d7020-7a77-4861-8de7-a38539959ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87def227-1d4c-439e-8466-b39696d51d8e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3bb046-6975-42dc-b9f8-fb5591b654e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42932689-d925-41de-be39-5e0509a03801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dbbeb5-895b-4c33-a981-163ff12e5adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af073022-1247-4d51-9af2-8a8c60e3ab2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d443af8d-1407-4a26-975a-82a5746cd31e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba71565-523e-4aed-aba1-853a5abb2c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a645dbcb-633f-4cb6-83cf-d2ce48336ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e9687c-0eba-41d7-a3a0-f975aefe227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a742e4e-4314-44d8-a854-d657cfbe82dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15315730-cadd-4d66-b226-859b0c38b56a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3d716-2e56-42a6-acf2-d8e4e07cb00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39be4765-87cc-48a4-ac57-44ea20e2a8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55e0c35-adac-48ca-9d12-4fe1ad1ca495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20800b8c-11d7-49aa-b39f-fcb1eb3c51a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056067e6-e9af-4c66-a051-85d174a49604",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05d857a-f2c3-4dda-b5ce-8431d7a7d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5a4ee8-8828-4a3f-bbfc-858b21ecae8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95296327-1554-4aa6-b479-158c859abc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b215c531-ccdf-4110-9c48-552c202bcd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839edd48-0da2-4168-86f3-8f583943c0f9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01143445-5c63-47b7-b675-86257dc4c85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38763e37-b063-4eee-90fa-fcc0c865d4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bfbfc7-a148-45a1-b654-c05e8fec56fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b04e4c8-13ae-4dd6-854d-0eb8be082c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c35e76-7ac6-4486-a803-53ff136545bf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5eea06b-7175-4043-bd8d-59556299adc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1141c0-b494-4987-a9a9-899d888fa9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33192bf3-e178-40ac-b66c-5ca5e26e7221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0751c340-0fbd-4403-a6a9-09ee7493b029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0643d22a-ae69-4421-a64a-77bf0cc3c744",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeff60e-666b-418d-b1c0-85a916a0af0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fffb816-e211-414d-be77-6d97cda9603f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5bf175-1e19-43dc-827f-6a5b79845ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db15676f-0324-4a49-99fa-c86eb9df719d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d06489-ac61-43bd-abd0-cf1a813ab7fd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae222e44-e2e8-4a91-a545-a21f07288f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a0249a-4044-4220-a221-53e559777a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3e16ed-c4b5-4994-9aa1-da11751eb726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6d4fa4-378e-445b-9a45-cb71a33c1c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e42d3fde-6df8-4412-aca3-1d02188795d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1ce729-caf7-4d94-b6cd-a51015a6446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46a63c6-6e5f-43db-93d5-5f5ae0629d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11809adf-e5cf-426f-a320-bad0e145189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edfd027f-d95d-460c-acd0-f02b4094cfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be061ab-ccc8-4f01-a8be-b0fbc7d950e7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8052e57e-3dc3-473a-9d43-219c42a1c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cb106f-4ef4-465e-a98d-6a7a2a7619ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cef15f-dc69-4cba-9a09-131ec9a12919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2771c3-0d55-48de-a440-d3d24a30e88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4e7a4b-3ffd-4611-8b9c-6ac46119b2dd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658232da-9d92-4da5-bf3a-8e16b80e2b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418a9362-0ebc-4897-a087-bce9225769f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac135e98-0da4-4a2d-a565-8fb4a8455908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ad956b-b163-46f3-b7a2-41c6ab46a0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf4c4ce-ed6d-40a4-869d-2353c8fa2658",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd2391c-9564-4ae2-bc6e-8ad82df38900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6308d4f7-eed9-4fdc-966a-62e9cd94b437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd338bb-58ac-4035-877b-6fa153a1fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a7feab-2155-4076-b62c-5a343979531f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f046bf-f2f9-42f1-806f-ebef6e3049fa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d43abc-31ce-4980-a761-38bd4285eeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7238c365-a059-4654-ab26-f37b1d0ed7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b806563b-b2a0-4f92-95d8-c754baa6580c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d962f5-f086-420a-900e-9b2c28398d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f337a4-841d-40bb-804c-fdd295063b71",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d629096-3f5d-48ef-9eab-9a16c0540e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d17e79-a980-48ab-859c-526e1fb8929f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d124fea-9fe6-407c-a6c2-d67ee1fdbdb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fac1841-b740-4e36-83c1-18122beb7c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe03d2d9-95d9-4b14-bb50-60fd87d59c56",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "812dbf2e-61d0-4f0c-868f-24aaf83173ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471c2047-3cf8-440d-9386-ae51433ba815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9261d380-6c0d-4f36-974a-b7b504b5b726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ba0904-cc0a-42d1-9bb5-6d477ac21d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cbedf8-da3d-4487-9e09-047ce646c99a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6d63d4-9cf0-4062-bf13-60c5d2d2c36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddba97b-f622-4f01-869a-1406094653ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c0812-85c9-4c0a-a521-1869f64b121a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c114891f-fa5f-4c14-ab92-4558d46b3d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c0d915-7dfa-42c9-97a6-eca8ff69ebf5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc960b-4ce1-4c5b-9c3a-01de53df9f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788b9aff-ced9-4a74-8e23-8956aebc7072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a233b9f-8600-4f6f-9abc-12378569c2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2b6a9f-e88b-4571-a285-c07055c6ff00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2668dd6e-1fa2-4a4e-8013-7ea1d5b41b73",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87d97e-4fa5-4bf4-9a64-db63a40b7ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25b7b0f-223d-45f7-ac8c-6328442cd6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f24f14-546c-4b18-b60c-fb37746566cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ddaf515-605c-4a80-8653-64475b8da4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e753fec-ec02-4b39-85f3-d29983bf3934",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6733efd2-f8b1-4a2b-8473-bfc0c3b96e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289a2f81-0d65-4af7-8467-091fd337d09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09d2b4f3-9152-4c85-a5c2-9b3494635aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de43a248-d2cd-4edd-a69a-e3aa586a15c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24cfdda-a446-451e-86ba-e81f7fe01b0c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11938615-56c2-4a53-a1ee-fe9160f905ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033d056d-71ba-4b89-a916-dfc8074505db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eb152b-60e1-494f-80a0-8f65c0c3f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c35ab3-097c-4276-81d7-5e3e3181659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc167e0-7079-4236-a081-75138ba249a8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86094744-e9c6-4685-a91b-5acda97fcc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c4ca8b-bcb3-489c-9f64-87befdb136be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa76b52-770d-4f4d-b59d-3b878788cd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f49273-f77f-4ffa-bacb-37c3490b8a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded37ebb-d186-48f2-965a-0990f178dee5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cd5f5-5e04-48fd-9db3-00e47ceef68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2a9d6b-9c87-4b68-935d-ea1e6b82a76b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc9533b-1e5f-48f7-a344-9bedf2109ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826bcf1b-65bc-4f98-a052-26779e1db7a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccca8109-2524-4f0f-8aec-b791475e7ab0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e1d8f0-5aa8-4469-a4d6-cb217a15abac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0988c7b4-18fd-4145-bcad-8caf012d7553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e518c72-d70a-4c86-9cd4-96e786125634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8deb4a41-9162-403a-92be-595a103ed5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f783a92-a2ad-4c92-a501-ec8d62c8f5e0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbce80b2-4a0b-4957-8268-125a56798eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e375659-4b27-42bd-84c2-df397ffd6d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180e6e7e-44ff-4803-9d9d-a55306a537d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b51745-4a9f-4e6b-aa1f-eef485fea406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953a741-fce8-42e4-a7cd-a70637b251da",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6286a6-519c-4579-92a3-f6e8c360c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d64d03-57ae-40e4-819b-d4e5679bcae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124de8f9-bca6-4119-a9cc-5d15f15b004a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b69caf9-d7a1-4b02-995e-b70b0216dd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92890c8-9f72-4eb6-ba74-99917cb05946",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d4e444-9046-4399-8221-92eae3c21f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f19f1e3-3dc1-419a-ac1d-94c72d69ba41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e576230d-26a6-45d8-96c1-151e64e7b30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36ead09-3ab8-46e8-8c45-dfd1c995584e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7c240543-7aaa-44a2-ad30-ddfd62e6c0f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "049aa4d3-c435-46e1-9744-3a62e53b2566",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3d0331-5c5d-4463-ae58-be792776ecb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "70a2297f-a1cf-4caa-9c06-fb697e4bea76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c145d4-b84a-4a03-9495-0d8c6f1c4a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1392a7dd-ce9c-45ba-b39b-0d84d2c8653a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7be2d9eb-e322-458e-90e3-83efb2ea803f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03e3dc1c-f79d-47ed-88b9-effa45cad26f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71a38a35-bba4-4743-852e-7f7480bef8b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ada722e5-9b94-4633-8014-8cbdd6251f56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d5f7e29-bec7-4003-954a-02e02a1e4452",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce60b950-88b3-46bb-91ea-e2b393f2bf26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9263443-cd26-4bee-9978-c34ad662226f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15122ae2-2c1f-449f-a7b9-8623730f12bc"
            }
          }
        ]
      },
      {
        "id": "94d62b69-0444-4706-918a-f22b78002042",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2aa262ad-dbdc-4e90-b347-7982273ae6f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "390849a6-4592-4326-aa2a-63bc9ff9dec5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aabc2710-a162-4fed-b084-6e9811f73fbc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e024547-77a9-411b-8372-272eab42583a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea7ded35-1d2d-48a4-abc9-b87701c16113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da36e52b-86c3-4d3e-acf9-a37eaf4f310a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50203e69-e5a0-4e8f-a20d-6c95d1bdc14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4538b4-229e-473c-93d7-f408228f653f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b594c0ef-156c-4517-8006-1a384f380815",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78f25e2-e852-4aa8-9987-bec79f24e5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cee9575-7065-48b7-a08b-d7964e529035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d98604-469c-447e-a32f-35b1e277f109",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c48297-7695-4697-953a-e40200262c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2b3135-f5ad-4e9f-9078-4ec88896433f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461d06e2-025a-4850-b6ca-b980490e53a1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0134422b-8b69-4ecd-865a-44076dc58e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e194f14-5d14-43fc-8678-c9e14afebe62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f7f0b2-b94b-4b83-8aaa-2d0a5c080f8d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7f5b49-d59f-4958-b2bf-eb363895783a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cca673-72a0-4c25-bb94-5459525e5f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e5c6d1-9821-4afc-9645-be5f50a1fcaf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db397ebe-299e-4999-a873-ed55cb51fa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2deefd9-3f75-4c91-a771-21249b809a40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176e965d-6402-4aa2-87d2-a638c0eb5085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62319e3-d69a-4a5e-9c90-9704237de133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39803250-ee66-4000-9779-f7a89e2a3659",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb67af85-3754-44ff-b4e3-414c86eb51d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ef3bbdd-8e05-48b0-9eaf-d17c1ed6edee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40765c17-8166-4510-a7c4-2fd8313fdbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee29908-6412-4151-b99c-de0e34f0c608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c230bd-ed03-4dc8-ba32-49f9d76242c2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90aff7b-2530-4a11-b1aa-31a3c6754d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28a88cd1-a322-478f-a593-fca397d43d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08944ffc-2dc5-4c92-ac42-fe2d047b4697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49d199f-871b-4a09-8dce-d6a971ceca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b151ee9-dc89-49a3-9af9-9854da06d4bc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab097f6-e550-43e5-b903-c8fa06fdd961",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f0d90d6-c3cd-444b-bf05-977cd3bde344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52747db-7f4e-43ae-9ae7-7cc05b2cd351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9576945f-c862-4d37-a595-72bb4f4767af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6fe2ae-7982-4f64-bc62-8a945db0cf21",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a773e8-c88a-4780-8f6b-92f73402e6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93458d59-f566-48e9-a605-c3f93936ebd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5edc00c-be6a-4954-b0e1-8b2303c1f335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e603fb98-fc9c-42ed-bc38-bc1f270b2ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f01380-10d8-443f-a55c-41abc8252158",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342bc185-6bf9-4c52-b69c-d3032fc80a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a7b644-de48-47a0-b6c0-577d722ebcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc8da11-a9a5-4ff7-b197-4b94ba666db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fa007a-481b-4976-9fc3-4543b06fb502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686a1b1f-a79f-442a-80ad-a3781aaf5ae3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9d7ed6-1b6f-4881-a8fe-022a3b8ed27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b034996d-0a62-4768-ac4b-dc1785fb1dec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd30c887-e355-46e9-a411-cf05ef98b285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3878c708-0669-49e7-bb8e-dd06637a5333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55701107-d2f3-49b3-b6df-6495e48c4128",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a86c26-6cb3-4c01-b371-645f7cc7e128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c11ceee-efdd-4ee9-a5a1-aed8ee811004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b383cf65-8e18-4def-b1bd-1bb88eb9a456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dce09ed-a532-4828-b12d-7dd1d942f472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc81a5fe-3bae-414b-b3e8-130410419227",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4146aa-280d-430f-a968-c8e953988851",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c156f25e-967a-47a6-9fbc-2a2965595fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee417a88-d5b2-4ade-a67d-8229e692c73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b015367-9ca5-485b-b993-44551c23d057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860da133-aa12-4f0a-b0ca-b18e690c117f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d4e438-a615-4deb-a031-999d560d02bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc11290-357f-43fa-9c11-b1d445f2a640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342eada6-1e2e-426d-a04a-c46a38ee214d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1165b7b7-aa63-46f7-a599-54f92d5a26ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985d6eb5-55d6-4503-8383-cd6ea3f4f0cd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b39df25-3d56-4287-a781-c13dfa4c3160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3630a0-4d6b-4ed7-863a-af2b0320b879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565f2fda-9f45-483e-b6bc-2d3e047dcd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611bafb5-8cc8-4ce8-b248-2ee1e997be8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dda1a5-9e0f-441e-82bc-d00eca3bc05b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec53dc0-ce87-466d-aacc-d2d5c50189f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b18006a-bedd-4b4e-85db-69bec26eb273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff04f90-8ba5-4229-a544-b5af33d7dd47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ffd26d-a859-46be-be40-ddafaf938251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf996360-e056-44cf-9070-ecb3b0e6141f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3707df48-431a-4f64-87fe-6e6cd29a459f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8156d5bd-9d6c-46ee-8e61-6f846970209d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33203e1-2a17-4003-a730-5662d5c923c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ccc8fb0-b311-455f-a287-c9a6ba777dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce411238-e304-4418-92b5-aa0c146b7d24",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59ef27e-4262-4238-bb8d-2ab11f16df4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8866b3-60c6-4ae9-97c8-db878b35b38c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b999ae-6c47-4a89-b1da-a04e84dbef2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40fa8d2-873e-4ad6-85e5-b0f497eb3cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239fab68-09c4-4570-bf20-93292f2c9eb3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f0ddaa-677b-47df-a748-9ee637aa920a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40b4948-f5be-478b-858e-9799ea04ea84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca0cb07-2c2e-4cf8-bf44-ad6919f65ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9a917f-89be-44e2-aa1c-519e3d55167a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a830a44-e548-41fc-9b7f-51ecb015f2d8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aa0df1-dfc3-403c-9843-e610e268ca18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d2a0cb-7a40-4006-9b06-76adf6b8b7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd519fc-6c84-4f1f-98b1-374f6f325830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f0db12-c51f-4320-af59-7bb62ea81c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dba27bb-8958-471e-86ff-77734d8f9313",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531409a5-3b91-4465-a4d6-8eaec4612c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1478b6eb-475c-4f50-b7b1-cdfcb8fa0268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ecf75f-3dd6-43e9-81a5-28c9452fe851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0377f99-eef1-402b-a6c1-7d3b75f2c5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7817322-8db4-446e-a823-b18fb3598e52",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad69d17-0e10-4460-a17f-bd65c674d245",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd819a2-0cf6-4e2a-8056-bc21e4e172d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbf0477-9cc6-450d-8756-8405ccecdb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18375a6-15ed-478e-9771-f1118ca7307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26175e7b-18cb-4af7-98d2-7a6cbcd1c6a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90d2e76-b27f-4ce5-bfbc-8bba1134f24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21bc9ce6-816d-4bde-92d3-c5fd109336c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75759e5f-0599-425e-b5af-96abc6f0b80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5a200d-8dc2-47af-8eb1-5ff1a8a67533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78497c22-ed64-409b-8388-7e8eece29e06",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a68489-649b-491b-81c8-b48616b8264a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19882439-b4f8-48c9-87cd-1c7bf14aca37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f207f1cb-e7fd-47fa-ac68-7356c3e07fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cd185b-fd49-4f41-b51b-9500f0b7d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9516681-aaf1-41fe-8e52-0b6a4429add7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13253da-f697-46fa-9db1-c75930a71759",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57de32e4-5665-4be2-ad73-57a9329b652e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed00e4f-2ef1-49de-b923-96b7042f91e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1495b619-7eaf-481b-8391-6cc1e6dd65c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df6542e-68a6-4c18-875a-92b618b57172",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ebb882-1624-4229-b239-fe0c1e8472c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bb5ffd-b0a5-439a-aeae-f4bdc6b74f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d6295c-996a-4baa-b6c7-e8ee3b74052d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9781c54-69d0-43f9-aa08-3686c8b1ee5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e16e7f-0fc0-424c-af5c-3c022bf8c696",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89ea112-4062-4d8c-93e7-91eae8b1158f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e06074b-93e5-4e3c-a73e-e73b57a5e60c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14781124-fc1d-4370-8a4e-47b9487849c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d59cc648-7cea-417a-854a-10fdc2ba4846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b4154f-e3fa-4352-8619-5db6e0dad90f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3563aabd-ec02-4e42-8130-25e7a8c1c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7877739e-216e-48b8-aa63-9a4ff9959ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb16a77-7efb-48f7-aa37-6623b97fe64d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c888e17a-39c0-44da-8398-f674e2c29658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1416ff6a-8bc4-43da-be93-95c72c6ab078",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4bf537-c3c4-4b85-a55a-d85d129c3b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fccf745-4ed9-4e80-aa03-6f25a530e0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55059de4-b63b-48bb-acbe-23639d4f19cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff87056-a75a-452b-86ae-e2ca400c7765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f40ca0-10a9-47d2-9ae6-1e883d972c22",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0a0d25-6da9-468e-9a76-497fc0d502ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beafef15-520a-4698-ab11-2e13eaf8bfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b1182e-2b1d-4945-a7af-86ba6c6f3631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170ecb77-3e56-4251-8755-fb8833a53deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b765992-f5c9-49c9-b877-5fd56c978040",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8242b5a6-8f0a-4761-aa8d-19461199ef78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51e34a1a-2cd5-4168-a189-d2d7d8502972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed6899c-dd1b-43c3-a547-62afaf352524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f904ae6-977a-4435-804a-277f1d99affa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5ae2b8-1751-45bd-9cb9-442f5e6da739",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae1beaf-c289-4682-8b9b-fe3280d72866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65983ef-5c0c-46b7-ad87-b4716dfa4d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d701af-44eb-4fcf-94d1-b4687c7f2734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12d10e1-ff5d-404e-8c2d-aeb7760cde58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddc2196-ae57-42ba-9a6c-488c85e39b49",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1b8129-9a9c-4b02-8277-aedd573469ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1afa2c-974e-46ee-bf0b-e978ec5002b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afb396b-0f6a-4f82-ae98-ec4f0f14c123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e481a1d5-8b56-408c-903c-865ac8e819e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d286e25f-5955-4313-9af7-f7a8efc899b5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6a5ecf-869b-4b2b-82f2-f5d1cc8e3979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2dc8af-215f-45ee-8465-02aea882e95f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc50f29f-cb68-468c-b1af-03665b7d6693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e56e3e-e397-41ae-b4c9-aa9cbbaeddce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc3d702-7be2-47ee-905f-640f06733f9c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5408d87-e310-4239-a585-fd0ba3e177fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbfe742b-7735-4a9e-941c-bd92ec5b7cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee99072a-4d53-4427-88f2-9b336ca97c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc563909-6f1a-423b-ae8f-d7d83533602c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab309075-e90e-40f3-b189-dbd66bdea115",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa4dcf8-176e-4250-893f-be1eec3199b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd282314-7ff7-47ac-ab1d-c3a2c84be793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce52555e-f896-4f37-96c9-6c2ea7ed43cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9873b901-bbea-4bc5-88e2-950358bc59db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9842d5-e47b-48f0-a57e-9db0f05c3a5e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39f7e86-63d5-40a9-b926-7bd548bc3256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9407bb-fe4a-4675-95ff-bb8ed740b4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999f98e7-b24b-4d0c-8374-15f84ab96c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6572f62-b371-403e-aa3e-2c9eda222b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1acfaa0-3e53-4540-97af-f6ffbc69a1c9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140645cc-100c-4096-8da5-60b7811ec350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc3f3f92-f835-4e09-b2c4-abd8d0c1d230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2242232e-5443-4c2e-b4f0-849352a29f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821e7618-dc42-49e3-899a-df5fa3814f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22237de4-c023-46a2-b61d-f4f173b6d541",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9836546-16a2-42ea-9ba5-7feca964afc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696c214f-4459-4c93-b274-9021f28c863a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ea5f93-9568-41fd-a29e-cf0f1957ec07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6586bf6b-df15-4c62-bc6b-6e4f03526bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24d1c86-82fb-46e2-b477-e1e29c4dd535",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d486ed-c9e9-4a65-82af-86946d3c6cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc235017-5ba6-4a40-b4a9-329d0fa641cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1efcd6-17c0-4298-ad25-249751fcd6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e01a72-c99b-49e1-9ad8-b61e63e56e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db8c1e0-45bb-49ae-a013-1422a9663038",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263db4e1-9bb0-43f0-a919-b534ab2715d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51dd9806-2906-433b-97ad-26db7ba8eabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c1e984-64bb-40fa-81b1-5654c72da1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2ed39c-d171-4f50-99ce-4bbe0236a659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6682663b-9e2b-4d0a-b7c0-3ec99c61d8c5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ecf237-adb8-41a4-a28a-c2fe11b516cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5445c3-c5d6-4775-904f-6bec72192a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e79e59-fcdd-4337-bc39-49160726d382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4037ba43-3934-4530-85bb-cf58f7252e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b4918e-076f-4d45-877b-f68290f44520",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f2dd4b-2601-4f8c-9ad2-22922ce303de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "562b769a-65a8-4496-a908-2537ae5b4c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45b3416-8f15-415d-989d-6899bb0197a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13b7fe4-0261-4945-aa10-c594b98242a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a325b200-c544-41ee-aebe-43ffdb4ea4cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f8e3ecd-0937-4e50-bdc4-e7ef6aa8d413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b78248-20cb-4912-9006-85a030438086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205d14f7-858f-4fde-b64f-72d6fe577e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae29254-a1e9-4c2d-9170-0941b51c40d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923fa321-c5ce-44f3-86ca-bd810d4954bc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314af8f5-182d-494f-b318-00df443be7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f16fa74-34be-49e0-b523-9f30a42fa097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9303a643-24ea-4829-8e46-0dd73db1c29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94624811-2d18-4a1d-a086-6ffa67d23b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9cfbdc-615d-497c-97cb-6500ca6c59d9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9362352f-6e9f-45f7-9120-11c5d8e55d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47a0e90-6b73-4056-891f-5e6108e536c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3121c06-c8b3-49b7-bd86-c44093e4a7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5111b7e9-e32c-43a3-9a0d-3d48fc27a289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c8252c-a203-4187-8b1a-85cc4ff0ed08",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f512c5e5-0147-48f4-85b4-2d0e941bbdb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca63f85-5e93-4c41-a783-fb1597b2f954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccebf2f4-4c9c-4d41-9e59-d2eb83848112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26021a2b-6c1b-4296-b919-3ebf1ea27954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb54c20c-eb73-4160-9f48-c3e76431b081",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20ea428-e7f3-4825-8aa0-9540a025c6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3acb73c-c356-464e-9af8-ea576470c62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d2f083-cb4c-4fc7-80e3-6d71cff8c072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe4ffba-1401-44c0-87c4-1cb8d2865e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d008c8f-3853-401e-a685-9a05e1100a3e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9242ba31-eb0b-46e6-893a-ab2381881185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1bcf92-204a-4dbb-b167-2fc452f85925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcfbaed-0e85-419a-8687-a3aaa41d267a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b4e56b-2242-4ef3-b293-22512c785e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9707b82-a6b6-428d-956a-f15c873a916f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04377dca-15b2-41ff-8f06-bb2f40334f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c625b21-4e32-40f6-b3ea-e6944282c9ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7dc038-f418-4cfd-b6ee-d061b59b0a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d330f5ac-995f-43c5-a81b-fa35963c01c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3c197c-e7f3-405a-8108-f96ffd124ab3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f266ad2-07b6-458e-877b-8acf4719eaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c86636-39d8-46ea-a2cf-0d16bdf7f367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f364bd-ddab-47e2-abef-e6333e40d033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fe09f3-a2fa-421b-8f95-8763ed17743e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc1c445-dd99-4063-a402-e6fc3b600027",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b245fd-bef2-4839-8ce7-7a211ba54a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f41433e-aa4f-45ac-a360-62a8591916cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e8ceb6-be9e-4ba9-81da-e569bf0f2aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19db3ff3-98b9-4fb3-abb6-4917c6c15c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b736b517-5b7e-4ad7-9530-04de0ca6d799",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014f079d-5fc4-495b-b64b-a9b227fba39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4aacdf-4a84-4819-b8b1-0c09540e7557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a954737-0121-4cb4-9801-722761e5af78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7107ec1-12c2-40d5-bdc3-02e2d991b7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49cb361-040f-4913-b3dd-df604aece548",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f078685-aff4-4b62-97a2-f8249f66edc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06bab74f-885c-45f6-92b3-ec34c1041fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f491be-89ff-459a-91c6-dd8ce34c7724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4ed7af-922a-4b6e-93a4-87d3764646ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa1fda6-7438-43ea-85e1-46253b475523",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27419073-f1e6-468d-97e9-201ec84223b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb33b4b-e03a-4e9a-adc4-33583a63d961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14e7dad-6841-406c-a4bd-d428cc943ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eb4eae1-c063-4887-97de-6ef26f68b3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698aacd4-1591-4765-a958-7e876aae5d99",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5fc5d9-f2ad-4735-b962-209491e6cf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ec44ef-7ceb-4817-8a5d-1d72478c458d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb435bc-73c0-46c1-b5ad-a2515006a726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d72c2d-6877-40c5-8836-201d78c10ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d6a058-2138-4991-b464-bba71561a248",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3605ceb-c3ed-409d-80ef-24207c7aa5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bae4de5-9361-4b78-91bd-24791defba29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c041a4-7e0f-46f5-bae5-964dc76c0504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515ada93-d7b9-4869-94f0-86ce68335ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313b595b-2771-4a3c-b2ee-95b712f9970c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa2d6d2c-2d07-4f34-b2c3-39acfdb38e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76cbeb5-0a22-411e-a4ab-f93babd52235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a498d4eb-4422-4c72-89f7-2aba881333de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c998d7-d697-48f1-bc56-6907b5f484e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a991a30-f225-4d92-86f8-450165053316",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343a8d76-edff-4b1f-b86f-eb31ba5b7377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2f3715-5bac-41ef-8d2d-afb69b55617f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb64818-5460-460e-8dab-7ad400886e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6661e275-104a-40f9-8ab6-5c44e66dba63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ebfb29-1ab4-49b9-94ad-1ad07ea495f3",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58602ae-c5c3-4fd8-9527-353b8447cc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b1a979-be45-47e2-b427-d1cb75671912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a8d35d-2c4d-4aca-a90d-4c65c949de9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2d9380-95a8-4143-9cc2-de58902a0878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5c596f-4bd0-4dc4-9efb-4f2e890cecdc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab966be-ddfa-4536-a7d6-5772666c0248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d704b816-8d8c-4205-9774-6c363b25c056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89759342-301d-4b7d-b921-244ecd039959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e49470d-b167-494e-9e9e-a81d254e655c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38b9207-5e14-461b-a68d-c8b76d9011b9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c222baf8-6c30-44af-aad7-012144e82d74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212f815f-9c7b-4026-b459-3105c12495ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14e2f6c-5cde-419a-9c30-8c8049e5a5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d726c2cf-a497-45a1-bb2e-620d709d8afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d422e2f-1a16-4c06-a06a-bb589c01e61d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62335bf-ee3d-470c-8d8c-a872e1fce3f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bea76b6-0787-43e9-a507-caf2d2adae52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac52c623-3be8-4ea6-a5e2-d36c16274d11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c7e65c-f708-4689-9ce6-26f48e7a318a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14575ad7-bf59-481c-b304-1408d0ca0007",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3592c643-6826-4842-8b54-dcf6c4ecc356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ceb5d8-c9f7-4f42-96af-4532dec0c8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12715224-3cfb-4cec-b2f1-f366c1bc69ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f649d1d-8bb2-4677-9bc1-56116ad44cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1eff8b-3df0-41a6-bdc1-3681bc66526b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06d3ca6-7eba-49ec-bbda-65e8f7c8792d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f53ea009-2309-4e01-9171-7b735846350a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef677a6-4146-4ce5-9ae4-774e68b0bcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d897e096-fc21-46d3-a3a6-c8f35630d81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d59d02-c778-42f9-9791-b8136e33031f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b7eaf3-53d1-449e-b6c7-9d03b912425f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77a09314-6fa2-44e2-92b3-7077e2ae0b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3064d1-a43a-4186-9c83-eaf5239363d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4235f7-affa-44c8-9fc5-43584e50c1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b436e-5ce7-4418-8af0-083045a42a73",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c9fc5e-b68f-47f3-85e0-82626c5f0a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac2f5d0-ff88-4973-a9c9-fdb96c7fdbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06760a8-2189-4481-816b-dd02bd2372c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45e9ffe-292e-4749-8988-a7a2302a8f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85740f9b-f1e9-4172-a606-1c5363fb69dd",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a603b9-9267-4f58-b946-179faeefaff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23ee96d6-8d68-47e9-9107-4599be4d8c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52fb9427-cd9b-4a76-a668-b00305b8dfb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87441577-e176-41c0-858e-d00992db0a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beabe77b-ec80-4b80-92ee-70855a523300",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927768bb-43aa-4c5e-89aa-767be82c550d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c4bdc9-fe56-41cc-882b-2199fe15afc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21620a71-9695-4108-ab4c-14ad04f263fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7cf11b-50cf-42c4-b53f-fc52fe771655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9096624d-5ee4-491a-9205-93391b52051f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3aca8c-3355-4471-b2c3-50ee3b183bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d340b02-5c94-413f-9c04-f25f02b15fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d361edb-255c-4834-961c-759d14757ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0499acce-6509-4af1-b1b5-546ca6dfce00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c70883-c3f6-4cb9-a0dc-c4d9ec84dd7f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00889694-f8d1-4110-8d0b-00b659104ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca5e3c1-21fe-49fe-b77f-1e047e2169a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ca323b-952d-4019-9224-6cd3f7ba3fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d608710f-3f88-49c9-8c11-17474695ed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aee3ce9-eb35-4c13-9269-4ffaa4397994",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c79894-30bd-4f42-bd62-9c6a7c4337e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be61314c-abaa-4b50-b7f2-139967fc6e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f8f70c-fbd5-439c-90f5-2d418e617cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43702c1-7f75-416b-94ce-55b9a6b4e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2e3905-918b-4e07-941b-dbb11af166b1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbfd7f6-68ca-4f31-b586-717bfc4c57ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cef4d94-ca07-4061-8b72-72a9b403acfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffea26e-29a2-4160-a305-4b24c01a26de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6887733c-4ccb-414d-9cd8-71eb1c34d41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89334c35-f588-4446-9632-6b4016d1af26",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7523e9-b575-4e1a-afc1-1307b8788466",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddeb9176-ba40-4f34-b723-fa7ca4d8a3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2c91a6-d9a7-4f8f-92bd-57e60cdb3a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35b708df-cc1e-4972-9eec-17bc2f64ad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d876c6-ed04-4866-8257-8a33c389ebf2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c471168-8781-47bb-a1d8-293c1f5d8f88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6552bc00-d412-45c5-ac6b-41403da05d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bb692a-5996-42b9-903b-7df456655cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f487cb-35b4-4062-abc4-e54ae59f3bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c8fab0-017a-4869-816a-a209127990f9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7975c1ef-3fae-4ed0-a9ae-eed6c670b98a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec20808b-1e76-4511-b139-8e94e00ef23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ad8b9f-a0eb-486c-9e7e-bac9a619af98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b7ced7-7b93-41d4-80de-1ea1b8d7c846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400e4a91-7902-4811-858f-1d504d8d359b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c311308-0f4b-4ab2-afc1-42e21db41bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "302a53d7-ebc5-429b-9897-7242a8fc9834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00371f49-8ccb-433c-ba69-7a5a1d9add68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f92908ed-b313-49d3-885d-41d94387c46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257fb75c-0798-4d2b-ab5d-29163a9f1443",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684a77b1-ca37-470a-9582-45d2767a7220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "568ac303-7f6a-45b6-8492-1205fc91a002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef50e708-740b-40ba-937e-0471ec3b6129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a152b8-0cba-482e-9ef2-9192642539d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcccd186-7a70-460d-bdc9-b90064546330",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec429e3-4899-418e-ac2f-70123974947a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb36905-b840-4f96-869e-57d1e03da621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24fc19ee-928c-41b2-8f35-c7da732e8d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d36074e-e6b5-49ad-a803-5ef720b04327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657c218c-a9c8-47b4-a0eb-9dc8a79d9cfa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b0293e-e0bb-4e1d-9087-218b13901aef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b16fd24-99e1-4e38-b72c-fe6bff0d530e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7578f21-26c8-4495-af70-9b09c8b08f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64c2b16-39b1-4fb7-b289-fa492b96a104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd18e1e-7abd-44fe-a77d-bec4f0bf705f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8647669-ae69-4942-9603-be4ed4210d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55b1155e-343c-48e1-8589-7902c7e979d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5f0450-c896-49e9-bfa2-887bf87395f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0775dbec-5efe-4c6d-b73e-64ed9da008b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc553fa-65c6-4e34-920a-f7b51ac9cadd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b551263d-662a-43f7-a345-54b722d862f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e3ea269-5794-45f0-9e3e-5a099a5adb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a4410b-8609-4b68-bcd4-b61a4f0c7b92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c34ec48-551a-4c29-861a-d19c54a0a421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc58a7-d122-4f00-8814-c1f777eaf5e0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c8c553-3f72-471f-999c-e32f38fd3bdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e84a59-08f9-4bb1-b483-8cfcec407e17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8581e9-ef49-456d-96d8-ba49465f2562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7415b79b-09e3-40f3-b28b-ed171b640cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76378d99-d872-4a5e-a03f-c52971809bd6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ab786b-beac-4de7-962c-4217109e66cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06940c47-fcfb-49c2-8405-15d60266f844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b4f03d-d2b8-48d7-b8fc-9e2f8f5633b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d7c5bc-d8f2-46da-a8bb-591f86265a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e8ac8-dc40-4824-b359-f2ddd45e3b64",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2b37b4-502d-4363-b1f9-a0449b9f1f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e9e9dc-2d25-48aa-bd32-31bb85cc0a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97712e68-eb01-418e-9b66-81271e7ffe6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a61fc9e-31e9-421a-ab72-791f73c68945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea001146-1eba-416d-bf42-92324d461e98",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb6e9b-85b1-441c-9f1f-03f39786f74c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55582339-4455-4e83-b4ad-27d445182004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9921e85-5b76-435d-8a24-9b03cbddd63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8f81903-808c-4a9b-99e9-ea7ce89b1b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af98d9c1-f320-4c8c-b284-8e525848ed14",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e59520-eb5e-454b-b159-4887c16bd268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b7630b-391a-4abb-87af-ff9c3f851347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8502f2-0e80-4b2e-998a-1d58e5a6fcab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a331c6f-9dad-4ea8-a6d0-56ae3c0189d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284511a1-94bb-43a7-9933-fe3ea128abe7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b13262-875b-4db8-9a67-aa149ae0d54c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ac9ce3-6bef-4e82-af2b-74746b29a167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f05aa2f-201d-424a-b2a2-a3fba527041d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4906d4-7eed-4b3f-ab28-25425f399bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f028b3d-9ade-40c3-b7e8-7fcecfa417d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a57565b-b3cf-4832-821f-0e277c76dae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6511bc8-958c-41f6-b353-62aed87cee0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec1b5fa-1ff2-4358-82bc-4d5e8429869f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a05180-60d0-47ac-825c-90f7d95510ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e1b645-ad4e-435e-aa54-26ef80016ae2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220bb0df-a79a-4e1f-bf65-68213320d5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922b7e55-7ea6-4b04-b36e-22c1b5891a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea57044-2aad-4c96-ad4b-4fe7f6412bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b42d8f9-d315-4b3d-b197-d9ae7c17a1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703c2803-156e-4ae9-8dab-a60b14649ae2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166721e6-55bf-4d9b-ba85-41f08608af65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366885bc-f451-4af6-97ef-c688a939dee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd51498a-b1e1-49de-a63f-203f82ae37de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039db7b4-043c-461f-b84b-87b9fc6597e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f339ef-b5cc-47d4-80b5-b7d788cd3a40",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbc33cb-3021-4f7c-a2ab-eb1dd08783fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "560d04a3-f0fe-406f-9759-4f7d40f7365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62fc87d-8489-467d-9681-08f648d7d448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77ca08d-004e-4273-8a64-d1a8a3e5faa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e251603c-dbfc-4803-abdf-ef3f96834504",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac9ef7f-b461-46c3-8d41-1c3c02070262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cafe6e95-ada7-4243-bf63-43670f5fd077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7db10db-62f2-4310-a2b6-4f1a8e5e1dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c13b05-7fe2-4aa5-914b-009f47d0678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadb0011-635b-4113-beaf-b70f968c4ed6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2491640-380c-4bf3-9435-e6435faaf5d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ee872a1-77e2-4b84-9c51-788e5c142a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf6516b-8ae2-4439-8563-9c587a377ddf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f772e092-728c-4165-aca0-d315a3ca5a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5117853-ae1f-49c0-8fc4-6117574ab0ab",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d7e0ad-b0a6-4cee-ad54-fdcdc923a863",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06290ef6-21ae-440b-aecd-b2a9703bcfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a384b459-505c-44d0-89b4-8fd510802bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e0e044-2920-452a-853b-afb6e3dcb805"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "578ad0fa-9d88-41e2-bb07-691568687455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d094a9b7-1ad2-4e8a-a745-cd18120f0200"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a874babd-6002-4aef-b4d1-53e8e0e3b5c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d6a68b2-0368-4038-bed4-28219a64a2d7"
                    }
                  }
                ]
              },
              {
                "id": "c689846a-7405-4481-8055-ae9cf2ac695c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4613898-0c6f-4bc4-93e3-ce47ea6c1717",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7096ef-aef5-4a4a-9b9b-8159a670f7fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "acc84be6-8fcb-4f7e-91ba-0f88d31d2563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5765d0-877b-49d7-a767-f649f392e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03adc747-4089-4491-b78e-fa5354bdae41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6b0fa23-6c50-4792-ab46-c84d6b46e798",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2660027-25d4-448f-88c3-ec6386b0f783"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f7bc761-26c0-45d5-b4ea-7d0d4e8a1db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e449ce4-368d-413c-bca3-129470490f33"
                    }
                  }
                ]
              },
              {
                "id": "e99b87d0-15db-4377-9d3a-9fc1827dc60e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e9e12745-1c5c-4423-abb5-b25e1d2b22f5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc12e3e-d76c-4442-926f-1b57850e18ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4600045f-41a1-4a8f-821d-57cfd18bf332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b057f73c-15ec-4ccb-a3b8-deb0aac06e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59745683-910a-4d15-8bc8-f9b1cb19ca86"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cf182887-2603-4cd4-a9bd-7c95eb61c75e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d6f56892-b2ac-4652-ad7c-7f285321320b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc001b95-f207-4481-8856-f9bbdae6728e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "314db380-2900-43bf-877f-468a5a97dcc8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21799458-e6e3-4abb-964b-770a96f3a7a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c54b2f1-27fd-4077-a0f4-09dc504ace24"
                    }
                  }
                ]
              },
              {
                "id": "b5fb94b3-cb4d-45cc-a3f1-501cc0123a46",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aff5b634-8dbb-4f26-bdfc-45e8d926133d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c19cf3f-d24a-409a-8747-a0ad6214c502"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2580a472-ad9f-4e94-89f3-86fe70605902",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c5b242a-643d-4a69-a7e5-ed66a51930b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38f7016b-8b10-4e22-8d0a-3ed272de4410",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "31712c7a-1923-4d7e-8663-e6861cb6224a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7deab68e-20e3-4603-8476-c2f3e572874a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fd8642f-e9fb-4f17-b904-b49252624b2e"
            }
          }
        ]
      },
      {
        "id": "119d1d47-d2a8-4082-800b-98f03f13d79f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b3559779-0196-401f-a657-c4d891646918",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ad3fc1e-b416-4e7c-99a2-cc86c63e1b70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b1e1233-2c55-42a2-a15e-b5ece3571529",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc41d358-c0f0-48a0-9ae5-db735dbd94ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2dcf59df-e964-44f6-8bcc-f188bad094fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b068c-4326-434b-977d-f09a6c0cb28b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4529370c-36b6-4c9c-90a8-1eeb87ed9faf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c74b56b8-2740-47b0-98a9-e46e35b34a57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45c67a53-8294-49d0-a8f0-f4dd0ae6ace1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfb7b73b-d861-4875-813d-f1378f3f7e59",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2420da-4279-467f-9ef9-c6159b302d37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4face36d-2216-4edd-8638-9e073b8a6fa6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a1cb7304-c6ab-4c81-985b-7c28bb3dc9e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cf639c7-7d5f-43c5-a9eb-e2e9abcf0a1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c64c5ba-19b6-4efc-b610-28238d459396"
            }
          }
        ]
      },
      {
        "id": "fb9167ef-3be3-4c1d-90f7-a91a97587dc5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "8a012331-69ba-4fa3-afe8-47db4d7b69ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "134b5c25-58b0-452d-bda4-e5e4c57b9a9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ab03a30-7ced-4eec-90e2-4293f48a85c1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001eb342-34a7-4cea-9b64-e474b0b8b28f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e035a65c-516d-46e7-a2af-2316d95c3493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0309a39-6cd3-4a31-b8db-eed57371172b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "864c2db8-6b7b-4b52-8a28-20d7cdb364d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55d23385-1a35-4a56-9dc2-f097e97fdd40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59ace084-4213-4846-a75c-a066381ef56b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bdb301b-dc8e-41d5-9b1f-50edb73895dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ffa9696-33b2-4a20-8bed-760269183491"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b590dd84-856e-45d2-97b7-135726c6d20e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "84039d8d-ab18-4c61-97ca-e16801afdf85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09fe1cbd-a4d6-4396-a634-55ba509cefa4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48a1421c-de22-4376-b5d9-912a0effae15"
            }
          }
        ]
      },
      {
        "id": "7d2fdec4-5737-4299-8af5-7427efa64fc4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e251e8de-b0c1-4a52-a403-b6e3876e5981",
            "name": "Negative Testing",
            "item": [
              {
                "id": "302fd09e-4f30-4136-b023-a1973d2995ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e81aa88-c855-4adf-843c-30486e62ec86",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c8d5b-b3a6-4a2c-810c-bc8d17d70c23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e9b9f46c-a961-4d29-9e16-19812df42697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee431e60-9904-4f60-b9c3-51e0e81d6a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef21326e-f34a-4a4d-a6c4-b0125be55fb8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a25e09b-f7b6-4571-ba5e-406a6d7adcda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32fbd7e2-a322-4fed-86c3-5ed454e979d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40af7b59-3d0a-4602-96be-50295829e857",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a74f7d07-e2f4-402c-ba67-b1f678c5316b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3560cdd-c4d8-4dbb-b23c-6b6e10dd85ea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6643a7b-56e2-49aa-a51d-00110077aabe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36b168de-4f70-4c98-9f2e-533d2ed34429",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "890b2b88-76f8-4e0c-ac75-c3af51e5dc73"
            }
          }
        ]
      },
      {
        "id": "1c1d6c49-fd0d-4977-b0fb-98a32e70247d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f154732-1327-4c0d-a638-b8eeb6f2595a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "906ce235-158a-4141-95f4-7f648c873ddf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9a9d9c1c-17bc-45a7-95ba-ca52fbd18b16",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1b8e93f-7b62-412a-a955-be56aadf490d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c6aa4c4-5ffb-41ba-abe5-74f0fac70311",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.80701754385964,
      "responseMin": 7,
      "responseMax": 5285,
      "responseSd": 410.45872662978405,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698453141960,
      "completed": 1698453189415
    },
    "executions": [
      {
        "id": "291fadb2-4b4a-43db-9f05-488cad847329",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3ccb058c-85a2-46bc-9375-da3fd3af4cca",
          "httpRequestId": "aa2159c8-89db-4670-bf04-3fdbdb5262e6"
        },
        "item": {
          "id": "291fadb2-4b4a-43db-9f05-488cad847329",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b5f88b32-8169-4a59-ad0b-85b6b0fdd7ee",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "a73bad3f-0717-4ac5-b362-60370a362b04",
        "cursor": {
          "ref": "1c5dcbfc-d78e-4cea-bb97-583e138131eb",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f908ad34-b8bd-4766-b416-45a8587e49ea"
        },
        "item": {
          "id": "a73bad3f-0717-4ac5-b362-60370a362b04",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4d32de31-a890-4953-865c-0bf7001a4423",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d20d8e42-e0a4-47a8-b03b-20e0b25eaa66",
        "cursor": {
          "ref": "1635da63-2539-486e-96c7-65328f39fd35",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eaa4ac6f-6f9d-427d-a20a-a22c7f0b5a6f"
        },
        "item": {
          "id": "d20d8e42-e0a4-47a8-b03b-20e0b25eaa66",
          "name": "did_json"
        },
        "response": {
          "id": "2f94c1f3-4228-4970-ab2a-072964b38b8a",
          "status": "OK",
          "code": 200,
          "responseTime": 268,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4c29dd-353d-432b-b661-6eed00d5890a",
        "cursor": {
          "ref": "78f59ce5-5009-4afa-b713-8d7f962dfcb1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d9344e43-76d6-49c2-ba76-c13ec8c65601"
        },
        "item": {
          "id": "af4c29dd-353d-432b-b661-6eed00d5890a",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7b60339-3962-4910-b537-5ba8221c7ef6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 842,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4c29dd-353d-432b-b661-6eed00d5890a",
        "cursor": {
          "ref": "78f59ce5-5009-4afa-b713-8d7f962dfcb1",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d9344e43-76d6-49c2-ba76-c13ec8c65601"
        },
        "item": {
          "id": "af4c29dd-353d-432b-b661-6eed00d5890a",
          "name": "did:invalid"
        },
        "response": {
          "id": "b7b60339-3962-4910-b537-5ba8221c7ef6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 842,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25f1e85-e6a5-44bd-b658-7de4e4f1a344",
        "cursor": {
          "ref": "e6be4ab8-4471-485f-8d67-ca0e8802d2ce",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "30cd4875-6393-4c43-881c-b7caada7ef0f"
        },
        "item": {
          "id": "f25f1e85-e6a5-44bd-b658-7de4e4f1a344",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "35b80a9c-a620-4f32-93ba-4cbbe1c97ce0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bf687f-5796-4d98-ab1c-7e6b7df6fe6a",
        "cursor": {
          "ref": "a7082627-1911-4057-b8df-4a4e28cf612c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "313cdb8f-c3b1-4bd1-a108-df4e34f2a120"
        },
        "item": {
          "id": "76bf687f-5796-4d98-ab1c-7e6b7df6fe6a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "90ced4a2-dc6a-483a-a652-1f3a5c1a271b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483046d6-fca4-478a-a37b-9f185996c514",
        "cursor": {
          "ref": "be7c2ddb-eb4f-4d4a-84f7-5f71721533f7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8034eeff-9940-4c78-b1b2-51cf0d17dfe7"
        },
        "item": {
          "id": "483046d6-fca4-478a-a37b-9f185996c514",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5e5abb9d-2668-47c0-a4e3-b161373a557e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 105,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2730645-984f-48b1-9f81-095c3c2364bb",
        "cursor": {
          "ref": "021290d2-c5a7-4dce-baec-6e9c02deef04",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "38667f9c-3ef7-4b09-8f9c-db334384c938"
        },
        "item": {
          "id": "b2730645-984f-48b1-9f81-095c3c2364bb",
          "name": "identifiers"
        },
        "response": {
          "id": "107055ec-264b-46e8-b137-b2d6648069ca",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7043101e-03d4-465e-b903-98980070a7b7",
        "cursor": {
          "ref": "969ccac9-a0e5-4881-8849-6e09b10a6ef8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0884551a-b143-4404-b7c9-8b262be4493c"
        },
        "item": {
          "id": "7043101e-03d4-465e-b903-98980070a7b7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "21111ca4-4a46-4fd7-89c2-d485be97f5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772e2dca-89e5-48ca-b06c-9f9484cd1540",
        "cursor": {
          "ref": "3b78b434-a6f2-4bd3-b21c-8c6627901089",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3cf55200-372e-4156-b37c-3f73155ca1e2"
        },
        "item": {
          "id": "772e2dca-89e5-48ca-b06c-9f9484cd1540",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dcbf0374-3be4-401e-8bb2-44107d21539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17760a9-9ce3-4126-8251-6a4a1b07e1f3",
        "cursor": {
          "ref": "13f77bb7-85f4-4a85-9a37-feaf75dbbc2c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cc0395d6-8cb4-435a-994f-1a5c45151890"
        },
        "item": {
          "id": "e17760a9-9ce3-4126-8251-6a4a1b07e1f3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d35d81ca-2cce-49c8-b794-06e55504bba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ef2f90-f4ad-4e34-9010-664ad5378f70",
        "cursor": {
          "ref": "2e06dc3a-0e9d-4ed7-acd1-f0bee8459701",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e38c13ee-50c1-4271-8bf0-9e90574f4158"
        },
        "item": {
          "id": "09ef2f90-f4ad-4e34-9010-664ad5378f70",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6cdc0064-4170-4c31-aa8d-d7b7bd79d207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c41cfc3-14aa-4bd0-aac3-5194e8446e36",
        "cursor": {
          "ref": "42e89ca1-8b95-4b31-bb31-2d6cc66aab2d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c1716702-e9d7-446a-9ec0-ed057f15512f"
        },
        "item": {
          "id": "0c41cfc3-14aa-4bd0-aac3-5194e8446e36",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4ceb49fa-adf9-46a1-9ddb-2fdf3d767798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b43709-b34d-42c1-bc29-c89597a1aef4",
        "cursor": {
          "ref": "52100b6e-89df-472c-a6b0-891753d59174",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5b8e5cc5-a440-4629-92b2-0df634549082"
        },
        "item": {
          "id": "95b43709-b34d-42c1-bc29-c89597a1aef4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3a6ae84b-0b56-4c1b-9a71-1366799e7744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5511b49b-28ae-45b0-9959-bb8ee1593ac3",
        "cursor": {
          "ref": "a353831f-1149-4652-bdb2-7ff2457783bc",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "73df4a31-721d-4cf5-8845-327a4a07e489"
        },
        "item": {
          "id": "5511b49b-28ae-45b0-9959-bb8ee1593ac3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8bfe0614-97d9-4f35-8fb6-05292b413729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ddc138-4549-4176-a32d-1cd38ff25651",
        "cursor": {
          "ref": "ff0aa128-39c6-4d94-a947-cde3616dd614",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "39f5389c-02b1-41fe-b3b9-c054d1a003be"
        },
        "item": {
          "id": "c1ddc138-4549-4176-a32d-1cd38ff25651",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5298907b-9f4b-4ca4-bbc9-ee2edca146de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bb751f-94ae-4b6a-a4b3-00edad80b686",
        "cursor": {
          "ref": "b183b25c-ba76-466b-b409-56b023bc0812",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "297e5c95-b563-4349-85fc-6335cd01e0fc"
        },
        "item": {
          "id": "12bb751f-94ae-4b6a-a4b3-00edad80b686",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b075e70c-6f89-4628-bb97-691e6ee7f4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d0c1fa-df13-4059-88f2-e134db7a94bb",
        "cursor": {
          "ref": "25fa8971-39f0-4692-90d8-011b3ccb2cd3",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8107ba87-1cdf-489b-93fb-be2c1be381f0"
        },
        "item": {
          "id": "08d0c1fa-df13-4059-88f2-e134db7a94bb",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ab953afc-f6f8-425c-9219-a34579411520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978b20e9-6a1b-4ec6-b3f6-2465dd8a7107",
        "cursor": {
          "ref": "291af482-8dba-435d-9477-a8a6a831b126",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8767edfa-ec72-4f48-9ec1-957ed36ca0be"
        },
        "item": {
          "id": "978b20e9-6a1b-4ec6-b3f6-2465dd8a7107",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c0f4c524-7c9f-41bf-9210-59c0bb1f0d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce4c67d-cda9-4524-b68e-bfcc6ecb65b1",
        "cursor": {
          "ref": "1642b7f2-0007-4286-85ff-dfde71b80e1c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "83d0aabb-fee8-4674-83a1-200a4b28cf17"
        },
        "item": {
          "id": "9ce4c67d-cda9-4524-b68e-bfcc6ecb65b1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9e8a6de9-59bb-4b9c-9cbd-c6de61b8e71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c659b1-299a-4679-ad7d-8dfc15aa66ad",
        "cursor": {
          "ref": "ff05f4ad-756f-4198-93db-c7d8017ee981",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a81a4dda-1c6c-42c7-a800-1d088911bbb0"
        },
        "item": {
          "id": "05c659b1-299a-4679-ad7d-8dfc15aa66ad",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c25301b5-cbf9-46f6-9606-f63830f20a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796ef169-7e81-4e2f-ae22-7d3afbd9ebd5",
        "cursor": {
          "ref": "362bae41-38f0-4de7-9512-99e9c017b788",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d588442e-653c-4162-b68e-9cb63039a18b"
        },
        "item": {
          "id": "796ef169-7e81-4e2f-ae22-7d3afbd9ebd5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b2903b5a-f525-4246-bbf5-27c8cc8b5f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5257f6a9-7a9a-48ea-a755-950f087db347",
        "cursor": {
          "ref": "dccd3dda-9f9f-4ec9-9594-20b1de14c181",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4e7aa1d2-e293-4fa7-a98f-9696226b6e4f"
        },
        "item": {
          "id": "5257f6a9-7a9a-48ea-a755-950f087db347",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a641e2b8-7335-449d-b7c7-46fcf4c9ad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6ea43f-efda-4785-91de-170e05c0cad8",
        "cursor": {
          "ref": "dd4e01f8-85af-4e01-be40-24c91cbb2bf4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "87e3f4d7-edd5-4371-837f-8c08eff4140f"
        },
        "item": {
          "id": "6c6ea43f-efda-4785-91de-170e05c0cad8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cf80dc0c-0087-4326-a327-5a2916e3be0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c554812b-b4cf-4a30-b2c8-502daeed3249",
        "cursor": {
          "ref": "05f63e56-0f08-47c9-b564-03bc50f3acee",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4cc5337a-fe57-48b6-abf5-4366a37c4655"
        },
        "item": {
          "id": "c554812b-b4cf-4a30-b2c8-502daeed3249",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "55f52663-7f04-4bc3-811e-4f04ac325e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c1f4df-e916-45c6-86f3-846be1a74c60",
        "cursor": {
          "ref": "bddd562d-c8eb-411b-a158-f8ccfef7e633",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b1b8e590-027a-415d-a399-9e3965641f3d"
        },
        "item": {
          "id": "18c1f4df-e916-45c6-86f3-846be1a74c60",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4da399ba-f448-470c-8405-b2ab5575c112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996a54e4-404d-422b-bd41-45421fff3150",
        "cursor": {
          "ref": "5936fc54-2e4e-461a-85b6-4ce772eddca0",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3007da31-0071-4812-a687-ed001c958caf"
        },
        "item": {
          "id": "996a54e4-404d-422b-bd41-45421fff3150",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "18f06966-b239-470b-80e7-5967e4b1bb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cbccff-fa18-4819-a733-973dc453afba",
        "cursor": {
          "ref": "1a3775f0-c852-4eda-a0b4-65b554c1aa72",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4c527ff5-21e9-4a5e-a255-59e107a8390a"
        },
        "item": {
          "id": "d1cbccff-fa18-4819-a733-973dc453afba",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ed1f385c-6d31-44d5-ad49-4472b1b098da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b331267e-c407-4eff-b201-e2d1f555d96a",
        "cursor": {
          "ref": "18082b87-1099-4eb3-be81-bf597cbbeac9",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "54eaf3b6-557b-45e2-af7c-4463a2e3dd3f"
        },
        "item": {
          "id": "b331267e-c407-4eff-b201-e2d1f555d96a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "42724d55-1b44-4ca2-a4e3-2a0292b006d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24977161-c2b9-4620-987c-ab3106f1d813",
        "cursor": {
          "ref": "56b45a45-5375-4297-8517-cffe5476d318",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d8db849e-87d2-42cf-8ea3-201eadafc627"
        },
        "item": {
          "id": "24977161-c2b9-4620-987c-ab3106f1d813",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5fb56e0c-929d-4e2c-990e-2cf12cdfa296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6747f4-7ab5-499c-bc45-2d8b28abb184",
        "cursor": {
          "ref": "b5eeb758-7d0a-4fe6-b204-30a69841bdc8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a970d2ce-cdfa-4136-bf28-bc1a92834adf"
        },
        "item": {
          "id": "8e6747f4-7ab5-499c-bc45-2d8b28abb184",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b62fbc05-b3e0-46be-9b06-c0bcdf7af813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a003d3e6-8b16-4179-8934-16cf1ccc6c30",
        "cursor": {
          "ref": "1adbceca-6a2c-44bb-9979-10822c88db6c",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79319dbc-8ae2-444b-9bbc-eff55010c4dd"
        },
        "item": {
          "id": "a003d3e6-8b16-4179-8934-16cf1ccc6c30",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "35c29acd-0960-41cb-8e3e-4858cb06b921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603bdc8d-c076-44c2-b272-80a7966de9b0",
        "cursor": {
          "ref": "cd2afa7a-2f12-4a65-b49b-9666d468361b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d8b3b4c4-42c0-4bb0-b376-7ad66775b4f3"
        },
        "item": {
          "id": "603bdc8d-c076-44c2-b272-80a7966de9b0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "21cfb206-817f-4272-842f-0551762d893d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087ef34c-13fe-49ed-afec-7745cbfc159a",
        "cursor": {
          "ref": "ecbb10be-cb45-41a9-8300-332540d78a4f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0bbab4e6-be11-4884-94ee-06b54a861558"
        },
        "item": {
          "id": "087ef34c-13fe-49ed-afec-7745cbfc159a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "684526d7-f65a-4c60-8b2e-ae606ce7f566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ac2d47-ca03-4ff1-a808-73d38e71b8fb",
        "cursor": {
          "ref": "948c035f-d976-48cd-b3fb-daba90ccbb9d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23b91f9b-8f8a-4535-b476-ea11a7a456b3"
        },
        "item": {
          "id": "81ac2d47-ca03-4ff1-a808-73d38e71b8fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "691e4c68-679d-4cf8-9b0f-f742ed36d032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f90c0a7-2b73-4ee8-903c-0e9837aa446e",
        "cursor": {
          "ref": "4ced409a-7274-4e6f-a2ab-384d3bfebc73",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a9d82d3c-9f94-4223-903f-cea07b27306c"
        },
        "item": {
          "id": "5f90c0a7-2b73-4ee8-903c-0e9837aa446e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b198e592-3080-4326-8628-748d788aafd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39e39d3-c7c5-47d3-95d1-ee26bd08c294",
        "cursor": {
          "ref": "484e5fe0-5dbf-4541-affd-d5ae369d1997",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b9aa39b0-3aae-40b2-8eed-5924d3bb9b9c"
        },
        "item": {
          "id": "e39e39d3-c7c5-47d3-95d1-ee26bd08c294",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "93bfd20c-6e1b-421e-921f-a6d6d31d3e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8622e3fc-14fb-42e9-82d0-aa6a30f2594c",
        "cursor": {
          "ref": "c9542f03-036f-4453-b9a8-327e31dd24e2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4b8f92a8-75f8-4770-94f2-0a45f71b7489"
        },
        "item": {
          "id": "8622e3fc-14fb-42e9-82d0-aa6a30f2594c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e2b72ce-32ad-4429-be50-711643ded471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d78ddc-2a0d-4843-a95c-ce0b811fe271",
        "cursor": {
          "ref": "cbd00cd8-3271-4ee1-a0ea-b0ef232a2dea",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8dae72bd-c25d-47a6-978a-b8ec2dbdd47c"
        },
        "item": {
          "id": "65d78ddc-2a0d-4843-a95c-ce0b811fe271",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80474f49-0fd0-4241-b3ef-bcbbe6caf012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08288f5d-ba34-4641-b011-3398abbc24f0",
        "cursor": {
          "ref": "1c347765-1f17-42f5-9ff7-b91127c511de",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7d6db9e4-18c3-4d35-8f36-45c7a1d44480"
        },
        "item": {
          "id": "08288f5d-ba34-4641-b011-3398abbc24f0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ae60d438-1f27-4f43-b8b8-072966cd28d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ae2fd5-1697-4fc2-88f0-e87477923746",
        "cursor": {
          "ref": "79a18f3a-31f1-4ebf-93ef-29b21c5b109f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e23c59a9-96da-4b64-a7c2-c57d6ea81908"
        },
        "item": {
          "id": "91ae2fd5-1697-4fc2-88f0-e87477923746",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fb8d1710-4221-4296-8a85-52394ddfb363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cd9d77-e4c6-431d-a738-1e6490451ac2",
        "cursor": {
          "ref": "bba27054-8925-4646-b932-23b64fd9fa87",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "839dae64-857d-42e0-ba2a-b55a220d1d67"
        },
        "item": {
          "id": "a3cd9d77-e4c6-431d-a738-1e6490451ac2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad28b286-3c66-4ed4-ac90-ec7620428295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5221d006-53ba-4c2b-a90b-b61a8ac44138",
        "cursor": {
          "ref": "6aecee18-b43a-468a-b588-6c1ddd965ea2",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2d78245d-5d55-4241-a8ae-87149981e42f"
        },
        "item": {
          "id": "5221d006-53ba-4c2b-a90b-b61a8ac44138",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c112598b-0680-4dd2-8afc-1ac65e612e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bd17cd-fe88-423b-907c-d22a2fd7e142",
        "cursor": {
          "ref": "d30b33e8-b840-4c89-9370-3de22436f02e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ed654a2c-5ecf-457e-b31f-db4d17c4c357"
        },
        "item": {
          "id": "a4bd17cd-fe88-423b-907c-d22a2fd7e142",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ac33de22-f2d3-4166-8d67-940dced2b321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebed640-f3f6-4b8d-980e-32298ee93cae",
        "cursor": {
          "ref": "317eba18-d7ae-492b-8d3e-3b0b2d778904",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e1a3cb05-6773-41c6-a75b-83d97175a918"
        },
        "item": {
          "id": "3ebed640-f3f6-4b8d-980e-32298ee93cae",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8d39d42e-5793-4a0e-9964-17e4deede2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095364e1-2763-4b96-861f-5ee50c72461e",
        "cursor": {
          "ref": "58f3d33e-9fb5-40cb-b902-3a9251f82182",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6163b6e5-2338-4f24-9290-4e2e8c46a86b"
        },
        "item": {
          "id": "095364e1-2763-4b96-861f-5ee50c72461e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5302cc71-f73a-419e-833a-650835f7d514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c20003a-2aae-4f19-b619-1c0fbd2c37f0",
        "cursor": {
          "ref": "84d5c381-aff2-458e-85ec-f982c95fb345",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a47054ba-d2ff-47b9-a97b-eaa0cd3dcfe6"
        },
        "item": {
          "id": "7c20003a-2aae-4f19-b619-1c0fbd2c37f0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fc76999e-8556-4a32-ba67-14bcc64acfd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c574e-c392-4092-a25c-38f8f2551322",
        "cursor": {
          "ref": "b91dc114-8bd2-47f9-9467-7229678f6696",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a821d102-706a-43c7-8ccd-06eb2188b0d0"
        },
        "item": {
          "id": "a74c574e-c392-4092-a25c-38f8f2551322",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "82d9775d-32d6-42b8-9f32-f98a5ca51440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eaf3f3-f037-4564-a65d-f37f9f436cc3",
        "cursor": {
          "ref": "635effae-4f9a-4ce8-9020-582e2f00e6a4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "41538e07-4390-4783-8e2c-5318fa94cf20"
        },
        "item": {
          "id": "30eaf3f3-f037-4564-a65d-f37f9f436cc3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1e8ebddc-3630-40ef-a39c-97e29991ddcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77841c08-89fd-4d43-8498-5111e3efb628",
        "cursor": {
          "ref": "81ad90d0-4d51-4c11-bcc2-4f252353c592",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9be7e14e-bbc2-4ea7-a9de-8fc7f61a7ae2"
        },
        "item": {
          "id": "77841c08-89fd-4d43-8498-5111e3efb628",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "512fe23b-2fe1-4d86-9763-bb40cc32f50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea71cac-f920-4446-a85d-54cd520177bb",
        "cursor": {
          "ref": "1598c629-8b35-4ec6-9101-01fa9fb07991",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1f1bc511-40c3-44e8-b941-6b1b4284bcd7"
        },
        "item": {
          "id": "5ea71cac-f920-4446-a85d-54cd520177bb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b920a630-e166-4c0a-b78a-10eda2b15d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e2a8f0-f7dc-45c1-9d0d-52216daface3",
        "cursor": {
          "ref": "11ce140c-69ce-456c-aad1-d067efe87a6e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5a7c7018-2e3e-4027-afea-52ed78a17038"
        },
        "item": {
          "id": "33e2a8f0-f7dc-45c1-9d0d-52216daface3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4ba4a9cb-8bbe-4ca8-b512-770a2a820b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bcf7de-d18b-4a19-8da2-fbf1e18acc15",
        "cursor": {
          "ref": "669a2996-69d4-41f1-a5a6-ef62a44d4dfd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "de5062f3-e011-4cdd-bb5a-5fb84ad96169"
        },
        "item": {
          "id": "27bcf7de-d18b-4a19-8da2-fbf1e18acc15",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c80142a4-bb03-4775-8ad9-9039b21c7163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b681326a-8d64-422e-847d-df1da2bed8db",
        "cursor": {
          "ref": "3f810c5d-3d43-4673-8562-9971cf61aabe",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aacedeee-a7ad-423c-9255-79e242ca6d2c"
        },
        "item": {
          "id": "b681326a-8d64-422e-847d-df1da2bed8db",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5a65643c-8c74-4f0e-a76b-2b3a32b0a9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c645212-fbd5-4f66-9b6e-ade4a5749277",
        "cursor": {
          "ref": "4ba7d006-eac6-4165-880e-c752a1225104",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b9a266a0-670e-4efa-beb4-cb12f33baa9b"
        },
        "item": {
          "id": "9c645212-fbd5-4f66-9b6e-ade4a5749277",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af507025-b6c2-4def-a89d-3441ab617487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e1e440-573c-4cf9-9184-f35f3949e9ed",
        "cursor": {
          "ref": "8dc978f9-b502-4d62-b5a4-bc225507f003",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b131641c-8437-438c-94cc-5b3d42266f65"
        },
        "item": {
          "id": "37e1e440-573c-4cf9-9184-f35f3949e9ed",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "37e6530d-45e4-43e5-bbf3-ff379efeb3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a3069c-ff9a-4656-96cb-abc000475d05",
        "cursor": {
          "ref": "9d4c6e2c-81d3-4a0f-bbf7-ed4c43b97d2d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3d1534a8-ff50-455e-9106-75b43ec7de37"
        },
        "item": {
          "id": "d3a3069c-ff9a-4656-96cb-abc000475d05",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8672fdd7-a01b-4ebe-98ea-70ff68afb7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21b7f18-4fea-4d11-bb71-063627dccbb7",
        "cursor": {
          "ref": "acea1476-3aeb-4771-b0fb-1f8b5a9f8a14",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "eb90e78d-6e42-4622-a29c-f116909dc290"
        },
        "item": {
          "id": "a21b7f18-4fea-4d11-bb71-063627dccbb7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1bc5b7d8-0c5b-4850-be00-d229737790e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417eb2de-d451-4631-8745-4919201874c6",
        "cursor": {
          "ref": "fba248b5-177c-491d-83db-6b3389990171",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "754aea86-4e8f-4a1c-8d35-9c701b55d5d0"
        },
        "item": {
          "id": "417eb2de-d451-4631-8745-4919201874c6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "76944706-9a46-4e73-a7d6-0402b06be4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2023f29-1158-43f5-a6f8-8e51d8eee023",
        "cursor": {
          "ref": "d7a85d8f-754f-4c40-8a33-01032ffe067e",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e609d0d6-3c83-4f87-a3fe-b8fe1a686f1d"
        },
        "item": {
          "id": "e2023f29-1158-43f5-a6f8-8e51d8eee023",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8a1ff87b-cc5e-4f11-86ee-f76a7aa8f577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4715843e-a941-4382-a24e-36b57233fc0d",
        "cursor": {
          "ref": "ff122f1c-ff75-4501-8514-e4957fe341c5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b315494f-48a2-4f96-a488-6537f9dd6de9"
        },
        "item": {
          "id": "4715843e-a941-4382-a24e-36b57233fc0d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "93bb4694-63b3-4ca3-8344-532a29781516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71be911b-f37a-4270-9882-ac1c5689e44e",
        "cursor": {
          "ref": "21ffdd23-0a7c-4711-8f9e-122b291dec85",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "79dab1fb-4686-4c39-be20-ec6a490b0e5e"
        },
        "item": {
          "id": "71be911b-f37a-4270-9882-ac1c5689e44e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "68e18d3b-87b8-490a-8863-9244212b9130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf6dde-cb1f-476f-afab-bf685ae21bbb",
        "cursor": {
          "ref": "871488f6-49d8-469d-aa84-e51ada84a06c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e5600c30-e50e-47d6-8a48-a043e72de22f"
        },
        "item": {
          "id": "6ebf6dde-cb1f-476f-afab-bf685ae21bbb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a45be08b-7de4-4397-b3ba-4a52aa1107fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e968c8a6-74bf-45b4-ac1f-cd582fcaf5d4",
        "cursor": {
          "ref": "7caa2ff4-56c0-44e9-a1df-159d2102125b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d9d77794-9d9c-47f3-bb55-9235d603a725"
        },
        "item": {
          "id": "e968c8a6-74bf-45b4-ac1f-cd582fcaf5d4",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9d184eb9-a625-426c-9790-4c617baf5b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdf806c-22a4-4f68-9bcc-6d542236119b",
        "cursor": {
          "ref": "5cf472b6-62eb-499f-bf05-bbbde91a6137",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "68358576-9d5f-4280-9d10-76092355105b"
        },
        "item": {
          "id": "efdf806c-22a4-4f68-9bcc-6d542236119b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e21024de-d1d0-48e6-a42b-f3fd076354fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a790042a-362b-4595-9abe-86f544ee82dd",
        "cursor": {
          "ref": "dd4ca10a-8389-40ab-b79d-ff0d2bfd2637",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cace0f04-00d5-4182-b3e0-b68eec89b14c"
        },
        "item": {
          "id": "a790042a-362b-4595-9abe-86f544ee82dd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "464bfb1e-b8bb-40fb-aa31-9b6e9b486918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38ba45b-48ff-4637-b0be-816f416a020b",
        "cursor": {
          "ref": "7785cd50-f50e-4e87-9c2c-2b1d2ed5fe3a",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "db5b6b13-15a1-49d1-8e12-2b02579d709d"
        },
        "item": {
          "id": "b38ba45b-48ff-4637-b0be-816f416a020b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7fc074d-d709-4be4-96c4-7a6c19803c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbddc3bb-494e-4042-9e43-a388fa7bf221",
        "cursor": {
          "ref": "1165b2b7-2e45-4267-9744-f5689885fb0f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7996e209-efcf-43b5-9dfe-8b377c94a337"
        },
        "item": {
          "id": "cbddc3bb-494e-4042-9e43-a388fa7bf221",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0c792db6-9750-4983-b707-53657e65f1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085321c0-ccd3-4837-a9e4-9730a842e1f3",
        "cursor": {
          "ref": "7b317fb0-a53b-4dbc-adef-db4a6f73550d",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1d22a869-d8f8-4553-86cd-004a29742548"
        },
        "item": {
          "id": "085321c0-ccd3-4837-a9e4-9730a842e1f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ed015d31-f42d-4d12-8e1b-0cbb31e8e342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0f126a-b1da-4248-bdf4-7ff40c823c8e",
        "cursor": {
          "ref": "764f7d54-0e1c-4249-9dc8-0fa8ebc6fb08",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "63b97136-e151-4ed9-bdd3-d543adae3cfc"
        },
        "item": {
          "id": "7e0f126a-b1da-4248-bdf4-7ff40c823c8e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fdcdaf95-34d6-4dea-8d95-ddefa08a4384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc62f64f-3208-4a3c-8c46-d6e2ce6412f1",
        "cursor": {
          "ref": "1ec8c64f-fb83-4bdf-b3b3-bd6623b0b202",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a7650cae-c27e-4763-b218-13996a231e9d"
        },
        "item": {
          "id": "bc62f64f-3208-4a3c-8c46-d6e2ce6412f1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "13404edc-c87b-45ca-b674-aff3d27f87c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b990628-b3a7-423e-b2ba-6faef7009052",
        "cursor": {
          "ref": "1524294b-9597-4127-925c-09e1b29d779d",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "df1117b3-253a-4a42-84f5-178ec1d5f727"
        },
        "item": {
          "id": "3b990628-b3a7-423e-b2ba-6faef7009052",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "823de33e-4bc6-4724-8980-3739cc897683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d669e356-f794-47f1-91f7-0abcc5240849",
        "cursor": {
          "ref": "76d613a6-c800-40f9-b4bf-8bc539f49a34",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "454c0baa-5629-4ba9-b6c8-3c0e859f58b6"
        },
        "item": {
          "id": "d669e356-f794-47f1-91f7-0abcc5240849",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e75e6f96-9a30-453f-96f0-1c9ba9a0392b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d606d91f-52f3-4163-9448-121b29d449bb",
        "cursor": {
          "ref": "a917e9de-f3a4-49c3-9bbf-8a3448773c08",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "28db60dd-b77b-406c-a2f1-2df3f82d2083"
        },
        "item": {
          "id": "d606d91f-52f3-4163-9448-121b29d449bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "50c2a3dc-357f-46d3-83d0-31a34458b02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f775e096-4658-4149-821d-e41c6d3df675",
        "cursor": {
          "ref": "9ded6c57-76be-42e2-9d03-2dcc309a21c7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e3c60aad-faa6-44ea-9a75-23dcb20b2d5d"
        },
        "item": {
          "id": "f775e096-4658-4149-821d-e41c6d3df675",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "be5ee340-2b16-41d1-9018-2aec45ee3ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8700c08-10b1-4790-9b28-b4e2f9de5b1e",
        "cursor": {
          "ref": "9b9b1293-3183-40cb-9f08-2547406a3cbb",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d556cef3-db78-402a-beeb-4fc6c02cbdc3"
        },
        "item": {
          "id": "d8700c08-10b1-4790-9b28-b4e2f9de5b1e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ae4f0a98-1479-439c-ade5-b30a8d305e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3b1d20-b315-4ec6-9072-907e54cd0459",
        "cursor": {
          "ref": "edf4f51d-ce6c-4171-8c22-d43b7639f658",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "779119ac-7775-4233-8843-7e119a61ff17"
        },
        "item": {
          "id": "1e3b1d20-b315-4ec6-9072-907e54cd0459",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "13406238-e545-41f5-94a5-0de9f4945283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffeed98-43e3-4061-9747-a1ec01caca9b",
        "cursor": {
          "ref": "3e78984e-3318-41c2-8fc2-a100113d28fc",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c9c4f215-3e6b-48ae-b85d-cc7c778a0f92"
        },
        "item": {
          "id": "1ffeed98-43e3-4061-9747-a1ec01caca9b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e22e335d-b8b3-4b2f-a7a3-e20af7e47d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abef473d-120a-42e7-b27f-b4f5b0fcff2d",
        "cursor": {
          "ref": "b9c8132f-8fec-466d-975d-d20971031c02",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a4385081-efb6-4ccb-874a-6d7a19ab2b74"
        },
        "item": {
          "id": "abef473d-120a-42e7-b27f-b4f5b0fcff2d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0bfd32c8-91e1-4716-be0b-6cab7ee9a0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752bbf4f-cb53-4e29-8159-3dfa420e2b64",
        "cursor": {
          "ref": "14ed6b64-ad15-49f7-a7e3-0780893c5f8e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "256ee8e5-4835-40d0-9299-7f66a7119950"
        },
        "item": {
          "id": "752bbf4f-cb53-4e29-8159-3dfa420e2b64",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1d27e715-3ccb-472c-8f4c-5fd800f90433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8bd666-5d7e-4d49-b63d-e023e3f5a237",
        "cursor": {
          "ref": "f799f363-85de-4eea-b1ef-1d72c253344d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8de263d4-01bf-4ff9-a913-88a00436921a"
        },
        "item": {
          "id": "2c8bd666-5d7e-4d49-b63d-e023e3f5a237",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "29d9b7ad-9e67-46df-a99a-3c0270869e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5acc403-7f0d-409b-8bcb-f966fbb81d99",
        "cursor": {
          "ref": "c1d9f84c-dc74-47fb-82b8-7f26721d27e3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cdfa6f15-4256-4e4b-9869-42f5d614e07d"
        },
        "item": {
          "id": "a5acc403-7f0d-409b-8bcb-f966fbb81d99",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ad3437af-c018-4ab3-a759-7e6ad8c1cfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b238f49-f0c4-4c4d-84b0-252709aa3982",
        "cursor": {
          "ref": "cb8087bc-185d-452c-8d4e-879e23e6fd6c",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "78e384b4-fd3e-4058-bc8d-db13838a7820"
        },
        "item": {
          "id": "2b238f49-f0c4-4c4d-84b0-252709aa3982",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "02c0d5b4-065b-4c27-bf84-763537fbacc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0376146-b6e9-4daf-a931-a945b5b32aff",
        "cursor": {
          "ref": "18e8d99b-fb5c-449f-881c-3649182477dd",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "86d338b4-2e2a-484f-9c3b-6503742b9a6f"
        },
        "item": {
          "id": "e0376146-b6e9-4daf-a931-a945b5b32aff",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bdb2ec2f-cabd-43cb-bc1e-429330cf0aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c4b4a1-835d-480f-a61e-afa67b02940f",
        "cursor": {
          "ref": "e9de833e-e368-4cce-96d3-ab0b1a3f5da7",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8bbf3e26-6942-4d76-ae5f-44aa347c016f"
        },
        "item": {
          "id": "55c4b4a1-835d-480f-a61e-afa67b02940f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5df32dab-8056-4672-8258-d8cf2030f4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069b064f-c78d-4461-9918-a442eb77d922",
        "cursor": {
          "ref": "ed7314e5-838f-4d06-a91d-366104939845",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7f4165d6-835c-4fdf-8f51-6a303b8134d7"
        },
        "item": {
          "id": "069b064f-c78d-4461-9918-a442eb77d922",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "423d11ff-edd0-4bfd-b731-332ed9f5295f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dffd0e3-feaa-4b3e-ada0-8c40ac38318e",
        "cursor": {
          "ref": "f50354b7-cfda-4b04-9ec5-db3e214e78a3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7924b2c1-9f4d-4ee8-b960-bbc354ffb971"
        },
        "item": {
          "id": "7dffd0e3-feaa-4b3e-ada0-8c40ac38318e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bd945c5b-5cd0-42ef-9870-7ea4524bb7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3fbfe0-d87e-46e4-aecc-4332c40aac25",
        "cursor": {
          "ref": "213a89a6-1c50-4a86-b172-0deefe1b0d2b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "88d86e94-59fd-494c-a6b4-1707ea108e95"
        },
        "item": {
          "id": "0b3fbfe0-d87e-46e4-aecc-4332c40aac25",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4915de09-7d07-446e-860d-a99657c8bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33417235-f438-4db1-aef6-569a1e00a4bd",
        "cursor": {
          "ref": "98a0294c-71ac-4f2b-9c32-afa2c4dce608",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bdc897db-ff70-435c-ab28-f99ea84d17d2"
        },
        "item": {
          "id": "33417235-f438-4db1-aef6-569a1e00a4bd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "616cba56-3c26-4abb-9b11-a4d1db393f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9502f675-8767-4100-a39d-c93da1360570",
        "cursor": {
          "ref": "3dd9c490-b221-4bde-b656-51cb799b6e54",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b4ca140d-0564-4e2c-83f2-7da21e01a9b1"
        },
        "item": {
          "id": "9502f675-8767-4100-a39d-c93da1360570",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9f21cb64-7d63-4c2f-ad10-d6f849fd1723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8829d5bd-2d3a-4990-b60d-d59598295c66",
        "cursor": {
          "ref": "af4ce8b9-a48d-4965-ad23-eda11aac5fe1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aaa8485c-4ef4-4c32-91dc-6c158663b2a5"
        },
        "item": {
          "id": "8829d5bd-2d3a-4990-b60d-d59598295c66",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "baabc011-9cba-47a0-93ad-c51000b8dc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31a7df3-0ce6-4a6c-a119-28bb1841b699",
        "cursor": {
          "ref": "7e7e0f79-b514-451c-8773-afba569f1ea4",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bab1d96c-1ab2-41c6-894f-e10669e6e98a"
        },
        "item": {
          "id": "c31a7df3-0ce6-4a6c-a119-28bb1841b699",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2d476de6-bf36-47ab-a5b6-92730ec55d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f21ae64-e05c-41cb-b12b-e9dfe49d56c4",
        "cursor": {
          "ref": "0263d0a5-2580-4eae-b8eb-2d22b5f65040",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cc2cfc9f-4f4a-41cb-b276-d84d9ab4ea57"
        },
        "item": {
          "id": "8f21ae64-e05c-41cb-b12b-e9dfe49d56c4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b0eb8347-792f-46f6-a576-a9d01e10157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d10b0f7-6997-4cdd-9f5d-56dc966643f2",
        "cursor": {
          "ref": "ecb222a3-8574-43e3-b287-da7976d11d8e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "52c0bc84-3da0-4b63-94cc-8523ea38da49"
        },
        "item": {
          "id": "5d10b0f7-6997-4cdd-9f5d-56dc966643f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2c505d2f-accd-47ba-91a2-d1e88f1fa1b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace1058f-e142-428f-b8e3-63244ed2718e",
        "cursor": {
          "ref": "46aba331-ec50-415f-879b-5fbb53a2efcc",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d656d1d-a9bb-49b4-83f6-3c54baa8a262"
        },
        "item": {
          "id": "ace1058f-e142-428f-b8e3-63244ed2718e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1284b811-5482-47e4-9039-43ea36057acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649055f6-4ca2-43d2-b096-e1daf2fd4634",
        "cursor": {
          "ref": "501fa908-b218-4eac-8bd2-ff3cf1703d24",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c3955e62-d69d-4170-9b93-16bdc86a7eb1"
        },
        "item": {
          "id": "649055f6-4ca2-43d2-b096-e1daf2fd4634",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "edcb31c8-6bde-44f1-b415-782e18409789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b033032f-b868-40fc-ba4f-2e1483211143",
        "cursor": {
          "ref": "067c0a04-a538-458c-b62b-80c42f8e54dc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3898e08e-3e07-4c64-80b3-0b47300aad55"
        },
        "item": {
          "id": "b033032f-b868-40fc-ba4f-2e1483211143",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3646f3cc-b53e-486a-a1c0-ffb5f4cda4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6193a9-a8c3-4455-8407-341e9c01553e",
        "cursor": {
          "ref": "4b2c153a-bea2-4ac8-b098-a9a6ab8f3ca1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5eda3cb6-b881-45b8-a174-b1f76251b9fb"
        },
        "item": {
          "id": "1c6193a9-a8c3-4455-8407-341e9c01553e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b4024df2-034f-47b5-94da-b681754c7e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1478d234-02e1-4f6e-9ab4-d2885874109d",
        "cursor": {
          "ref": "23a297e3-a184-4d3a-9b8f-d39d1a2d0c88",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f32e81b3-9837-413c-be93-48ec496ae9f6"
        },
        "item": {
          "id": "1478d234-02e1-4f6e-9ab4-d2885874109d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "605db5ed-dd9f-489d-927b-921a04cfaa9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0f8d2f-7368-4f0c-bcf5-7618041be881",
        "cursor": {
          "ref": "1d6cbea8-e09d-4c49-a8ad-41243ff6242b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "db552a36-b2bf-44ca-aaba-8d6777c51949"
        },
        "item": {
          "id": "6e0f8d2f-7368-4f0c-bcf5-7618041be881",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9abf0409-1814-4818-bccc-1a3c748b6d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a29aab-465d-4c4d-81a0-73743b9d0bfa",
        "cursor": {
          "ref": "eadd2d5e-e534-452c-94f8-f895839781e5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "59a6ec54-b90b-47b4-be10-fa46974f65b0"
        },
        "item": {
          "id": "27a29aab-465d-4c4d-81a0-73743b9d0bfa",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3e794a61-8d28-438c-9c7a-3f900b2c934c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44965061-8d86-416e-8dc8-18b2fda99c9e",
        "cursor": {
          "ref": "d16d5066-4bf9-44c3-aa98-629f535574eb",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "455bb0ca-ef4a-4d7f-bb1d-663f8aba4d96"
        },
        "item": {
          "id": "44965061-8d86-416e-8dc8-18b2fda99c9e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "06eea878-8ee5-43ba-9974-08fb646f4788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5686b950-e490-4a0b-9d69-473a18fb8145",
        "cursor": {
          "ref": "2e92b8d0-4198-4fc3-a56d-752a1e01b115",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f413a903-a390-4f62-8e5b-6b29c462c287"
        },
        "item": {
          "id": "5686b950-e490-4a0b-9d69-473a18fb8145",
          "name": "credentials_issue"
        },
        "response": {
          "id": "05ee99b5-b575-4e87-82a1-b8f0df0d2732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "58ec326d-6e2e-4e10-a2ad-2258ef176a95",
        "cursor": {
          "ref": "f72d0530-be41-424a-af5a-1befe8f887f2",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "13801519-4a4d-42c7-afe5-a732815b4326"
        },
        "item": {
          "id": "58ec326d-6e2e-4e10-a2ad-2258ef176a95",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "14e752cd-f798-41c1-a6e4-421ca259e013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c979245b-db56-474d-a333-9a8779edde59",
        "cursor": {
          "ref": "dc30dd96-fd97-4e57-bb21-fd3b81321423",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "97410665-6968-4bd9-aa8f-5ea01f0cd11d"
        },
        "item": {
          "id": "c979245b-db56-474d-a333-9a8779edde59",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "278fbe27-73cc-43e3-a4b2-7215922ed230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f2c96775-4590-48d4-b703-f88a61c4aa21",
        "cursor": {
          "ref": "0c3e25d8-a72c-4881-aaa3-1752a2509bc1",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "692fb696-2ad9-4214-b193-e3c9cb225823"
        },
        "item": {
          "id": "f2c96775-4590-48d4-b703-f88a61c4aa21",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2da3fefe-070f-4056-aec0-04382bd309dd",
          "status": "Created",
          "code": 201,
          "responseTime": 5285,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "98eac74a-75e8-42ea-89fe-8be2a6741b52",
        "cursor": {
          "ref": "2762778e-6d0c-4638-a075-f972a200d2fd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "17009482-889a-4f41-b851-517c81575481"
        },
        "item": {
          "id": "98eac74a-75e8-42ea-89fe-8be2a6741b52",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "78c96fd6-6a9f-435f-8482-f2f19a0e6082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "725ddb82-469b-4fe1-87b7-f1c2ac519554",
        "cursor": {
          "ref": "a715e5b1-b2a7-45e4-bc8e-cd727cef3a28",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4a25a6d0-1cac-4700-b319-fd21a1e18431"
        },
        "item": {
          "id": "725ddb82-469b-4fe1-87b7-f1c2ac519554",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3b96dc5f-fab4-4223-ac3f-af8d6c54303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a7f5209b-4734-4f99-9580-6d98a7e5b5ff",
        "cursor": {
          "ref": "20517eb7-d084-4b33-89fb-c326c7e9fdf6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ea2229a9-a00a-438c-af99-9e9812fc989d"
        },
        "item": {
          "id": "a7f5209b-4734-4f99-9580-6d98a7e5b5ff",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c8aabd29-041a-4f88-a281-e17336d9a8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfed5e5d-17d5-4568-8b1e-f55ba1dfb45c",
        "cursor": {
          "ref": "9019272b-fe38-463c-91a3-17c63e40bf31",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9e9bd34d-e8bc-4fda-87a9-8f71fcc1caa5"
        },
        "item": {
          "id": "dfed5e5d-17d5-4568-8b1e-f55ba1dfb45c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4bcc7b41-06ad-40ba-a44d-eb489f29bb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b03c33-7ae2-4658-8403-0eb4cb664035",
        "cursor": {
          "ref": "0ec92a12-9652-49ed-b360-5b9a9c173d3f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "694004ab-c82e-4b15-86e5-9aa558573772"
        },
        "item": {
          "id": "31b03c33-7ae2-4658-8403-0eb4cb664035",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fd04bbc2-0bc5-4750-9abd-c1408e58b21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f39c40-09b7-48cc-bf75-5c806ca55d9b",
        "cursor": {
          "ref": "09e3ba84-0c12-4146-9f14-883467ff1a85",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "75926695-a742-4d67-9c00-d1ce4efac318"
        },
        "item": {
          "id": "77f39c40-09b7-48cc-bf75-5c806ca55d9b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb2c5568-0162-4a65-ab77-21eb72700b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fe365d-e79a-4fc1-9351-53c31030e335",
        "cursor": {
          "ref": "5e48ad4d-2180-4073-9e5c-d6c8402746cc",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "68245a5a-0bb2-454b-b059-beaf99383f19"
        },
        "item": {
          "id": "d7fe365d-e79a-4fc1-9351-53c31030e335",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1d4f68e7-7693-4a70-805c-246516046709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aebba02-b007-491b-908c-9704cd98d7d3",
        "cursor": {
          "ref": "46c85c89-c7eb-457e-89dd-a823c03d3c85",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "263a70d9-dee2-4a5f-82c9-e43878bcc406"
        },
        "item": {
          "id": "9aebba02-b007-491b-908c-9704cd98d7d3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e749362c-fb45-4d69-b4ae-c93ace499184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a3a21e-0f36-4b67-9905-0a604dcb2441",
        "cursor": {
          "ref": "f841854d-9161-436c-98d8-ad8178fba48b",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "27c2a632-2471-4059-afd5-6757f4ead495"
        },
        "item": {
          "id": "e0a3a21e-0f36-4b67-9905-0a604dcb2441",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "96554d3f-cf16-4278-843f-3013936a8ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e4f2d1-2c52-4cec-855d-0fc06a254d4c",
        "cursor": {
          "ref": "eac31552-2614-4ce6-9b44-3d3f69733b2d",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3f5e174b-e248-4ec7-b645-e45eefda25ca"
        },
        "item": {
          "id": "66e4f2d1-2c52-4cec-855d-0fc06a254d4c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3f0eb3f5-73b9-47e8-9429-33a182131a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54d16aa-d73b-49aa-b125-6c019417e104",
        "cursor": {
          "ref": "d2599a47-fbf5-4610-bc79-7b3b023e35c9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "daa5292e-4061-40d1-8215-5864a44d1086"
        },
        "item": {
          "id": "b54d16aa-d73b-49aa-b125-6c019417e104",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4d46636-a674-4333-9d4b-3f6877915e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b74e00e-e9e4-4c00-851d-82c61173a2ec",
        "cursor": {
          "ref": "aa50a45d-e6e8-42a4-9b86-48b8a7fc7a84",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "201feaed-53d0-43ba-b958-5e0e2cc8004d"
        },
        "item": {
          "id": "9b74e00e-e9e4-4c00-851d-82c61173a2ec",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c581498-86ea-46d7-a8bd-f97f1ec91e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3467cb5c-5943-4844-96e1-70507ba7503a",
        "cursor": {
          "ref": "6f502455-a3d5-45d7-9771-23dc6e4aebe4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ce3d35bf-0b96-4d1b-bbdf-23b53ff5a294"
        },
        "item": {
          "id": "3467cb5c-5943-4844-96e1-70507ba7503a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b472fb07-fbf8-4675-9913-1a6c29c0d736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbee0ee3-0fc5-47c3-91c5-448101761c8b",
        "cursor": {
          "ref": "69fc6d75-7213-4bc4-bf46-54048663b01b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1678b006-2003-43c2-a2dc-167a5b1447f9"
        },
        "item": {
          "id": "fbee0ee3-0fc5-47c3-91c5-448101761c8b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d5774c11-eba5-4b92-8aaa-054bc7dcfb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433dca18-9a74-49af-b064-f1be68a2b78f",
        "cursor": {
          "ref": "a5c400a8-dc0d-4c45-8ff0-120269f26ed8",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ef314a36-76cb-473f-8116-dd055a48efe7"
        },
        "item": {
          "id": "433dca18-9a74-49af-b064-f1be68a2b78f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "222476a5-03ab-4af8-a646-b85c1f40007b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd8fe61-dbb0-4f6c-b3f7-8965c935841c",
        "cursor": {
          "ref": "6223b213-0042-4589-b2cb-38a0d37baa49",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "900b9ff3-c8ae-430f-852c-7c8d9b6dc45a"
        },
        "item": {
          "id": "8dd8fe61-dbb0-4f6c-b3f7-8965c935841c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f423b2f7-c181-4b54-918c-67005561602a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963cf4d7-0a6f-4091-96f4-d06b28f54f98",
        "cursor": {
          "ref": "dbb982e7-92a4-4bc9-809a-7eda75d97624",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d0dd5f2d-ef0f-4234-9527-b1d7049b8383"
        },
        "item": {
          "id": "963cf4d7-0a6f-4091-96f4-d06b28f54f98",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "22da35b9-42fa-4d5d-8709-a4615f4ef3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f1be78-f247-4f02-8e70-1966977befe4",
        "cursor": {
          "ref": "0bf5c55d-2ebd-4d15-b490-811f6437fa75",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f157bc9f-39f1-452a-b3f8-9f8b08d53ee7"
        },
        "item": {
          "id": "e9f1be78-f247-4f02-8e70-1966977befe4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c83f4353-b1c1-4df9-9867-4d7d3ce88fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e447063c-5869-4379-93b4-b952adff7534",
        "cursor": {
          "ref": "4015a730-5b32-4bb2-a3f4-2a2080de237b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6672ab07-bc64-47c9-8791-2997c1471f4d"
        },
        "item": {
          "id": "e447063c-5869-4379-93b4-b952adff7534",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c37dfe1d-a0bd-4917-8308-8dd7923d4426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9098b01-f1ce-4e37-9f4f-e3aacfe9b1a2",
        "cursor": {
          "ref": "cab51540-7bac-480f-b284-2783af2aefd7",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dac5fc16-6884-4bb6-bc33-b3846a7c56b7"
        },
        "item": {
          "id": "c9098b01-f1ce-4e37-9f4f-e3aacfe9b1a2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aa13b622-f277-4400-9f3c-434d01177da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52db3f1e-eef8-4f5f-be68-bb45fa8ae80f",
        "cursor": {
          "ref": "aa2103ff-4555-4b3b-94b4-739135eda6e0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d4685671-fc49-4541-9960-581ae4160c95"
        },
        "item": {
          "id": "52db3f1e-eef8-4f5f-be68-bb45fa8ae80f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "144fee27-6378-48a3-9583-91222442f5a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11df99e4-a862-40e0-949c-96e0b722f0a3",
        "cursor": {
          "ref": "452d3eb4-cc74-4beb-a376-499786c1849a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "385c57d8-fe19-489c-a738-019f972fb25f"
        },
        "item": {
          "id": "11df99e4-a862-40e0-949c-96e0b722f0a3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "23e8899a-ee78-4ea6-a4f6-2d420069efc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b6f331-11ae-4b97-b9a0-0cdea53e0197",
        "cursor": {
          "ref": "dc30d20c-dbfb-40fd-9a89-eb144bc0d18b",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "74db39ff-cb95-4b18-b5be-1345ed59cf0d"
        },
        "item": {
          "id": "c2b6f331-11ae-4b97-b9a0-0cdea53e0197",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "30113687-1380-45bc-89e0-fea3a9097710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8081be6-1147-4a9c-ac09-3f0fbc7c9bf8",
        "cursor": {
          "ref": "3357651b-e087-4719-81ca-32c7fcec911b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9b34dfe3-c1ee-4059-b037-e0ac5cefebc0"
        },
        "item": {
          "id": "b8081be6-1147-4a9c-ac09-3f0fbc7c9bf8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "22be8755-0dfc-4ae4-a9a2-7d3f3cc00101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1d153f-b14a-421d-8f19-7cdc727701b8",
        "cursor": {
          "ref": "4324263a-6f50-43f1-afdb-9004ea74c999",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2a8fa1ae-4476-4ff9-b887-3e9dc645aef1"
        },
        "item": {
          "id": "bf1d153f-b14a-421d-8f19-7cdc727701b8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "549f1b4e-e953-4e9d-b625-51230479f20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fc6689-de55-4501-ab2b-c4a733eea01a",
        "cursor": {
          "ref": "bc1ee5b7-526c-4e05-8d03-261cb04ea2b1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f6ebd573-81bb-4821-8b1f-49b4955df9cd"
        },
        "item": {
          "id": "a0fc6689-de55-4501-ab2b-c4a733eea01a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d53ef5a8-b5f9-489f-afe3-394dd938660a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f343b1be-509e-4f68-a496-b9b16d086955",
        "cursor": {
          "ref": "f1198e5c-e591-4095-bc3a-8dfa1280a946",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aa3865b6-bcc5-4d8b-ba4a-78c1e61a3b94"
        },
        "item": {
          "id": "f343b1be-509e-4f68-a496-b9b16d086955",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "14e9662f-3f14-4b3e-b58a-22b3becf52ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec94a35-130b-48ef-9d5a-d4aecb068d50",
        "cursor": {
          "ref": "b9df9a60-3037-4904-9121-abf3d9cfc62c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "76188004-6584-434b-bad5-7be3a1bacdf6"
        },
        "item": {
          "id": "1ec94a35-130b-48ef-9d5a-d4aecb068d50",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f819f10-b3e2-4c6b-8efb-d1ade6eee104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bae74b-4a4d-4d0d-a892-22505880cc40",
        "cursor": {
          "ref": "85b562ad-4c1b-4fd4-939a-99532363c04b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0eabc7fd-ef06-4c27-91a3-d4e9f8d3c7c0"
        },
        "item": {
          "id": "c2bae74b-4a4d-4d0d-a892-22505880cc40",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a83737b1-0a7f-4906-afdb-09e12f71eec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6fd15d-68f1-4abe-9b6d-04bef0995888",
        "cursor": {
          "ref": "98d364fd-4473-46fe-9ec1-50e87cd6e688",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c721f900-58c9-4f6c-af46-c4c718010371"
        },
        "item": {
          "id": "1f6fd15d-68f1-4abe-9b6d-04bef0995888",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "63937a17-dfdc-4c5a-8f81-2c4b9bdaaefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01500719-cbdd-4a0c-8c03-85bd37522e76",
        "cursor": {
          "ref": "d0d15e5f-d0a6-474a-9b5c-25f7d50ec8a9",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "becb1f14-4859-4772-98db-fe4202a2efcd"
        },
        "item": {
          "id": "01500719-cbdd-4a0c-8c03-85bd37522e76",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2c1cd2b8-7d4e-42ff-98ae-f9a00e698a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c45953-3885-4241-b4dc-3e177d619800",
        "cursor": {
          "ref": "c1607a56-f52a-48fe-bede-61ef7a1937cb",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80e567aa-17ff-46f5-a264-bed36b4793f9"
        },
        "item": {
          "id": "70c45953-3885-4241-b4dc-3e177d619800",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "32ee83f4-bf11-4d85-b405-434b42b50409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4c5df-5e3b-47b2-a926-6b9539881daa",
        "cursor": {
          "ref": "e88c0b87-ff8f-4c29-9d70-1c9b0a6f3dc1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "143c7eb1-681f-42d2-a298-8f982e6fa5d8"
        },
        "item": {
          "id": "5bc4c5df-5e3b-47b2-a926-6b9539881daa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b630dabc-a95f-4f9f-a6ae-139e48314dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f9f832-8c20-44c0-994d-ed50bf64e6c5",
        "cursor": {
          "ref": "0bac0798-45af-454b-b77d-e774616c9fa7",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "809877da-12d8-4a7b-ad9d-5cbd8053aa60"
        },
        "item": {
          "id": "36f9f832-8c20-44c0-994d-ed50bf64e6c5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e9d1ac39-448d-4331-b49d-d64ac3dbdef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdc094e-71d5-4299-aa85-2e2edfe55350",
        "cursor": {
          "ref": "9da5fcc0-1f64-487e-9d69-26a67372f6da",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e984628d-42c0-4912-a328-dd276212d157"
        },
        "item": {
          "id": "2fdc094e-71d5-4299-aa85-2e2edfe55350",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ee3fa6c8-33f1-4eaa-b1d7-4d1c9bf3b25a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 60,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17366b02-4128-4652-a544-381e472af5dd",
        "cursor": {
          "ref": "45aec0c4-fd4c-482e-94ef-83dd1ad389fa",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2700959c-4c4f-4f47-af1b-5a4650890e51"
        },
        "item": {
          "id": "17366b02-4128-4652-a544-381e472af5dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6999ec12-9c84-4011-a28f-382c05d68081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca801f0-47b2-4f1d-9edd-c68fc420f849",
        "cursor": {
          "ref": "b0fa39df-6463-4cac-82ec-c2a63d65803f",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0b254848-beb3-495a-b5bb-4fcc1937e4df"
        },
        "item": {
          "id": "3ca801f0-47b2-4f1d-9edd-c68fc420f849",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d8309845-2eeb-4356-94b3-6e80c24cb008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae449d7e-5af4-47b4-9f1b-1d08d6e552a1",
        "cursor": {
          "ref": "13b052ea-07a6-4b1c-9f89-21947d1092c1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8ce4b7a1-febb-4f69-ad7f-c7e29c3e0d7a"
        },
        "item": {
          "id": "ae449d7e-5af4-47b4-9f1b-1d08d6e552a1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d7595b1-294d-4c91-b55d-39af95a587d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d2466-e727-4fc3-8114-393857aafb27",
        "cursor": {
          "ref": "d9b1fa48-af4f-481e-866a-3a3b781a1cc7",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8f2cc28b-f1d0-466c-b53e-ddfd4b1f820b"
        },
        "item": {
          "id": "716d2466-e727-4fc3-8114-393857aafb27",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d28595d1-d028-41c4-b4bb-4cb23ced59f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c62fca3-ac0c-464c-a946-621d2b5c92ec",
        "cursor": {
          "ref": "b3cfccaa-37f1-4121-a281-952a0b9615eb",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "448205ca-da0b-460f-ad44-8635d94841e0"
        },
        "item": {
          "id": "1c62fca3-ac0c-464c-a946-621d2b5c92ec",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "12c610cc-c386-4e2a-8e7b-400da0dacae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b9aa57-7eda-47f0-8032-29f2c3bc00e0",
        "cursor": {
          "ref": "1cc7a4ab-ece5-40f0-8b94-18bea4ae7a7a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a2db75ac-c36e-417c-923f-a995469d8330"
        },
        "item": {
          "id": "52b9aa57-7eda-47f0-8032-29f2c3bc00e0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6b60798-90c9-47e2-8c68-062c67cf65ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89094ab-5654-4bcb-8247-5f2e97b9fd14",
        "cursor": {
          "ref": "39b2bb8a-213f-4705-9ad2-1a8fa7ac75d5",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "092fe5e8-0626-40bc-b45c-9f8b4ca02103"
        },
        "item": {
          "id": "a89094ab-5654-4bcb-8247-5f2e97b9fd14",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "adeea8f3-59bd-4019-9286-7410c8b5a928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56e7026-dc1b-429e-8543-e7dedebc481c",
        "cursor": {
          "ref": "37370207-0328-42d3-92f9-79542dcd7a40",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "036ad4dd-102f-42ad-bb92-ae9ad3680b4e"
        },
        "item": {
          "id": "e56e7026-dc1b-429e-8543-e7dedebc481c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "760b2a1c-26ab-4bb1-8418-e59cd6c94662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e13050-c71a-4e3e-951e-1e9aa90922fb",
        "cursor": {
          "ref": "062e713f-c8e9-42b7-82ec-615ee0de7bfa",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "350da075-f241-4383-ac10-6aefb35f8cb7"
        },
        "item": {
          "id": "17e13050-c71a-4e3e-951e-1e9aa90922fb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "487e0a54-8a6f-46ac-8ce0-182c57fbf9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65947ba-aa23-443c-a064-9af1d11ff589",
        "cursor": {
          "ref": "9fa1c764-0a86-4147-87ae-a5743a09fbc2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d5608b0-3623-454b-9f8c-9b380330d600"
        },
        "item": {
          "id": "b65947ba-aa23-443c-a064-9af1d11ff589",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "52482d2c-9ee9-4fb8-8557-f9deee7896b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5826e271-f67a-47ec-b541-b43b4b0b880a",
        "cursor": {
          "ref": "9bd227af-ecc5-4180-b42f-dc4a6fb1470b",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2e47b6f1-bcdd-46ed-bce0-f775476a9590"
        },
        "item": {
          "id": "5826e271-f67a-47ec-b541-b43b4b0b880a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7a56b23b-dccc-403d-a467-2fb63669bb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87def227-1d4c-439e-8466-b39696d51d8e",
        "cursor": {
          "ref": "75174cb1-ba77-48a6-b759-2c7a7952c9fb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e6dda2f9-6cc4-4fb8-aa25-dcfe9b4e158e"
        },
        "item": {
          "id": "87def227-1d4c-439e-8466-b39696d51d8e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d18abf7a-29f2-4348-a4fe-ad0c8f870fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d443af8d-1407-4a26-975a-82a5746cd31e",
        "cursor": {
          "ref": "12cbcb3f-936b-4f54-8cb3-84e0ff5b1eed",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "28378fee-9768-4ed2-ad56-73dc22439ff2"
        },
        "item": {
          "id": "d443af8d-1407-4a26-975a-82a5746cd31e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f089acea-fa75-4bd5-9b88-e372ed157de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15315730-cadd-4d66-b226-859b0c38b56a",
        "cursor": {
          "ref": "d7c1b546-8d4c-4e89-8c1d-6d22f794aff0",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6bfaf733-418b-49e6-bafa-df1e7d9507c9"
        },
        "item": {
          "id": "15315730-cadd-4d66-b226-859b0c38b56a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b3124e6f-8a3a-4886-8149-f4b1e411dcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056067e6-e9af-4c66-a051-85d174a49604",
        "cursor": {
          "ref": "8d11bd9c-c2d9-4931-8532-205b17910d7e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2418bd0b-72fd-4e5f-8b50-32ac077907ba"
        },
        "item": {
          "id": "056067e6-e9af-4c66-a051-85d174a49604",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6fc1431d-8b16-4114-b6fd-5dc362194554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839edd48-0da2-4168-86f3-8f583943c0f9",
        "cursor": {
          "ref": "de7e8f9a-60c2-45b3-98ed-3e9fbd3dff4e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0b76f188-a490-411e-90c3-1e75cd050bb6"
        },
        "item": {
          "id": "839edd48-0da2-4168-86f3-8f583943c0f9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8920e4ad-7187-4e94-b4bb-1e25163211c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c35e76-7ac6-4486-a803-53ff136545bf",
        "cursor": {
          "ref": "30268095-5570-43b7-aa16-716d23b0abf1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "93491bdf-42f9-48a3-85ed-3bd78135d6ed"
        },
        "item": {
          "id": "e4c35e76-7ac6-4486-a803-53ff136545bf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c24ee62b-5702-4998-9492-f5914352ea98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0643d22a-ae69-4421-a64a-77bf0cc3c744",
        "cursor": {
          "ref": "2626edfd-1ef0-42ea-a677-c1763386d650",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "88fec37b-c95b-4584-b44a-83817c66b397"
        },
        "item": {
          "id": "0643d22a-ae69-4421-a64a-77bf0cc3c744",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7bd366f7-bcc9-4478-bc5a-b9ddd76c7c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d06489-ac61-43bd-abd0-cf1a813ab7fd",
        "cursor": {
          "ref": "cd7a00e4-fbcf-4498-9832-d73abdad03bc",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b11c8771-b02c-4a33-bb13-16c6e10845c0"
        },
        "item": {
          "id": "b5d06489-ac61-43bd-abd0-cf1a813ab7fd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "26bbdc29-09b6-4339-a128-773bdd7b6359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e42d3fde-6df8-4412-aca3-1d02188795d5",
        "cursor": {
          "ref": "216ec0e8-4ac9-46bb-a773-07ccf64d4c3d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1709d257-f446-44fa-8ba2-83374c7941a9"
        },
        "item": {
          "id": "e42d3fde-6df8-4412-aca3-1d02188795d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "34e2ed9b-8fe7-4741-9903-992d7030cf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be061ab-ccc8-4f01-a8be-b0fbc7d950e7",
        "cursor": {
          "ref": "9cc6bc7b-ecc7-4996-98f0-0d7792fb52ce",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8d6dbaec-b0c0-4de5-a91f-1f30c562efbe"
        },
        "item": {
          "id": "6be061ab-ccc8-4f01-a8be-b0fbc7d950e7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0fdaa2b6-01c8-4305-ace8-c91f47809585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4e7a4b-3ffd-4611-8b9c-6ac46119b2dd",
        "cursor": {
          "ref": "7de8c6fd-12f1-4fc0-9b53-6b1862b12759",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "200f4edf-e886-4d24-b365-35b0cdd9d457"
        },
        "item": {
          "id": "fe4e7a4b-3ffd-4611-8b9c-6ac46119b2dd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9e16a8d9-35fe-4e7a-ae30-75f324096b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf4c4ce-ed6d-40a4-869d-2353c8fa2658",
        "cursor": {
          "ref": "16211a3a-9744-4d53-a0f1-28aa36b8bbc4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d81ea202-66dd-4f54-bb93-8a5276614bf3"
        },
        "item": {
          "id": "4bf4c4ce-ed6d-40a4-869d-2353c8fa2658",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b5401d27-c3b3-4f31-80f9-46d124ab9700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f046bf-f2f9-42f1-806f-ebef6e3049fa",
        "cursor": {
          "ref": "00faee28-bd0c-456d-9180-9e652ea19c74",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fa0a3119-ccf1-4eac-a712-60c55f378b2f"
        },
        "item": {
          "id": "38f046bf-f2f9-42f1-806f-ebef6e3049fa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9a3347c-0521-4d08-8999-5523601a9da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f337a4-841d-40bb-804c-fdd295063b71",
        "cursor": {
          "ref": "aa01229b-9129-44b8-b8f3-df7bf70035d9",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3c58c48e-f2ae-4315-866a-24701edc17c0"
        },
        "item": {
          "id": "b8f337a4-841d-40bb-804c-fdd295063b71",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "39cc9466-5ab7-4c70-a760-4f3776fef370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe03d2d9-95d9-4b14-bb50-60fd87d59c56",
        "cursor": {
          "ref": "175c2068-7838-4b6d-a9b4-3b3382e15d6a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6486bc92-d430-4c6e-b060-089333247896"
        },
        "item": {
          "id": "fe03d2d9-95d9-4b14-bb50-60fd87d59c56",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c95e931-f9d4-4c88-a48e-29b36f5f288a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cbedf8-da3d-4487-9e09-047ce646c99a",
        "cursor": {
          "ref": "00a491bd-8752-438b-be25-11d27e6fe4bf",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a0302bd7-80a0-4f84-8036-03d0fa8da6f0"
        },
        "item": {
          "id": "08cbedf8-da3d-4487-9e09-047ce646c99a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5198d650-c0a8-46c1-b1ab-acd27f220633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c0d915-7dfa-42c9-97a6-eca8ff69ebf5",
        "cursor": {
          "ref": "a5e5666d-b63a-4ab0-9d56-f2cd63124db8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e114f92c-0b19-4320-a2fb-6356879c041a"
        },
        "item": {
          "id": "36c0d915-7dfa-42c9-97a6-eca8ff69ebf5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a965ffd-a3a5-4c5b-9b7c-17a63b59d36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2668dd6e-1fa2-4a4e-8013-7ea1d5b41b73",
        "cursor": {
          "ref": "24c43b0f-320b-4aed-b6a1-e614ae90d818",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "772d6f57-8cc3-4d78-a268-d559b359febf"
        },
        "item": {
          "id": "2668dd6e-1fa2-4a4e-8013-7ea1d5b41b73",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8fff68c0-a491-49ee-80ed-19b4091326e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e753fec-ec02-4b39-85f3-d29983bf3934",
        "cursor": {
          "ref": "be484469-b262-4bae-aabb-13be9bf0edb9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e74a0198-ebd9-4851-8f1a-d4425f01ec02"
        },
        "item": {
          "id": "1e753fec-ec02-4b39-85f3-d29983bf3934",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "411d4a85-80ed-482e-a35c-9d9d25b7f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24cfdda-a446-451e-86ba-e81f7fe01b0c",
        "cursor": {
          "ref": "0f7c19e5-a942-408e-8177-71b686fad9b2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b2e7a841-6489-401e-b8bf-18de2b2044c3"
        },
        "item": {
          "id": "a24cfdda-a446-451e-86ba-e81f7fe01b0c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e0c82018-7f91-41fb-817e-ba550c9a09dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc167e0-7079-4236-a081-75138ba249a8",
        "cursor": {
          "ref": "050cf930-9f26-44f3-a936-a19ab33cef16",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d2dfb088-0205-45f7-b90f-59cfcd6a880c"
        },
        "item": {
          "id": "8bc167e0-7079-4236-a081-75138ba249a8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a9ecd854-87d4-45c6-b479-b40e889fb9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded37ebb-d186-48f2-965a-0990f178dee5",
        "cursor": {
          "ref": "8f92f138-06af-4888-bb98-66ebe7d41ef3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4480c8cc-2367-48d5-beaf-1ca0f0969490"
        },
        "item": {
          "id": "ded37ebb-d186-48f2-965a-0990f178dee5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bb936f93-3ec5-47db-bf5c-1c2deecb3606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccca8109-2524-4f0f-8aec-b791475e7ab0",
        "cursor": {
          "ref": "57a1b917-9c2a-4564-88a2-e2e7d8884304",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8c841980-ec84-467b-bbcf-bd045c643db8"
        },
        "item": {
          "id": "ccca8109-2524-4f0f-8aec-b791475e7ab0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cef9ab8d-a959-4e79-b644-d469b58b69de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f783a92-a2ad-4c92-a501-ec8d62c8f5e0",
        "cursor": {
          "ref": "3629d2f0-8985-4c5e-a583-6cffedd93f25",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "32b93ba9-a248-45de-bc3c-01bb76087b69"
        },
        "item": {
          "id": "0f783a92-a2ad-4c92-a501-ec8d62c8f5e0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d138be80-ac03-43d8-921d-f69b3190f28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953a741-fce8-42e4-a7cd-a70637b251da",
        "cursor": {
          "ref": "d695ada2-bc4d-4014-9ac2-4a2b163404a9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4ac09789-ed97-4fa8-af67-9bc0a6d794fc"
        },
        "item": {
          "id": "5953a741-fce8-42e4-a7cd-a70637b251da",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4550df7d-c5d5-4404-9954-dbe79369dc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92890c8-9f72-4eb6-ba74-99917cb05946",
        "cursor": {
          "ref": "5e4fc8b2-30dd-4446-878e-7606dcc59dfb",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d37e6dcc-1dc6-4a8e-854f-a7cc1064e20b"
        },
        "item": {
          "id": "a92890c8-9f72-4eb6-ba74-99917cb05946",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ad08ce04-9f8d-489b-96cc-210bfdecad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049aa4d3-c435-46e1-9744-3a62e53b2566",
        "cursor": {
          "ref": "781e95ac-2964-40aa-9243-4ea6cd47df26",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "390a9fc3-2b3f-4544-b395-94b89407a5f6"
        },
        "item": {
          "id": "049aa4d3-c435-46e1-9744-3a62e53b2566",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "baddf51e-bc89-4be3-b385-01ea1c98030e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabc2710-a162-4fed-b084-6e9811f73fbc",
        "cursor": {
          "ref": "f732666b-721b-4703-aa5e-c9ca52d8bdbf",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c1d878eb-5915-496f-8dba-64f96b6bf60f"
        },
        "item": {
          "id": "aabc2710-a162-4fed-b084-6e9811f73fbc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ba37ce91-dce7-48eb-b55e-ffa41ec83e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da36e52b-86c3-4d3e-acf9-a37eaf4f310a",
        "cursor": {
          "ref": "5e13f47a-e43e-4dbf-846a-b98601e75337",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5d8b2a4b-22d8-447d-b360-d8e8006522e6"
        },
        "item": {
          "id": "da36e52b-86c3-4d3e-acf9-a37eaf4f310a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "eb37f4df-dfb7-4f49-ad20-bb244699ade5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b594c0ef-156c-4517-8006-1a384f380815",
        "cursor": {
          "ref": "eb4c1187-53ff-4d53-b679-7a25b5e000f2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4a8bd480-acbb-4433-a9bd-555ee4d39282"
        },
        "item": {
          "id": "b594c0ef-156c-4517-8006-1a384f380815",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "00fffa8d-9a90-4d79-af8d-13cf6aaf4b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d98604-469c-447e-a32f-35b1e277f109",
        "cursor": {
          "ref": "1e98ae06-df14-4dd3-83f2-b8e7698d6f53",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cbd17526-e1e2-4d2f-ab0c-bd0212cc2ef1"
        },
        "item": {
          "id": "96d98604-469c-447e-a32f-35b1e277f109",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d0494c02-6c74-4baa-a0c6-7758268aaedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461d06e2-025a-4850-b6ca-b980490e53a1",
        "cursor": {
          "ref": "cdbe1f78-691d-4a41-8d34-d65061f55b14",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4389e08a-9005-4f26-90bf-355b6da5313b"
        },
        "item": {
          "id": "461d06e2-025a-4850-b6ca-b980490e53a1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f827dc0c-6ca1-4fce-8d41-af9c4b586243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f7f0b2-b94b-4b83-8aaa-2d0a5c080f8d",
        "cursor": {
          "ref": "f0294184-c1d8-4281-ba20-d3e0c6e471dd",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c2363712-af90-4f64-b3c2-6e4195e077fc"
        },
        "item": {
          "id": "47f7f0b2-b94b-4b83-8aaa-2d0a5c080f8d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "639d22b9-85a0-4ae2-b12e-b59acef4d2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e5c6d1-9821-4afc-9645-be5f50a1fcaf",
        "cursor": {
          "ref": "62253e5e-37f4-4242-899f-22b494ed9248",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5581af27-2378-4003-8792-70ba57d5cc9a"
        },
        "item": {
          "id": "c6e5c6d1-9821-4afc-9645-be5f50a1fcaf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "95b9214f-8794-4a96-839f-3d9a25acf966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39803250-ee66-4000-9779-f7a89e2a3659",
        "cursor": {
          "ref": "4233dc75-e6de-4b8b-b067-548574e4fd94",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "551753eb-6e5d-4762-9948-6850b5b43fb7"
        },
        "item": {
          "id": "39803250-ee66-4000-9779-f7a89e2a3659",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4f77695e-241d-4816-988d-cd931d2876e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c230bd-ed03-4dc8-ba32-49f9d76242c2",
        "cursor": {
          "ref": "d8911169-acba-41d5-9332-9e6b3ac603d7",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "31df0d6f-be19-4598-9b68-32e69b8cc010"
        },
        "item": {
          "id": "a0c230bd-ed03-4dc8-ba32-49f9d76242c2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e54b94d3-2403-4bb9-a9ad-2c4ddaa1360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b151ee9-dc89-49a3-9af9-9854da06d4bc",
        "cursor": {
          "ref": "a42724ca-d704-4612-b2b3-cda771c21ae9",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf9e7780-490e-4f7a-b1be-b89956b5d6c8"
        },
        "item": {
          "id": "9b151ee9-dc89-49a3-9af9-9854da06d4bc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "12dc0379-3f74-4f26-a78e-1bbe541a04ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6fe2ae-7982-4f64-bc62-8a945db0cf21",
        "cursor": {
          "ref": "71e57c6e-f75a-4d64-9f2a-c999c20a9dad",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c603b553-b5ac-433b-9e35-a86022970375"
        },
        "item": {
          "id": "ae6fe2ae-7982-4f64-bc62-8a945db0cf21",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e51ea217-3f5a-4688-a02a-7cc466883130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f01380-10d8-443f-a55c-41abc8252158",
        "cursor": {
          "ref": "6a85c156-7658-4d0e-a542-cebc205fedb6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4fbbaad4-6853-46e6-93b8-f622378cca8c"
        },
        "item": {
          "id": "49f01380-10d8-443f-a55c-41abc8252158",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6470105c-26cb-43bf-a0b9-1c6275cfdf31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686a1b1f-a79f-442a-80ad-a3781aaf5ae3",
        "cursor": {
          "ref": "c3ae42ef-e215-4f79-82cf-0ab0d34a9c4e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "25d3b122-73ff-4c63-a5d1-8a885ce24020"
        },
        "item": {
          "id": "686a1b1f-a79f-442a-80ad-a3781aaf5ae3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c99ce08b-0f25-4e51-bb62-b7817083acfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55701107-d2f3-49b3-b6df-6495e48c4128",
        "cursor": {
          "ref": "47a498ad-aa2e-49ec-bf45-a909d4ddf779",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c6ea8184-81cb-4f34-815e-6a5b5e7d79d5"
        },
        "item": {
          "id": "55701107-d2f3-49b3-b6df-6495e48c4128",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a90d88bb-951a-4b6c-9693-762a334a57b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc81a5fe-3bae-414b-b3e8-130410419227",
        "cursor": {
          "ref": "61a49cf5-805c-45fe-91f8-7ba13c8e3322",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7481e779-5dff-4155-bdf9-83ee0f6ffb27"
        },
        "item": {
          "id": "bc81a5fe-3bae-414b-b3e8-130410419227",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "eaa1cce0-60a2-4826-8f60-3c07428e2e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860da133-aa12-4f0a-b0ca-b18e690c117f",
        "cursor": {
          "ref": "ad9acc72-b1ac-4479-9b01-68822167bf16",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8c1bf0f8-5372-4bb8-b386-bff9e65613f5"
        },
        "item": {
          "id": "860da133-aa12-4f0a-b0ca-b18e690c117f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "003b82f9-42dc-4de3-a514-695507cd7d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985d6eb5-55d6-4503-8383-cd6ea3f4f0cd",
        "cursor": {
          "ref": "c90816da-e832-4541-9d0f-3ef5ba2e9e07",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b14b2489-fcef-4e79-9b43-094e70e6eff0"
        },
        "item": {
          "id": "985d6eb5-55d6-4503-8383-cd6ea3f4f0cd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "adb8b66c-5844-4963-a702-47b1077ac9ac",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "43dda1a5-9e0f-441e-82bc-d00eca3bc05b",
        "cursor": {
          "ref": "de61661d-0471-4ccb-9a91-7eb423bdfe5d",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8ddd7827-06b6-4620-b13e-3c588e1a39b2"
        },
        "item": {
          "id": "43dda1a5-9e0f-441e-82bc-d00eca3bc05b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6306b011-842a-4b52-91ff-a6511125f303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf996360-e056-44cf-9070-ecb3b0e6141f",
        "cursor": {
          "ref": "18d3ab3a-e369-4858-a0b1-5421340050d3",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b2a7f2b4-1837-4055-a28b-f61efa105049"
        },
        "item": {
          "id": "bf996360-e056-44cf-9070-ecb3b0e6141f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b949185e-081a-42e4-b229-4a686b1cfc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce411238-e304-4418-92b5-aa0c146b7d24",
        "cursor": {
          "ref": "c97aceae-967c-49ea-a9b9-9bb30c78881a",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cdc4a9cf-39a3-46b4-afa7-9e5f4515e687"
        },
        "item": {
          "id": "ce411238-e304-4418-92b5-aa0c146b7d24",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a825e9d7-d10e-414b-bb38-4cbc354796d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239fab68-09c4-4570-bf20-93292f2c9eb3",
        "cursor": {
          "ref": "af7e459a-60b8-4c82-9ff0-12b50a6c1d78",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "82f46a2b-e8de-41c5-a448-097a10a8bd42"
        },
        "item": {
          "id": "239fab68-09c4-4570-bf20-93292f2c9eb3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8923c850-5bbb-4b05-ba04-5aab55203e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a830a44-e548-41fc-9b7f-51ecb015f2d8",
        "cursor": {
          "ref": "46b710d8-fa1f-48dd-930f-02a5530acfa0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f3e3b4e8-fc70-4b35-89a1-537e56e66c02"
        },
        "item": {
          "id": "7a830a44-e548-41fc-9b7f-51ecb015f2d8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "83faa3da-9363-4cb4-b5e5-f2156c9a906a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dba27bb-8958-471e-86ff-77734d8f9313",
        "cursor": {
          "ref": "2e083a65-e43c-4962-add4-1d2d10b0d149",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6f5cdfdb-de58-43d1-83b7-ca31176115cb"
        },
        "item": {
          "id": "8dba27bb-8958-471e-86ff-77734d8f9313",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "07877ad0-1ac6-49b6-9f84-605ed4edba91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7817322-8db4-446e-a823-b18fb3598e52",
        "cursor": {
          "ref": "af57c511-c6d1-45b6-ba00-2bb70bb496a2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "acfd5629-3b55-4625-9f2f-8d55402f72db"
        },
        "item": {
          "id": "f7817322-8db4-446e-a823-b18fb3598e52",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2296a30f-8c2e-422f-98f9-7d5eda6a741a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26175e7b-18cb-4af7-98d2-7a6cbcd1c6a0",
        "cursor": {
          "ref": "ceb0b05d-eb31-4139-b50b-cbddd06bf472",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "25f9aaec-d0f8-46e4-861e-12ee175e22b8"
        },
        "item": {
          "id": "26175e7b-18cb-4af7-98d2-7a6cbcd1c6a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9196acc7-dbe8-48d6-ae91-39ecd2d1991d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78497c22-ed64-409b-8388-7e8eece29e06",
        "cursor": {
          "ref": "6e675050-21f9-4254-99da-cadd4a6201bb",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f6edd795-d692-4787-a459-0aaf9adc4655"
        },
        "item": {
          "id": "78497c22-ed64-409b-8388-7e8eece29e06",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6bbe7fbd-8344-4e4c-b8a1-1ac6645f5a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9516681-aaf1-41fe-8e52-0b6a4429add7",
        "cursor": {
          "ref": "cddb7201-f4f4-4ca8-b199-147d48f9b9f0",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "26fec731-e556-4c2c-91de-a411e100e274"
        },
        "item": {
          "id": "d9516681-aaf1-41fe-8e52-0b6a4429add7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "11b00135-0fc9-4aeb-a669-680048391003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df6542e-68a6-4c18-875a-92b618b57172",
        "cursor": {
          "ref": "3d23cc11-1a69-4d36-beff-fc9efd31ebb2",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "afca500b-cc40-4d70-b10d-415406503c41"
        },
        "item": {
          "id": "9df6542e-68a6-4c18-875a-92b618b57172",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "68b6d712-75f9-495b-a24d-19efcefcde3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e16e7f-0fc0-424c-af5c-3c022bf8c696",
        "cursor": {
          "ref": "ebac0502-3cab-4ae7-b4ea-3a082468ba01",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "358a442a-c811-4745-bfe8-7c21ff5a12e8"
        },
        "item": {
          "id": "75e16e7f-0fc0-424c-af5c-3c022bf8c696",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "614d4f7b-5ffa-49b8-8803-4b6b8fd2ef10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b4154f-e3fa-4352-8619-5db6e0dad90f",
        "cursor": {
          "ref": "17fe21f0-f50c-4999-be6e-8e2320553c96",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b8e92629-ed08-4c6a-8767-876a8f0077df"
        },
        "item": {
          "id": "f7b4154f-e3fa-4352-8619-5db6e0dad90f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c61dfa0b-9a02-448f-a56c-f5a53168b85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1416ff6a-8bc4-43da-be93-95c72c6ab078",
        "cursor": {
          "ref": "4594eae2-e018-40e1-b94a-6a645649fc69",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6b828b5e-b669-4be4-b61b-98096f1b451f"
        },
        "item": {
          "id": "1416ff6a-8bc4-43da-be93-95c72c6ab078",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "440e5825-fd25-4f89-8aa4-99b93cd9be49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f40ca0-10a9-47d2-9ae6-1e883d972c22",
        "cursor": {
          "ref": "b584aa32-2966-4cff-b4ce-e7cf9ec96fca",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "77dd7be8-4400-4890-8e5e-af81e04e6348"
        },
        "item": {
          "id": "f6f40ca0-10a9-47d2-9ae6-1e883d972c22",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "21f5b6e6-da75-4009-8c65-0788faf9dee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b765992-f5c9-49c9-b877-5fd56c978040",
        "cursor": {
          "ref": "e4f61f2f-5664-4450-a629-fb593ab468f5",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2ad81845-8c0b-4564-a04f-ba36d53922dd"
        },
        "item": {
          "id": "3b765992-f5c9-49c9-b877-5fd56c978040",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2cb4ae64-b901-4028-9023-2b9140ad76bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5ae2b8-1751-45bd-9cb9-442f5e6da739",
        "cursor": {
          "ref": "d3b1924b-7a47-4aaf-9a6b-17b54276c257",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4ce2121b-1b8a-4fa7-b1be-43f98d130ca0"
        },
        "item": {
          "id": "cc5ae2b8-1751-45bd-9cb9-442f5e6da739",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bdc4eaa2-615f-4d3a-affd-e6b3d98233d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddc2196-ae57-42ba-9a6c-488c85e39b49",
        "cursor": {
          "ref": "6e73df23-eec7-40ad-b49b-9a55b6d9085f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ee9970ce-1ff4-4319-a710-46989d8f24f0"
        },
        "item": {
          "id": "5ddc2196-ae57-42ba-9a6c-488c85e39b49",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "82ca485a-8c8a-44bf-8a6e-1fae293dc0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d286e25f-5955-4313-9af7-f7a8efc899b5",
        "cursor": {
          "ref": "5fa4e9d4-6e21-497f-ad50-ada92cb06013",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "17518aea-a4d6-4c0b-91e7-a9ba43b5d125"
        },
        "item": {
          "id": "d286e25f-5955-4313-9af7-f7a8efc899b5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "04d7960a-68f6-4093-801e-f9e6d84b4e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc3d702-7be2-47ee-905f-640f06733f9c",
        "cursor": {
          "ref": "afe6c9bc-e1d9-4e37-81ca-e51eda06e30d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "469e8fdf-56a7-45a6-9be8-1097d319ef22"
        },
        "item": {
          "id": "cfc3d702-7be2-47ee-905f-640f06733f9c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4565d210-c8a3-487c-b63a-234b1b8467b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab309075-e90e-40f3-b189-dbd66bdea115",
        "cursor": {
          "ref": "2f144b48-81ab-4283-94d2-f26313c79762",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f4717aa3-46f6-4cd3-bc81-7744cae8d186"
        },
        "item": {
          "id": "ab309075-e90e-40f3-b189-dbd66bdea115",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f90a511a-c992-4db9-90c2-6f7b93bbe7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9842d5-e47b-48f0-a57e-9db0f05c3a5e",
        "cursor": {
          "ref": "9eef5652-6487-48c1-ae6d-15473aa70087",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c2c80aa8-7b75-4bbb-85a5-1398487c11bc"
        },
        "item": {
          "id": "9f9842d5-e47b-48f0-a57e-9db0f05c3a5e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fc6d37ca-1652-4dda-9a0c-ffb4f33e47b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1acfaa0-3e53-4540-97af-f6ffbc69a1c9",
        "cursor": {
          "ref": "f6e1a1c1-85a9-4976-9e06-36507515cc4b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "42a9d530-e166-419f-9f97-6b84a34e9a8d"
        },
        "item": {
          "id": "c1acfaa0-3e53-4540-97af-f6ffbc69a1c9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2d6c69a7-8fbd-4e8e-86be-5e0f100f70ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22237de4-c023-46a2-b61d-f4f173b6d541",
        "cursor": {
          "ref": "c391a9b8-18dd-4db1-bb60-ac24dde68a83",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eab35bde-bbec-45e3-9a85-82ce94327dda"
        },
        "item": {
          "id": "22237de4-c023-46a2-b61d-f4f173b6d541",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6be328be-1c56-42aa-8375-fa199af6f137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24d1c86-82fb-46e2-b477-e1e29c4dd535",
        "cursor": {
          "ref": "3dbe122f-d31e-4dbb-bc17-ab3f799417a2",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c518aa4f-536a-4457-976c-06d884e13813"
        },
        "item": {
          "id": "f24d1c86-82fb-46e2-b477-e1e29c4dd535",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cbedded4-3c17-47bd-b624-1c91b75a6507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db8c1e0-45bb-49ae-a013-1422a9663038",
        "cursor": {
          "ref": "d71ff767-014f-4e59-a950-8e8a80bc39a7",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a92f7a5-8b63-4b83-8061-81968a355cba"
        },
        "item": {
          "id": "4db8c1e0-45bb-49ae-a013-1422a9663038",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d322f3e-2433-43fb-b7f5-d14b0a0c052f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682663b-9e2b-4d0a-b7c0-3ec99c61d8c5",
        "cursor": {
          "ref": "e2c5854a-49e7-40bd-ad7e-b1dde8de0b5b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "273ec466-5d5e-4540-ba02-e5f3a266e02a"
        },
        "item": {
          "id": "6682663b-9e2b-4d0a-b7c0-3ec99c61d8c5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3c564261-b8e0-4eb4-8eda-8112b964f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b4918e-076f-4d45-877b-f68290f44520",
        "cursor": {
          "ref": "11ab26ee-058c-43fd-b4e8-34c2bfef1407",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3821cf9a-65f2-4ad1-9754-d97b89f44ed5"
        },
        "item": {
          "id": "a4b4918e-076f-4d45-877b-f68290f44520",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "95ccb7ac-7078-49c1-b354-4d9faeb412d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a325b200-c544-41ee-aebe-43ffdb4ea4cc",
        "cursor": {
          "ref": "484747ea-2894-44bb-8772-2063d2cfb8c9",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c26cff91-1200-4990-9795-909432b275bb"
        },
        "item": {
          "id": "a325b200-c544-41ee-aebe-43ffdb4ea4cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c8999979-930e-4229-894b-7d0a2a4884a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923fa321-c5ce-44f3-86ca-bd810d4954bc",
        "cursor": {
          "ref": "4c347b60-313d-404d-8442-8d7dea5f546d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e6958d76-edf6-4e9f-9e50-557aab5b6efa"
        },
        "item": {
          "id": "923fa321-c5ce-44f3-86ca-bd810d4954bc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1880b072-70f0-45cd-ad54-90e09494746f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9cfbdc-615d-497c-97cb-6500ca6c59d9",
        "cursor": {
          "ref": "3e61ab83-5627-496b-8ed7-8a2c3ccf85f5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "22075357-8642-4770-b46f-f25734f64940"
        },
        "item": {
          "id": "2f9cfbdc-615d-497c-97cb-6500ca6c59d9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c28a8612-d50e-4778-b553-779dac563355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c8252c-a203-4187-8b1a-85cc4ff0ed08",
        "cursor": {
          "ref": "09cadb06-cf52-4958-bf7f-f55af9578624",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "501fe5f9-cac4-454b-ba76-1efb1f0dc44f"
        },
        "item": {
          "id": "e5c8252c-a203-4187-8b1a-85cc4ff0ed08",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "7d12c73e-8f5f-424f-be3e-46d2164735d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb54c20c-eb73-4160-9f48-c3e76431b081",
        "cursor": {
          "ref": "29b0eb1b-4d3f-4efe-9865-c0d7c5040b5f",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "750f18a8-58f6-46e5-82f7-7129d06c0d35"
        },
        "item": {
          "id": "eb54c20c-eb73-4160-9f48-c3e76431b081",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ba3ba35b-2f31-4717-bed2-33ff27ed98e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d008c8f-3853-401e-a685-9a05e1100a3e",
        "cursor": {
          "ref": "246069a6-7ce3-4830-ad0c-e123fb05af78",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "37c466af-cccf-444c-b556-9dea803ca0a2"
        },
        "item": {
          "id": "4d008c8f-3853-401e-a685-9a05e1100a3e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3ca90964-9fa0-457f-b7f5-ea4decf30163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9707b82-a6b6-428d-956a-f15c873a916f",
        "cursor": {
          "ref": "484b422c-1c73-45cb-bbba-d3abf1bc116f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f29f554a-ace9-4871-98f3-0a3007bee475"
        },
        "item": {
          "id": "f9707b82-a6b6-428d-956a-f15c873a916f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f2afea3b-024d-4916-a07d-43a3b8a8c250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3c197c-e7f3-405a-8108-f96ffd124ab3",
        "cursor": {
          "ref": "7a84a752-60b3-4ba5-a950-7ecf468d2b90",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "032aae97-4de3-4f64-9f08-820725ff3bb2"
        },
        "item": {
          "id": "ba3c197c-e7f3-405a-8108-f96ffd124ab3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "33dc7dc8-6faa-4a06-bce9-dab908645b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc1c445-dd99-4063-a402-e6fc3b600027",
        "cursor": {
          "ref": "02517267-9601-4d27-8065-b5814c187662",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d78759c4-c40b-4001-a3d9-b71fd9e3a316"
        },
        "item": {
          "id": "4cc1c445-dd99-4063-a402-e6fc3b600027",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "643d6379-fd9f-445d-80ac-31417117b7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b736b517-5b7e-4ad7-9530-04de0ca6d799",
        "cursor": {
          "ref": "6f6a3497-46d3-419c-82ac-8eb18acc912c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "53a05411-e96c-4584-a869-df4911945a18"
        },
        "item": {
          "id": "b736b517-5b7e-4ad7-9530-04de0ca6d799",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cecaa8aa-ab30-4de5-a691-3532f5358f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49cb361-040f-4913-b3dd-df604aece548",
        "cursor": {
          "ref": "fcf5218e-1160-40a1-aa8d-7fe3df39db5f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bef1cc21-d8c0-4ac0-a924-727d938d0ee9"
        },
        "item": {
          "id": "a49cb361-040f-4913-b3dd-df604aece548",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "372da0e7-2afb-4e70-ba48-eeb06daea038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa1fda6-7438-43ea-85e1-46253b475523",
        "cursor": {
          "ref": "623482dc-5522-41b8-b030-e10eb9cd2a2b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2067443e-b19a-41a8-b1a8-4d6bcc04123e"
        },
        "item": {
          "id": "9aa1fda6-7438-43ea-85e1-46253b475523",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fa93fd4c-a7e7-45ce-8e32-cdeac9d61a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698aacd4-1591-4765-a958-7e876aae5d99",
        "cursor": {
          "ref": "a772917a-c277-4ac8-a463-9bafd3c4b3e6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "925db38c-6c7e-4f4e-aa4c-9eb7fbbf7a25"
        },
        "item": {
          "id": "698aacd4-1591-4765-a958-7e876aae5d99",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7a144efb-05ec-4661-b65a-25fbb7ef4339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d6a058-2138-4991-b464-bba71561a248",
        "cursor": {
          "ref": "17f0e6df-ce85-4e60-84f9-134fcd00af2d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "73019f74-1543-4f84-b192-b70a7769eeac"
        },
        "item": {
          "id": "19d6a058-2138-4991-b464-bba71561a248",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3e9be12d-3976-43d6-8ec9-f6e94e0ff0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313b595b-2771-4a3c-b2ee-95b712f9970c",
        "cursor": {
          "ref": "ba0c74e6-2ee2-4024-a9ee-4c3288e90907",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "69878f40-99dd-46a9-bac0-6c472bc5e53b"
        },
        "item": {
          "id": "313b595b-2771-4a3c-b2ee-95b712f9970c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "90bab7ec-1b72-4419-bdce-5de8e6405a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a991a30-f225-4d92-86f8-450165053316",
        "cursor": {
          "ref": "baa76001-3023-419f-9b74-33cdef67e3ce",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ec0f1ca4-298f-4377-923e-17304a8f3507"
        },
        "item": {
          "id": "1a991a30-f225-4d92-86f8-450165053316",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1292e7fb-3c0f-4fcd-be10-38417a718d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ebfb29-1ab4-49b9-94ad-1ad07ea495f3",
        "cursor": {
          "ref": "a41c0de3-7650-4ba5-a60c-8d190a7d200f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cf9fdb3d-75ea-4b91-b8b5-767211396dbd"
        },
        "item": {
          "id": "22ebfb29-1ab4-49b9-94ad-1ad07ea495f3",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a6c6e564-a356-4691-88dc-012dd435f5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5c596f-4bd0-4dc4-9efb-4f2e890cecdc",
        "cursor": {
          "ref": "2cdad78e-d8f2-4ec6-82cd-228e37fe6710",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d31a8733-af4c-431f-a299-16e918d083ae"
        },
        "item": {
          "id": "bd5c596f-4bd0-4dc4-9efb-4f2e890cecdc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dbfcab56-69d6-4628-96f2-a0d4bea5e327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38b9207-5e14-461b-a68d-c8b76d9011b9",
        "cursor": {
          "ref": "3949467c-74eb-43b0-a36a-7ce1a1a0549b",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "081fd9b0-8ebf-4140-b9f2-df28324d4737"
        },
        "item": {
          "id": "a38b9207-5e14-461b-a68d-c8b76d9011b9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "688ed287-063f-419d-9028-bd04bb2a11f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d422e2f-1a16-4c06-a06a-bb589c01e61d",
        "cursor": {
          "ref": "b5be0062-a4d4-4f79-bd7f-874a571206c9",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "67c343e2-b25f-4ed4-aefd-46545b14d6fa"
        },
        "item": {
          "id": "1d422e2f-1a16-4c06-a06a-bb589c01e61d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6c8be96c-ef10-4ae6-b361-4c001805a591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14575ad7-bf59-481c-b304-1408d0ca0007",
        "cursor": {
          "ref": "9e1854f2-16ba-45ca-bd68-4888898bc226",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4aa586ec-0ca2-4f8f-9f56-f26c0b10f961"
        },
        "item": {
          "id": "14575ad7-bf59-481c-b304-1408d0ca0007",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2570880e-4b9e-449c-a85d-f490421a20e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1eff8b-3df0-41a6-bdc1-3681bc66526b",
        "cursor": {
          "ref": "dc8f772f-451f-420f-8373-5c5b6c93d1bc",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a1f221c6-a2d1-4edd-a774-0ceadc609f87"
        },
        "item": {
          "id": "cd1eff8b-3df0-41a6-bdc1-3681bc66526b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6e51d49d-b0b5-4e14-ac05-f91c9493c762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d59d02-c778-42f9-9791-b8136e33031f",
        "cursor": {
          "ref": "ad97cf1a-95bc-491c-87b8-729db1253874",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a3f78b38-b563-484c-9b17-c41023262f25"
        },
        "item": {
          "id": "a6d59d02-c778-42f9-9791-b8136e33031f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d161af29-7659-4285-aaf9-aaee6f870dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b436e-5ce7-4418-8af0-083045a42a73",
        "cursor": {
          "ref": "13480d08-d215-4ae7-b447-b2a980c7f05e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c6fed031-1882-4262-981d-4552bc2057db"
        },
        "item": {
          "id": "b22b436e-5ce7-4418-8af0-083045a42a73",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0c25f8f6-a6f4-4b8d-bb88-3b3d63f060ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85740f9b-f1e9-4172-a606-1c5363fb69dd",
        "cursor": {
          "ref": "ace6ac5a-f8fc-428e-84f6-ce52f41c97db",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bf6be5c1-111a-4182-8812-e5bf644459db"
        },
        "item": {
          "id": "85740f9b-f1e9-4172-a606-1c5363fb69dd",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ae397a69-5394-4e8a-b411-d330d351be78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beabe77b-ec80-4b80-92ee-70855a523300",
        "cursor": {
          "ref": "b475ab4c-4f6a-4874-bf92-a487569c9fe0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3dc8a4c-4b21-4fbf-a029-603a97fa7946"
        },
        "item": {
          "id": "beabe77b-ec80-4b80-92ee-70855a523300",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a939cdad-fab8-4397-bd08-2a2249b32f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9096624d-5ee4-491a-9205-93391b52051f",
        "cursor": {
          "ref": "9247106c-251e-4fca-b8d5-329476bf4fbe",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "315ed426-96fe-4fe9-bf9a-b3a3d2bb98d4"
        },
        "item": {
          "id": "9096624d-5ee4-491a-9205-93391b52051f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "aff2fda5-7129-4883-9a18-9bf8e42f733b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c70883-c3f6-4cb9-a0dc-c4d9ec84dd7f",
        "cursor": {
          "ref": "8eb99b27-3276-441e-98ba-3faafbf78a5b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "16eed1a7-0828-4909-8e0c-d424aa170559"
        },
        "item": {
          "id": "c8c70883-c3f6-4cb9-a0dc-c4d9ec84dd7f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c260f090-fe4e-48cb-accd-327b7d4de4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aee3ce9-eb35-4c13-9269-4ffaa4397994",
        "cursor": {
          "ref": "e4a65712-b596-4408-be0b-19507534957a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "eb9905b2-297c-4eb0-9108-dcfd4f3865e1"
        },
        "item": {
          "id": "7aee3ce9-eb35-4c13-9269-4ffaa4397994",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d47b6ef0-9b98-4a5c-8d0e-067286133921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2e3905-918b-4e07-941b-dbb11af166b1",
        "cursor": {
          "ref": "5b3cd618-b353-42f9-a4ac-5cdca8f73986",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "de7746e2-c6ad-48d7-b7d3-a788f5a2fcc4"
        },
        "item": {
          "id": "8d2e3905-918b-4e07-941b-dbb11af166b1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "111ad55a-bae0-48fa-a67a-34afbc663dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89334c35-f588-4446-9632-6b4016d1af26",
        "cursor": {
          "ref": "690103ab-2b8b-4953-bef3-3529304046be",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "21a071f6-3c20-44c6-a671-c413b834c79d"
        },
        "item": {
          "id": "89334c35-f588-4446-9632-6b4016d1af26",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b9b58f78-d803-4201-89e4-38d23941b559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d876c6-ed04-4866-8257-8a33c389ebf2",
        "cursor": {
          "ref": "908c2022-81e5-4060-afb0-e2e0ee9f79a6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "d75619b6-a69f-4908-8f69-3ecf16145db9"
        },
        "item": {
          "id": "15d876c6-ed04-4866-8257-8a33c389ebf2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ac98e42a-e578-47b8-87f9-d6eb64795866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c8fab0-017a-4869-816a-a209127990f9",
        "cursor": {
          "ref": "3dab326b-3c8c-46f1-bd5e-790e6a3d6be6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "292b18cb-bd53-415f-9a00-ac1f32e53f7e"
        },
        "item": {
          "id": "75c8fab0-017a-4869-816a-a209127990f9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "94bcd6cc-5715-4bd4-a93d-8e4c1c751aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400e4a91-7902-4811-858f-1d504d8d359b",
        "cursor": {
          "ref": "5ef0c027-28a9-4aee-b2f6-28711c86bdc7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d39fc663-5129-4b6d-b892-031759c81262"
        },
        "item": {
          "id": "400e4a91-7902-4811-858f-1d504d8d359b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b6a40e1c-011c-4e30-95fc-b30e61de3170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257fb75c-0798-4d2b-ab5d-29163a9f1443",
        "cursor": {
          "ref": "b972d750-ef54-4c69-8e15-5200043076db",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e517cd6f-24d0-4fac-895f-2d14013f0b4a"
        },
        "item": {
          "id": "257fb75c-0798-4d2b-ab5d-29163a9f1443",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "069f6952-340d-4a36-8295-82eb8d2a371e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcccd186-7a70-460d-bdc9-b90064546330",
        "cursor": {
          "ref": "127ced09-9f12-4508-9b04-1457a0f2b1d1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "c68eded2-f14f-4e42-975b-1afff5f56bd9"
        },
        "item": {
          "id": "dcccd186-7a70-460d-bdc9-b90064546330",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0ee51056-e59e-4557-9ef0-3e30363ed2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657c218c-a9c8-47b4-a0eb-9dc8a79d9cfa",
        "cursor": {
          "ref": "394f9c43-80a7-49d2-8fc1-f2c51d692365",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f8ff643a-0a82-4986-80a2-815c906fb20d"
        },
        "item": {
          "id": "657c218c-a9c8-47b4-a0eb-9dc8a79d9cfa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4966e013-8e4e-426b-9e4e-fcdceb3e4b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd18e1e-7abd-44fe-a77d-bec4f0bf705f",
        "cursor": {
          "ref": "d335b410-6155-4446-8d0a-30044db4319c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bb6bba69-36d9-4378-a861-1f10ed5d6bc3"
        },
        "item": {
          "id": "6bd18e1e-7abd-44fe-a77d-bec4f0bf705f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3b47f175-956a-41c0-888b-437a9ce2655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc553fa-65c6-4e34-920a-f7b51ac9cadd",
        "cursor": {
          "ref": "6249b1a5-b42e-4f73-956f-6d084d645399",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a5d09dc3-470e-4795-9c3b-9b648ed04685"
        },
        "item": {
          "id": "bfc553fa-65c6-4e34-920a-f7b51ac9cadd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bac301fb-4186-426b-a2fd-b86eb0944962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc58a7-d122-4f00-8814-c1f777eaf5e0",
        "cursor": {
          "ref": "49421b74-0d27-48ae-a0f8-5542e8e00ca7",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f6ea8917-60dc-4f62-9591-633f8551da64"
        },
        "item": {
          "id": "2dfc58a7-d122-4f00-8814-c1f777eaf5e0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "615ec528-cc51-4f83-929c-78f2aedf31b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76378d99-d872-4a5e-a03f-c52971809bd6",
        "cursor": {
          "ref": "f482a915-797d-4eec-9bc4-7495c7bac6c9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "54490642-7948-46e4-8b1a-e80c27eee466"
        },
        "item": {
          "id": "76378d99-d872-4a5e-a03f-c52971809bd6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "faed9d2a-0806-4d84-83d2-b56caaca02d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e8ac8-dc40-4824-b359-f2ddd45e3b64",
        "cursor": {
          "ref": "849058a7-3899-48a0-950e-d1e7620e972a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "da90ffe0-d356-4d0a-bf66-e83e62871cbf"
        },
        "item": {
          "id": "924e8ac8-dc40-4824-b359-f2ddd45e3b64",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "49a93268-e2fa-48c6-b3f9-ec5e15e6d379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea001146-1eba-416d-bf42-92324d461e98",
        "cursor": {
          "ref": "fe3a28f1-66af-474c-b892-3b7d9f4df9f6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "b09c4048-63f2-4710-b2c2-e7773bfe4a3a"
        },
        "item": {
          "id": "ea001146-1eba-416d-bf42-92324d461e98",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c6cee2da-7f7f-480b-b8e9-37e555ef6c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af98d9c1-f320-4c8c-b284-8e525848ed14",
        "cursor": {
          "ref": "1173e28c-2183-43ab-a4d5-63a01c603879",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ddf315c8-55e8-412f-9d25-ae6c10c06018"
        },
        "item": {
          "id": "af98d9c1-f320-4c8c-b284-8e525848ed14",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "98c69bd0-d1a6-4401-9f6e-bb8e9b46a497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284511a1-94bb-43a7-9933-fe3ea128abe7",
        "cursor": {
          "ref": "d595ccec-7ea5-40ec-b454-2fefd76f16e0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a86590d6-43ff-4470-b481-7d6f82c4962d"
        },
        "item": {
          "id": "284511a1-94bb-43a7-9933-fe3ea128abe7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b25e0fe9-aee4-44ff-83d7-989ff0ea4e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f028b3d-9ade-40c3-b7e8-7fcecfa417d2",
        "cursor": {
          "ref": "b2e2ac30-eeea-49e3-b627-42696df0f009",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ed3478f5-357f-44f1-bbb2-16956fed62d2"
        },
        "item": {
          "id": "6f028b3d-9ade-40c3-b7e8-7fcecfa417d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "377e78b5-fd18-4bee-b783-3fe28934fc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e1b645-ad4e-435e-aa54-26ef80016ae2",
        "cursor": {
          "ref": "9f692352-2f0c-42df-b811-a9df85a2fcc1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bc204599-adad-4c6d-a3e3-88d11164ceab"
        },
        "item": {
          "id": "91e1b645-ad4e-435e-aa54-26ef80016ae2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "227cecfd-5d8d-4796-95db-f8412719da71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703c2803-156e-4ae9-8dab-a60b14649ae2",
        "cursor": {
          "ref": "fa5feb8f-2841-4422-99bb-038cd23e5ebf",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "39430450-7350-47ba-a2c5-17d999d5d32a"
        },
        "item": {
          "id": "703c2803-156e-4ae9-8dab-a60b14649ae2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a741c6db-3929-4d2c-86a1-cdb3f1c5578d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f339ef-b5cc-47d4-80b5-b7d788cd3a40",
        "cursor": {
          "ref": "21720eab-3105-4a9c-834f-2ee175fb1d6c",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ad844403-1de0-4c19-8f82-e33692eee471"
        },
        "item": {
          "id": "51f339ef-b5cc-47d4-80b5-b7d788cd3a40",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7f07babd-0823-47f8-addf-c63bb9166686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e251603c-dbfc-4803-abdf-ef3f96834504",
        "cursor": {
          "ref": "9be8bc22-827d-497f-8372-7e3c8283e031",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0c32ef03-f6df-48c9-9e1d-c0a34e6e665d"
        },
        "item": {
          "id": "e251603c-dbfc-4803-abdf-ef3f96834504",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "afe2d638-f2e6-4cb1-92ad-bebd9fc6f70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadb0011-635b-4113-beaf-b70f968c4ed6",
        "cursor": {
          "ref": "37ae01b9-a5d3-4138-85fa-9f4620bf4cba",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "9a33b7a6-be91-4e9e-86fc-813afdd82a31"
        },
        "item": {
          "id": "dadb0011-635b-4113-beaf-b70f968c4ed6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "16d8b2e3-b0fd-43ef-960b-db796cb767fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5117853-ae1f-49c0-8fc4-6117574ab0ab",
        "cursor": {
          "ref": "12cd70a4-d353-40dd-b0f9-a2a35590e1f8",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4286670f-e45f-434d-a355-f6ab850bfed8"
        },
        "item": {
          "id": "a5117853-ae1f-49c0-8fc4-6117574ab0ab",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a66153e3-e342-43b7-9deb-60c803710023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4613898-0c6f-4bc4-93e3-ce47ea6c1717",
        "cursor": {
          "ref": "92e07ea8-4914-425a-b52c-54b22fcb4757",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2cd3738d-97d2-477f-98ee-064fe2e18b61"
        },
        "item": {
          "id": "d4613898-0c6f-4bc4-93e3-ce47ea6c1717",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7378af8f-e1c4-4bf3-8138-1e4aceef7405",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e12745-1c5c-4423-abb5-b25e1d2b22f5",
        "cursor": {
          "ref": "172f6882-d6c7-4696-89d9-468ae3766f5a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "264e4697-e19a-4ad0-99c1-dac754ac0bd7"
        },
        "item": {
          "id": "e9e12745-1c5c-4423-abb5-b25e1d2b22f5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e27beb3b-6535-41a2-b856-17599f228775",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f56892-b2ac-4652-ad7c-7f285321320b",
        "cursor": {
          "ref": "45afe778-682b-412b-b864-1f05463c8e2a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "08b54bcd-110b-4f66-9187-5d7c02fd8f46"
        },
        "item": {
          "id": "d6f56892-b2ac-4652-ad7c-7f285321320b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "adf58a4d-a446-490b-bbd3-d25ce2c6c34a",
          "status": "OK",
          "code": 200,
          "responseTime": 3173,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5fb94b3-cb4d-45cc-a3f1-501cc0123a46",
        "cursor": {
          "ref": "2dd4456c-332d-468b-a05b-5ba29c37586c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c963dfbf-931b-4161-9cf7-14636680b665"
        },
        "item": {
          "id": "b5fb94b3-cb4d-45cc-a3f1-501cc0123a46",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3385f87d-7d08-445b-a7e6-c8875e346650",
          "status": "OK",
          "code": 200,
          "responseTime": 3119,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1e1233-2c55-42a2-a15e-b5ece3571529",
        "cursor": {
          "ref": "5481e559-e93a-45f9-8e18-5f04d1206cdb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "05920e85-c049-4678-940d-5caa3c4e0e38"
        },
        "item": {
          "id": "2b1e1233-2c55-42a2-a15e-b5ece3571529",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d15b8308-98f3-4d62-91f6-d1697551b174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1e1233-2c55-42a2-a15e-b5ece3571529",
        "cursor": {
          "ref": "5481e559-e93a-45f9-8e18-5f04d1206cdb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "05920e85-c049-4678-940d-5caa3c4e0e38"
        },
        "item": {
          "id": "2b1e1233-2c55-42a2-a15e-b5ece3571529",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d15b8308-98f3-4d62-91f6-d1697551b174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab03a30-7ced-4eec-90e2-4293f48a85c1",
        "cursor": {
          "ref": "f0df39e7-c4da-41a5-bd93-ed4aba1ad215",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1650863d-a0fe-4c5f-aac7-1812c5d10f61"
        },
        "item": {
          "id": "2ab03a30-7ced-4eec-90e2-4293f48a85c1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c261de2e-2045-46c2-b7d0-25604d2afb9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e81aa88-c855-4adf-843c-30486e62ec86",
        "cursor": {
          "ref": "961e7624-bd56-4bcc-ad63-36d3bc403c0c",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "82040c74-54ba-4921-982e-e7d8bfa74f95"
        },
        "item": {
          "id": "6e81aa88-c855-4adf-843c-30486e62ec86",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "92263b5f-f7ae-4c15-9a6d-f3a71b568c76",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}